!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	md5.h	/^  md5_uint32 A;$/;"	m	struct:md5_ctx
ABBREV_DIE_TABLE_INCREMENT	dwarf2out.c	3351;"	d	file:
ABS	rtl.h	31;"	d
ABS_EXPR_CHECK	tree-check.h	86;"	d
ABS_OR_RELATIVE_LINENO	xcoffout.c	74;"	d	file:
ABS_VALUE	sched-rgn.c	272;"	d	file:
ACCUMULATE_OUTGOING_ARGS	defaults.h	355;"	d
ACCUMULATE_OUTGOING_ARGS	i386.h	1577;"	d
ACONCAT	libiberty.h	136;"	d
ADDITIONAL_REGISTER_NAMES	i386.h	2789;"	d
ADDRESSOF_DECL	rtl.h	762;"	d
ADDRESSOF_REGNO	rtl.h	759;"	d
ADDRESS_COST	i386.h	2628;"	d
ADDRESS_FUNCTION	alloca.c	61;"	d	file:
ADDRESS_FUNCTION	alloca.c	63;"	d	file:
ADDR_DIFF_VEC_FLAGS	rtl.h	438;"	d
ADDR_EXPR_CHECK	tree-check.h	127;"	d
ADDR_TYPE	reload.c	231;"	d	file:
ADDR_VEC_ALIGN	final.c	652;"	d	file:
ADD_PARM_SIZE	expr.h	78;"	d
ADJUST_FIELD_ALIGN	i386.h	791;"	d
ADJ_STD	c-format.c	354;"	d	file:
AD_REGS	i386.h	/^  AD_REGS,			\/* %eax\/%edx for DImode *\/$/;"	e	enum:reg_class
AFTER	cppinit.c	/^enum { BRACKET = 0, SYSTEM, AFTER };$/;"	e	enum:__anon80	file:
AGGREGATE_TYPE_P	tree.h	412;"	d
ALIAS	c-parse.c	72;"	d	file:
ALIGNOF	c-parse.c	33;"	d	file:
ALIGNOF_EXPR_CHECK	tree-check.h	156;"	d
ALIGN_ASM_OP	elfos.h	153;"	d
ALIGN_ASM_OP	elfos.h	154;"	d
ALIGN_MODE_128	i386.h	777;"	d
ALIGN_SIZE	alloca.c	123;"	d	file:
ALLOCNO_LIVE_P	global.c	250;"	d	file:
ALLOC_NESTING	stmt.c	258;"	d	file:
ALL_REGS	i386.h	/^  ALL_REGS, LIM_REG_CLASSES$/;"	e	enum:reg_class
ANDAND	c-parse.c	49;"	d	file:
ANDAND_PRIO	cppexp.c	479;"	d	file:
AND_COMPL_HARD_REG_SET	hard-reg-set.h	106;"	d
AND_COMPL_HARD_REG_SET	hard-reg-set.h	154;"	d
AND_COMPL_HARD_REG_SET	hard-reg-set.h	213;"	d
AND_COMPL_HARD_REG_SET	hard-reg-set.h	282;"	d
AND_COMPL_HARD_REG_SET	hard-reg-set.h	351;"	d
AND_COMPL_REG_SET	basic-block.h	51;"	d
AND_HARD_REG_SET	hard-reg-set.h	105;"	d
AND_HARD_REG_SET	hard-reg-set.h	149;"	d
AND_HARD_REG_SET	hard-reg-set.h	207;"	d
AND_HARD_REG_SET	hard-reg-set.h	275;"	d
AND_HARD_REG_SET	hard-reg-set.h	345;"	d
AND_PRIO	cppexp.c	482;"	d	file:
AND_REG_SET	basic-block.h	48;"	d
ANSI_PROTOTYPES	ansidecl.h	144;"	d
ANSI_PROTOTYPES	ansidecl.h	184;"	d
ANTIC_STORE_LIST	gcse.c	6628;"	d	file:
ANY_FP_REGNO_P	i386.h	1331;"	d
ANY_FP_REG_P	i386.h	1330;"	d
ANY_QI_REG_P	i386.h	1320;"	d
APPEND	cppinit.c	84;"	d	file:
APPEND	cppinit.c	90;"	d	file:
APPLY_RESULT_SIZE	i386.h	1656;"	d
ARANGE_TABLE_INCREMENT	dwarf2out.c	3402;"	d	file:
AREG	i386.h	/^  AREG, DREG, CREG, BREG, SIREG, DIREG,$/;"	e	enum:reg_class
ARGS_SIZE_RTX	expr.h	111;"	d
ARGS_SIZE_TREE	expr.h	105;"	d
ARG_POINTER_CFA_OFFSET	function.c	2912;"	d	file:
ARG_POINTER_REGNUM	i386.h	1132;"	d
ARITHCOMPARE	c-parse.c	51;"	d	file:
AROUND	cse.c	/^      enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	e	enum:cse_basic_block_data::branch_path::taken	file:
ARRAY_RANGE_REF_CHECK	tree-check.h	50;"	d
ARRAY_REF_CHECK	tree-check.h	49;"	d
ARRAY_SIZE	libiberty.h	286;"	d
ARRAY_TYPE_CHECK	tree-check.h	24;"	d
ARROW_EXPR_CHECK	tree-check.h	155;"	d
ASCII	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
ASCII_DATA_ASM_OP	elfos.h	216;"	d
ASCII_DATA_ASM_OP	elfos.h	217;"	d
ASM_APP_OFF	unix.h	47;"	d
ASM_APP_ON	unix.h	42;"	d
ASM_ATT	i386.h	/^  ASM_ATT,$/;"	e	enum:asm_dialect
ASM_BYTE_OP	vmsdbgout.c	224;"	d	file:
ASM_BYTE_OP	vmsdbgout.c	226;"	d	file:
ASM_CLOBBERS	c-common.h	641;"	d
ASM_COMMENT_START	dwarf2asm.c	38;"	d	file:
ASM_COMMENT_START	dwarf2out.c	140;"	d	file:
ASM_COMMENT_START	dwarf2out.c	303;"	d	file:
ASM_COMMENT_START	dwarf2out.c	3212;"	d	file:
ASM_COMMENT_START	dwarfout.c	593;"	d	file:
ASM_COMMENT_START	final.c	89;"	d	file:
ASM_COMMENT_START	linux.h	44;"	d
ASM_COMMENT_START	linux.h	45;"	d
ASM_COMMENT_START	unix.h	37;"	d
ASM_COMMENT_START	vmsdbgout.c	72;"	d	file:
ASM_COMMENT_START	x86-64.h	22;"	d
ASM_COMMENT_START	x86-64.h	23;"	d
ASM_CV_QUAL	c-common.h	637;"	d
ASM_DECLARE_FUNCTION_NAME	elfos.h	457;"	d
ASM_DECLARE_FUNCTION_SIZE	elfos.h	531;"	d
ASM_DECLARE_OBJECT_NAME	elfos.h	474;"	d
ASM_DECLARE_RESULT	elfos.h	444;"	d
ASM_EMIT_BSS	varasm.c	1350;"	d	file:
ASM_EMIT_BSS	varasm.c	1354;"	d	file:
ASM_EMIT_BSS	varasm.c	1357;"	d	file:
ASM_EMIT_COMMON	varasm.c	1362;"	d	file:
ASM_EMIT_COMMON	varasm.c	1366;"	d	file:
ASM_EMIT_COMMON	varasm.c	1369;"	d	file:
ASM_EMIT_LOCAL	varasm.c	1337;"	d	file:
ASM_EMIT_LOCAL	varasm.c	1341;"	d	file:
ASM_EMIT_LOCAL	varasm.c	1344;"	d	file:
ASM_FILE_END	i386.h	1758;"	d
ASM_FILE_END	i386.h	1759;"	d
ASM_FILE_START	att.h	52;"	d
ASM_FILE_START	att.h	53;"	d
ASM_FILE_START	elfos.h	102;"	d
ASM_FILE_START	elfos.h	103;"	d
ASM_FILE_START	linux.h	28;"	d
ASM_FILE_START	linux.h	29;"	d
ASM_FILE_START_1	att.h	61;"	d
ASM_FILE_START_1	att.h	62;"	d
ASM_FINAL_SPEC	svr4.h	96;"	d
ASM_FINAL_SPEC	svr4.h	97;"	d
ASM_FINISH_DECLARE_OBJECT	elfos.h	507;"	d
ASM_FINISH_DECLARE_OBJECT	toplev.c	2254;"	d	file:
ASM_FORMAT_PRIVATE_NAME	defaults.h	43;"	d
ASM_FORMAT_PRIVATE_NAME	i386.h	2866;"	d
ASM_GENERATE_INTERNAL_LABEL	att.h	92;"	d
ASM_GENERATE_INTERNAL_LABEL	att.h	93;"	d
ASM_GENERATE_INTERNAL_LABEL	elfos.h	137;"	d
ASM_GENERATE_INTERNAL_LABEL	elfos.h	138;"	d
ASM_GLOBALIZE_LABEL	unix.h	64;"	d
ASM_INPUTS	c-common.h	640;"	d
ASM_INPUT_P	c-common.h	735;"	d
ASM_INTEL	i386.h	/^  ASM_INTEL$/;"	e	enum:asm_dialect
ASM_KEYWORD	c-parse.c	31;"	d	file:
ASM_LONG	att.h	34;"	d
ASM_MAYBE_OUTPUT_ENCODED_ADDR_RTX	linux.h	189;"	d
ASM_NAME_TO_STRING	vmsdbgout.c	393;"	d	file:
ASM_NO_SKIP_IN_TEXT	att.h	79;"	d
ASM_OPERANDS_INPUT	rtl.h	865;"	d
ASM_OPERANDS_INPUT_CONSTRAINT	rtl.h	869;"	d
ASM_OPERANDS_INPUT_CONSTRAINT_EXP	rtl.h	867;"	d
ASM_OPERANDS_INPUT_CONSTRAINT_VEC	rtl.h	864;"	d
ASM_OPERANDS_INPUT_LENGTH	rtl.h	866;"	d
ASM_OPERANDS_INPUT_MODE	rtl.h	871;"	d
ASM_OPERANDS_INPUT_VEC	rtl.h	863;"	d
ASM_OPERANDS_OUTPUT_CONSTRAINT	rtl.h	861;"	d
ASM_OPERANDS_OUTPUT_IDX	rtl.h	862;"	d
ASM_OPERANDS_SOURCE_FILE	rtl.h	873;"	d
ASM_OPERANDS_SOURCE_LINE	rtl.h	874;"	d
ASM_OPERANDS_TEMPLATE	rtl.h	860;"	d
ASM_OPERAND_LETTER	i386.h	3009;"	d
ASM_OUTPUTS	c-common.h	639;"	d
ASM_OUTPUT_ADDR_DIFF_ELT	i386.h	2889;"	d
ASM_OUTPUT_ADDR_VEC_ELT	defaults.h	64;"	d
ASM_OUTPUT_ADDR_VEC_ELT	i386.h	2884;"	d
ASM_OUTPUT_ALIGN	att.h	68;"	d
ASM_OUTPUT_ALIGNED_BSS	linux.h	150;"	d
ASM_OUTPUT_ALIGNED_BSS	x86-64.h	67;"	d
ASM_OUTPUT_ALIGNED_COMMON	elfos.h	184;"	d
ASM_OUTPUT_ALIGNED_COMMON	elfos.h	185;"	d
ASM_OUTPUT_ALIGNED_LOCAL	elfos.h	201;"	d
ASM_OUTPUT_ALIGNED_LOCAL	elfos.h	202;"	d
ASM_OUTPUT_ALTERNATE_LABEL_NAME	defaults.h	73;"	d
ASM_OUTPUT_ASCII	att.h	39;"	d
ASM_OUTPUT_ASCII	defaults.h	80;"	d
ASM_OUTPUT_ASCII	elfos.h	642;"	d
ASM_OUTPUT_ASCII	elfos.h	643;"	d
ASM_OUTPUT_BEFORE_CASE_LABEL	elfos.h	157;"	d
ASM_OUTPUT_CASE_LABEL	elfos.h	161;"	d
ASM_OUTPUT_CASE_LABEL	elfos.h	162;"	d
ASM_OUTPUT_DEBUG_ADDR	vmsdbgout.c	316;"	d	file:
ASM_OUTPUT_DEBUG_ADDR_CONST	vmsdbgout.c	326;"	d	file:
ASM_OUTPUT_DEBUG_ADDR_DATA	vmsdbgout.c	352;"	d	file:
ASM_OUTPUT_DEBUG_ADDR_DELTA	vmsdbgout.c	304;"	d	file:
ASM_OUTPUT_DEBUG_DATA	vmsdbgout.c	347;"	d	file:
ASM_OUTPUT_DEBUG_DATA1	vmsdbgout.c	331;"	d	file:
ASM_OUTPUT_DEBUG_DATA2	vmsdbgout.c	336;"	d	file:
ASM_OUTPUT_DEBUG_DATA4	vmsdbgout.c	342;"	d	file:
ASM_OUTPUT_DEBUG_DATA8	vmsdbgout.c	358;"	d	file:
ASM_OUTPUT_DEBUG_DELTA2	vmsdbgout.c	280;"	d	file:
ASM_OUTPUT_DEBUG_DELTA4	vmsdbgout.c	292;"	d	file:
ASM_OUTPUT_DEBUG_LABEL	defaults.h	141;"	d
ASM_OUTPUT_DEBUG_STRING	vmsdbgout.c	367;"	d	file:
ASM_OUTPUT_DEF	defaults.h	120;"	d
ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL	dwarf2out.c	347;"	d	file:
ASM_OUTPUT_DWARF_ADDR	dwarfout.c	1247;"	d	file:
ASM_OUTPUT_DWARF_ADDR_CONST	dwarfout.c	1252;"	d	file:
ASM_OUTPUT_DWARF_ADDR_CONST	i386.h	2901;"	d
ASM_OUTPUT_DWARF_ATTRIBUTE	dwarfout.c	1222;"	d	file:
ASM_OUTPUT_DWARF_DATA1	dwarfout.c	1262;"	d	file:
ASM_OUTPUT_DWARF_DATA2	dwarfout.c	1267;"	d	file:
ASM_OUTPUT_DWARF_DATA4	dwarfout.c	1272;"	d	file:
ASM_OUTPUT_DWARF_DATA8	dwarfout.c	1277;"	d	file:
ASM_OUTPUT_DWARF_DELTA2	dwarfout.c	1207;"	d	file:
ASM_OUTPUT_DWARF_DELTA4	dwarfout.c	1212;"	d	file:
ASM_OUTPUT_DWARF_FMT_BYTE	dwarfout.c	1237;"	d	file:
ASM_OUTPUT_DWARF_FUND_TYPE	dwarfout.c	1232;"	d	file:
ASM_OUTPUT_DWARF_REF	dwarfout.c	1257;"	d	file:
ASM_OUTPUT_DWARF_STACK_OP	dwarfout.c	1227;"	d	file:
ASM_OUTPUT_DWARF_STRING_NEWLINE	dwarfout.c	1288;"	d	file:
ASM_OUTPUT_DWARF_STRING_NEWLINE	dwarfout.c	1291;"	d	file:
ASM_OUTPUT_DWARF_TAG	dwarfout.c	1217;"	d	file:
ASM_OUTPUT_DWARF_TYPE_MODIFIER	dwarfout.c	1242;"	d	file:
ASM_OUTPUT_EXTERNAL_LIBCALL	elfos.h	174;"	d
ASM_OUTPUT_IDENT	elfos.h	87;"	d
ASM_OUTPUT_INTERNAL_LABEL	att.h	100;"	d
ASM_OUTPUT_INTERNAL_LABEL	att.h	99;"	d
ASM_OUTPUT_INTERNAL_LABEL	elfos.h	121;"	d
ASM_OUTPUT_INTERNAL_LABEL	elfos.h	122;"	d
ASM_OUTPUT_LABEL	i386.h	2859;"	d
ASM_OUTPUT_LABELREF	defaults.h	133;"	d
ASM_OUTPUT_LBB	xcoffout.c	106;"	d	file:
ASM_OUTPUT_LBE	xcoffout.c	109;"	d	file:
ASM_OUTPUT_LFB	xcoffout.c	86;"	d	file:
ASM_OUTPUT_LFE	xcoffout.c	98;"	d	file:
ASM_OUTPUT_LIMITED_STRING	elfos.h	603;"	d
ASM_OUTPUT_MAX_SKIP_ALIGN	linux.h	160;"	d
ASM_OUTPUT_MAX_SKIP_ALIGN	x86-64.h	76;"	d
ASM_OUTPUT_MI_THUNK	unix.h	82;"	d
ASM_OUTPUT_POP_SECTION	dwarfout.c	1202;"	d	file:
ASM_OUTPUT_PUSH_SECTION	dwarfout.c	1197;"	d	file:
ASM_OUTPUT_REG_POP	i386.h	2879;"	d
ASM_OUTPUT_REG_PUSH	i386.h	2873;"	d
ASM_OUTPUT_SECTION_START	elfos.h	245;"	d
ASM_OUTPUT_SKIP	att.h	74;"	d
ASM_OUTPUT_SKIP	elfos.h	111;"	d
ASM_OUTPUT_SKIP	elfos.h	112;"	d
ASM_OUTPUT_SOURCE_LINE	dbxelf.h	60;"	d
ASM_OUTPUT_SOURCE_LINE	dbxelf.h	61;"	d
ASM_OUTPUT_SOURCE_LINE	xcoffout.c	78;"	d	file:
ASM_OUTPUT_WEAK_ALIAS	defaults.h	148;"	d
ASM_PREFERRED_EH_DATA_FORMAT	defaults.h	387;"	d
ASM_PREFERRED_EH_DATA_FORMAT	i386.h	2851;"	d
ASM_QUAD	att.h	35;"	d
ASM_SECTION_START_OP	elfos.h	242;"	d
ASM_SHORT	att.h	33;"	d
ASM_SIMPLIFY_DWARF_ADDR	i386.h	2906;"	d
ASM_SPEC	svr4.h	84;"	d
ASM_SPEC	svr4.h	85;"	d
ASM_SPEC	x86-64.h	58;"	d
ASM_SPEC	x86-64.h	59;"	d
ASM_STABD_OP	defaults.h	57;"	d
ASM_STABN_OP	dbxout.c	99;"	d	file:
ASM_STABS_OP	dbxout.c	95;"	d	file:
ASM_STABS_OP	varasm.c	61;"	d	file:
ASM_STABS_OP	xcoffout.h	23;"	d
ASM_STMT_CHECK	tree-check.h	170;"	d
ASM_STRING	c-common.h	638;"	d
ASM_VOLATILE_P	c-common.h	702;"	d
ASM_WEAKEN_LABEL	elfos.h	422;"	d
ASSEMBLER_DIALECT	i386.h	272;"	d
ASSIGN	c-parse.c	47;"	d	file:
ASTRDUP	c-aux-info.c	71;"	d	file:
AT	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
ATHLON_DECODE_DIRECT	insn-attr.h	/^enum attr_athlon_decode {ATHLON_DECODE_DIRECT, ATHLON_DECODE_VECTOR};$/;"	e	enum:attr_athlon_decode
ATHLON_DECODE_VECTOR	insn-attr.h	/^enum attr_athlon_decode {ATHLON_DECODE_DIRECT, ATHLON_DECODE_VECTOR};$/;"	e	enum:attr_athlon_decode
ATHLON_FPUNITS_ADD	insn-attr.h	/^enum attr_athlon_fpunits {ATHLON_FPUNITS_NONE, ATHLON_FPUNITS_STORE, ATHLON_FPUNITS_MUL, ATHLON_FPUNITS_ADD, ATHLON_FPUNITS_MULADD, ATHLON_FPUNITS_ANY};$/;"	e	enum:attr_athlon_fpunits
ATHLON_FPUNITS_ANY	insn-attr.h	/^enum attr_athlon_fpunits {ATHLON_FPUNITS_NONE, ATHLON_FPUNITS_STORE, ATHLON_FPUNITS_MUL, ATHLON_FPUNITS_ADD, ATHLON_FPUNITS_MULADD, ATHLON_FPUNITS_ANY};$/;"	e	enum:attr_athlon_fpunits
ATHLON_FPUNITS_MUL	insn-attr.h	/^enum attr_athlon_fpunits {ATHLON_FPUNITS_NONE, ATHLON_FPUNITS_STORE, ATHLON_FPUNITS_MUL, ATHLON_FPUNITS_ADD, ATHLON_FPUNITS_MULADD, ATHLON_FPUNITS_ANY};$/;"	e	enum:attr_athlon_fpunits
ATHLON_FPUNITS_MULADD	insn-attr.h	/^enum attr_athlon_fpunits {ATHLON_FPUNITS_NONE, ATHLON_FPUNITS_STORE, ATHLON_FPUNITS_MUL, ATHLON_FPUNITS_ADD, ATHLON_FPUNITS_MULADD, ATHLON_FPUNITS_ANY};$/;"	e	enum:attr_athlon_fpunits
ATHLON_FPUNITS_NONE	insn-attr.h	/^enum attr_athlon_fpunits {ATHLON_FPUNITS_NONE, ATHLON_FPUNITS_STORE, ATHLON_FPUNITS_MUL, ATHLON_FPUNITS_ADD, ATHLON_FPUNITS_MULADD, ATHLON_FPUNITS_ANY};$/;"	e	enum:attr_athlon_fpunits
ATHLON_FPUNITS_STORE	insn-attr.h	/^enum attr_athlon_fpunits {ATHLON_FPUNITS_NONE, ATHLON_FPUNITS_STORE, ATHLON_FPUNITS_MUL, ATHLON_FPUNITS_ADD, ATHLON_FPUNITS_MULADD, ATHLON_FPUNITS_ANY};$/;"	e	enum:attr_athlon_fpunits
ATTRIBUTE	c-parse.c	34;"	d	file:
ATTRIBUTE_MALLOC	ansidecl.h	220;"	d
ATTRIBUTE_MALLOC	ansidecl.h	222;"	d
ATTRIBUTE_NORETURN	ansidecl.h	240;"	d
ATTRIBUTE_PRINTF	ansidecl.h	244;"	d
ATTRIBUTE_PRINTF_1	ansidecl.h	245;"	d
ATTRIBUTE_PRINTF_2	ansidecl.h	246;"	d
ATTRIBUTE_PRINTF_3	ansidecl.h	247;"	d
ATTRIBUTE_PRINTF_4	ansidecl.h	248;"	d
ATTRIBUTE_PRINTF_5	ansidecl.h	249;"	d
ATTRIBUTE_UNUSED	ansidecl.h	236;"	d
ATTRIBUTE_UNUSED	insn-extract.c	/^static rtx junk ATTRIBUTE_UNUSED;$/;"	v	file:
ATTRIBUTE_UNUSED_LABEL	ansidecl.h	229;"	d
ATTRIBUTE_UNUSED_LABEL	ansidecl.h	231;"	d
ATTR_FLAG_ARRAY_NEXT	tree.h	/^  ATTR_FLAG_ARRAY_NEXT = 4,$/;"	e	enum:attribute_flags
ATTR_FLAG_BUILT_IN	tree.h	/^  ATTR_FLAG_BUILT_IN = 16$/;"	e	enum:attribute_flags
ATTR_FLAG_DECL_NEXT	tree.h	/^  ATTR_FLAG_DECL_NEXT = 1,$/;"	e	enum:attribute_flags
ATTR_FLAG_FUNCTION_NEXT	tree.h	/^  ATTR_FLAG_FUNCTION_NEXT = 2,$/;"	e	enum:attribute_flags
ATTR_FLAG_TYPE_IN_PLACE	tree.h	/^  ATTR_FLAG_TYPE_IN_PLACE = 8,$/;"	e	enum:attribute_flags
ATTR_FLAG_backward	insn-attr.h	111;"	d
ATTR_FLAG_forward	insn-attr.h	110;"	d
ATTR_FLAG_likely	insn-attr.h	112;"	d
ATTR_FLAG_unlikely	insn-attr.h	114;"	d
ATTR_FLAG_very_likely	insn-attr.h	113;"	d
ATTR_FLAG_very_unlikely	insn-attr.h	115;"	d
ATTR_LAST	c-common.c	/^  ATTR_LAST$/;"	e	enum:built_in_attribute	file:
AT_BP	i386.c	405;"	d	file:
AT_SP	i386.h	3011;"	d
AT_abstract_origin	dwarf.h	/^    AT_abstract_origin		= (0x02b0|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_addr	dwarf2out.c	/^AT_addr (a)$/;"	f	file:
AT_bit_offset	dwarf.h	/^    AT_bit_offset		= (0x00c0|FORM_DATA2),$/;"	e	enum:dwarf_attribute
AT_bit_size	dwarf.h	/^    AT_bit_size			= (0x00d0|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_body_begin	dwarf.h	/^    AT_body_begin		= (0x8040|FORM_ADDR),$/;"	e	enum:dwarf_attribute
AT_body_end	dwarf.h	/^    AT_body_end			= (0x8050|FORM_ADDR)$/;"	e	enum:dwarf_attribute
AT_byte_size	dwarf.h	/^    AT_byte_size		= (0x00b0|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_class	dwarf2out.c	/^AT_class (a)$/;"	f	file:
AT_common_reference	dwarf.h	/^    AT_common_reference		= (0x01a0|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_comp_dir	dwarf.h	/^    AT_comp_dir			= (0x01b0|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_const_value_block2	dwarf.h	/^        AT_const_value_block2	= (0x01c0|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_const_value_block4	dwarf.h	/^        AT_const_value_block4	= (0x01c0|FORM_BLOCK4),$/;"	e	enum:dwarf_attribute
AT_const_value_data2	dwarf.h	/^        AT_const_value_data2	= (0x01c0|FORM_DATA2),$/;"	e	enum:dwarf_attribute
AT_const_value_data4	dwarf.h	/^        AT_const_value_data4	= (0x01c0|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_const_value_data8	dwarf.h	/^        AT_const_value_data8	= (0x01c0|FORM_DATA8),$/;"	e	enum:dwarf_attribute
AT_const_value_string	dwarf.h	/^        AT_const_value_string	= (0x01c0|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_containing_type	dwarf.h	/^    AT_containing_type		= (0x01d0|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_default_value_addr	dwarf.h	/^        AT_default_value_addr	= (0x01e0|FORM_ADDR),$/;"	e	enum:dwarf_attribute
AT_default_value_data2	dwarf.h	/^        AT_default_value_data2	= (0x01e0|FORM_DATA2),$/;"	e	enum:dwarf_attribute
AT_default_value_data4	dwarf.h	/^        AT_default_value_data4	= (0x01e0|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_default_value_data8	dwarf.h	/^        AT_default_value_data8	= (0x01e0|FORM_DATA8),$/;"	e	enum:dwarf_attribute
AT_default_value_string	dwarf.h	/^        AT_default_value_string	= (0x01e0|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_discr	dwarf.h	/^    AT_discr			= (0x0150|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_discr_value	dwarf.h	/^    AT_discr_value		= (0x0160|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_element_list	dwarf.h	/^    AT_element_list		= (0x00f0|FORM_BLOCK4),$/;"	e	enum:dwarf_attribute
AT_flag	dwarf2out.c	/^AT_flag (a)$/;"	f	file:
AT_friends	dwarf.h	/^    AT_friends			= (0x01f0|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_fund_type	dwarf.h	/^    AT_fund_type		= (0x0050|FORM_DATA2),$/;"	e	enum:dwarf_attribute
AT_hi_user	dwarf.h	172;"	d
AT_high_pc	dwarf.h	/^    AT_high_pc			= (0x0120|FORM_ADDR),$/;"	e	enum:dwarf_attribute
AT_inline	dwarf.h	/^    AT_inline			= (0x0200|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_int	dwarf2out.c	/^AT_int (a)$/;"	f	file:
AT_is_optional	dwarf.h	/^    AT_is_optional		= (0x0210|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_language	dwarf.h	/^    AT_language			= (0x0130|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_lbl	dwarf2out.c	/^AT_lbl (a)$/;"	f	file:
AT_lo_user	dwarf.h	171;"	d
AT_loc	dwarf2out.c	/^AT_loc (a)$/;"	f	file:
AT_loc_list	dwarf2out.c	/^AT_loc_list (a)$/;"	f	file:
AT_location	dwarf.h	/^    AT_location			= (0x0020|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_low_pc	dwarf.h	/^    AT_low_pc			= (0x0110|FORM_ADDR),$/;"	e	enum:dwarf_attribute
AT_lower_bound_data2	dwarf.h	/^        AT_lower_bound_data2	= (0x0220|FORM_DATA2),$/;"	e	enum:dwarf_attribute
AT_lower_bound_data4	dwarf.h	/^        AT_lower_bound_data4	= (0x0220|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_lower_bound_data8	dwarf.h	/^        AT_lower_bound_data8	= (0x0220|FORM_DATA8),$/;"	e	enum:dwarf_attribute
AT_lower_bound_ref	dwarf.h	/^        AT_lower_bound_ref	= (0x0220|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_mac_info	dwarf.h	/^    AT_mac_info			= (0x8020|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_member	dwarf.h	/^    AT_member			= (0x0140|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_mod_fund_type	dwarf.h	/^    AT_mod_fund_type		= (0x0060|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_mod_u_d_type	dwarf.h	/^    AT_mod_u_d_type		= (0x0080|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_name	dwarf.h	/^    AT_name			= (0x0030|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_ordering	dwarf.h	/^    AT_ordering			= (0x0090|FORM_DATA2),$/;"	e	enum:dwarf_attribute
AT_private	dwarf.h	/^    AT_private			= (0x0240|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_producer	dwarf.h	/^    AT_producer			= (0x0250|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_program	dwarf.h	/^    AT_program			= (0x0230|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_protected	dwarf.h	/^    AT_protected		= (0x0260|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_prototyped	dwarf.h	/^    AT_prototyped		= (0x0270|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_public	dwarf.h	/^    AT_public			= (0x0280|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_pure_virtual	dwarf.h	/^    AT_pure_virtual		= (0x0290|FORM_STRING),$/;"	e	enum:dwarf_attribute
AT_ref	dwarf2out.c	/^AT_ref (a)$/;"	f	file:
AT_ref_external	dwarf2out.c	/^AT_ref_external (a)$/;"	f	file:
AT_return_addr	dwarf.h	/^    AT_return_addr		= (0x02a0|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_sf_names	dwarf.h	/^    AT_sf_names			= (0x8000|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_sibling	dwarf.h	/^    AT_sibling			= (0x0010|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_src_coords	dwarf.h	/^    AT_src_coords		= (0x8030|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_src_info	dwarf.h	/^    AT_src_info			= (0x8010|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_start_scope	dwarf.h	/^    AT_start_scope		= (0x02c0|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_stmt_list	dwarf.h	/^    AT_stmt_list		= (0x0100|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_stride_size	dwarf.h	/^    AT_stride_size		= (0x02e0|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_string	dwarf2out.c	/^AT_string (a)$/;"	f	file:
AT_string_form	dwarf2out.c	/^AT_string_form (a)$/;"	f	file:
AT_string_length	dwarf.h	/^    AT_string_length		= (0x0190|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_subscr_data	dwarf.h	/^    AT_subscr_data		= (0x00a0|FORM_BLOCK2),$/;"	e	enum:dwarf_attribute
AT_unsigned	dwarf2out.c	/^AT_unsigned (a)$/;"	f	file:
AT_upper_bound_data2	dwarf.h	/^        AT_upper_bound_data2	= (0x02f0|FORM_DATA2),$/;"	e	enum:dwarf_attribute
AT_upper_bound_data4	dwarf.h	/^        AT_upper_bound_data4	= (0x02f0|FORM_DATA4),$/;"	e	enum:dwarf_attribute
AT_upper_bound_data8	dwarf.h	/^        AT_upper_bound_data8	= (0x02f0|FORM_DATA8),$/;"	e	enum:dwarf_attribute
AT_upper_bound_ref	dwarf.h	/^        AT_upper_bound_ref	= (0x02f0|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_user_def_type	dwarf.h	/^    AT_user_def_type		= (0x0070|FORM_REF),$/;"	e	enum:dwarf_attribute
AT_virtual	dwarf.h	/^    AT_virtual			= (0x0300|FORM_STRING),$/;"	e	enum:dwarf_attribute
AUTO_INC_DEC	rtl.h	1035;"	d
AVAIL_STORE_LIST	gcse.c	6629;"	d	file:
A_ESC	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
A_ESC_DL	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
B	cppinit.c	636;"	d	file:
B	cppinit.c	675;"	d	file:
B	cppinit.c	685;"	d	file:
B	cppinit.c	704;"	d	file:
B	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
B	md5.h	/^  md5_uint32 B;$/;"	m	struct:md5_ctx
BACKUP	cpplex.c	69;"	d	file:
BACKWARD	df.h	/^    BACKWARD$/;"	e	enum:df_flow_dir
BADLEN	c-format.c	422;"	d	file:
BARRIER_P	rtl.h	245;"	d
BASE	fold-const.c	138;"	d	file:
BASE_REG_CLASS	i386.h	1367;"	d
BASIC_BLOCK	basic-block.h	238;"	d
BASIC_INDUCT	loop.h	/^  BASIC_INDUCT,$/;"	e	enum:iv_mode
BB_CLEAR_FLAG	cfgcleanup.c	65;"	d	file:
BB_FLAGS	cfgcleanup.c	62;"	d	file:
BB_FORWARDER_BLOCK	cfgcleanup.c	/^    BB_FORWARDER_BLOCK = 2$/;"	e	enum:bb_flags	file:
BB_FREQ_MAX	basic-block.h	221;"	d
BB_INFO	profile.c	68;"	d	file:
BB_REACHABLE	basic-block.h	224;"	d
BB_SET_FLAG	cfgcleanup.c	63;"	d	file:
BB_TO_BLOCK	sched-rgn.c	165;"	d	file:
BB_TO_GCOV_INDEX	profile.c	75;"	d	file:
BB_UPDATE_LIFE	cfgcleanup.c	/^    BB_UPDATE_LIFE = 1,$/;"	e	enum:bb_flags	file:
BIGFILES	Makefile	/^BIGFILES=-D_FILE_OFFSET_BITS=64$/;"	m
BIGGEST_ALIGNMENT	i386.h	774;"	d
BIGGEST_FIELD_ALIGNMENT	i386.h	789;"	d
BIND_EXPR_CHECK	tree-check.h	58;"	d
BINFO_BASETYPE	tree.h	1313;"	d
BINFO_BASETYPES	tree.h	1305;"	d
BINFO_INHERITANCE_CHAIN	tree.h	1344;"	d
BINFO_N_BASETYPES	tree.h	1309;"	d
BINFO_OFFSET	tree.h	1277;"	d
BINFO_OFFSET_ZEROP	tree.h	1279;"	d
BINFO_SIZE	tree.h	1328;"	d
BINFO_SIZE_UNIT	tree.h	1329;"	d
BINFO_TYPE	tree.h	1269;"	d
BINFO_VIRTUALS	tree.h	1291;"	d
BINFO_VPTR_FIELD	tree.h	1324;"	d
BINFO_VTABLE	tree.h	1285;"	d
BITARRAY_SET	stmt.c	4982;"	d	file:
BITARRAY_TEST	stmt.c	4979;"	d	file:
BITFIELD	c-decl.c	/^  BITFIELD,			\/* Likewise but with specified width *\/$/;"	e	enum:decl_context	file:
BITMAP_ALLOCA	bitmap.h	127;"	d
BITMAP_AND	bitmap.h	/^  BITMAP_AND,			\/* TO = FROM1 & FROM2 *\/$/;"	e	enum:bitmap_bits
BITMAP_AND_COMPL	bitmap.h	/^  BITMAP_AND_COMPL,		\/* TO = FROM1 & ~ FROM2 *\/$/;"	e	enum:bitmap_bits
BITMAP_ELEMENT_ALL_BITS	bitmap.h	35;"	d
BITMAP_ELEMENT_WORDS	bitmap.h	28;"	d
BITMAP_FREE	bitmap.h	138;"	d
BITMAP_INIT_ONCE	bitmap.h	159;"	d
BITMAP_IOR	bitmap.h	/^  BITMAP_IOR,			\/* TO = FROM1 | FROM2 *\/$/;"	e	enum:bitmap_bits
BITMAP_IOR_COMPL	bitmap.h	/^  BITMAP_IOR_COMPL			\/* TO = FROM1 | ~FROM2 *\/$/;"	e	enum:bitmap_bits
BITMAP_OBSTACK_ALLOC	bitmap.h	119;"	d
BITMAP_SIZE	ggc-page.c	340;"	d	file:
BITMAP_XFREE	bitmap.h	148;"	d
BITMAP_XMALLOC	bitmap.h	134;"	d
BITMAP_XOR	bitmap.h	/^  BITMAP_XOR,			\/* TO = FROM1 ^ FROM2 *\/$/;"	e	enum:bitmap_bits
BITSIZETYPE	tree.h	/^  BITSIZETYPE,		\/* Normal representation of sizes in bits.  *\/$/;"	e	enum:size_type_kind
BITS_BIG_ENDIAN	i386.h	714;"	d
BITS_PER_UNIT	i386.h	726;"	d
BITS_PER_UNIT_LOG	tree.h	2458;"	d
BITS_PER_WORD	i386.h	732;"	d
BITWISE	cppexp.c	535;"	d	file:
BIT_ANDTC_EXPR_CHECK	tree-check.h	95;"	d
BIT_AND_EXPR_CHECK	tree-check.h	94;"	d
BIT_FIELD_REF_CHECK	tree-check.h	46;"	d
BIT_IOR_EXPR_CHECK	tree-check.h	92;"	d
BIT_NOT_EXPR_CHECK	tree-check.h	96;"	d
BIT_XOR_EXPR_CHECK	tree-check.h	93;"	d
BLOCKAGE_BITS	insn-attr.h	107;"	d
BLOCKAGE_MASK	sched-int.h	234;"	d
BLOCKAGE_RANGE	sched-int.h	240;"	d
BLOCKSIZE	md5.c	135;"	d	file:
BLOCK_ABSTRACT	tree.h	894;"	d
BLOCK_ABSTRACT_ORIGIN	tree.h	893;"	d
BLOCK_BEGIN_LABEL	dwarf2out.c	3771;"	d	file:
BLOCK_BEGIN_LABEL	vmsdbgout.c	270;"	d	file:
BLOCK_BEGIN_LABEL_FMT	dwarfout.c	1118;"	d	file:
BLOCK_CHAIN	tree.h	892;"	d
BLOCK_CHECK	tree-check.h	10;"	d
BLOCK_END	basic-block.h	265;"	d
BLOCK_END_LABEL	dwarf2out.c	3774;"	d	file:
BLOCK_END_LABEL	vmsdbgout.c	273;"	d	file:
BLOCK_END_LABEL_FMT	dwarfout.c	1121;"	d	file:
BLOCK_END_TREE	basic-block.h	268;"	d
BLOCK_FOR_INSN	basic-block.h	283;"	d
BLOCK_FRAGMENT_CHAIN	tree.h	929;"	d
BLOCK_FRAGMENT_ORIGIN	tree.h	928;"	d
BLOCK_HANDLER_BLOCK	tree.h	898;"	d
BLOCK_HEAD	basic-block.h	264;"	d
BLOCK_HEAD_TREE	basic-block.h	267;"	d
BLOCK_INFO	predict.c	646;"	d	file:
BLOCK_INFO	reg-stack.c	204;"	d	file:
BLOCK_NEW	cfgbuild.c	/^enum state {BLOCK_NEW = 0, BLOCK_ORIGINAL, BLOCK_TO_SPLIT};$/;"	e	enum:state	file:
BLOCK_NUM	basic-block.h	284;"	d
BLOCK_NUMBER	tree.h	904;"	d
BLOCK_ORIGINAL	cfgbuild.c	/^enum state {BLOCK_NEW = 0, BLOCK_ORIGINAL, BLOCK_TO_SPLIT};$/;"	e	enum:state	file:
BLOCK_SUBBLOCKS	tree.h	888;"	d
BLOCK_SUPERCONTEXT	tree.h	889;"	d
BLOCK_TO_BB	sched-rgn.c	150;"	d	file:
BLOCK_TO_SPLIT	cfgbuild.c	/^enum state {BLOCK_NEW = 0, BLOCK_ORIGINAL, BLOCK_TO_SPLIT};$/;"	e	enum:state	file:
BLOCK_VARS	tree.h	887;"	d
BODY_BEGIN_LABEL	dwarf2out.c	3777;"	d	file:
BODY_BEGIN_LABEL_FMT	dwarfout.c	1166;"	d	file:
BODY_END_LABEL	dwarf2out.c	3780;"	d	file:
BODY_END_LABEL_FMT	dwarfout.c	1169;"	d	file:
BOL	cpplib.h	169;"	d
BOOLEAN_TYPE_CHECK	tree-check.h	17;"	d
BOOL_TYPE_SIZE	defaults.h	290;"	d
BOUNDED_INDIRECT_TYPE_P	tree.h	425;"	d
BOUNDED_POINTER_TYPE_P	tree.h	430;"	d
BOUNDED_REFERENCE_TYPE_P	tree.h	446;"	d
BOUND_BEGIN_LABEL_FMT	dwarfout.c	1148;"	d	file:
BOUND_END_LABEL_FMT	dwarfout.c	1151;"	d	file:
BRACKET	cppinit.c	/^enum { BRACKET = 0, SYSTEM, AFTER };$/;"	e	enum:__anon80	file:
BRACKET	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
BRANCH_COST	expr.h	24;"	d
BRANCH_COST	i386.h	2657;"	d
BRANCH_EDGE	basic-block.h	526;"	d
BREAK	c-parse.c	27;"	d	file:
BREAK_STMT_CHECK	tree-check.h	165;"	d
BREG	i386.h	/^  AREG, DREG, CREG, BREG, SIREG, DIREG,$/;"	e	enum:reg_class
BSS_BEGIN_LABEL	dwarfout.c	1072;"	d	file:
BSS_END_LABEL	dwarf2out.c	3768;"	d	file:
BSS_END_LABEL	dwarfout.c	1075;"	d	file:
BSS_SECTION_ASM_OP	unix.h	59;"	d
BSS_SECTION_NAME	dwarfout.c	1015;"	d	file:
BT_BASE_FILE	cpplib.h	/^  BT_BASE_FILE,			\/* `__BASE_FILE__' *\/$/;"	e	enum:builtin_type
BT_DATE	cpplib.h	/^  BT_DATE,			\/* `__DATE__' *\/$/;"	e	enum:builtin_type
BT_FILE	cpplib.h	/^  BT_FILE,			\/* `__FILE__' *\/$/;"	e	enum:builtin_type
BT_INCLUDE_LEVEL	cpplib.h	/^  BT_INCLUDE_LEVEL,		\/* `__INCLUDE_LEVEL__' *\/$/;"	e	enum:builtin_type
BT_PRAGMA	cpplib.h	/^  BT_PRAGMA			\/* `_Pragma' operator *\/$/;"	e	enum:builtin_type
BT_SPECLINE	cpplib.h	/^  BT_SPECLINE = 0,		\/* `__LINE__' *\/$/;"	e	enum:builtin_type
BT_STDC	cpplib.h	/^  BT_STDC,			\/* `__STDC__' *\/$/;"	e	enum:builtin_type
BT_TIME	cpplib.h	/^  BT_TIME,			\/* `__TIME__' *\/$/;"	e	enum:builtin_type
BUFFER_REF_CHECK	tree-check.h	48;"	d
BUFF_FRONT	cpphash.h	64;"	d
BUFF_LIMIT	cpphash.h	65;"	d
BUFF_ROOM	cpphash.h	63;"	d
BUFF_SIZE_UPPER_BOUND	cpplex.c	1936;"	d	file:
BUF_LEN	sched-vis.c	156;"	d	file:
BUILD_VA_LIST_TYPE	defaults.h	330;"	d
BUILD_VA_LIST_TYPE	i386.h	1744;"	d
BUILTIN	cppinit.c	634;"	d	file:
BUILTIN	cppinit.c	793;"	d	file:
BUILTIN_SETJMP_FRAME_VALUE	builtins.c	475;"	d	file:
BUILT_IN_FRONTEND	tree.h	/^  BUILT_IN_FRONTEND,$/;"	e	enum:built_in_class
BUILT_IN_MD	tree.h	/^  BUILT_IN_MD,$/;"	e	enum:built_in_class
BUILT_IN_NORMAL	tree.h	/^  BUILT_IN_NORMAL$/;"	e	enum:built_in_class
BYTES_BIG_ENDIAN	i386.h	718;"	d
C	cppinit.c	637;"	d	file:
C	cppinit.c	676;"	d	file:
C	md5.h	/^  md5_uint32 C;$/;"	m	struct:md5_ctx
C	safe-ctype.c	59;"	d	file:
C4X	real.c	130;"	d	file:
C4X_FLOAT_FORMAT	real.h	30;"	d
CALLED_AS_BUILT_IN	builtins.c	45;"	d	file:
CALLED_AS_BUILT_IN	c-common.c	3759;"	d	file:
CALLER_SAVE_PROFITABLE	regs.h	208;"	d
CALL_CHUNKFUN	obstack.c	111;"	d	file:
CALL_CHUNKFUN	obstack.c	124;"	d	file:
CALL_EXPR_CHECK	tree-check.h	59;"	d
CALL_FREEFUN	obstack.c	116;"	d	file:
CALL_FREEFUN	obstack.c	129;"	d	file:
CALL_INSN_FUNCTION_USAGE	rtl.h	617;"	d
CALL_USED_REGISTERS	i386.h	918;"	d
CANT_MOVE	sched-int.h	224;"	d
CAN_ELIMINATE	i386.h	1834;"	d
CARD_EXPR_CHECK	tree-check.h	118;"	d
CASE	c-parse.c	25;"	d	file:
CASE_HIGH	c-common.h	618;"	d
CASE_LABEL_CHECK	tree-check.h	173;"	d
CASE_LABEL_DECL	c-common.h	619;"	d
CASE_LOW	c-common.h	617;"	d
CASE_VALUES_THRESHOLD	expr.c	10452;"	d	file:
CASE_VECTOR_MODE	i386.h	2301;"	d
CASE_VECTOR_PC_RELATIVE	expr.c	73;"	d	file:
CASE_VECTOR_PC_RELATIVE	stmt.c	63;"	d	file:
CC	Makefile	/^CC:=\/home\/tmac\/workspace\/sgx-driver\/musl-libc\/build\/bin\/musl-gcc$/;"	m
CC1_CPU_SPEC	i386.h	479;"	d
CC1_SPEC	i386.h	642;"	d
CC1_SPEC	linux.h	97;"	d
CC1_SPEC	linux.h	98;"	d
CC1_SPEC	x86-64.h	55;"	d
CC1_SPEC	x86-64.h	56;"	d
CC_INVERTED	conditions.h	105;"	d
CC_NOT_NEGATIVE	conditions.h	84;"	d
CC_NOT_POSITIVE	conditions.h	76;"	d
CC_NOT_SIGNED	conditions.h	109;"	d
CC_NO_OVERFLOW	conditions.h	90;"	d
CC_REGNO_P	i386.h	1357;"	d
CC_REG_P	i386.h	1356;"	d
CC_REVERSED	conditions.h	69;"	d
CC_STATUS	conditions.h	/^typedef struct {int flags; rtx value1, value2; CC_STATUS_MDEP mdep;} CC_STATUS;$/;"	t	typeref:struct:__anon46
CC_STATUS_INIT	conditions.h	114;"	d
CC_STATUS_INIT	final.c	84;"	d	file:
CC_STATUS_MDEP	conditions.h	48;"	d
CC_STATUS_MDEP_INIT	conditions.h	52;"	d
CC_Z_IN_N	conditions.h	98;"	d
CC_Z_IN_NOT_N	conditions.h	94;"	d
CDI_DOMINATORS	basic-block.h	/^  CDI_DOMINATORS,$/;"	e	enum:cdi_direction
CDI_POST_DOMINATORS	basic-block.h	/^  CDI_POST_DOMINATORS$/;"	e	enum:cdi_direction
CEIL	system.h	248;"	d
CEIL_DIV_EXPR_CHECK	tree-check.h	69;"	d
CEIL_MOD_EXPR_CHECK	tree-check.h	73;"	d
CEIL_ROUND	function.c	87;"	d	file:
CEIL_ROUND	integrate.c	55;"	d	file:
CFLAGS	Makefile	/^CFLAGS := -static -fPIC -nodefaultlibs -nostdlib -DSPEC_CPU -DNDEBUG -I. -DSPEC_CPU_LP64 -O2$/;"	m
CHARMASK	fold-const.c	114;"	d	file:
CHARMASK	fold-const.c	116;"	d	file:
CHARMASK	real.c	360;"	d	file:
CHARMASK	real.c	362;"	d	file:
CHARS	dbxout.c	276;"	d	file:
CHAR_TYPE_CHECK	tree-check.h	18;"	d
CHAR_TYPE_SIZE	defaults.h	285;"	d
CHAR_TYPE_SIZE	vmsdbgout.c	83;"	d	file:
CHEAPER	cse.c	1550;"	d	file:
CHEAP_REGNO	cse.c	491;"	d	file:
CHECKSUM	dwarf2out.c	5389;"	d	file:
CHECKSUM	dwarf2out.c	5500;"	d	file:
CHECKSUM_STRING	dwarf2out.c	5390;"	d	file:
CHECKSUM_STRING	dwarf2out.c	5501;"	d	file:
CHECK_DEAD_NOTES	sched-rgn.c	71;"	d	file:
CHECK_DEAD_NOTES	sched-rgn.c	73;"	d	file:
CHECK_MODF	reload.c	5861;"	d	file:
CHECK_MODF	reload.c	5871;"	d	file:
CHECK_STACK_LIMIT	i386.c	47;"	d	file:
CHOOSE_EXPR	c-parse.c	40;"	d	file:
CIE_AFTER_SIZE_LABEL	dwarf2out.c	328;"	d	file:
CIE_END_LABEL	dwarf2out.c	329;"	d	file:
CIE_LENGTH_LABEL	dwarf2out.c	330;"	d	file:
CLASS	c-parse.c	71;"	d	file:
CLASSNAME	c-parse.c	65;"	d	file:
CLASS_LIKELY_SPILLED_P	i386.h	1514;"	d
CLASS_LIKELY_SPILLED_P	regs.h	214;"	d
CLASS_MAX_NREGS	i386.h	1492;"	d
CLEANUP_CROSSJUMP	basic-block.h	569;"	d
CLEANUP_DECL	c-common.h	706;"	d
CLEANUP_EH_ONLY	tree.h	512;"	d
CLEANUP_EXPENSIVE	basic-block.h	567;"	d
CLEANUP_EXPR	c-common.h	709;"	d
CLEANUP_POINT_EXPR_CHECK	tree-check.h	62;"	d
CLEANUP_POST_REGSTACK	basic-block.h	570;"	d
CLEANUP_PRE_LOOP	basic-block.h	574;"	d
CLEANUP_PRE_SIBCALL	basic-block.h	572;"	d
CLEANUP_STMT_CHECK	tree-check.h	176;"	d
CLEANUP_THREADING	basic-block.h	577;"	d
CLEANUP_UPDATE_LIFE	basic-block.h	576;"	d
CLEAR	local-alloc.c	417;"	d	file:
CLEAR_ALLOCNO_LIVE	global.c	258;"	d	file:
CLEAR_DECL_C_BIT_FIELD	c-common.h	780;"	d
CLEAR_HARD_REG_BIT	hard-reg-set.h	120;"	d
CLEAR_HARD_REG_BIT	hard-reg-set.h	92;"	d
CLEAR_HARD_REG_SET	hard-reg-set.h	129;"	d
CLEAR_HARD_REG_SET	hard-reg-set.h	183;"	d
CLEAR_HARD_REG_SET	hard-reg-set.h	247;"	d
CLEAR_HARD_REG_SET	hard-reg-set.h	321;"	d
CLEAR_HARD_REG_SET	hard-reg-set.h	97;"	d
CLEAR_REGNO_REG_SET	basic-block.h	65;"	d
CLEAR_REG_SET	basic-block.h	39;"	d
CLEAR_RESOURCE	resource.h	22;"	d
CLK_ASM	cpplib.h	/^	     CLK_GNUCXX, CLK_CXX98, CLK_OBJC, CLK_OBJCXX, CLK_ASM};$/;"	e	enum:c_lang
CLK_CXX98	cpplib.h	/^	     CLK_GNUCXX, CLK_CXX98, CLK_OBJC, CLK_OBJCXX, CLK_ASM};$/;"	e	enum:c_lang
CLK_GNUC89	cpplib.h	/^enum c_lang {CLK_GNUC89 = 0, CLK_GNUC99, CLK_STDC89, CLK_STDC94, CLK_STDC99,$/;"	e	enum:c_lang
CLK_GNUC99	cpplib.h	/^enum c_lang {CLK_GNUC89 = 0, CLK_GNUC99, CLK_STDC89, CLK_STDC94, CLK_STDC99,$/;"	e	enum:c_lang
CLK_GNUCXX	cpplib.h	/^	     CLK_GNUCXX, CLK_CXX98, CLK_OBJC, CLK_OBJCXX, CLK_ASM};$/;"	e	enum:c_lang
CLK_OBJC	cpplib.h	/^	     CLK_GNUCXX, CLK_CXX98, CLK_OBJC, CLK_OBJCXX, CLK_ASM};$/;"	e	enum:c_lang
CLK_OBJCXX	cpplib.h	/^	     CLK_GNUCXX, CLK_CXX98, CLK_OBJC, CLK_OBJCXX, CLK_ASM};$/;"	e	enum:c_lang
CLK_STDC89	cpplib.h	/^enum c_lang {CLK_GNUC89 = 0, CLK_GNUC99, CLK_STDC89, CLK_STDC94, CLK_STDC99,$/;"	e	enum:c_lang
CLK_STDC94	cpplib.h	/^enum c_lang {CLK_GNUC89 = 0, CLK_GNUC99, CLK_STDC89, CLK_STDC94, CLK_STDC99,$/;"	e	enum:c_lang
CLK_STDC99	cpplib.h	/^enum c_lang {CLK_GNUC89 = 0, CLK_GNUC99, CLK_STDC89, CLK_STDC94, CLK_STDC99,$/;"	e	enum:c_lang
CLOCKS_TO_MSEC	timevar.c	109;"	d	file:
CLOSE_PAREN_PRIO	cppexp.c	473;"	d	file:
CMP_OPCODE	explow.c	1567;"	d	file:
CM_32	i386.h	/^  CM_32,$/;"	e	enum:cmodel
CM_KERNEL	i386.h	/^  CM_KERNEL,$/;"	e	enum:cmodel
CM_LARGE	i386.h	/^  CM_LARGE,$/;"	e	enum:cmodel
CM_MEDIUM	i386.h	/^  CM_MEDIUM,$/;"	e	enum:cmodel
CM_SMALL	i386.h	/^  CM_SMALL,$/;"	e	enum:cmodel
CM_SMALL_PIC	i386.h	/^  CM_SMALL_PIC$/;"	e	enum:cmodel
CODE_FOR_absdf2	insn-codes.h	/^  CODE_FOR_absdf2 = 1059,$/;"	e	enum:insn_code
CODE_FOR_absdf2_ifs	insn-codes.h	/^  CODE_FOR_absdf2_ifs = 378,$/;"	e	enum:insn_code
CODE_FOR_absdf2_memory	insn-codes.h	/^  CODE_FOR_absdf2_memory = 377,$/;"	e	enum:insn_code
CODE_FOR_abssf2	insn-codes.h	/^  CODE_FOR_abssf2 = 1052,$/;"	e	enum:insn_code
CODE_FOR_abssf2_ifs	insn-codes.h	/^  CODE_FOR_abssf2_ifs = 375,$/;"	e	enum:insn_code
CODE_FOR_abssf2_memory	insn-codes.h	/^  CODE_FOR_abssf2_memory = 374,$/;"	e	enum:insn_code
CODE_FOR_abstf2	insn-codes.h	/^  CODE_FOR_abstf2 = 1066,$/;"	e	enum:insn_code
CODE_FOR_absxf2	insn-codes.h	/^  CODE_FOR_absxf2 = 1065,$/;"	e	enum:insn_code
CODE_FOR_adddf3	insn-codes.h	/^  CODE_FOR_adddf3 = 967,$/;"	e	enum:insn_code
CODE_FOR_adddi3	insn-codes.h	/^  CODE_FOR_adddi3 = 951,$/;"	e	enum:insn_code
CODE_FOR_addhi3	insn-codes.h	/^  CODE_FOR_addhi3 = 963,$/;"	e	enum:insn_code
CODE_FOR_addqi3	insn-codes.h	/^  CODE_FOR_addqi3 = 964,$/;"	e	enum:insn_code
CODE_FOR_addqi3_cc	insn-codes.h	/^  CODE_FOR_addqi3_cc = 191,$/;"	e	enum:insn_code
CODE_FOR_addqi_ext_1	insn-codes.h	/^  CODE_FOR_addqi_ext_1 = 227,$/;"	e	enum:insn_code
CODE_FOR_addsf3	insn-codes.h	/^  CODE_FOR_addsf3 = 968,$/;"	e	enum:insn_code
CODE_FOR_addsi3	insn-codes.h	/^  CODE_FOR_addsi3 = 953,$/;"	e	enum:insn_code
CODE_FOR_addsi_1_zext	insn-codes.h	/^  CODE_FOR_addsi_1_zext = 208,$/;"	e	enum:insn_code
CODE_FOR_addtf3	insn-codes.h	/^  CODE_FOR_addtf3 = 966,$/;"	e	enum:insn_code
CODE_FOR_addv2sf3	insn-codes.h	/^  CODE_FOR_addv2sf3 = 806,$/;"	e	enum:insn_code
CODE_FOR_addv2si3	insn-codes.h	/^  CODE_FOR_addv2si3 = 747,$/;"	e	enum:insn_code
CODE_FOR_addv4hi3	insn-codes.h	/^  CODE_FOR_addv4hi3 = 746,$/;"	e	enum:insn_code
CODE_FOR_addv4sf3	insn-codes.h	/^  CODE_FOR_addv4sf3 = 690,$/;"	e	enum:insn_code
CODE_FOR_addv8qi3	insn-codes.h	/^  CODE_FOR_addv8qi3 = 745,$/;"	e	enum:insn_code
CODE_FOR_addxf3	insn-codes.h	/^  CODE_FOR_addxf3 = 965,$/;"	e	enum:insn_code
CODE_FOR_allocate_stack	insn-codes.h	/^  CODE_FOR_allocate_stack = 1234,$/;"	e	enum:insn_code
CODE_FOR_allocate_stack_worker	insn-codes.h	/^  CODE_FOR_allocate_stack_worker = 1233,$/;"	e	enum:insn_code
CODE_FOR_allocate_stack_worker_1	insn-codes.h	/^  CODE_FOR_allocate_stack_worker_1 = 649,$/;"	e	enum:insn_code
CODE_FOR_allocate_stack_worker_rex64	insn-codes.h	/^  CODE_FOR_allocate_stack_worker_rex64 = 650,$/;"	e	enum:insn_code
CODE_FOR_anddi3	insn-codes.h	/^  CODE_FOR_anddi3 = 1011,$/;"	e	enum:insn_code
CODE_FOR_andhi3	insn-codes.h	/^  CODE_FOR_andhi3 = 1016,$/;"	e	enum:insn_code
CODE_FOR_andqi3	insn-codes.h	/^  CODE_FOR_andqi3 = 1017,$/;"	e	enum:insn_code
CODE_FOR_andqi_ext_0	insn-codes.h	/^  CODE_FOR_andqi_ext_0 = 302,$/;"	e	enum:insn_code
CODE_FOR_andsi3	insn-codes.h	/^  CODE_FOR_andsi3 = 1012,$/;"	e	enum:insn_code
CODE_FOR_ashldi3	insn-codes.h	/^  CODE_FOR_ashldi3 = 1080,$/;"	e	enum:insn_code
CODE_FOR_ashldi3_1	insn-codes.h	/^  CODE_FOR_ashldi3_1 = 405,$/;"	e	enum:insn_code
CODE_FOR_ashlhi3	insn-codes.h	/^  CODE_FOR_ashlhi3 = 1089,$/;"	e	enum:insn_code
CODE_FOR_ashlqi3	insn-codes.h	/^  CODE_FOR_ashlqi3 = 1090,$/;"	e	enum:insn_code
CODE_FOR_ashlsi3	insn-codes.h	/^  CODE_FOR_ashlsi3 = 1086,$/;"	e	enum:insn_code
CODE_FOR_ashlv2si3	insn-codes.h	/^  CODE_FOR_ashlv2si3 = 790,$/;"	e	enum:insn_code
CODE_FOR_ashlv4hi3	insn-codes.h	/^  CODE_FOR_ashlv4hi3 = 789,$/;"	e	enum:insn_code
CODE_FOR_ashrdi3	insn-codes.h	/^  CODE_FOR_ashrdi3 = 1091,$/;"	e	enum:insn_code
CODE_FOR_ashrdi3_1	insn-codes.h	/^  CODE_FOR_ashrdi3_1 = 423,$/;"	e	enum:insn_code
CODE_FOR_ashrdi3_63_rex64	insn-codes.h	/^  CODE_FOR_ashrdi3_63_rex64 = 418,$/;"	e	enum:insn_code
CODE_FOR_ashrhi3	insn-codes.h	/^  CODE_FOR_ashrhi3 = 1096,$/;"	e	enum:insn_code
CODE_FOR_ashrqi3	insn-codes.h	/^  CODE_FOR_ashrqi3 = 1097,$/;"	e	enum:insn_code
CODE_FOR_ashrsi3	insn-codes.h	/^  CODE_FOR_ashrsi3 = 1095,$/;"	e	enum:insn_code
CODE_FOR_ashrsi3_31	insn-codes.h	/^  CODE_FOR_ashrsi3_31 = 426,$/;"	e	enum:insn_code
CODE_FOR_ashrv2si3	insn-codes.h	/^  CODE_FOR_ashrv2si3 = 785,$/;"	e	enum:insn_code
CODE_FOR_ashrv4hi3	insn-codes.h	/^  CODE_FOR_ashrv4hi3 = 784,$/;"	e	enum:insn_code
CODE_FOR_beq	insn-codes.h	/^  CODE_FOR_beq = 1137,$/;"	e	enum:insn_code
CODE_FOR_bge	insn-codes.h	/^  CODE_FOR_bge = 1143,$/;"	e	enum:insn_code
CODE_FOR_bgeu	insn-codes.h	/^  CODE_FOR_bgeu = 1144,$/;"	e	enum:insn_code
CODE_FOR_bgt	insn-codes.h	/^  CODE_FOR_bgt = 1139,$/;"	e	enum:insn_code
CODE_FOR_bgtu	insn-codes.h	/^  CODE_FOR_bgtu = 1140,$/;"	e	enum:insn_code
CODE_FOR_ble	insn-codes.h	/^  CODE_FOR_ble = 1145,$/;"	e	enum:insn_code
CODE_FOR_bleu	insn-codes.h	/^  CODE_FOR_bleu = 1146,$/;"	e	enum:insn_code
CODE_FOR_blockage	insn-codes.h	/^  CODE_FOR_blockage = 513,$/;"	e	enum:insn_code
CODE_FOR_blt	insn-codes.h	/^  CODE_FOR_blt = 1141,$/;"	e	enum:insn_code
CODE_FOR_bltgt	insn-codes.h	/^  CODE_FOR_bltgt = 1154,$/;"	e	enum:insn_code
CODE_FOR_bltu	insn-codes.h	/^  CODE_FOR_bltu = 1142,$/;"	e	enum:insn_code
CODE_FOR_bne	insn-codes.h	/^  CODE_FOR_bne = 1138,$/;"	e	enum:insn_code
CODE_FOR_bordered	insn-codes.h	/^  CODE_FOR_bordered = 1148,$/;"	e	enum:insn_code
CODE_FOR_builtin_setjmp_receiver	insn-codes.h	/^  CODE_FOR_builtin_setjmp_receiver = 1235,$/;"	e	enum:insn_code
CODE_FOR_buneq	insn-codes.h	/^  CODE_FOR_buneq = 1149,$/;"	e	enum:insn_code
CODE_FOR_bunge	insn-codes.h	/^  CODE_FOR_bunge = 1150,$/;"	e	enum:insn_code
CODE_FOR_bungt	insn-codes.h	/^  CODE_FOR_bungt = 1151,$/;"	e	enum:insn_code
CODE_FOR_bunle	insn-codes.h	/^  CODE_FOR_bunle = 1152,$/;"	e	enum:insn_code
CODE_FOR_bunlt	insn-codes.h	/^  CODE_FOR_bunlt = 1153,$/;"	e	enum:insn_code
CODE_FOR_bunordered	insn-codes.h	/^  CODE_FOR_bunordered = 1147,$/;"	e	enum:insn_code
CODE_FOR_call	insn-codes.h	/^  CODE_FOR_call = 1167,$/;"	e	enum:insn_code
CODE_FOR_call_exp	insn-codes.h	/^  CODE_FOR_call_exp = 1168,$/;"	e	enum:insn_code
CODE_FOR_call_pop	insn-codes.h	/^  CODE_FOR_call_pop = 1166,$/;"	e	enum:insn_code
CODE_FOR_call_value	insn-codes.h	/^  CODE_FOR_call_value = 1170,$/;"	e	enum:insn_code
CODE_FOR_call_value_exp	insn-codes.h	/^  CODE_FOR_call_value_exp = 1171,$/;"	e	enum:insn_code
CODE_FOR_call_value_pop	insn-codes.h	/^  CODE_FOR_call_value_pop = 1169,$/;"	e	enum:insn_code
CODE_FOR_casesi	expr.c	10445;"	d	file:
CODE_FOR_cld	insn-codes.h	/^  CODE_FOR_cld = 582,$/;"	e	enum:insn_code
CODE_FOR_clrstrdi	insn-codes.h	/^  CODE_FOR_clrstrdi = 1195,$/;"	e	enum:insn_code
CODE_FOR_clrstrsi	insn-codes.h	/^  CODE_FOR_clrstrsi = 1194,$/;"	e	enum:insn_code
CODE_FOR_cmpdf	insn-codes.h	/^  CODE_FOR_cmpdf = 843,$/;"	e	enum:insn_code
CODE_FOR_cmpdi	insn-codes.h	/^  CODE_FOR_cmpdi = 834,$/;"	e	enum:insn_code
CODE_FOR_cmpdi_1_insn_rex64	insn-codes.h	/^  CODE_FOR_cmpdi_1_insn_rex64 = 2,$/;"	e	enum:insn_code
CODE_FOR_cmpdi_1_rex64	insn-codes.h	/^  CODE_FOR_cmpdi_1_rex64 = 838,$/;"	e	enum:insn_code
CODE_FOR_cmpdi_ccno_1_rex64	insn-codes.h	/^  CODE_FOR_cmpdi_ccno_1_rex64 = 0,$/;"	e	enum:insn_code
CODE_FOR_cmphi	insn-codes.h	/^  CODE_FOR_cmphi = 836,$/;"	e	enum:insn_code
CODE_FOR_cmpintqi	insn-codes.h	/^  CODE_FOR_cmpintqi = 1204,$/;"	e	enum:insn_code
CODE_FOR_cmpqi	insn-codes.h	/^  CODE_FOR_cmpqi = 837,$/;"	e	enum:insn_code
CODE_FOR_cmpqi_ext_3	insn-codes.h	/^  CODE_FOR_cmpqi_ext_3 = 840,$/;"	e	enum:insn_code
CODE_FOR_cmpqi_ext_3_insn	insn-codes.h	/^  CODE_FOR_cmpqi_ext_3_insn = 15,$/;"	e	enum:insn_code
CODE_FOR_cmpqi_ext_3_insn_rex64	insn-codes.h	/^  CODE_FOR_cmpqi_ext_3_insn_rex64 = 16,$/;"	e	enum:insn_code
CODE_FOR_cmpsf	insn-codes.h	/^  CODE_FOR_cmpsf = 844,$/;"	e	enum:insn_code
CODE_FOR_cmpsi	insn-codes.h	/^  CODE_FOR_cmpsi = 835,$/;"	e	enum:insn_code
CODE_FOR_cmpsi_1	insn-codes.h	/^  CODE_FOR_cmpsi_1 = 839,$/;"	e	enum:insn_code
CODE_FOR_cmpstrqi_1	insn-codes.h	/^  CODE_FOR_cmpstrqi_1 = 609,$/;"	e	enum:insn_code
CODE_FOR_cmpstrqi_nz_1	insn-codes.h	/^  CODE_FOR_cmpstrqi_nz_1 = 607,$/;"	e	enum:insn_code
CODE_FOR_cmpstrqi_nz_rex_1	insn-codes.h	/^  CODE_FOR_cmpstrqi_nz_rex_1 = 608,$/;"	e	enum:insn_code
CODE_FOR_cmpstrqi_rex_1	insn-codes.h	/^  CODE_FOR_cmpstrqi_rex_1 = 610,$/;"	e	enum:insn_code
CODE_FOR_cmpstrsi	insn-codes.h	/^  CODE_FOR_cmpstrsi = 1203,$/;"	e	enum:insn_code
CODE_FOR_cmptf	insn-codes.h	/^  CODE_FOR_cmptf = 842,$/;"	e	enum:insn_code
CODE_FOR_cmpxf	insn-codes.h	/^  CODE_FOR_cmpxf = 841,$/;"	e	enum:insn_code
CODE_FOR_conditional_trap	insn-codes.h	/^  CODE_FOR_conditional_trap = 1298,$/;"	e	enum:insn_code
CODE_FOR_cosdf2	insn-codes.h	/^  CODE_FOR_cosdf2 = 577,$/;"	e	enum:insn_code
CODE_FOR_cossf2	insn-codes.h	/^  CODE_FOR_cossf2 = 578,$/;"	e	enum:insn_code
CODE_FOR_costf2	insn-codes.h	/^  CODE_FOR_costf2 = 581,$/;"	e	enum:insn_code
CODE_FOR_cosxf2	insn-codes.h	/^  CODE_FOR_cosxf2 = 580,$/;"	e	enum:insn_code
CODE_FOR_cvtpi2ps	insn-codes.h	/^  CODE_FOR_cvtpi2ps = 739,$/;"	e	enum:insn_code
CODE_FOR_cvtps2pi	insn-codes.h	/^  CODE_FOR_cvtps2pi = 740,$/;"	e	enum:insn_code
CODE_FOR_cvtsi2ss	insn-codes.h	/^  CODE_FOR_cvtsi2ss = 742,$/;"	e	enum:insn_code
CODE_FOR_cvtss2si	insn-codes.h	/^  CODE_FOR_cvtss2si = 743,$/;"	e	enum:insn_code
CODE_FOR_cvttps2pi	insn-codes.h	/^  CODE_FOR_cvttps2pi = 741,$/;"	e	enum:insn_code
CODE_FOR_cvttss2si	insn-codes.h	/^  CODE_FOR_cvttss2si = 744,$/;"	e	enum:insn_code
CODE_FOR_divdf3	insn-codes.h	/^  CODE_FOR_divdf3 = 998,$/;"	e	enum:insn_code
CODE_FOR_divmoddi4	insn-codes.h	/^  CODE_FOR_divmoddi4 = 1000,$/;"	e	enum:insn_code
CODE_FOR_divmodhi4	insn-codes.h	/^  CODE_FOR_divmodhi4 = 274,$/;"	e	enum:insn_code
CODE_FOR_divmodsi4	insn-codes.h	/^  CODE_FOR_divmodsi4 = 1002,$/;"	e	enum:insn_code
CODE_FOR_divqi3	insn-codes.h	/^  CODE_FOR_divqi3 = 266,$/;"	e	enum:insn_code
CODE_FOR_divsf3	insn-codes.h	/^  CODE_FOR_divsf3 = 999,$/;"	e	enum:insn_code
CODE_FOR_divtf3	insn-codes.h	/^  CODE_FOR_divtf3 = 997,$/;"	e	enum:insn_code
CODE_FOR_divv4sf3	insn-codes.h	/^  CODE_FOR_divv4sf3 = 696,$/;"	e	enum:insn_code
CODE_FOR_divxf3	insn-codes.h	/^  CODE_FOR_divxf3 = 996,$/;"	e	enum:insn_code
CODE_FOR_doloop_end	insn-codes.h	/^  CODE_FOR_doloop_end = 1161,$/;"	e	enum:insn_code
CODE_FOR_doloop_end_internal	insn-codes.h	/^  CODE_FOR_doloop_end_internal = 507,$/;"	e	enum:insn_code
CODE_FOR_eh_return	insn-codes.h	/^  CODE_FOR_eh_return = 1177,$/;"	e	enum:insn_code
CODE_FOR_eh_return_di	insn-codes.h	/^  CODE_FOR_eh_return_di = 521,$/;"	e	enum:insn_code
CODE_FOR_eh_return_si	insn-codes.h	/^  CODE_FOR_eh_return_si = 520,$/;"	e	enum:insn_code
CODE_FOR_emms	insn-codes.h	/^  CODE_FOR_emms = 801,$/;"	e	enum:insn_code
CODE_FOR_epilogue	insn-codes.h	/^  CODE_FOR_epilogue = 1175,$/;"	e	enum:insn_code
CODE_FOR_eqv2sf3	insn-codes.h	/^  CODE_FOR_eqv2sf3 = 811,$/;"	e	enum:insn_code
CODE_FOR_eqv2si3	insn-codes.h	/^  CODE_FOR_eqv2si3 = 776,$/;"	e	enum:insn_code
CODE_FOR_eqv4hi3	insn-codes.h	/^  CODE_FOR_eqv4hi3 = 775,$/;"	e	enum:insn_code
CODE_FOR_eqv8qi3	insn-codes.h	/^  CODE_FOR_eqv8qi3 = 774,$/;"	e	enum:insn_code
CODE_FOR_extenddftf2	insn-codes.h	/^  CODE_FOR_extenddftf2 = 908,$/;"	e	enum:insn_code
CODE_FOR_extenddfxf2	insn-codes.h	/^  CODE_FOR_extenddfxf2 = 907,$/;"	e	enum:insn_code
CODE_FOR_extendhidi2	insn-codes.h	/^  CODE_FOR_extendhidi2 = 121,$/;"	e	enum:insn_code
CODE_FOR_extendhisi2	insn-codes.h	/^  CODE_FOR_extendhisi2 = 123,$/;"	e	enum:insn_code
CODE_FOR_extendqidi2	insn-codes.h	/^  CODE_FOR_extendqidi2 = 122,$/;"	e	enum:insn_code
CODE_FOR_extendqihi2	insn-codes.h	/^  CODE_FOR_extendqihi2 = 125,$/;"	e	enum:insn_code
CODE_FOR_extendqisi2	insn-codes.h	/^  CODE_FOR_extendqisi2 = 126,$/;"	e	enum:insn_code
CODE_FOR_extendsfdf2	insn-codes.h	/^  CODE_FOR_extendsfdf2 = 904,$/;"	e	enum:insn_code
CODE_FOR_extendsftf2	insn-codes.h	/^  CODE_FOR_extendsftf2 = 906,$/;"	e	enum:insn_code
CODE_FOR_extendsfxf2	insn-codes.h	/^  CODE_FOR_extendsfxf2 = 905,$/;"	e	enum:insn_code
CODE_FOR_extendsidi2	insn-codes.h	/^  CODE_FOR_extendsidi2 = 892,$/;"	e	enum:insn_code
CODE_FOR_extendsidi2_rex64	insn-codes.h	/^  CODE_FOR_extendsidi2_rex64 = 120,$/;"	e	enum:insn_code
CODE_FOR_extv	expmed.c	83;"	d	file:
CODE_FOR_extv	insn-codes.h	/^  CODE_FOR_extv = 1112,$/;"	e	enum:insn_code
CODE_FOR_extzv	expmed.c	88;"	d	file:
CODE_FOR_extzv	insn-codes.h	/^  CODE_FOR_extzv = 1113,$/;"	e	enum:insn_code
CODE_FOR_femms	insn-codes.h	/^  CODE_FOR_femms = 815,$/;"	e	enum:insn_code
CODE_FOR_ffssi2	insn-codes.h	/^  CODE_FOR_ffssi2 = 1180,$/;"	e	enum:insn_code
CODE_FOR_ffssi_1	insn-codes.h	/^  CODE_FOR_ffssi_1 = 524,$/;"	e	enum:insn_code
CODE_FOR_fix_truncdfdi2	insn-codes.h	/^  CODE_FOR_fix_truncdfdi2 = 927,$/;"	e	enum:insn_code
CODE_FOR_fix_truncdfdi_sse	insn-codes.h	/^  CODE_FOR_fix_truncdfdi_sse = 156,$/;"	e	enum:insn_code
CODE_FOR_fix_truncdfhi2	insn-codes.h	/^  CODE_FOR_fix_truncdfhi2 = 941,$/;"	e	enum:insn_code
CODE_FOR_fix_truncdfsi2	insn-codes.h	/^  CODE_FOR_fix_truncdfsi2 = 934,$/;"	e	enum:insn_code
CODE_FOR_fix_truncdfsi_sse	insn-codes.h	/^  CODE_FOR_fix_truncdfsi_sse = 161,$/;"	e	enum:insn_code
CODE_FOR_fix_truncdi_memory	insn-codes.h	/^  CODE_FOR_fix_truncdi_memory = 154,$/;"	e	enum:insn_code
CODE_FOR_fix_truncdi_nomemory	insn-codes.h	/^  CODE_FOR_fix_truncdi_nomemory = 153,$/;"	e	enum:insn_code
CODE_FOR_fix_trunchi_memory	insn-codes.h	/^  CODE_FOR_fix_trunchi_memory = 164,$/;"	e	enum:insn_code
CODE_FOR_fix_trunchi_nomemory	insn-codes.h	/^  CODE_FOR_fix_trunchi_nomemory = 163,$/;"	e	enum:insn_code
CODE_FOR_fix_truncsfdi2	insn-codes.h	/^  CODE_FOR_fix_truncsfdi2 = 928,$/;"	e	enum:insn_code
CODE_FOR_fix_truncsfdi_sse	insn-codes.h	/^  CODE_FOR_fix_truncsfdi_sse = 155,$/;"	e	enum:insn_code
CODE_FOR_fix_truncsfhi2	insn-codes.h	/^  CODE_FOR_fix_truncsfhi2 = 942,$/;"	e	enum:insn_code
CODE_FOR_fix_truncsfsi2	insn-codes.h	/^  CODE_FOR_fix_truncsfsi2 = 935,$/;"	e	enum:insn_code
CODE_FOR_fix_truncsfsi_sse	insn-codes.h	/^  CODE_FOR_fix_truncsfsi_sse = 160,$/;"	e	enum:insn_code
CODE_FOR_fix_truncsi_memory	insn-codes.h	/^  CODE_FOR_fix_truncsi_memory = 159,$/;"	e	enum:insn_code
CODE_FOR_fix_truncsi_nomemory	insn-codes.h	/^  CODE_FOR_fix_truncsi_nomemory = 158,$/;"	e	enum:insn_code
CODE_FOR_fix_trunctfdi2	insn-codes.h	/^  CODE_FOR_fix_trunctfdi2 = 926,$/;"	e	enum:insn_code
CODE_FOR_fix_trunctfhi2	insn-codes.h	/^  CODE_FOR_fix_trunctfhi2 = 940,$/;"	e	enum:insn_code
CODE_FOR_fix_trunctfsi2	insn-codes.h	/^  CODE_FOR_fix_trunctfsi2 = 933,$/;"	e	enum:insn_code
CODE_FOR_fix_truncxfdi2	insn-codes.h	/^  CODE_FOR_fix_truncxfdi2 = 925,$/;"	e	enum:insn_code
CODE_FOR_fix_truncxfhi2	insn-codes.h	/^  CODE_FOR_fix_truncxfhi2 = 939,$/;"	e	enum:insn_code
CODE_FOR_fix_truncxfsi2	insn-codes.h	/^  CODE_FOR_fix_truncxfsi2 = 932,$/;"	e	enum:insn_code
CODE_FOR_floatdidf2	insn-codes.h	/^  CODE_FOR_floatdidf2 = 949,$/;"	e	enum:insn_code
CODE_FOR_floatdisf2	insn-codes.h	/^  CODE_FOR_floatdisf2 = 947,$/;"	e	enum:insn_code
CODE_FOR_floatditf2	insn-codes.h	/^  CODE_FOR_floatditf2 = 184,$/;"	e	enum:insn_code
CODE_FOR_floatdixf2	insn-codes.h	/^  CODE_FOR_floatdixf2 = 183,$/;"	e	enum:insn_code
CODE_FOR_floathidf2	insn-codes.h	/^  CODE_FOR_floathidf2 = 173,$/;"	e	enum:insn_code
CODE_FOR_floathisf2	insn-codes.h	/^  CODE_FOR_floathisf2 = 167,$/;"	e	enum:insn_code
CODE_FOR_floathitf2	insn-codes.h	/^  CODE_FOR_floathitf2 = 180,$/;"	e	enum:insn_code
CODE_FOR_floathixf2	insn-codes.h	/^  CODE_FOR_floathixf2 = 179,$/;"	e	enum:insn_code
CODE_FOR_floatsidf2	insn-codes.h	/^  CODE_FOR_floatsidf2 = 948,$/;"	e	enum:insn_code
CODE_FOR_floatsisf2	insn-codes.h	/^  CODE_FOR_floatsisf2 = 946,$/;"	e	enum:insn_code
CODE_FOR_floatsitf2	insn-codes.h	/^  CODE_FOR_floatsitf2 = 182,$/;"	e	enum:insn_code
CODE_FOR_floatsixf2	insn-codes.h	/^  CODE_FOR_floatsixf2 = 181,$/;"	e	enum:insn_code
CODE_FOR_floatv2si2	insn-codes.h	/^  CODE_FOR_floatv2si2 = 822,$/;"	e	enum:insn_code
CODE_FOR_gev2sf3	insn-codes.h	/^  CODE_FOR_gev2sf3 = 810,$/;"	e	enum:insn_code
CODE_FOR_gtv2sf3	insn-codes.h	/^  CODE_FOR_gtv2sf3 = 809,$/;"	e	enum:insn_code
CODE_FOR_gtv2si3	insn-codes.h	/^  CODE_FOR_gtv2si3 = 779,$/;"	e	enum:insn_code
CODE_FOR_gtv4hi3	insn-codes.h	/^  CODE_FOR_gtv4hi3 = 778,$/;"	e	enum:insn_code
CODE_FOR_gtv8qi3	insn-codes.h	/^  CODE_FOR_gtv8qi3 = 777,$/;"	e	enum:insn_code
CODE_FOR_indirect_jump	insn-codes.h	/^  CODE_FOR_indirect_jump = 1159,$/;"	e	enum:insn_code
CODE_FOR_insv	expmed.c	78;"	d	file:
CODE_FOR_insv	insn-codes.h	/^  CODE_FOR_insv = 1114,$/;"	e	enum:insn_code
CODE_FOR_iordi3	insn-codes.h	/^  CODE_FOR_iordi3 = 1018,$/;"	e	enum:insn_code
CODE_FOR_iorhi3	insn-codes.h	/^  CODE_FOR_iorhi3 = 1020,$/;"	e	enum:insn_code
CODE_FOR_iorqi3	insn-codes.h	/^  CODE_FOR_iorqi3 = 1021,$/;"	e	enum:insn_code
CODE_FOR_iorsi3	insn-codes.h	/^  CODE_FOR_iorsi3 = 1019,$/;"	e	enum:insn_code
CODE_FOR_jump	insn-codes.h	/^  CODE_FOR_jump = 502,$/;"	e	enum:insn_code
CODE_FOR_ldmxcsr	insn-codes.h	/^  CODE_FOR_ldmxcsr = 802,$/;"	e	enum:insn_code
CODE_FOR_leave	insn-codes.h	/^  CODE_FOR_leave = 522,$/;"	e	enum:insn_code
CODE_FOR_leave_rex64	insn-codes.h	/^  CODE_FOR_leave_rex64 = 523,$/;"	e	enum:insn_code
CODE_FOR_lshrdi3	insn-codes.h	/^  CODE_FOR_lshrdi3 = 1098,$/;"	e	enum:insn_code
CODE_FOR_lshrdi3_1	insn-codes.h	/^  CODE_FOR_lshrdi3_1 = 448,$/;"	e	enum:insn_code
CODE_FOR_lshrhi3	insn-codes.h	/^  CODE_FOR_lshrhi3 = 1102,$/;"	e	enum:insn_code
CODE_FOR_lshrqi3	insn-codes.h	/^  CODE_FOR_lshrqi3 = 1103,$/;"	e	enum:insn_code
CODE_FOR_lshrsi3	insn-codes.h	/^  CODE_FOR_lshrsi3 = 1101,$/;"	e	enum:insn_code
CODE_FOR_lshrv2si3	insn-codes.h	/^  CODE_FOR_lshrv2si3 = 787,$/;"	e	enum:insn_code
CODE_FOR_lshrv4hi3	insn-codes.h	/^  CODE_FOR_lshrv4hi3 = 786,$/;"	e	enum:insn_code
CODE_FOR_maskcmpv4sf3	insn-codes.h	/^  CODE_FOR_maskcmpv4sf3 = 727,$/;"	e	enum:insn_code
CODE_FOR_maskncmpv4sf3	insn-codes.h	/^  CODE_FOR_maskncmpv4sf3 = 728,$/;"	e	enum:insn_code
CODE_FOR_maxdf3	insn-codes.h	/^  CODE_FOR_maxdf3 = 1226,$/;"	e	enum:insn_code
CODE_FOR_maxsf3	insn-codes.h	/^  CODE_FOR_maxsf3 = 1223,$/;"	e	enum:insn_code
CODE_FOR_mindf3	insn-codes.h	/^  CODE_FOR_mindf3 = 1220,$/;"	e	enum:insn_code
CODE_FOR_minsf3	insn-codes.h	/^  CODE_FOR_minsf3 = 1217,$/;"	e	enum:insn_code
CODE_FOR_mmx_anddi3	insn-codes.h	/^  CODE_FOR_mmx_anddi3 = 766,$/;"	e	enum:insn_code
CODE_FOR_mmx_ashldi3	insn-codes.h	/^  CODE_FOR_mmx_ashldi3 = 791,$/;"	e	enum:insn_code
CODE_FOR_mmx_clrdi	insn-codes.h	/^  CODE_FOR_mmx_clrdi = 765,$/;"	e	enum:insn_code
CODE_FOR_mmx_iordi3	insn-codes.h	/^  CODE_FOR_mmx_iordi3 = 763,$/;"	e	enum:insn_code
CODE_FOR_mmx_lshrdi3	insn-codes.h	/^  CODE_FOR_mmx_lshrdi3 = 788,$/;"	e	enum:insn_code
CODE_FOR_mmx_maskmovq	insn-codes.h	/^  CODE_FOR_mmx_maskmovq = 678,$/;"	e	enum:insn_code
CODE_FOR_mmx_maskmovq_rex	insn-codes.h	/^  CODE_FOR_mmx_maskmovq_rex = 679,$/;"	e	enum:insn_code
CODE_FOR_mmx_nanddi3	insn-codes.h	/^  CODE_FOR_mmx_nanddi3 = 767,$/;"	e	enum:insn_code
CODE_FOR_mmx_packssdw	insn-codes.h	/^  CODE_FOR_mmx_packssdw = 793,$/;"	e	enum:insn_code
CODE_FOR_mmx_packsswb	insn-codes.h	/^  CODE_FOR_mmx_packsswb = 792,$/;"	e	enum:insn_code
CODE_FOR_mmx_packuswb	insn-codes.h	/^  CODE_FOR_mmx_packuswb = 794,$/;"	e	enum:insn_code
CODE_FOR_mmx_pextrw	insn-codes.h	/^  CODE_FOR_mmx_pextrw = 772,$/;"	e	enum:insn_code
CODE_FOR_mmx_pinsrw	insn-codes.h	/^  CODE_FOR_mmx_pinsrw = 771,$/;"	e	enum:insn_code
CODE_FOR_mmx_pmaddwd	insn-codes.h	/^  CODE_FOR_mmx_pmaddwd = 762,$/;"	e	enum:insn_code
CODE_FOR_mmx_pmovmskb	insn-codes.h	/^  CODE_FOR_mmx_pmovmskb = 677,$/;"	e	enum:insn_code
CODE_FOR_mmx_psadbw	insn-codes.h	/^  CODE_FOR_mmx_psadbw = 770,$/;"	e	enum:insn_code
CODE_FOR_mmx_pshufw	insn-codes.h	/^  CODE_FOR_mmx_pshufw = 773,$/;"	e	enum:insn_code
CODE_FOR_mmx_punpckhbw	insn-codes.h	/^  CODE_FOR_mmx_punpckhbw = 795,$/;"	e	enum:insn_code
CODE_FOR_mmx_punpckhdq	insn-codes.h	/^  CODE_FOR_mmx_punpckhdq = 797,$/;"	e	enum:insn_code
CODE_FOR_mmx_punpckhwd	insn-codes.h	/^  CODE_FOR_mmx_punpckhwd = 796,$/;"	e	enum:insn_code
CODE_FOR_mmx_punpcklbw	insn-codes.h	/^  CODE_FOR_mmx_punpcklbw = 798,$/;"	e	enum:insn_code
CODE_FOR_mmx_punpckldq	insn-codes.h	/^  CODE_FOR_mmx_punpckldq = 800,$/;"	e	enum:insn_code
CODE_FOR_mmx_punpcklwd	insn-codes.h	/^  CODE_FOR_mmx_punpcklwd = 799,$/;"	e	enum:insn_code
CODE_FOR_mmx_uavgv4hi3	insn-codes.h	/^  CODE_FOR_mmx_uavgv4hi3 = 769,$/;"	e	enum:insn_code
CODE_FOR_mmx_uavgv8qi3	insn-codes.h	/^  CODE_FOR_mmx_uavgv8qi3 = 768,$/;"	e	enum:insn_code
CODE_FOR_mmx_xordi3	insn-codes.h	/^  CODE_FOR_mmx_xordi3 = 764,$/;"	e	enum:insn_code
CODE_FOR_movdf	insn-codes.h	/^  CODE_FOR_movdf = 865,$/;"	e	enum:insn_code
CODE_FOR_movdfcc	insn-codes.h	/^  CODE_FOR_movdfcc = 1213,$/;"	e	enum:insn_code
CODE_FOR_movdi	insn-codes.h	/^  CODE_FOR_movdi = 852,$/;"	e	enum:insn_code
CODE_FOR_movdicc	insn-codes.h	/^  CODE_FOR_movdicc = 1209,$/;"	e	enum:insn_code
CODE_FOR_movhi	insn-codes.h	/^  CODE_FOR_movhi = 847,$/;"	e	enum:insn_code
CODE_FOR_movhicc	insn-codes.h	/^  CODE_FOR_movhicc = 1211,$/;"	e	enum:insn_code
CODE_FOR_movqi	insn-codes.h	/^  CODE_FOR_movqi = 849,$/;"	e	enum:insn_code
CODE_FOR_movsf	insn-codes.h	/^  CODE_FOR_movsf = 861,$/;"	e	enum:insn_code
CODE_FOR_movsfcc	insn-codes.h	/^  CODE_FOR_movsfcc = 1212,$/;"	e	enum:insn_code
CODE_FOR_movsi	insn-codes.h	/^  CODE_FOR_movsi = 846,$/;"	e	enum:insn_code
CODE_FOR_movsi_insv_1	insn-codes.h	/^  CODE_FOR_movsi_insv_1 = 73,$/;"	e	enum:insn_code
CODE_FOR_movsicc	insn-codes.h	/^  CODE_FOR_movsicc = 1210,$/;"	e	enum:insn_code
CODE_FOR_movstrdi	insn-codes.h	/^  CODE_FOR_movstrdi = 1186,$/;"	e	enum:insn_code
CODE_FOR_movstricthi	insn-codes.h	/^  CODE_FOR_movstricthi = 848,$/;"	e	enum:insn_code
CODE_FOR_movstrictqi	insn-codes.h	/^  CODE_FOR_movstrictqi = 851,$/;"	e	enum:insn_code
CODE_FOR_movstrsi	insn-codes.h	/^  CODE_FOR_movstrsi = 1185,$/;"	e	enum:insn_code
CODE_FOR_movtf	insn-codes.h	/^  CODE_FOR_movtf = 871,$/;"	e	enum:insn_code
CODE_FOR_movtfcc	insn-codes.h	/^  CODE_FOR_movtfcc = 1216,$/;"	e	enum:insn_code
CODE_FOR_movti	insn-codes.h	/^  CODE_FOR_movti = 1299,$/;"	e	enum:insn_code
CODE_FOR_movti_internal	insn-codes.h	/^  CODE_FOR_movti_internal = 672,$/;"	e	enum:insn_code
CODE_FOR_movv2sf	insn-codes.h	/^  CODE_FOR_movv2sf = 1305,$/;"	e	enum:insn_code
CODE_FOR_movv2sf_internal	insn-codes.h	/^  CODE_FOR_movv2sf_internal = 664,$/;"	e	enum:insn_code
CODE_FOR_movv2si	insn-codes.h	/^  CODE_FOR_movv2si = 1302,$/;"	e	enum:insn_code
CODE_FOR_movv2si_internal	insn-codes.h	/^  CODE_FOR_movv2si_internal = 663,$/;"	e	enum:insn_code
CODE_FOR_movv4hi	insn-codes.h	/^  CODE_FOR_movv4hi = 1303,$/;"	e	enum:insn_code
CODE_FOR_movv4hi_internal	insn-codes.h	/^  CODE_FOR_movv4hi_internal = 662,$/;"	e	enum:insn_code
CODE_FOR_movv4sf	insn-codes.h	/^  CODE_FOR_movv4sf = 1300,$/;"	e	enum:insn_code
CODE_FOR_movv4sf_internal	insn-codes.h	/^  CODE_FOR_movv4sf_internal = 659,$/;"	e	enum:insn_code
CODE_FOR_movv4si	insn-codes.h	/^  CODE_FOR_movv4si = 1301,$/;"	e	enum:insn_code
CODE_FOR_movv4si_internal	insn-codes.h	/^  CODE_FOR_movv4si_internal = 660,$/;"	e	enum:insn_code
CODE_FOR_movv8qi	insn-codes.h	/^  CODE_FOR_movv8qi = 1304,$/;"	e	enum:insn_code
CODE_FOR_movv8qi_internal	insn-codes.h	/^  CODE_FOR_movv8qi_internal = 661,$/;"	e	enum:insn_code
CODE_FOR_movxf	insn-codes.h	/^  CODE_FOR_movxf = 870,$/;"	e	enum:insn_code
CODE_FOR_movxfcc	insn-codes.h	/^  CODE_FOR_movxfcc = 1215,$/;"	e	enum:insn_code
CODE_FOR_muldf3	insn-codes.h	/^  CODE_FOR_muldf3 = 994,$/;"	e	enum:insn_code
CODE_FOR_muldi3	insn-codes.h	/^  CODE_FOR_muldi3 = 978,$/;"	e	enum:insn_code
CODE_FOR_mulditi3	insn-codes.h	/^  CODE_FOR_mulditi3 = 986,$/;"	e	enum:insn_code
CODE_FOR_mulhi3	insn-codes.h	/^  CODE_FOR_mulhi3 = 980,$/;"	e	enum:insn_code
CODE_FOR_mulqi3	insn-codes.h	/^  CODE_FOR_mulqi3 = 981,$/;"	e	enum:insn_code
CODE_FOR_mulqihi3	insn-codes.h	/^  CODE_FOR_mulqihi3 = 983,$/;"	e	enum:insn_code
CODE_FOR_mulsf3	insn-codes.h	/^  CODE_FOR_mulsf3 = 995,$/;"	e	enum:insn_code
CODE_FOR_mulsi3	insn-codes.h	/^  CODE_FOR_mulsi3 = 979,$/;"	e	enum:insn_code
CODE_FOR_mulsidi3	insn-codes.h	/^  CODE_FOR_mulsidi3 = 987,$/;"	e	enum:insn_code
CODE_FOR_multf3	insn-codes.h	/^  CODE_FOR_multf3 = 993,$/;"	e	enum:insn_code
CODE_FOR_mulv2sf3	insn-codes.h	/^  CODE_FOR_mulv2sf3 = 814,$/;"	e	enum:insn_code
CODE_FOR_mulv4hi3	insn-codes.h	/^  CODE_FOR_mulv4hi3 = 759,$/;"	e	enum:insn_code
CODE_FOR_mulv4sf3	insn-codes.h	/^  CODE_FOR_mulv4sf3 = 694,$/;"	e	enum:insn_code
CODE_FOR_mulxf3	insn-codes.h	/^  CODE_FOR_mulxf3 = 992,$/;"	e	enum:insn_code
CODE_FOR_negdf2	insn-codes.h	/^  CODE_FOR_negdf2 = 1039,$/;"	e	enum:insn_code
CODE_FOR_negdf2_ifs	insn-codes.h	/^  CODE_FOR_negdf2_ifs = 359,$/;"	e	enum:insn_code
CODE_FOR_negdf2_memory	insn-codes.h	/^  CODE_FOR_negdf2_memory = 358,$/;"	e	enum:insn_code
CODE_FOR_negdi2	insn-codes.h	/^  CODE_FOR_negdi2 = 1027,$/;"	e	enum:insn_code
CODE_FOR_neghi2	insn-codes.h	/^  CODE_FOR_neghi2 = 1030,$/;"	e	enum:insn_code
CODE_FOR_negqi2	insn-codes.h	/^  CODE_FOR_negqi2 = 1031,$/;"	e	enum:insn_code
CODE_FOR_negsf2	insn-codes.h	/^  CODE_FOR_negsf2 = 1032,$/;"	e	enum:insn_code
CODE_FOR_negsf2_ifs	insn-codes.h	/^  CODE_FOR_negsf2_ifs = 356,$/;"	e	enum:insn_code
CODE_FOR_negsf2_memory	insn-codes.h	/^  CODE_FOR_negsf2_memory = 355,$/;"	e	enum:insn_code
CODE_FOR_negsi2	insn-codes.h	/^  CODE_FOR_negsi2 = 1029,$/;"	e	enum:insn_code
CODE_FOR_negtf2	insn-codes.h	/^  CODE_FOR_negtf2 = 1047,$/;"	e	enum:insn_code
CODE_FOR_negxf2	insn-codes.h	/^  CODE_FOR_negxf2 = 1046,$/;"	e	enum:insn_code
CODE_FOR_nop	insn-codes.h	/^  CODE_FOR_nop = 517,$/;"	e	enum:insn_code
CODE_FOR_nothing	insn-codes.h	/^CODE_FOR_nothing$/;"	e	enum:insn_code
CODE_FOR_one_cmpldi2	insn-codes.h	/^  CODE_FOR_one_cmpldi2 = 1071,$/;"	e	enum:insn_code
CODE_FOR_one_cmplhi2	insn-codes.h	/^  CODE_FOR_one_cmplhi2 = 1076,$/;"	e	enum:insn_code
CODE_FOR_one_cmplqi2	insn-codes.h	/^  CODE_FOR_one_cmplqi2 = 1078,$/;"	e	enum:insn_code
CODE_FOR_one_cmplsi2	insn-codes.h	/^  CODE_FOR_one_cmplsi2 = 1073,$/;"	e	enum:insn_code
CODE_FOR_pavgusb	insn-codes.h	/^  CODE_FOR_pavgusb = 823,$/;"	e	enum:insn_code
CODE_FOR_pf2id	insn-codes.h	/^  CODE_FOR_pf2id = 816,$/;"	e	enum:insn_code
CODE_FOR_pf2iw	insn-codes.h	/^  CODE_FOR_pf2iw = 817,$/;"	e	enum:insn_code
CODE_FOR_pfacc	insn-codes.h	/^  CODE_FOR_pfacc = 818,$/;"	e	enum:insn_code
CODE_FOR_pfmaxv2sf3	insn-codes.h	/^  CODE_FOR_pfmaxv2sf3 = 812,$/;"	e	enum:insn_code
CODE_FOR_pfminv2sf3	insn-codes.h	/^  CODE_FOR_pfminv2sf3 = 813,$/;"	e	enum:insn_code
CODE_FOR_pfnacc	insn-codes.h	/^  CODE_FOR_pfnacc = 819,$/;"	e	enum:insn_code
CODE_FOR_pfpnacc	insn-codes.h	/^  CODE_FOR_pfpnacc = 820,$/;"	e	enum:insn_code
CODE_FOR_pfrcpit1v2sf3	insn-codes.h	/^  CODE_FOR_pfrcpit1v2sf3 = 825,$/;"	e	enum:insn_code
CODE_FOR_pfrcpit2v2sf3	insn-codes.h	/^  CODE_FOR_pfrcpit2v2sf3 = 826,$/;"	e	enum:insn_code
CODE_FOR_pfrcpv2sf2	insn-codes.h	/^  CODE_FOR_pfrcpv2sf2 = 824,$/;"	e	enum:insn_code
CODE_FOR_pfrsqit1v2sf3	insn-codes.h	/^  CODE_FOR_pfrsqit1v2sf3 = 828,$/;"	e	enum:insn_code
CODE_FOR_pfrsqrtv2sf2	insn-codes.h	/^  CODE_FOR_pfrsqrtv2sf2 = 827,$/;"	e	enum:insn_code
CODE_FOR_pi2fw	insn-codes.h	/^  CODE_FOR_pi2fw = 821,$/;"	e	enum:insn_code
CODE_FOR_pmulhrwv4hi3	insn-codes.h	/^  CODE_FOR_pmulhrwv4hi3 = 829,$/;"	e	enum:insn_code
CODE_FOR_popdi1	insn-codes.h	/^  CODE_FOR_popdi1 = 80,$/;"	e	enum:insn_code
CODE_FOR_popsi1	insn-codes.h	/^  CODE_FOR_popsi1 = 42,$/;"	e	enum:insn_code
CODE_FOR_prefetch	insn-codes.h	/^  CODE_FOR_prefetch = 1316,$/;"	e	enum:insn_code
CODE_FOR_prefetch	loop.c	68;"	d	file:
CODE_FOR_pro_epilogue_adjust_stack	insn-codes.h	/^  CODE_FOR_pro_epilogue_adjust_stack = 1229,$/;"	e	enum:insn_code
CODE_FOR_pro_epilogue_adjust_stack_rex64	insn-codes.h	/^  CODE_FOR_pro_epilogue_adjust_stack_rex64 = 636,$/;"	e	enum:insn_code
CODE_FOR_prologue	insn-codes.h	/^  CODE_FOR_prologue = 1174,$/;"	e	enum:insn_code
CODE_FOR_prologue_get_pc	insn-codes.h	/^  CODE_FOR_prologue_get_pc = 519,$/;"	e	enum:insn_code
CODE_FOR_prologue_set_got	insn-codes.h	/^  CODE_FOR_prologue_set_got = 518,$/;"	e	enum:insn_code
CODE_FOR_pswapdv2sf2	insn-codes.h	/^  CODE_FOR_pswapdv2sf2 = 831,$/;"	e	enum:insn_code
CODE_FOR_pswapdv2si2	insn-codes.h	/^  CODE_FOR_pswapdv2si2 = 830,$/;"	e	enum:insn_code
CODE_FOR_pushdi2_rex64	insn-codes.h	/^  CODE_FOR_pushdi2_rex64 = 77,$/;"	e	enum:insn_code
CODE_FOR_rcpv4sf2	insn-codes.h	/^  CODE_FOR_rcpv4sf2 = 698,$/;"	e	enum:insn_code
CODE_FOR_reload_outqi	insn-codes.h	/^  CODE_FOR_reload_outqi = 850,$/;"	e	enum:insn_code
CODE_FOR_rep_movdi_rex64	insn-codes.h	/^  CODE_FOR_rep_movdi_rex64 = 590,$/;"	e	enum:insn_code
CODE_FOR_rep_movqi	insn-codes.h	/^  CODE_FOR_rep_movqi = 593,$/;"	e	enum:insn_code
CODE_FOR_rep_movqi_rex64	insn-codes.h	/^  CODE_FOR_rep_movqi_rex64 = 594,$/;"	e	enum:insn_code
CODE_FOR_rep_movsi	insn-codes.h	/^  CODE_FOR_rep_movsi = 591,$/;"	e	enum:insn_code
CODE_FOR_rep_movsi_rex64	insn-codes.h	/^  CODE_FOR_rep_movsi_rex64 = 592,$/;"	e	enum:insn_code
CODE_FOR_rep_stosdi_rex64	insn-codes.h	/^  CODE_FOR_rep_stosdi_rex64 = 602,$/;"	e	enum:insn_code
CODE_FOR_rep_stosqi	insn-codes.h	/^  CODE_FOR_rep_stosqi = 605,$/;"	e	enum:insn_code
CODE_FOR_rep_stosqi_rex64	insn-codes.h	/^  CODE_FOR_rep_stosqi_rex64 = 606,$/;"	e	enum:insn_code
CODE_FOR_rep_stossi	insn-codes.h	/^  CODE_FOR_rep_stossi = 603,$/;"	e	enum:insn_code
CODE_FOR_rep_stossi_rex64	insn-codes.h	/^  CODE_FOR_rep_stossi_rex64 = 604,$/;"	e	enum:insn_code
CODE_FOR_return	insn-codes.h	/^  CODE_FOR_return = 1173,$/;"	e	enum:insn_code
CODE_FOR_return_indirect_internal	insn-codes.h	/^  CODE_FOR_return_indirect_internal = 516,$/;"	e	enum:insn_code
CODE_FOR_return_internal	insn-codes.h	/^  CODE_FOR_return_internal = 514,$/;"	e	enum:insn_code
CODE_FOR_return_pop_internal	insn-codes.h	/^  CODE_FOR_return_pop_internal = 515,$/;"	e	enum:insn_code
CODE_FOR_rotldi3	insn-codes.h	/^  CODE_FOR_rotldi3 = 1104,$/;"	e	enum:insn_code
CODE_FOR_rotlhi3	insn-codes.h	/^  CODE_FOR_rotlhi3 = 1106,$/;"	e	enum:insn_code
CODE_FOR_rotlqi3	insn-codes.h	/^  CODE_FOR_rotlqi3 = 1107,$/;"	e	enum:insn_code
CODE_FOR_rotlsi3	insn-codes.h	/^  CODE_FOR_rotlsi3 = 1105,$/;"	e	enum:insn_code
CODE_FOR_rotrdi3	insn-codes.h	/^  CODE_FOR_rotrdi3 = 1108,$/;"	e	enum:insn_code
CODE_FOR_rotrhi3	insn-codes.h	/^  CODE_FOR_rotrhi3 = 1110,$/;"	e	enum:insn_code
CODE_FOR_rotrqi3	insn-codes.h	/^  CODE_FOR_rotrqi3 = 1111,$/;"	e	enum:insn_code
CODE_FOR_rotrsi3	insn-codes.h	/^  CODE_FOR_rotrsi3 = 1109,$/;"	e	enum:insn_code
CODE_FOR_rsqrtv4sf2	insn-codes.h	/^  CODE_FOR_rsqrtv4sf2 = 700,$/;"	e	enum:insn_code
CODE_FOR_seq	insn-codes.h	/^  CODE_FOR_seq = 1115,$/;"	e	enum:insn_code
CODE_FOR_setcc_2	insn-codes.h	/^  CODE_FOR_setcc_2 = 487,$/;"	e	enum:insn_code
CODE_FOR_sfence	insn-codes.h	/^  CODE_FOR_sfence = 1314,$/;"	e	enum:insn_code
CODE_FOR_sge	insn-codes.h	/^  CODE_FOR_sge = 1121,$/;"	e	enum:insn_code
CODE_FOR_sgeu	insn-codes.h	/^  CODE_FOR_sgeu = 1122,$/;"	e	enum:insn_code
CODE_FOR_sgt	insn-codes.h	/^  CODE_FOR_sgt = 1117,$/;"	e	enum:insn_code
CODE_FOR_sgtu	insn-codes.h	/^  CODE_FOR_sgtu = 1118,$/;"	e	enum:insn_code
CODE_FOR_sibcall_epilogue	insn-codes.h	/^  CODE_FOR_sibcall_epilogue = 1176,$/;"	e	enum:insn_code
CODE_FOR_sindf2	insn-codes.h	/^  CODE_FOR_sindf2 = 572,$/;"	e	enum:insn_code
CODE_FOR_sinsf2	insn-codes.h	/^  CODE_FOR_sinsf2 = 573,$/;"	e	enum:insn_code
CODE_FOR_sintf2	insn-codes.h	/^  CODE_FOR_sintf2 = 576,$/;"	e	enum:insn_code
CODE_FOR_sinxf2	insn-codes.h	/^  CODE_FOR_sinxf2 = 575,$/;"	e	enum:insn_code
CODE_FOR_sle	insn-codes.h	/^  CODE_FOR_sle = 1123,$/;"	e	enum:insn_code
CODE_FOR_sleu	insn-codes.h	/^  CODE_FOR_sleu = 1124,$/;"	e	enum:insn_code
CODE_FOR_slt	insn-codes.h	/^  CODE_FOR_slt = 1119,$/;"	e	enum:insn_code
CODE_FOR_sltgt	insn-codes.h	/^  CODE_FOR_sltgt = 1132,$/;"	e	enum:insn_code
CODE_FOR_sltu	insn-codes.h	/^  CODE_FOR_sltu = 1120,$/;"	e	enum:insn_code
CODE_FOR_smaxv4hi3	insn-codes.h	/^  CODE_FOR_smaxv4hi3 = 781,$/;"	e	enum:insn_code
CODE_FOR_smaxv4sf3	insn-codes.h	/^  CODE_FOR_smaxv4sf3 = 735,$/;"	e	enum:insn_code
CODE_FOR_sminv4hi3	insn-codes.h	/^  CODE_FOR_sminv4hi3 = 783,$/;"	e	enum:insn_code
CODE_FOR_sminv4sf3	insn-codes.h	/^  CODE_FOR_sminv4sf3 = 737,$/;"	e	enum:insn_code
CODE_FOR_smuldi3_highpart	insn-codes.h	/^  CODE_FOR_smuldi3_highpart = 990,$/;"	e	enum:insn_code
CODE_FOR_smulsi3_highpart	insn-codes.h	/^  CODE_FOR_smulsi3_highpart = 991,$/;"	e	enum:insn_code
CODE_FOR_smulv4hi3_highpart	insn-codes.h	/^  CODE_FOR_smulv4hi3_highpart = 760,$/;"	e	enum:insn_code
CODE_FOR_sne	insn-codes.h	/^  CODE_FOR_sne = 1116,$/;"	e	enum:insn_code
CODE_FOR_sordered	insn-codes.h	/^  CODE_FOR_sordered = 1126,$/;"	e	enum:insn_code
CODE_FOR_sqrtdf2	insn-codes.h	/^  CODE_FOR_sqrtdf2 = 1184,$/;"	e	enum:insn_code
CODE_FOR_sqrtdf2_1	insn-codes.h	/^  CODE_FOR_sqrtdf2_1 = 562,$/;"	e	enum:insn_code
CODE_FOR_sqrtdf2_1_sse_only	insn-codes.h	/^  CODE_FOR_sqrtdf2_1_sse_only = 563,$/;"	e	enum:insn_code
CODE_FOR_sqrtdf2_i387	insn-codes.h	/^  CODE_FOR_sqrtdf2_i387 = 564,$/;"	e	enum:insn_code
CODE_FOR_sqrtsf2	insn-codes.h	/^  CODE_FOR_sqrtsf2 = 1183,$/;"	e	enum:insn_code
CODE_FOR_sqrtsf2_1	insn-codes.h	/^  CODE_FOR_sqrtsf2_1 = 559,$/;"	e	enum:insn_code
CODE_FOR_sqrtsf2_1_sse_only	insn-codes.h	/^  CODE_FOR_sqrtsf2_1_sse_only = 560,$/;"	e	enum:insn_code
CODE_FOR_sqrtsf2_i387	insn-codes.h	/^  CODE_FOR_sqrtsf2_i387 = 561,$/;"	e	enum:insn_code
CODE_FOR_sqrttf2	insn-codes.h	/^  CODE_FOR_sqrttf2 = 567,$/;"	e	enum:insn_code
CODE_FOR_sqrtv4sf2	insn-codes.h	/^  CODE_FOR_sqrtv4sf2 = 702,$/;"	e	enum:insn_code
CODE_FOR_sqrtxf2	insn-codes.h	/^  CODE_FOR_sqrtxf2 = 566,$/;"	e	enum:insn_code
CODE_FOR_ssaddv4hi3	insn-codes.h	/^  CODE_FOR_ssaddv4hi3 = 749,$/;"	e	enum:insn_code
CODE_FOR_ssaddv8qi3	insn-codes.h	/^  CODE_FOR_ssaddv8qi3 = 748,$/;"	e	enum:insn_code
CODE_FOR_sse_andti3	insn-codes.h	/^  CODE_FOR_sse_andti3 = 708,$/;"	e	enum:insn_code
CODE_FOR_sse_clrv4sf	insn-codes.h	/^  CODE_FOR_sse_clrv4sf = 726,$/;"	e	enum:insn_code
CODE_FOR_sse_comi	insn-codes.h	/^  CODE_FOR_sse_comi = 731,$/;"	e	enum:insn_code
CODE_FOR_sse_iorti3	insn-codes.h	/^  CODE_FOR_sse_iorti3 = 718,$/;"	e	enum:insn_code
CODE_FOR_sse_loadss	insn-codes.h	/^  CODE_FOR_sse_loadss = 686,$/;"	e	enum:insn_code
CODE_FOR_sse_movaps	insn-codes.h	/^  CODE_FOR_sse_movaps = 674,$/;"	e	enum:insn_code
CODE_FOR_sse_movdfcc	insn-codes.h	/^  CODE_FOR_sse_movdfcc = 639,$/;"	e	enum:insn_code
CODE_FOR_sse_movdfcc_eq	insn-codes.h	/^  CODE_FOR_sse_movdfcc_eq = 640,$/;"	e	enum:insn_code
CODE_FOR_sse_movhlps	insn-codes.h	/^  CODE_FOR_sse_movhlps = 682,$/;"	e	enum:insn_code
CODE_FOR_sse_movhps	insn-codes.h	/^  CODE_FOR_sse_movhps = 684,$/;"	e	enum:insn_code
CODE_FOR_sse_movlhps	insn-codes.h	/^  CODE_FOR_sse_movlhps = 683,$/;"	e	enum:insn_code
CODE_FOR_sse_movlps	insn-codes.h	/^  CODE_FOR_sse_movlps = 685,$/;"	e	enum:insn_code
CODE_FOR_sse_movmskps	insn-codes.h	/^  CODE_FOR_sse_movmskps = 676,$/;"	e	enum:insn_code
CODE_FOR_sse_movntdi	insn-codes.h	/^  CODE_FOR_sse_movntdi = 681,$/;"	e	enum:insn_code
CODE_FOR_sse_movntv4sf	insn-codes.h	/^  CODE_FOR_sse_movntv4sf = 680,$/;"	e	enum:insn_code
CODE_FOR_sse_movsfcc	insn-codes.h	/^  CODE_FOR_sse_movsfcc = 637,$/;"	e	enum:insn_code
CODE_FOR_sse_movsfcc_eq	insn-codes.h	/^  CODE_FOR_sse_movsfcc_eq = 638,$/;"	e	enum:insn_code
CODE_FOR_sse_movss	insn-codes.h	/^  CODE_FOR_sse_movss = 687,$/;"	e	enum:insn_code
CODE_FOR_sse_movups	insn-codes.h	/^  CODE_FOR_sse_movups = 675,$/;"	e	enum:insn_code
CODE_FOR_sse_nandti3	insn-codes.h	/^  CODE_FOR_sse_nandti3 = 712,$/;"	e	enum:insn_code
CODE_FOR_sse_prologue_save	insn-codes.h	/^  CODE_FOR_sse_prologue_save = 1315,$/;"	e	enum:insn_code
CODE_FOR_sse_shufps	insn-codes.h	/^  CODE_FOR_sse_shufps = 689,$/;"	e	enum:insn_code
CODE_FOR_sse_storess	insn-codes.h	/^  CODE_FOR_sse_storess = 688,$/;"	e	enum:insn_code
CODE_FOR_sse_ucomi	insn-codes.h	/^  CODE_FOR_sse_ucomi = 732,$/;"	e	enum:insn_code
CODE_FOR_sse_unpckhps	insn-codes.h	/^  CODE_FOR_sse_unpckhps = 733,$/;"	e	enum:insn_code
CODE_FOR_sse_unpcklps	insn-codes.h	/^  CODE_FOR_sse_unpcklps = 734,$/;"	e	enum:insn_code
CODE_FOR_sse_xorti3	insn-codes.h	/^  CODE_FOR_sse_xorti3 = 724,$/;"	e	enum:insn_code
CODE_FOR_sssubv4hi3	insn-codes.h	/^  CODE_FOR_sssubv4hi3 = 756,$/;"	e	enum:insn_code
CODE_FOR_sssubv8qi3	insn-codes.h	/^  CODE_FOR_sssubv8qi3 = 755,$/;"	e	enum:insn_code
CODE_FOR_stmxcsr	insn-codes.h	/^  CODE_FOR_stmxcsr = 803,$/;"	e	enum:insn_code
CODE_FOR_strlendi	insn-codes.h	/^  CODE_FOR_strlendi = 1206,$/;"	e	enum:insn_code
CODE_FOR_strlenqi_1	insn-codes.h	/^  CODE_FOR_strlenqi_1 = 611,$/;"	e	enum:insn_code
CODE_FOR_strlenqi_rex_1	insn-codes.h	/^  CODE_FOR_strlenqi_rex_1 = 612,$/;"	e	enum:insn_code
CODE_FOR_strlensi	insn-codes.h	/^  CODE_FOR_strlensi = 1205,$/;"	e	enum:insn_code
CODE_FOR_strmovdi_rex64	insn-codes.h	/^  CODE_FOR_strmovdi_rex64 = 1187,$/;"	e	enum:insn_code
CODE_FOR_strmovdi_rex_1	insn-codes.h	/^  CODE_FOR_strmovdi_rex_1 = 583,$/;"	e	enum:insn_code
CODE_FOR_strmovhi	insn-codes.h	/^  CODE_FOR_strmovhi = 1190,$/;"	e	enum:insn_code
CODE_FOR_strmovhi_1	insn-codes.h	/^  CODE_FOR_strmovhi_1 = 586,$/;"	e	enum:insn_code
CODE_FOR_strmovhi_rex64	insn-codes.h	/^  CODE_FOR_strmovhi_rex64 = 1191,$/;"	e	enum:insn_code
CODE_FOR_strmovhi_rex_1	insn-codes.h	/^  CODE_FOR_strmovhi_rex_1 = 587,$/;"	e	enum:insn_code
CODE_FOR_strmovqi	insn-codes.h	/^  CODE_FOR_strmovqi = 1192,$/;"	e	enum:insn_code
CODE_FOR_strmovqi_1	insn-codes.h	/^  CODE_FOR_strmovqi_1 = 588,$/;"	e	enum:insn_code
CODE_FOR_strmovqi_rex64	insn-codes.h	/^  CODE_FOR_strmovqi_rex64 = 1193,$/;"	e	enum:insn_code
CODE_FOR_strmovqi_rex_1	insn-codes.h	/^  CODE_FOR_strmovqi_rex_1 = 589,$/;"	e	enum:insn_code
CODE_FOR_strmovsi	insn-codes.h	/^  CODE_FOR_strmovsi = 1188,$/;"	e	enum:insn_code
CODE_FOR_strmovsi_1	insn-codes.h	/^  CODE_FOR_strmovsi_1 = 584,$/;"	e	enum:insn_code
CODE_FOR_strmovsi_rex64	insn-codes.h	/^  CODE_FOR_strmovsi_rex64 = 1189,$/;"	e	enum:insn_code
CODE_FOR_strmovsi_rex_1	insn-codes.h	/^  CODE_FOR_strmovsi_rex_1 = 585,$/;"	e	enum:insn_code
CODE_FOR_strsetdi_rex64	insn-codes.h	/^  CODE_FOR_strsetdi_rex64 = 1196,$/;"	e	enum:insn_code
CODE_FOR_strsetdi_rex_1	insn-codes.h	/^  CODE_FOR_strsetdi_rex_1 = 595,$/;"	e	enum:insn_code
CODE_FOR_strsethi	insn-codes.h	/^  CODE_FOR_strsethi = 1199,$/;"	e	enum:insn_code
CODE_FOR_strsethi_1	insn-codes.h	/^  CODE_FOR_strsethi_1 = 598,$/;"	e	enum:insn_code
CODE_FOR_strsethi_rex64	insn-codes.h	/^  CODE_FOR_strsethi_rex64 = 1200,$/;"	e	enum:insn_code
CODE_FOR_strsethi_rex_1	insn-codes.h	/^  CODE_FOR_strsethi_rex_1 = 599,$/;"	e	enum:insn_code
CODE_FOR_strsetqi	insn-codes.h	/^  CODE_FOR_strsetqi = 1201,$/;"	e	enum:insn_code
CODE_FOR_strsetqi_1	insn-codes.h	/^  CODE_FOR_strsetqi_1 = 600,$/;"	e	enum:insn_code
CODE_FOR_strsetqi_rex64	insn-codes.h	/^  CODE_FOR_strsetqi_rex64 = 1202,$/;"	e	enum:insn_code
CODE_FOR_strsetqi_rex_1	insn-codes.h	/^  CODE_FOR_strsetqi_rex_1 = 601,$/;"	e	enum:insn_code
CODE_FOR_strsetsi	insn-codes.h	/^  CODE_FOR_strsetsi = 1197,$/;"	e	enum:insn_code
CODE_FOR_strsetsi_1	insn-codes.h	/^  CODE_FOR_strsetsi_1 = 596,$/;"	e	enum:insn_code
CODE_FOR_strsetsi_rex64	insn-codes.h	/^  CODE_FOR_strsetsi_rex64 = 1198,$/;"	e	enum:insn_code
CODE_FOR_strsetsi_rex_1	insn-codes.h	/^  CODE_FOR_strsetsi_rex_1 = 597,$/;"	e	enum:insn_code
CODE_FOR_subdf3	insn-codes.h	/^  CODE_FOR_subdf3 = 976,$/;"	e	enum:insn_code
CODE_FOR_subdi3	insn-codes.h	/^  CODE_FOR_subdi3 = 969,$/;"	e	enum:insn_code
CODE_FOR_subdi3_carry_rex64	insn-codes.h	/^  CODE_FOR_subdi3_carry_rex64 = 231,$/;"	e	enum:insn_code
CODE_FOR_subhi3	insn-codes.h	/^  CODE_FOR_subhi3 = 972,$/;"	e	enum:insn_code
CODE_FOR_subqi3	insn-codes.h	/^  CODE_FOR_subqi3 = 973,$/;"	e	enum:insn_code
CODE_FOR_subrv2sf3	insn-codes.h	/^  CODE_FOR_subrv2sf3 = 808,$/;"	e	enum:insn_code
CODE_FOR_subsf3	insn-codes.h	/^  CODE_FOR_subsf3 = 977,$/;"	e	enum:insn_code
CODE_FOR_subsi3	insn-codes.h	/^  CODE_FOR_subsi3 = 971,$/;"	e	enum:insn_code
CODE_FOR_subsi3_carry	insn-codes.h	/^  CODE_FOR_subsi3_carry = 235,$/;"	e	enum:insn_code
CODE_FOR_subsi3_carry_zext	insn-codes.h	/^  CODE_FOR_subsi3_carry_zext = 236,$/;"	e	enum:insn_code
CODE_FOR_subtf3	insn-codes.h	/^  CODE_FOR_subtf3 = 975,$/;"	e	enum:insn_code
CODE_FOR_subv2sf3	insn-codes.h	/^  CODE_FOR_subv2sf3 = 807,$/;"	e	enum:insn_code
CODE_FOR_subv2si3	insn-codes.h	/^  CODE_FOR_subv2si3 = 754,$/;"	e	enum:insn_code
CODE_FOR_subv4hi3	insn-codes.h	/^  CODE_FOR_subv4hi3 = 753,$/;"	e	enum:insn_code
CODE_FOR_subv4sf3	insn-codes.h	/^  CODE_FOR_subv4sf3 = 692,$/;"	e	enum:insn_code
CODE_FOR_subv8qi3	insn-codes.h	/^  CODE_FOR_subv8qi3 = 752,$/;"	e	enum:insn_code
CODE_FOR_subxf3	insn-codes.h	/^  CODE_FOR_subxf3 = 974,$/;"	e	enum:insn_code
CODE_FOR_suneq	insn-codes.h	/^  CODE_FOR_suneq = 1127,$/;"	e	enum:insn_code
CODE_FOR_sunge	insn-codes.h	/^  CODE_FOR_sunge = 1128,$/;"	e	enum:insn_code
CODE_FOR_sungt	insn-codes.h	/^  CODE_FOR_sungt = 1129,$/;"	e	enum:insn_code
CODE_FOR_sunle	insn-codes.h	/^  CODE_FOR_sunle = 1130,$/;"	e	enum:insn_code
CODE_FOR_sunlt	insn-codes.h	/^  CODE_FOR_sunlt = 1131,$/;"	e	enum:insn_code
CODE_FOR_sunordered	insn-codes.h	/^  CODE_FOR_sunordered = 1125,$/;"	e	enum:insn_code
CODE_FOR_swaptf	insn-codes.h	/^  CODE_FOR_swaptf = 106,$/;"	e	enum:insn_code
CODE_FOR_swapxf	insn-codes.h	/^  CODE_FOR_swapxf = 105,$/;"	e	enum:insn_code
CODE_FOR_tablejump	insn-codes.h	/^  CODE_FOR_tablejump = 1160,$/;"	e	enum:insn_code
CODE_FOR_testqi_ccz_1	insn-codes.h	/^  CODE_FOR_testqi_ccz_1 = 1008,$/;"	e	enum:insn_code
CODE_FOR_testqi_ext_ccno_0	insn-codes.h	/^  CODE_FOR_testqi_ext_ccno_0 = 1009,$/;"	e	enum:insn_code
CODE_FOR_testsi_1	insn-codes.h	/^  CODE_FOR_testsi_1 = 281,$/;"	e	enum:insn_code
CODE_FOR_testsi_ccno_1	insn-codes.h	/^  CODE_FOR_testsi_ccno_1 = 1007,$/;"	e	enum:insn_code
CODE_FOR_trap	insn-codes.h	/^  CODE_FOR_trap = 657,$/;"	e	enum:insn_code
CODE_FOR_truncdfsf2	insn-codes.h	/^  CODE_FOR_truncdfsf2 = 909,$/;"	e	enum:insn_code
CODE_FOR_truncdfsf2_3	insn-codes.h	/^  CODE_FOR_truncdfsf2_3 = 142,$/;"	e	enum:insn_code
CODE_FOR_truncdfsf2_sse_only	insn-codes.h	/^  CODE_FOR_truncdfsf2_sse_only = 143,$/;"	e	enum:insn_code
CODE_FOR_trunctfdf2	insn-codes.h	/^  CODE_FOR_trunctfdf2 = 922,$/;"	e	enum:insn_code
CODE_FOR_trunctfsf2	insn-codes.h	/^  CODE_FOR_trunctfsf2 = 916,$/;"	e	enum:insn_code
CODE_FOR_truncxfdf2	insn-codes.h	/^  CODE_FOR_truncxfdf2 = 919,$/;"	e	enum:insn_code
CODE_FOR_truncxfsf2	insn-codes.h	/^  CODE_FOR_truncxfsf2 = 913,$/;"	e	enum:insn_code
CODE_FOR_udivmoddi4	insn-codes.h	/^  CODE_FOR_udivmoddi4 = 275,$/;"	e	enum:insn_code
CODE_FOR_udivmodhi4	insn-codes.h	/^  CODE_FOR_udivmodhi4 = 1006,$/;"	e	enum:insn_code
CODE_FOR_udivmodsi4	insn-codes.h	/^  CODE_FOR_udivmodsi4 = 277,$/;"	e	enum:insn_code
CODE_FOR_udivqi3	insn-codes.h	/^  CODE_FOR_udivqi3 = 267,$/;"	e	enum:insn_code
CODE_FOR_umaxv8qi3	insn-codes.h	/^  CODE_FOR_umaxv8qi3 = 780,$/;"	e	enum:insn_code
CODE_FOR_uminv8qi3	insn-codes.h	/^  CODE_FOR_uminv8qi3 = 782,$/;"	e	enum:insn_code
CODE_FOR_umuldi3_highpart	insn-codes.h	/^  CODE_FOR_umuldi3_highpart = 988,$/;"	e	enum:insn_code
CODE_FOR_umulditi3	insn-codes.h	/^  CODE_FOR_umulditi3 = 984,$/;"	e	enum:insn_code
CODE_FOR_umulqihi3	insn-codes.h	/^  CODE_FOR_umulqihi3 = 982,$/;"	e	enum:insn_code
CODE_FOR_umulsi3_highpart	insn-codes.h	/^  CODE_FOR_umulsi3_highpart = 989,$/;"	e	enum:insn_code
CODE_FOR_umulsidi3	insn-codes.h	/^  CODE_FOR_umulsidi3 = 985,$/;"	e	enum:insn_code
CODE_FOR_umulv4hi3_highpart	insn-codes.h	/^  CODE_FOR_umulv4hi3_highpart = 761,$/;"	e	enum:insn_code
CODE_FOR_untyped_call	insn-codes.h	/^  CODE_FOR_untyped_call = 1172,$/;"	e	enum:insn_code
CODE_FOR_usaddv4hi3	insn-codes.h	/^  CODE_FOR_usaddv4hi3 = 751,$/;"	e	enum:insn_code
CODE_FOR_usaddv8qi3	insn-codes.h	/^  CODE_FOR_usaddv8qi3 = 750,$/;"	e	enum:insn_code
CODE_FOR_ussubv4hi3	insn-codes.h	/^  CODE_FOR_ussubv4hi3 = 758,$/;"	e	enum:insn_code
CODE_FOR_ussubv8qi3	insn-codes.h	/^  CODE_FOR_ussubv8qi3 = 757,$/;"	e	enum:insn_code
CODE_FOR_vmaddv4sf3	insn-codes.h	/^  CODE_FOR_vmaddv4sf3 = 691,$/;"	e	enum:insn_code
CODE_FOR_vmdivv4sf3	insn-codes.h	/^  CODE_FOR_vmdivv4sf3 = 697,$/;"	e	enum:insn_code
CODE_FOR_vmmaskcmpv4sf3	insn-codes.h	/^  CODE_FOR_vmmaskcmpv4sf3 = 729,$/;"	e	enum:insn_code
CODE_FOR_vmmaskncmpv4sf3	insn-codes.h	/^  CODE_FOR_vmmaskncmpv4sf3 = 730,$/;"	e	enum:insn_code
CODE_FOR_vmmulv4sf3	insn-codes.h	/^  CODE_FOR_vmmulv4sf3 = 695,$/;"	e	enum:insn_code
CODE_FOR_vmrcpv4sf2	insn-codes.h	/^  CODE_FOR_vmrcpv4sf2 = 699,$/;"	e	enum:insn_code
CODE_FOR_vmrsqrtv4sf2	insn-codes.h	/^  CODE_FOR_vmrsqrtv4sf2 = 701,$/;"	e	enum:insn_code
CODE_FOR_vmsmaxv4sf3	insn-codes.h	/^  CODE_FOR_vmsmaxv4sf3 = 736,$/;"	e	enum:insn_code
CODE_FOR_vmsminv4sf3	insn-codes.h	/^  CODE_FOR_vmsminv4sf3 = 738,$/;"	e	enum:insn_code
CODE_FOR_vmsqrtv4sf2	insn-codes.h	/^  CODE_FOR_vmsqrtv4sf2 = 703,$/;"	e	enum:insn_code
CODE_FOR_vmsubv4sf3	insn-codes.h	/^  CODE_FOR_vmsubv4sf3 = 693,$/;"	e	enum:insn_code
CODE_FOR_x86_fldcw_1	insn-codes.h	/^  CODE_FOR_x86_fldcw_1 = 166,$/;"	e	enum:insn_code
CODE_FOR_x86_fnstcw_1	insn-codes.h	/^  CODE_FOR_x86_fnstcw_1 = 165,$/;"	e	enum:insn_code
CODE_FOR_x86_fnstsw_1	insn-codes.h	/^  CODE_FOR_x86_fnstsw_1 = 30,$/;"	e	enum:insn_code
CODE_FOR_x86_movdicc_0_m1_rex64	insn-codes.h	/^  CODE_FOR_x86_movdicc_0_m1_rex64 = 613,$/;"	e	enum:insn_code
CODE_FOR_x86_movsicc_0_m1	insn-codes.h	/^  CODE_FOR_x86_movsicc_0_m1 = 615,$/;"	e	enum:insn_code
CODE_FOR_x86_sahf_1	insn-codes.h	/^  CODE_FOR_x86_sahf_1 = 31,$/;"	e	enum:insn_code
CODE_FOR_x86_shift_adj_1	insn-codes.h	/^  CODE_FOR_x86_shift_adj_1 = 1084,$/;"	e	enum:insn_code
CODE_FOR_x86_shift_adj_2	insn-codes.h	/^  CODE_FOR_x86_shift_adj_2 = 1085,$/;"	e	enum:insn_code
CODE_FOR_x86_shift_adj_3	insn-codes.h	/^  CODE_FOR_x86_shift_adj_3 = 1094,$/;"	e	enum:insn_code
CODE_FOR_x86_shld_1	insn-codes.h	/^  CODE_FOR_x86_shld_1 = 407,$/;"	e	enum:insn_code
CODE_FOR_x86_shrd_1	insn-codes.h	/^  CODE_FOR_x86_shrd_1 = 425,$/;"	e	enum:insn_code
CODE_FOR_xordi3	insn-codes.h	/^  CODE_FOR_xordi3 = 1022,$/;"	e	enum:insn_code
CODE_FOR_xorhi3	insn-codes.h	/^  CODE_FOR_xorhi3 = 1024,$/;"	e	enum:insn_code
CODE_FOR_xorqi3	insn-codes.h	/^  CODE_FOR_xorqi3 = 1025,$/;"	e	enum:insn_code
CODE_FOR_xorqi_cc_ext_1	insn-codes.h	/^  CODE_FOR_xorqi_cc_ext_1 = 1026,$/;"	e	enum:insn_code
CODE_FOR_xorsi3	insn-codes.h	/^  CODE_FOR_xorsi3 = 1023,$/;"	e	enum:insn_code
CODE_FOR_zero_extendhidi2	insn-codes.h	/^  CODE_FOR_zero_extendhidi2 = 117,$/;"	e	enum:insn_code
CODE_FOR_zero_extendhisi2	insn-codes.h	/^  CODE_FOR_zero_extendhisi2 = 878,$/;"	e	enum:insn_code
CODE_FOR_zero_extendhisi2_and	insn-codes.h	/^  CODE_FOR_zero_extendhisi2_and = 107,$/;"	e	enum:insn_code
CODE_FOR_zero_extendqidi2	insn-codes.h	/^  CODE_FOR_zero_extendqidi2 = 118,$/;"	e	enum:insn_code
CODE_FOR_zero_extendqihi2	insn-codes.h	/^  CODE_FOR_zero_extendqihi2 = 880,$/;"	e	enum:insn_code
CODE_FOR_zero_extendqisi2	insn-codes.h	/^  CODE_FOR_zero_extendqisi2 = 884,$/;"	e	enum:insn_code
CODE_FOR_zero_extendsidi2	insn-codes.h	/^  CODE_FOR_zero_extendsidi2 = 888,$/;"	e	enum:insn_code
CODE_FOR_zero_extendsidi2_32	insn-codes.h	/^  CODE_FOR_zero_extendsidi2_32 = 115,$/;"	e	enum:insn_code
CODE_FOR_zero_extendsidi2_rex64	insn-codes.h	/^  CODE_FOR_zero_extendsidi2_rex64 = 116,$/;"	e	enum:insn_code
CODE_LABEL_NUMBER	rtl.h	622;"	d
COLON_PRIO	cppexp.c	477;"	d	file:
COLUMN_ALIGNMENT	tree-dump.c	139;"	d	file:
COMBINE_RTX_EQUAL_P	combine.c	3338;"	d	file:
COMMAND_LINE_OPTIONS	cppinit.c	/^  COMMAND_LINE_OPTIONS$/;"	e	enum:opt_code	file:
COMMAND_LINE_OPTIONS	cppinit.c	1191;"	d	file:
COMMAND_LINE_OPTIONS	cppinit.c	1287;"	d	file:
COMMA_PRIO	cppexp.c	475;"	d	file:
COMMON_ASM_OP	elfos.h	182;"	d
COMPARE	cppexp.c	527;"	d	file:
COMPLETE_OR_UNBOUND_ARRAY_TYPE_P	tree.h	478;"	d
COMPLETE_OR_VOID_TYPE_P	tree.h	474;"	d
COMPLETE_TYPE_P	tree.h	468;"	d
COMPLEX_CST_CHECK	tree-check.h	33;"	d
COMPLEX_EXPR_CHECK	tree-check.h	131;"	d
COMPLEX_MODE_P	machmode.h	69;"	d
COMPLEX_TYPE_CHECK	tree-check.h	14;"	d
COMPL_HARD_REG_SET	hard-reg-set.h	101;"	d
COMPL_HARD_REG_SET	hard-reg-set.h	144;"	d
COMPL_HARD_REG_SET	hard-reg-set.h	201;"	d
COMPL_HARD_REG_SET	hard-reg-set.h	268;"	d
COMPL_HARD_REG_SET	hard-reg-set.h	339;"	d
COMPONENT_REF_CHECK	tree-check.h	45;"	d
COMPOUND_BODY	c-common.h	631;"	d
COMPOUND_EXPR_CHECK	tree-check.h	53;"	d
COMPOUND_LITERAL_EXPR_CHECK	tree-check.h	175;"	d
COMPOUND_LITERAL_EXPR_DECL	c-common.h	661;"	d
COMPOUND_LITERAL_EXPR_DECL_STMT	c-common.h	659;"	d
COMPOUND_STMT_BODY_BLOCK	c-common.h	802;"	d
COMPOUND_STMT_CHECK	tree-check.h	158;"	d
COMPOUND_STMT_NO_SCOPE	c-common.h	798;"	d
CONCAT2	symcat.h	23;"	d
CONCAT2	symcat.h	32;"	d
CONCAT3	symcat.h	24;"	d
CONCAT3	symcat.h	33;"	d
CONCAT4	symcat.h	25;"	d
CONCAT4	symcat.h	34;"	d
COND	cpplib.c	74;"	d	file:
CONDITIONAL_REGISTER_USAGE	i386.h	955;"	d
COND_EXEC_CODE	rtl.h	1000;"	d
COND_EXEC_TEST	rtl.h	999;"	d
COND_EXPR_CHECK	tree-check.h	57;"	d
COND_PRIO	cppexp.c	476;"	d	file:
CONFLICTP	global.c	170;"	d	file:
CONFLICT_HASH_FN	conflict.c	117;"	d	file:
CONJ_EXPR_CHECK	tree-check.h	132;"	d
CONST0_RTX	rtl.h	1566;"	d
CONST1_RTX	rtl.h	1570;"	d
CONST2_RTX	rtl.h	1571;"	d
CONSTANT	c-parse.c	12;"	d	file:
CONSTANT	ssa-ccp.c	/^  CONSTANT,$/;"	e	enum:__anon74	file:
CONSTANT_ADDRESS_P	i386.h	1937;"	d
CONSTANT_ALIGNMENT	i386.h	807;"	d
CONSTANT_P	rtl.h	254;"	d
CONSTANT_POOL_ADDRESS_P	rtl.h	1003;"	d
CONSTANT_POOL_BEFORE_FUNCTION	varasm.c	1170;"	d	file:
CONSTRUCTOR_CHECK	tree-check.h	52;"	d
CONSTRUCTOR_ELTS	tree.h	843;"	d
CONST_AGE_PARM	integrate.h	84;"	d
CONST_BASED_ADDRESS_P	sched-rgn.c	1570;"	d	file:
CONST_COSTS	i386.h	2395;"	d
CONST_DECL_CHECK	tree-check.h	38;"	d
CONST_DOUBLE_CHAIN	rtl.h	825;"	d
CONST_DOUBLE_FORMAT	rtl.c	73;"	d	file:
CONST_DOUBLE_FORMAT	rtl.c	76;"	d	file:
CONST_DOUBLE_FORMAT	rtl.c	79;"	d	file:
CONST_DOUBLE_FORMAT	rtl.c	82;"	d	file:
CONST_DOUBLE_FORMAT	rtl.c	85;"	d	file:
CONST_DOUBLE_FORMAT	rtl.c	87;"	d	file:
CONST_DOUBLE_FROM_REAL_VALUE	real.h	465;"	d
CONST_DOUBLE_HIGH	rtl.h	822;"	d
CONST_DOUBLE_LOW	rtl.h	821;"	d
CONST_DOUBLE_OK_FOR_LETTER_P	i386.h	1424;"	d
CONST_OK_FOR_LETTER_P	i386.h	1410;"	d
CONST_OR_PURE_CALL_P	rtl.h	420;"	d
CONST_SECTION_ASM_OP	elfos.h	229;"	d
CONST_SECTION_FUNCTION	elfos.h	268;"	d
CONST_VECTOR_ELT	rtl.h	828;"	d
CONST_VECTOR_NUNITS	rtl.h	831;"	d
CONTAINING_INSN	rtl.h	784;"	d
CONTAINING_RGN	sched-rgn.c	151;"	d	file:
CONTIN	dbxout.c	286;"	d	file:
CONTIN	dbxout.c	289;"	d	file:
CONTIN	sdbout.c	133;"	d	file:
CONTINUE	c-parse.c	28;"	d	file:
CONTINUE_STMT_CHECK	tree-check.h	166;"	d
CONVERT_EXPR_CHECK	tree-check.h	120;"	d
CONVERT_HARD_REGISTER_TO_SSA_P	i386.h	1361;"	d
CONVERT_HARD_REGISTER_TO_SSA_P	ssa.h	63;"	d
CONVERT_REGISTER_TO_SSA_P	ssa.h	69;"	d
COPYA	mbchar.c	/^typedef enum {COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP,$/;"	e	enum:__anon6	file:
COPYING_UNIT	obstack.c	74;"	d	file:
COPYJ	mbchar.c	/^typedef enum {COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP,$/;"	e	enum:__anon6	file:
COPYJ2	mbchar.c	/^typedef enum {COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP,$/;"	e	enum:__anon6	file:
COPY_DECL_ASSEMBLER_NAME	tree.h	1383;"	d
COPY_DECL_RTL	tree.h	1487;"	d
COPY_HARD_REG_SET	hard-reg-set.h	100;"	d
COPY_HARD_REG_SET	hard-reg-set.h	139;"	d
COPY_HARD_REG_SET	hard-reg-set.h	195;"	d
COPY_HARD_REG_SET	hard-reg-set.h	261;"	d
COPY_HARD_REG_SET	hard-reg-set.h	333;"	d
COPY_REG_SET	basic-block.h	42;"	d
COST	cse.c	498;"	d	file:
COSTS_N_INSNS	rtl.h	1781;"	d
COST_IN	cse.c	499;"	d	file:
COST_TABLE	stmt.c	113;"	d	file:
CPLUSPLUS_CPP_SPEC	defaults.h	350;"	d
CPLUSPLUS_STD_VER	c-format.c	337;"	d	file:
CPP_ALIGN	cpplex.c	1955;"	d	file:
CPP_BUFFER	cpphash.h	38;"	d
CPP_BUF_COL	cpphash.h	40;"	d
CPP_BUF_COLUMN	cpphash.h	39;"	d
CPP_CPU32_SIZE_TYPE_SPEC	i386.h	563;"	d
CPP_CPU32_SIZE_TYPE_SPEC	i386.h	568;"	d
CPP_CPU32_SPEC	i386.h	572;"	d
CPP_CPU64_SIZE_TYPE_SPEC	i386.h	565;"	d
CPP_CPU64_SIZE_TYPE_SPEC	i386.h	569;"	d
CPP_CPU64_SPEC	i386.h	576;"	d
CPP_CPUCOMMON_SPEC	i386.h	579;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	515;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	518;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	521;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	524;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	527;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	531;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	535;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	538;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	541;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	544;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	547;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	550;"	d
CPP_CPU_DEFAULT_SPEC	i386.h	553;"	d
CPP_CPU_SPEC	i386.h	628;"	d
CPP_CPU_SPEC	i386.h	630;"	d
CPP_CPU_SPEC	i386.h	634;"	d
CPP_CPU_SPEC	i386.h	636;"	d
CPP_ERROR	cppexp.c	53;"	d	file:
CPP_FATAL_ERRORS	cpplib.h	385;"	d
CPP_FATAL_LIMIT	cpplib.h	383;"	d
CPP_FIRST_DIGRAPH	cpplib.h	59;"	d
CPP_HASHNODE	cpplib.h	431;"	d
CPP_ICE	cppexp.c	57;"	d	file:
CPP_IN_SYSTEM_HEADER	cpphash.h	359;"	d
CPP_LAST_EQ	cpplib.h	58;"	d
CPP_LAST_PUNCTUATOR	cpplib.h	60;"	d
CPP_OPTION	cpphash.h	37;"	d
CPP_PEDANTIC	cpphash.h	360;"	d
CPP_PREDEFINES	linux.h	87;"	d
CPP_PREDEFINES	linux.h	88;"	d
CPP_PREDEFINES	linux64.h	27;"	d
CPP_PREDEFINES	linux64.h	28;"	d
CPP_PREDEFINES	svr4.h	66;"	d
CPP_PRINT_DEPS	cpphash.h	358;"	d
CPP_SPEC	linux.h	90;"	d
CPP_SPEC	linux.h	92;"	d
CPP_SPEC	linux.h	94;"	d
CPP_SPEC	linux64.h	30;"	d
CPP_SPEC	linux64.h	31;"	d
CPP_STACK_MAX	cpphash.h	44;"	d
CPP_WTRADITIONAL	cpphash.h	361;"	d
CPUMASK	i386.h	210;"	d
CPU_ATHLON	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	e	enum:attr_cpu
CPU_I386	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	e	enum:attr_cpu
CPU_I486	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	e	enum:attr_cpu
CPU_K6	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	e	enum:attr_cpu
CPU_PENTIUM	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	e	enum:attr_cpu
CPU_PENTIUM4	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	e	enum:attr_cpu
CPU_PENTIUMPRO	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	e	enum:attr_cpu
CRAY_STACK	alloca.c	211;"	d	file:
CREG	i386.h	/^  AREG, DREG, CREG, BREG, SIREG, DIREG,$/;"	e	enum:reg_class
CROSS_INCLUDE_DIR	cppdefault.h	42;"	d
CRT_CALL_STATIC_FUNCTION	i386.h	2912;"	d
CRT_CALL_STATIC_FUNCTION	linux.h	174;"	d
CRT_CALL_STATIC_FUNCTION	linux.h	175;"	d
CRT_GET_RFIB_DATA	linux.h	203;"	d
CRT_GET_RFIB_DATA	linux.h	209;"	d
CSELIB_VAL_PTR	rtl.h	440;"	d
CST_CHECK	tree.h	336;"	d
CST_OR_CONSTRUCTOR_CHECK	tree.h	300;"	d
CST_OR_CONSTRUCTOR_CHECK	tree.h	327;"	d
CTI_BOOLEAN_FALSE	c-common.h	/^    CTI_BOOLEAN_FALSE,$/;"	e	enum:c_tree_index
CTI_BOOLEAN_TRUE	c-common.h	/^    CTI_BOOLEAN_TRUE,$/;"	e	enum:c_tree_index
CTI_BOOLEAN_TYPE	c-common.h	/^    CTI_BOOLEAN_TYPE,$/;"	e	enum:c_tree_index
CTI_C99_FUNCTION_NAME_DECL	c-common.h	/^    CTI_C99_FUNCTION_NAME_DECL,$/;"	e	enum:c_tree_index
CTI_CHAR_ARRAY_TYPE	c-common.h	/^    CTI_CHAR_ARRAY_TYPE,$/;"	e	enum:c_tree_index
CTI_CONST_STRING_TYPE	c-common.h	/^    CTI_CONST_STRING_TYPE,$/;"	e	enum:c_tree_index
CTI_C_BOOL_FALSE	c-common.h	/^    CTI_C_BOOL_FALSE,$/;"	e	enum:c_tree_index
CTI_C_BOOL_TRUE	c-common.h	/^    CTI_C_BOOL_TRUE,$/;"	e	enum:c_tree_index
CTI_C_BOOL_TYPE	c-common.h	/^    CTI_C_BOOL_TYPE,$/;"	e	enum:c_tree_index
CTI_C_SIZE_TYPE	c-common.h	/^    CTI_C_SIZE_TYPE, \/* The type used for the size_t typedef and the$/;"	e	enum:c_tree_index
CTI_DEFAULT_FUNCTION_TYPE	c-common.h	/^    CTI_DEFAULT_FUNCTION_TYPE,$/;"	e	enum:c_tree_index
CTI_FUNCTION_NAME_DECL	c-common.h	/^    CTI_FUNCTION_NAME_DECL,$/;"	e	enum:c_tree_index
CTI_G77_INTEGER_TYPE	c-common.h	/^    CTI_G77_INTEGER_TYPE,$/;"	e	enum:c_tree_index
CTI_G77_LONGINT_TYPE	c-common.h	/^    CTI_G77_LONGINT_TYPE,$/;"	e	enum:c_tree_index
CTI_G77_UINTEGER_TYPE	c-common.h	/^    CTI_G77_UINTEGER_TYPE,$/;"	e	enum:c_tree_index
CTI_G77_ULONGINT_TYPE	c-common.h	/^    CTI_G77_ULONGINT_TYPE,$/;"	e	enum:c_tree_index
CTI_INTMAX_TYPE	c-common.h	/^    CTI_INTMAX_TYPE,$/;"	e	enum:c_tree_index
CTI_INT_ARRAY_TYPE	c-common.h	/^    CTI_INT_ARRAY_TYPE,$/;"	e	enum:c_tree_index
CTI_MAX	c-common.h	/^    CTI_MAX$/;"	e	enum:c_tree_index
CTI_PRETTY_FUNCTION_NAME_DECL	c-common.h	/^    CTI_PRETTY_FUNCTION_NAME_DECL,$/;"	e	enum:c_tree_index
CTI_SAVED_FUNCTION_NAME_DECLS	c-common.h	/^    CTI_SAVED_FUNCTION_NAME_DECLS,$/;"	e	enum:c_tree_index
CTI_SIGNED_SIZE_TYPE	c-common.h	/^    CTI_SIGNED_SIZE_TYPE, \/* For format checking only.  *\/$/;"	e	enum:c_tree_index
CTI_SIGNED_WCHAR_TYPE	c-common.h	/^    CTI_SIGNED_WCHAR_TYPE,$/;"	e	enum:c_tree_index
CTI_STRING_TYPE	c-common.h	/^    CTI_STRING_TYPE,$/;"	e	enum:c_tree_index
CTI_UINTMAX_TYPE	c-common.h	/^    CTI_UINTMAX_TYPE,$/;"	e	enum:c_tree_index
CTI_UNSIGNED_PTRDIFF_TYPE	c-common.h	/^    CTI_UNSIGNED_PTRDIFF_TYPE, \/* For format checking only.  *\/$/;"	e	enum:c_tree_index
CTI_UNSIGNED_WCHAR_TYPE	c-common.h	/^    CTI_UNSIGNED_WCHAR_TYPE,$/;"	e	enum:c_tree_index
CTI_VOID_ZERO	c-common.h	/^    CTI_VOID_ZERO,$/;"	e	enum:c_tree_index
CTI_WCHAR_ARRAY_TYPE	c-common.h	/^    CTI_WCHAR_ARRAY_TYPE,$/;"	e	enum:c_tree_index
CTI_WCHAR_TYPE	c-common.h	/^    CTI_WCHAR_TYPE,$/;"	e	enum:c_tree_index
CTI_WIDEST_INT_LIT_TYPE	c-common.h	/^    CTI_WIDEST_INT_LIT_TYPE,$/;"	e	enum:c_tree_index
CTI_WIDEST_UINT_LIT_TYPE	c-common.h	/^    CTI_WIDEST_UINT_LIT_TYPE,$/;"	e	enum:c_tree_index
CTI_WINT_TYPE	c-common.h	/^    CTI_WINT_TYPE,$/;"	e	enum:c_tree_index
CUID_INSN	gcse.c	402;"	d	file:
CUMULATIVE_ARGS	i386.h	/^} CUMULATIVE_ARGS;$/;"	t	typeref:struct:ix86_args
CURRENT_LINE_MAP	line-map.h	117;"	d
CYCLIC	md5.c	314;"	d	file:
C_ALIAS	gsyms.h	/^  C_ALIAS = 105,$/;"	e	enum:sdb_storage_class
C_ALLOCA	libiberty.h	298;"	d
C_ALLOCA	libiberty.h	305;"	d
C_ARG	gsyms.h	/^  C_ARG = 9,$/;"	e	enum:sdb_storage_class
C_ARTIFICIAL_STRING_P	c-common.h	242;"	d
C_AUTO	gsyms.h	/^  C_AUTO = 1,$/;"	e	enum:sdb_storage_class
C_BCOMM	dbxstclass.h	12;"	d
C_BLOCK	gsyms.h	/^  C_BLOCK = 100,$/;"	e	enum:sdb_storage_class
C_DECL	dbxstclass.h	15;"	d
C_DECLARED_LABEL_FLAG	c-common.h	238;"	d
C_DECL_ANTICIPATED	c-tree.h	142;"	d
C_DECL_VARIABLE_SIZE	c-tree.h	119;"	d
C_DUMMY_TREE_CODE	c-common.h	/^  C_DUMMY_TREE_CODE = LAST_AND_UNUSED_TREE_CODE,$/;"	e	enum:c_tree_code
C_ECOML	dbxstclass.h	13;"	d
C_ECOMM	dbxstclass.h	14;"	d
C_EFCN	gsyms.h	/^  C_EFCN = -1,$/;"	e	enum:sdb_storage_class
C_ENTAG	gsyms.h	/^  C_ENTAG = 15,$/;"	e	enum:sdb_storage_class
C_ENTRY	dbxstclass.h	16;"	d
C_EOS	gsyms.h	/^  C_EOS = 102,$/;"	e	enum:sdb_storage_class
C_EXP_ORIGINAL_CODE	c-common.h	485;"	d
C_EXT	gsyms.h	/^  C_EXT = 2,$/;"	e	enum:sdb_storage_class
C_EXTDEF	gsyms.h	/^  C_EXTDEF = 5,$/;"	e	enum:sdb_storage_class
C_FCN	gsyms.h	/^  C_FCN = 101,$/;"	e	enum:sdb_storage_class
C_FIELD	gsyms.h	/^  C_FIELD = 18,$/;"	e	enum:sdb_storage_class
C_FILE	gsyms.h	/^  C_FILE = 103,$/;"	e	enum:sdb_storage_class
C_FUN	dbxstclass.h	17;"	d
C_FUNCTION_IMPLICIT_INT	c-tree.h	137;"	d
C_GSYM	dbxstclass.h	5;"	d
C_HIDDEN	gsyms.h	/^  C_HIDDEN = 106$/;"	e	enum:sdb_storage_class
C_IS_RESERVED_WORD	c-tree.h	101;"	d
C_LABEL	gsyms.h	/^  C_LABEL = 6,$/;"	e	enum:sdb_storage_class
C_LINE	gsyms.h	/^  C_LINE = 104,$/;"	e	enum:sdb_storage_class
C_LSYM	dbxstclass.h	6;"	d
C_MOE	gsyms.h	/^  C_MOE = 16,$/;"	e	enum:sdb_storage_class
C_MOS	gsyms.h	/^  C_MOS = 8,$/;"	e	enum:sdb_storage_class
C_MOU	gsyms.h	/^  C_MOU = 11,$/;"	e	enum:sdb_storage_class
C_NULL	gsyms.h	/^  C_NULL = 0,$/;"	e	enum:sdb_storage_class
C_PSYM	dbxstclass.h	7;"	d
C_REG	gsyms.h	/^  C_REG = 4,$/;"	e	enum:sdb_storage_class
C_REGPARM	gsyms.h	/^  C_REGPARM = 17,$/;"	e	enum:sdb_storage_class
C_RID_CODE	c-common.h	182;"	d
C_RPSYM	dbxstclass.h	9;"	d
C_RSYM	dbxstclass.h	8;"	d
C_SET_EXP_ORIGINAL_CODE	c-tree.h	129;"	d
C_STAT	gsyms.h	/^  C_STAT = 3,$/;"	e	enum:sdb_storage_class
C_STD_NAME	c-format.c	347;"	d	file:
C_STD_VER	c-format.c	339;"	d	file:
C_STRTAG	gsyms.h	/^  C_STRTAG = 10,$/;"	e	enum:sdb_storage_class
C_STSYM	dbxstclass.h	10;"	d
C_TPDEF	gsyms.h	/^  C_TPDEF = 13,$/;"	e	enum:sdb_storage_class
C_TYPEDEF_EXPLICITLY_SIGNED	c-tree.h	133;"	d
C_TYPE_BEING_DEFINED	c-tree.h	96;"	d
C_TYPE_FIELDS_READONLY	c-tree.h	89;"	d
C_TYPE_FIELDS_VOLATILE	c-tree.h	92;"	d
C_TYPE_FUNCTION_P	c-common.h	475;"	d
C_TYPE_INCOMPLETE_P	c-common.h	472;"	d
C_TYPE_OBJECT_OR_INCOMPLETE_P	c-common.h	480;"	d
C_TYPE_OBJECT_P	c-common.h	469;"	d
C_TYPE_VARIABLE_SIZE	c-tree.h	118;"	d
C_ULABEL	gsyms.h	/^  C_ULABEL = 7,$/;"	e	enum:sdb_storage_class
C_UNTAG	gsyms.h	/^  C_UNTAG = 12,$/;"	e	enum:sdb_storage_class
C_USTATIC	gsyms.h	/^  C_USTATIC = 14,$/;"	e	enum:sdb_storage_class
C_alloca	alloca.c	/^C_alloca (size)$/;"	f
D	cpplib.c	174;"	d	file:
D	cpplib.c	176;"	d	file:
D	cpplib.c	178;"	d	file:
D	cpplib.c	184;"	d	file:
D	cpplib.c	187;"	d	file:
D	cpplib.c	194;"	d	file:
D	md5.h	/^  md5_uint32 D;$/;"	m	struct:md5_ctx
D	safe-ctype.c	55;"	d	file:
DATA1_BEGIN_LABEL	dwarfout.c	1051;"	d	file:
DATA1_END_LABEL	dwarfout.c	1054;"	d	file:
DATA1_SECTION_NAME	dwarfout.c	1006;"	d	file:
DATA_ALIGNMENT	i386.h	821;"	d
DATA_BEGIN_LABEL	dwarfout.c	1044;"	d	file:
DATA_END_LABEL	dwarf2out.c	3765;"	d	file:
DATA_END_LABEL	dwarfout.c	1047;"	d	file:
DATA_SECTION_ASM_OP	unix.h	55;"	d
DATA_SECTION_NAME	dwarfout.c	1003;"	d	file:
DBX_BLOCKS_FUNCTION_RELATIVE	dbxelf.h	38;"	d
DBX_BLOCKS_FUNCTION_RELATIVE	dbxelf.h	39;"	d
DBX_CONTIN_LENGTH	dbxelf.h	54;"	d
DBX_CONTIN_LENGTH	dbxout.c	282;"	d	file:
DBX_CONTIN_LENGTH	xcoffout.h	185;"	d
DBX_DEBUG	flags.h	/^  DBX_DEBUG,	    \/* Write BSD .stabs for DBX (using dbxout.c).  *\/$/;"	e	enum:debug_info_type
DBX_DEBUGGING_INFO	dbxelf.h	30;"	d
DBX_DEBUGGING_INFO	dbxelf.h	31;"	d
DBX_FINISH_SYMBOL	xcoffout.h	95;"	d
DBX_FUNCTION_FIRST	dbxelf.h	43;"	d
DBX_FUNCTION_FIRST	dbxelf.h	44;"	d
DBX_MEMPARM_STABS_LETTER	dbxout.c	124;"	d	file:
DBX_NO_XREFS	xcoffout.h	190;"	d
DBX_OUTPUT_GCC_MARKER	xcoffout.h	181;"	d
DBX_OUTPUT_MAIN_SOURCE_DIRECTORY	xcoffout.h	153;"	d
DBX_OUTPUT_MAIN_SOURCE_FILENAME	xcoffout.h	160;"	d
DBX_OUTPUT_MAIN_SOURCE_FILE_END	dbxelf.h	82;"	d
DBX_OUTPUT_MAIN_SOURCE_FILE_END	dbxelf.h	83;"	d
DBX_OUTPUT_MAIN_SOURCE_FILE_END	xcoffout.h	164;"	d
DBX_OUTPUT_STANDARD_TYPES	xcoffout.h	35;"	d
DBX_REGISTER_NUMBER	defaults.h	277;"	d
DBX_REGISTER_NUMBER	i386.h	2815;"	d
DBX_REGISTER_NUMBER	linux.h	47;"	d
DBX_REGISTER_NUMBER	linux.h	48;"	d
DBX_REGISTER_NUMBER	svr4.h	211;"	d
DBX_REGISTER_NUMBER	x86-64.h	25;"	d
DBX_REGISTER_NUMBER	x86-64.h	26;"	d
DBX_REGPARM_STABS_CODE	dbxout.c	111;"	d	file:
DBX_REGPARM_STABS_CODE	xcoffout.h	86;"	d
DBX_REGPARM_STABS_LETTER	dbxout.c	115;"	d	file:
DBX_REGPARM_STABS_LETTER	xcoffout.h	90;"	d
DBX_STATIC_BLOCK_END	xcoffout.h	78;"	d
DBX_STATIC_BLOCK_START	xcoffout.h	65;"	d
DBX_STATIC_CONST_VAR_CODE	dbxout.c	107;"	d	file:
DBX_STATIC_CONST_VAR_CODE	xcoffout.h	48;"	d
DBX_TYPE_DECL_STABS_CODE	dbxout.c	103;"	d	file:
DBX_TYPE_DECL_STABS_CODE	xcoffout.h	27;"	d
DBX_TYPE_DEFINED	xcoffout.h	43;"	d
DBX_USE_BINCL	dbxelf.h	48;"	d
DBX_USE_BINCL	dbxelf.h	49;"	d
DEBUGGER_ARG_OFFSET	dbxout.c	182;"	d	file:
DEBUGGER_ARG_OFFSET	sdbout.c	77;"	d	file:
DEBUGGER_AUTO_OFFSET	dbxout.c	175;"	d	file:
DEBUGGER_AUTO_OFFSET	sdbout.c	70;"	d	file:
DEBUG_ABBREV_SECTION	dwarf2out.c	3684;"	d	file:
DEBUG_ABBREV_SECTION_LABEL	dwarf2out.c	3734;"	d	file:
DEBUG_ARANGES_BEGIN_LABEL	dwarfout.c	1102;"	d	file:
DEBUG_ARANGES_END_LABEL	dwarfout.c	1105;"	d	file:
DEBUG_ARANGES_SECTION	dwarf2out.c	3687;"	d	file:
DEBUG_ARANGES_SECTION	dwarfout.c	997;"	d	file:
DEBUG_BEGIN_LABEL	dwarfout.c	1089;"	d	file:
DEBUG_FRAME_SECTION	dwarf2out.c	316;"	d	file:
DEBUG_INFO_SECTION	dwarf2out.c	3681;"	d	file:
DEBUG_INFO_SECTION_LABEL	dwarf2out.c	3731;"	d	file:
DEBUG_LINE_SECTION	dwarf2out.c	3693;"	d	file:
DEBUG_LINE_SECTION_LABEL	dwarf2out.c	3728;"	d	file:
DEBUG_LOC_SECTION	dwarf2out.c	3696;"	d	file:
DEBUG_LOC_SECTION_LABEL	dwarf2out.c	3737;"	d	file:
DEBUG_MACINFO_SECTION	dwarf2out.c	3690;"	d	file:
DEBUG_MACINFO_SECTION	dwarfout.c	991;"	d	file:
DEBUG_MACINFO_SECTION_LABEL	dwarf2out.c	3743;"	d	file:
DEBUG_PRINT_REG	i386.h	2947;"	d
DEBUG_PRINT_REG	print-rtl.c	40;"	d	file:
DEBUG_PUBNAMES_SECTION	dwarf2out.c	3699;"	d	file:
DEBUG_PUBNAMES_SECTION	dwarfout.c	994;"	d	file:
DEBUG_RANGES_SECTION	dwarf2out.c	3705;"	d	file:
DEBUG_RANGES_SECTION_LABEL	dwarf2out.c	3740;"	d	file:
DEBUG_SECTION	dwarfout.c	979;"	d	file:
DEBUG_SFNAMES_SECTION	dwarfout.c	985;"	d	file:
DEBUG_SRCINFO_SECTION	dwarfout.c	988;"	d	file:
DEBUG_STR_SECTION	dwarf2out.c	3702;"	d	file:
DEBUG_STR_SECTION_FLAGS	dwarf2out.c	3715;"	d	file:
DEBUG_STR_SECTION_FLAGS	dwarf2out.c	3718;"	d	file:
DEBUG_SYMS_TEXT	xcoffout.h	196;"	d
DEC	real.c	122;"	d	file:
DECL_ABSTRACT	tree.h	1553;"	d
DECL_ABSTRACT_ORIGIN	tree.h	1529;"	d
DECL_ALIGN	tree.h	1450;"	d
DECL_ALIGN_UNIT	tree.h	1452;"	d
DECL_ANON_UNION_ELEMS	c-common.h	773;"	d
DECL_ARGUMENTS	tree.h	1416;"	d
DECL_ARG_TYPE	tree.h	1434;"	d
DECL_ARG_TYPE_AS_WRITTEN	tree.h	1425;"	d
DECL_ARTIFICIAL	tree.h	1685;"	d
DECL_ASSEMBLER_NAME	tree.h	1358;"	d
DECL_ASSEMBLER_NAME_SET_P	tree.h	1367;"	d
DECL_ATTRIBUTES	tree.h	1402;"	d
DECL_BIT_FIELD	tree.h	1642;"	d
DECL_BIT_FIELD_TYPE	tree.h	1412;"	d
DECL_BUILT_IN	tree.h	1655;"	d
DECL_BUILT_IN_CLASS	tree.h	1658;"	d
DECL_BUILT_IN_NONANSI	tree.h	1628;"	d
DECL_CHECK	tree.h	335;"	d
DECL_COMDAT	tree.h	1703;"	d
DECL_COMMON	tree.h	1563;"	d
DECL_CONTEXT	tree.h	1399;"	d
DECL_C_BIT_FIELD	c-common.h	776;"	d
DECL_C_HARD_REGISTER	c-common.h	785;"	d
DECL_DECLARED_INLINE_P	c-tree.h	106;"	d
DECL_DEFER_OUTPUT	tree.h	1668;"	d
DECL_DIE_TABLE_INCREMENT	dwarf2out.c	3329;"	d	file:
DECL_ERROR_ISSUED	tree.h	1591;"	d
DECL_EXTERNAL	tree.h	1571;"	d
DECL_FCONTEXT	tree.h	1519;"	d
DECL_FIELD_BIT_OFFSET	tree.h	1408;"	d
DECL_FIELD_CONTEXT	tree.h	1400;"	d
DECL_FIELD_OFFSET	tree.h	1405;"	d
DECL_FROM_INLINE	tree.h	1540;"	d
DECL_FUNCTION_CODE	tree.h	1505;"	d
DECL_IGNORED_P	tree.h	1545;"	d
DECL_INCOMING_RTL	tree.h	1498;"	d
DECL_INITIAL	tree.h	1431;"	d
DECL_INLINE	tree.h	1612;"	d
DECL_INLINED_FNS	tree.h	1623;"	d
DECL_IN_SYSTEM_HEADER	tree.h	1557;"	d
DECL_IN_TEXT_SECTION	tree.h	1652;"	d
DECL_IS_MALLOC	tree.h	1634;"	d
DECL_IS_PURE	tree.h	1638;"	d
DECL_LANG_FLAG_0	tree.h	1716;"	d
DECL_LANG_FLAG_1	tree.h	1717;"	d
DECL_LANG_FLAG_2	tree.h	1718;"	d
DECL_LANG_FLAG_3	tree.h	1719;"	d
DECL_LANG_FLAG_4	tree.h	1720;"	d
DECL_LANG_FLAG_5	tree.h	1721;"	d
DECL_LANG_FLAG_6	tree.h	1722;"	d
DECL_LANG_FLAG_7	tree.h	1723;"	d
DECL_LANG_SPECIFIC	tree.h	1566;"	d
DECL_LIVE_RANGE_RTL	tree.h	1494;"	d
DECL_MODE	tree.h	1468;"	d
DECL_NAME	tree.h	1353;"	d
DECL_NAME_FMT	dwarfout.c	1178;"	d	file:
DECL_NONADDRESSABLE_P	tree.h	1731;"	d
DECL_NONLOCAL	tree.h	1608;"	d
DECL_NON_ADDR_CONST_P	tree.h	1727;"	d
DECL_NO_INSTRUMENT_FUNCTION_ENTRY_EXIT	tree.h	1707;"	d
DECL_NO_LIMIT_STACK	tree.h	1712;"	d
DECL_NO_STATIC_CHAIN	tree.h	1598;"	d
DECL_NUM_STMTS	c-common.h	365;"	d
DECL_OFFSET_ALIGN	tree.h	1457;"	d
DECL_ONE_ONLY	tree.h	1692;"	d
DECL_ORIGIN	tree.h	1533;"	d
DECL_ORIGINAL_TYPE	tree.h	1423;"	d
DECL_P	tree.h	1349;"	d
DECL_PACKED	tree.h	1594;"	d
DECL_POINTER_ALIAS_SET	tree.h	1737;"	d
DECL_POINTER_ALIAS_SET_KNOWN_P	tree.h	1741;"	d
DECL_POINTER_DEPTH	tree.h	1752;"	d
DECL_QUALIFIER	tree.h	1437;"	d
DECL_READONLY_SECTION	output.h	471;"	d
DECL_REGISTER	tree.h	1587;"	d
DECL_RESULT	tree.h	1421;"	d
DECL_RESULT_FLD	tree.h	1419;"	d
DECL_RTL	tree.h	1477;"	d
DECL_RTL_IF_SET	tree.h	1490;"	d
DECL_RTL_SET_P	tree.h	1484;"	d
DECL_SAVED_INSNS	tree.h	1501;"	d
DECL_SAVED_TREE	tree.h	1620;"	d
DECL_SECTION_NAME	tree.h	1391;"	d
DECL_SIZE	tree.h	1446;"	d
DECL_SIZE_UNIT	tree.h	1448;"	d
DECL_SOURCE_FILE	tree.h	1442;"	d
DECL_SOURCE_LINE	tree.h	1443;"	d
DECL_STATIC_CONSTRUCTOR	tree.h	1678;"	d
DECL_STATIC_DESTRUCTOR	tree.h	1681;"	d
DECL_STMT_CHECK	tree-check.h	159;"	d
DECL_STMT_DECL	c-common.h	645;"	d
DECL_TOO_LATE	tree.h	1646;"	d
DECL_TRANSPARENT_UNION	tree.h	1673;"	d
DECL_UID	tree.h	1522;"	d
DECL_UNINLINABLE	tree.h	1615;"	d
DECL_USER_ALIGN	tree.h	1464;"	d
DECL_VINDEX	tree.h	1514;"	d
DECL_VIRTUAL_P	tree.h	1664;"	d
DECL_WEAK	tree.h	1688;"	d
DEFAULT	c-parse.c	26;"	d	file:
DEFAULT_ALIGNMENT	cpplex.c	1954;"	d	file:
DEFAULT_ALIGNMENT	obstack.c	61;"	d	file:
DEFAULT_ASSEMBLER_DIALECT	unix.h	25;"	d
DEFAULT_GDB_EXTENSIONS	defaults.h	409;"	d
DEFAULT_INIT_PRIORITY	tree.h	1575;"	d
DEFAULT_PCC_STRUCT_RETURN	linux.h	41;"	d
DEFAULT_PCC_STRUCT_RETURN	linux.h	42;"	d
DEFAULT_PCC_STRUCT_RETURN	toplev.c	460;"	d	file:
DEFAULT_ROUNDING	obstack.c	67;"	d	file:
DEFAULT_SIGNED_CHAR	i386.h	2310;"	d
DEFAULT_SIZE	hash.c	33;"	d	file:
DEFAULT_USE_CXA_ATEXIT	defaults.h	468;"	d
DEFINE_DIAGNOSTIC_KIND	diagnostic.h	36;"	d
DEFINE_DIAGNOSTIC_KIND	diagnostic.h	38;"	d
DEFINE_LANG_NAME	toplev.c	1333;"	d	file:
DEFPARAM	params.h	75;"	d
DEFPARAM	params.h	78;"	d
DEFPARAM	toplev.c	942;"	d	file:
DEFPARAM	toplev.c	945;"	d	file:
DEFS	c-parse.c	63;"	d	file:
DEFTIMEVAR	timevar.c	236;"	d	file:
DEFTIMEVAR	timevar.c	239;"	d	file:
DEFTIMEVAR	timevar.h	69;"	d
DEFTIMEVAR	timevar.h	77;"	d
DEFTREECODE	c-common.c	3711;"	d	file:
DEFTREECODE	c-common.c	3717;"	d	file:
DEFTREECODE	c-common.c	3723;"	d	file:
DEFTREECODE	c-common.c	3729;"	d	file:
DEFTREECODE	c-common.c	3733;"	d	file:
DEFTREECODE	c-common.c	3739;"	d	file:
DEFTREECODE	c-common.h	737;"	d
DEFTREECODE	c-common.h	745;"	d
DEFTREECODE	tree.c	65;"	d	file:
DEFTREECODE	tree.c	70;"	d	file:
DEFTREECODE	tree.c	76;"	d	file:
DEFTREECODE	tree.c	81;"	d	file:
DEFTREECODE	tree.c	85;"	d	file:
DEFTREECODE	tree.c	90;"	d	file:
DEFTREECODE	tree.h	27;"	d
DEFTREECODE	tree.h	36;"	d
DEF_ATTR_IDENT	c-common.c	4092;"	d	file:
DEF_ATTR_IDENT	c-common.c	4098;"	d	file:
DEF_ATTR_IDENT	c-common.c	4202;"	d	file:
DEF_ATTR_IDENT	c-common.c	4213;"	d	file:
DEF_ATTR_IDENT	c-common.c	4233;"	d	file:
DEF_ATTR_IDENT	c-common.c	4242;"	d	file:
DEF_ATTR_INT	c-common.c	4091;"	d	file:
DEF_ATTR_INT	c-common.c	4097;"	d	file:
DEF_ATTR_INT	c-common.c	4200;"	d	file:
DEF_ATTR_INT	c-common.c	4212;"	d	file:
DEF_ATTR_INT	c-common.c	4232;"	d	file:
DEF_ATTR_INT	c-common.c	4241;"	d	file:
DEF_ATTR_NULL_TREE	c-common.c	4090;"	d	file:
DEF_ATTR_NULL_TREE	c-common.c	4096;"	d	file:
DEF_ATTR_NULL_TREE	c-common.c	4198;"	d	file:
DEF_ATTR_NULL_TREE	c-common.c	4211;"	d	file:
DEF_ATTR_NULL_TREE	c-common.c	4231;"	d	file:
DEF_ATTR_NULL_TREE	c-common.c	4240;"	d	file:
DEF_ATTR_TREE_LIST	c-common.c	4093;"	d	file:
DEF_ATTR_TREE_LIST	c-common.c	4099;"	d	file:
DEF_ATTR_TREE_LIST	c-common.c	4204;"	d	file:
DEF_ATTR_TREE_LIST	c-common.c	4214;"	d	file:
DEF_ATTR_TREE_LIST	c-common.c	4234;"	d	file:
DEF_ATTR_TREE_LIST	c-common.c	4243;"	d	file:
DEF_BUILTIN	builtins.c	64;"	d	file:
DEF_BUILTIN	builtins.c	69;"	d	file:
DEF_BUILTIN	c-common.c	2803;"	d	file:
DEF_BUILTIN	c-common.c	2832;"	d	file:
DEF_BUILTIN	tree.h	83;"	d
DEF_BUILTIN	tree.h	91;"	d
DEF_FN_ATTR	c-common.c	4094;"	d	file:
DEF_FN_ATTR	c-common.c	4100;"	d	file:
DEF_FN_ATTR	c-common.c	4209;"	d	file:
DEF_FN_ATTR	c-common.c	4215;"	d	file:
DEF_FN_ATTR	c-common.c	4235;"	d	file:
DEF_FN_ATTR	c-common.c	4244;"	d	file:
DEF_FUNCTION_TYPE_0	c-common.c	2501;"	d	file:
DEF_FUNCTION_TYPE_0	c-common.c	2512;"	d	file:
DEF_FUNCTION_TYPE_0	c-common.c	2727;"	d	file:
DEF_FUNCTION_TYPE_1	c-common.c	2502;"	d	file:
DEF_FUNCTION_TYPE_1	c-common.c	2513;"	d	file:
DEF_FUNCTION_TYPE_1	c-common.c	2731;"	d	file:
DEF_FUNCTION_TYPE_1	c-common.c	2795;"	d	file:
DEF_FUNCTION_TYPE_2	c-common.c	2503;"	d	file:
DEF_FUNCTION_TYPE_2	c-common.c	2514;"	d	file:
DEF_FUNCTION_TYPE_2	c-common.c	2737;"	d	file:
DEF_FUNCTION_TYPE_2	c-common.c	2796;"	d	file:
DEF_FUNCTION_TYPE_3	c-common.c	2504;"	d	file:
DEF_FUNCTION_TYPE_3	c-common.c	2515;"	d	file:
DEF_FUNCTION_TYPE_3	c-common.c	2746;"	d	file:
DEF_FUNCTION_TYPE_3	c-common.c	2797;"	d	file:
DEF_FUNCTION_TYPE_4	c-common.c	2505;"	d	file:
DEF_FUNCTION_TYPE_4	c-common.c	2516;"	d	file:
DEF_FUNCTION_TYPE_4	c-common.c	2757;"	d	file:
DEF_FUNCTION_TYPE_4	c-common.c	2798;"	d	file:
DEF_FUNCTION_TYPE_VAR_0	c-common.c	2506;"	d	file:
DEF_FUNCTION_TYPE_VAR_0	c-common.c	2517;"	d	file:
DEF_FUNCTION_TYPE_VAR_0	c-common.c	2771;"	d	file:
DEF_FUNCTION_TYPE_VAR_0	c-common.c	2799;"	d	file:
DEF_FUNCTION_TYPE_VAR_1	c-common.c	2507;"	d	file:
DEF_FUNCTION_TYPE_VAR_1	c-common.c	2518;"	d	file:
DEF_FUNCTION_TYPE_VAR_1	c-common.c	2774;"	d	file:
DEF_FUNCTION_TYPE_VAR_1	c-common.c	2800;"	d	file:
DEF_FUNCTION_TYPE_VAR_2	c-common.c	2508;"	d	file:
DEF_FUNCTION_TYPE_VAR_2	c-common.c	2519;"	d	file:
DEF_FUNCTION_TYPE_VAR_2	c-common.c	2781;"	d	file:
DEF_MACHMODE	machmode.h	27;"	d
DEF_MACHMODE	machmode.h	33;"	d
DEF_MACHMODE	rtl.c	118;"	d	file:
DEF_MACHMODE	rtl.c	124;"	d	file:
DEF_MACHMODE	rtl.c	128;"	d	file:
DEF_MACHMODE	rtl.c	134;"	d	file:
DEF_MACHMODE	rtl.c	139;"	d	file:
DEF_MACHMODE	rtl.c	145;"	d	file:
DEF_MACHMODE	rtl.c	150;"	d	file:
DEF_MACHMODE	rtl.c	156;"	d	file:
DEF_MACHMODE	rtl.c	161;"	d	file:
DEF_MACHMODE	rtl.c	167;"	d	file:
DEF_MACHMODE	rtl.c	173;"	d	file:
DEF_MACHMODE	rtl.c	180;"	d	file:
DEF_MACHMODE	rtl.c	182;"	d	file:
DEF_MACHMODE	rtl.c	191;"	d	file:
DEF_MACHMODE	rtl.c	193;"	d	file:
DEF_OPT	cppinit.c	1261;"	d	file:
DEF_OPT	cppinit.c	1267;"	d	file:
DEF_OPT	cppinit.c	1277;"	d	file:
DEF_OPT	cppinit.c	1286;"	d	file:
DEF_POINTER_TYPE	c-common.c	2509;"	d	file:
DEF_POINTER_TYPE	c-common.c	2520;"	d	file:
DEF_POINTER_TYPE	c-common.c	2790;"	d	file:
DEF_POINTER_TYPE	c-common.c	2801;"	d	file:
DEF_PREDICTOR	predict.c	85;"	d	file:
DEF_PREDICTOR	predict.c	92;"	d	file:
DEF_PREDICTOR	predict.h	22;"	d
DEF_PREDICTOR	predict.h	30;"	d
DEF_PRIMITIVE_TYPE	c-common.c	2500;"	d	file:
DEF_PRIMITIVE_TYPE	c-common.c	2511;"	d	file:
DEF_PRIMITIVE_TYPE	c-common.c	2725;"	d	file:
DEF_PRIMITIVE_TYPE	c-common.c	2794;"	d	file:
DEF_RTL_EXPR	rtl.c	103;"	d	file:
DEF_RTL_EXPR	rtl.c	107;"	d	file:
DEF_RTL_EXPR	rtl.c	113;"	d	file:
DEF_RTL_EXPR	rtl.c	255;"	d	file:
DEF_RTL_EXPR	rtl.c	257;"	d	file:
DEF_RTL_EXPR	rtl.c	264;"	d	file:
DEF_RTL_EXPR	rtl.c	266;"	d	file:
DEF_RTL_EXPR	rtl.c	97;"	d	file:
DEF_RTL_EXPR	rtl.h	43;"	d
DEF_RTL_EXPR	rtl.h	45;"	d
DELETED_ENTRY	hashtab.c	58;"	d	file:
DEPRECATED_NORMAL	c-decl.c	/^  DEPRECATED_NORMAL,$/;"	e	enum:deprecated_states	file:
DEPRECATED_SUPPRESS	c-decl.c	/^  DEPRECATED_SUPPRESS$/;"	e	enum:deprecated_states	file:
DERIV_BEGIN_LABEL_FMT	dwarfout.c	1154;"	d	file:
DERIV_END_LABEL_FMT	dwarfout.c	1157;"	d	file:
DEST_ADDR	loop.h	/^  DEST_ADDR,$/;"	e	enum:g_types
DEST_REG	loop.h	/^  DEST_REG$/;"	e	enum:g_types
DFI_MAX	toplev.c	/^  DFI_MAX$/;"	e	enum:dump_file_index	file:
DFI_addressof	toplev.c	/^  DFI_addressof,$/;"	e	enum:dump_file_index	file:
DFI_bbro	toplev.c	/^  DFI_bbro,$/;"	e	enum:dump_file_index	file:
DFI_bp	toplev.c	/^  DFI_bp,$/;"	e	enum:dump_file_index	file:
DFI_ce	toplev.c	/^  DFI_ce,$/;"	e	enum:dump_file_index	file:
DFI_ce2	toplev.c	/^  DFI_ce2,$/;"	e	enum:dump_file_index	file:
DFI_cfg	toplev.c	/^  DFI_cfg,$/;"	e	enum:dump_file_index	file:
DFI_combine	toplev.c	/^  DFI_combine,$/;"	e	enum:dump_file_index	file:
DFI_cse	toplev.c	/^  DFI_cse,$/;"	e	enum:dump_file_index	file:
DFI_cse2	toplev.c	/^  DFI_cse2,$/;"	e	enum:dump_file_index	file:
DFI_dbr	toplev.c	/^  DFI_dbr,$/;"	e	enum:dump_file_index	file:
DFI_eh	toplev.c	/^  DFI_eh,$/;"	e	enum:dump_file_index	file:
DFI_flow2	toplev.c	/^  DFI_flow2,$/;"	e	enum:dump_file_index	file:
DFI_gcse	toplev.c	/^  DFI_gcse,$/;"	e	enum:dump_file_index	file:
DFI_greg	toplev.c	/^  DFI_greg,$/;"	e	enum:dump_file_index	file:
DFI_jump	toplev.c	/^  DFI_jump,$/;"	e	enum:dump_file_index	file:
DFI_life	toplev.c	/^  DFI_life,$/;"	e	enum:dump_file_index	file:
DFI_loop	toplev.c	/^  DFI_loop,$/;"	e	enum:dump_file_index	file:
DFI_lreg	toplev.c	/^  DFI_lreg,$/;"	e	enum:dump_file_index	file:
DFI_mach	toplev.c	/^  DFI_mach,$/;"	e	enum:dump_file_index	file:
DFI_peephole2	toplev.c	/^  DFI_peephole2,$/;"	e	enum:dump_file_index	file:
DFI_postreload	toplev.c	/^  DFI_postreload,$/;"	e	enum:dump_file_index	file:
DFI_regmove	toplev.c	/^  DFI_regmove,$/;"	e	enum:dump_file_index	file:
DFI_rnreg	toplev.c	/^  DFI_rnreg,$/;"	e	enum:dump_file_index	file:
DFI_rtl	toplev.c	/^  DFI_rtl,$/;"	e	enum:dump_file_index	file:
DFI_sched	toplev.c	/^  DFI_sched,$/;"	e	enum:dump_file_index	file:
DFI_sched2	toplev.c	/^  DFI_sched2,$/;"	e	enum:dump_file_index	file:
DFI_sibling	toplev.c	/^  DFI_sibling,$/;"	e	enum:dump_file_index	file:
DFI_ssa	toplev.c	/^  DFI_ssa,$/;"	e	enum:dump_file_index	file:
DFI_ssa_ccp	toplev.c	/^  DFI_ssa_ccp,$/;"	e	enum:dump_file_index	file:
DFI_ssa_dce	toplev.c	/^  DFI_ssa_dce,$/;"	e	enum:dump_file_index	file:
DFI_stack	toplev.c	/^  DFI_stack,$/;"	e	enum:dump_file_index	file:
DFI_ussa	toplev.c	/^  DFI_ussa,$/;"	e	enum:dump_file_index	file:
DF_ALL	df.h	31;"	d
DF_BB_INFO	df.h	161;"	d
DF_DU_CHAIN	df.h	26;"	d
DF_EQUIV_NOTES	df.h	33;"	d
DF_HARD_REGS	df.h	32;"	d
DF_INSN_DEFS	df.h	214;"	d
DF_INSN_LUID	df.h	213;"	d
DF_INSN_USES	df.h	215;"	d
DF_LR	df.h	25;"	d
DF_RD	df.h	23;"	d
DF_RD_CHAIN	df.h	29;"	d
DF_REF_BB	df.h	177;"	d
DF_REF_BBNO	df.h	178;"	d
DF_REF_CHAIN	df.h	182;"	d
DF_REF_FLAGS	df.h	184;"	d
DF_REF_ID	df.h	183;"	d
DF_REF_INSN	df.h	179;"	d
DF_REF_INSN_UID	df.h	180;"	d
DF_REF_LOC	df.h	172;"	d
DF_REF_LOC	df.h	175;"	d
DF_REF_READ_WRITE	df.h	/^    DF_REF_READ_WRITE = 1$/;"	e	enum:df_ref_flags
DF_REF_REAL_LOC	df.h	168;"	d
DF_REF_REAL_REG	df.h	165;"	d
DF_REF_REG	df.h	171;"	d
DF_REF_REG	df.h	174;"	d
DF_REF_REGNO	df.h	167;"	d
DF_REF_REG_DEF	df.h	/^enum df_ref_type {DF_REF_REG_DEF, DF_REF_REG_USE, DF_REF_REG_MEM_LOAD,$/;"	e	enum:df_ref_type
DF_REF_REG_DEF_P	df.h	188;"	d
DF_REF_REG_MEM_LOAD	df.h	/^enum df_ref_type {DF_REF_REG_DEF, DF_REF_REG_USE, DF_REF_REG_MEM_LOAD,$/;"	e	enum:df_ref_type
DF_REF_REG_MEM_LOAD_P	df.h	191;"	d
DF_REF_REG_MEM_P	df.h	192;"	d
DF_REF_REG_MEM_STORE	df.h	/^		  DF_REF_REG_MEM_STORE};$/;"	e	enum:df_ref_type
DF_REF_REG_MEM_STORE_P	df.h	190;"	d
DF_REF_REG_USE	df.h	/^enum df_ref_type {DF_REF_REG_DEF, DF_REF_REG_USE, DF_REF_REG_MEM_LOAD,$/;"	e	enum:df_ref_type
DF_REF_REG_USE_P	df.h	189;"	d
DF_REF_TYPE	df.h	181;"	d
DF_REF_TYPE_NAMES	df.h	38;"	d
DF_REGNO_FIRST_BB	df.h	203;"	d
DF_REGNO_FIRST_DEF	df.h	198;"	d
DF_REGNO_LAST_BB	df.h	206;"	d
DF_REGNO_LAST_USE	df.h	200;"	d
DF_REG_INFO	df.h	28;"	d
DF_RU	df.h	24;"	d
DF_RU_CHAIN	df.h	30;"	d
DF_UD_CHAIN	df.h	27;"	d
DFbignan	real.c	/^static const UEMUSHORT DFbignan[4] = {0x7fff, 0xffff, 0xffff, 0xffff};$/;"	v	file:
DFlittlenan	real.c	/^static const UEMUSHORT DFlittlenan[4] = {0, 0, 0, 0xfff8};$/;"	v	file:
DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE	diagnostic.h	/^  DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE = 0x2$/;"	e	enum:__anon11
DIAGNOSTICS_SHOW_PREFIX_NEVER	diagnostic.h	/^  DIAGNOSTICS_SHOW_PREFIX_NEVER      = 0x1,$/;"	e	enum:__anon11
DIAGNOSTICS_SHOW_PREFIX_ONCE	diagnostic.h	/^  DIAGNOSTICS_SHOW_PREFIX_ONCE       = 0x0,$/;"	e	enum:__anon11
DIE_BEGIN_LABEL_FMT	dwarfout.c	1109;"	d	file:
DIE_END_LABEL_FMT	dwarfout.c	1112;"	d	file:
DIE_LABEL_PREFIX	dwarf2out.c	339;"	d	file:
DIFFERENT_ALIAS_SETS_P	alias.c	122;"	d	file:
DIGRAPH	cpplib.h	164;"	d
DINFO_LEVEL_NONE	flags.h	/^  DINFO_LEVEL_NONE,	\/* Write no debugging info.  *\/$/;"	e	enum:debug_info_level
DINFO_LEVEL_NORMAL	flags.h	/^  DINFO_LEVEL_NORMAL,	\/* Write info for all declarations (and line table).  *\/$/;"	e	enum:debug_info_level
DINFO_LEVEL_TERSE	flags.h	/^  DINFO_LEVEL_TERSE,	\/* Write minimal info to support tracebacks only.  *\/$/;"	e	enum:debug_info_level
DINFO_LEVEL_VERBOSE	flags.h	/^  DINFO_LEVEL_VERBOSE	\/* Write normal info plus #define\/#undef info.  *\/$/;"	e	enum:debug_info_level
DIRECTIVE_TABLE	cpplib.c	/^  DIRECTIVE_TABLE$/;"	e	enum:__anon48	file:
DIRECTIVE_TABLE	cpplib.c	142;"	d	file:
DIRECTIVE_TABLE	cpplib.c	195;"	d	file:
DIREG	i386.h	/^  AREG, DREG, CREG, BREG, SIREG, DIREG,$/;"	e	enum:reg_class
DIRFLAG_REG	i386.h	1102;"	d
DIR_SEPARATOR	lbasename.c	45;"	d	file:
DIR_SEPARATOR	system.h	468;"	d
DIR_SEPARATOR_2	lbasename.c	52;"	d	file:
DK_LAST_DIAGNOSTIC_KIND	diagnostic.h	/^  DK_LAST_DIAGNOSTIC_KIND$/;"	e	enum:__anon10
DO	c-parse.c	22;"	d	file:
DOIT	bitmap.c	530;"	d	file:
DOIT	bitmap.c	659;"	d	file:
DOLLAR	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
DOLLARS_IN_IDENTIFIERS	c-decl.c	444;"	d	file:
DOMAIN	real.c	1532;"	d	file:
DONE	insn-emit.c	23;"	d	file:
DONE_PRIORITY	haifa-sched.c	195;"	d	file:
DONE_PRIORITY_P	haifa-sched.c	199;"	d	file:
DONT_DECLARE_STRERROR	xstrerror.c	25;"	d	file:
DOUBLE_TYPE_SIZE	defaults.h	322;"	d
DOUBLE_TYPE_SIZE	i386.h	695;"	d
DO_BODY	c-common.h	589;"	d
DO_COND	c-common.h	588;"	d
DO_NOT_REREAD	cppfiles.c	110;"	d	file:
DO_STMT_CHECK	tree-check.h	163;"	d
DREG	i386.h	/^  AREG, DREG, CREG, BREG, SIREG, DIREG,$/;"	e	enum:reg_class
DSC	cpphash.h	420;"	d
DST_BLOCK_BEGIN	vmsdbg.h	/^} DST_BLOCK_BEGIN;$/;"	t	typeref:struct:_DST_BLOCK_BEGIN
DST_BLOCK_END	vmsdbg.h	/^} DST_BLOCK_END;$/;"	t	typeref:struct:_DST_BLOCK_END
DST_DTYPE	vmsdbg.h	/^			DST_K_RTNEND = 191} DST_DTYPE;$/;"	t	typeref:enum:_DST_TYPE
DST_HEADER	vmsdbg.h	/^} DST_HEADER;$/;"	t	typeref:struct:_DST_HEADER
DST_K_ADA	vmsdbg.h	/^typedef enum _DST_LANGUAGE {DST_K_FORTRAN = 1, DST_K_C = 7, DST_K_ADA = 9,$/;"	e	enum:_DST_LANGUAGE
DST_K_BLKBEG	vmsdbg.h	/^			DST_K_BLKBEG = 176, DST_K_BLKEND = 177,$/;"	e	enum:_DST_TYPE
DST_K_BLKBEG_SIZE	vmsdbg.h	134;"	d
DST_K_BLKEND	vmsdbg.h	/^			DST_K_BLKBEG = 176, DST_K_BLKEND = 177,$/;"	e	enum:_DST_TYPE
DST_K_BLKEND_SIZE	vmsdbg.h	144;"	d
DST_K_C	vmsdbg.h	/^typedef enum _DST_LANGUAGE {DST_K_FORTRAN = 1, DST_K_C = 7, DST_K_ADA = 9,$/;"	e	enum:_DST_LANGUAGE
DST_K_CXX	vmsdbg.h	/^			    DST_K_UNKNOWN = 10, DST_K_CXX = 15} DST_LANGUAGE;$/;"	e	enum:_DST_LANGUAGE
DST_K_DELTA_PC_HIGH	vmsdbg.h	173;"	d
DST_K_DELTA_PC_L	vmsdbg.h	179;"	d
DST_K_DELTA_PC_LOW	vmsdbg.h	172;"	d
DST_K_DELTA_PC_W	vmsdbg.h	174;"	d
DST_K_DST_HEADER_SIZE	vmsdbg.h	53;"	d
DST_K_FORTRAN	vmsdbg.h	/^typedef enum _DST_LANGUAGE {DST_K_FORTRAN = 1, DST_K_C = 7, DST_K_ADA = 9,$/;"	e	enum:_DST_LANGUAGE
DST_K_INCR_LINUM	vmsdbg.h	175;"	d
DST_K_INCR_LINUM_L	vmsdbg.h	180;"	d
DST_K_INCR_LINUM_W	vmsdbg.h	176;"	d
DST_K_LINE_NUM	vmsdbg.h	/^			DST_K_LINE_NUM = 185, DST_K_MODBEG = 188,$/;"	e	enum:_DST_TYPE
DST_K_LINE_NUM_HEADER_SIZE	vmsdbg.h	152;"	d
DST_K_MB_TRLR_SIZE	vmsdbg.h	85;"	d
DST_K_MODBEG	vmsdbg.h	/^			DST_K_LINE_NUM = 185, DST_K_MODBEG = 188,$/;"	e	enum:_DST_TYPE
DST_K_MODBEG_SIZE	vmsdbg.h	76;"	d
DST_K_MODEND	vmsdbg.h	/^			DST_K_MODEND = 189, DST_K_RTNBEG = 190,$/;"	e	enum:_DST_TYPE
DST_K_MODEND_SIZE	vmsdbg.h	94;"	d
DST_K_PCLINE_COMMANDS_SIZE	vmsdbg.h	169;"	d
DST_K_PCLINE_COMMANDS_SIZE_MAX	vmsdbg.h	171;"	d
DST_K_PCLINE_COMMANDS_SIZE_MIN	vmsdbg.h	170;"	d
DST_K_PROLOG	vmsdbg.h	/^typedef enum _DST_TYPE {DST_K_SOURCE = 155, DST_K_PROLOG = 162,$/;"	e	enum:_DST_TYPE
DST_K_PROLOG_SIZE	vmsdbg.h	253;"	d
DST_K_RTNBEG	vmsdbg.h	/^			DST_K_MODEND = 189, DST_K_RTNBEG = 190,$/;"	e	enum:_DST_TYPE
DST_K_RTNBEG_SIZE	vmsdbg.h	113;"	d
DST_K_RTNEND	vmsdbg.h	/^			DST_K_RTNEND = 191} DST_DTYPE;$/;"	e	enum:_DST_TYPE
DST_K_RTNEND_SIZE	vmsdbg.h	123;"	d
DST_K_SET_ABS_PC	vmsdbg.h	178;"	d
DST_K_SET_LINUM	vmsdbg.h	177;"	d
DST_K_SET_LINUM_B	vmsdbg.h	181;"	d
DST_K_SET_LINUM_L	vmsdbg.h	182;"	d
DST_K_SOURCE	vmsdbg.h	/^typedef enum _DST_TYPE {DST_K_SOURCE = 155, DST_K_PROLOG = 162,$/;"	e	enum:_DST_TYPE
DST_K_SOURCE_CORR_HEADER_SIZE	vmsdbg.h	190;"	d
DST_K_SRC_CMDTRLR_SIZE	vmsdbg.h	244;"	d
DST_K_SRC_COMMAND_SIZE	vmsdbg.h	236;"	d
DST_K_SRC_DECLFILE	vmsdbg.h	194;"	d
DST_K_SRC_DEFLINES_B	vmsdbg.h	202;"	d
DST_K_SRC_DEFLINES_W	vmsdbg.h	201;"	d
DST_K_SRC_FORMFEED	vmsdbg.h	203;"	d
DST_K_SRC_INCRLNUM_B	vmsdbg.h	200;"	d
DST_K_SRC_MAX_CMD	vmsdbg.h	205;"	d
DST_K_SRC_MIN_CMD	vmsdbg.h	204;"	d
DST_K_SRC_SETFILE	vmsdbg.h	195;"	d
DST_K_SRC_SETLNUM_L	vmsdbg.h	198;"	d
DST_K_SRC_SETLNUM_W	vmsdbg.h	199;"	d
DST_K_SRC_SETREC_L	vmsdbg.h	196;"	d
DST_K_SRC_SETREC_W	vmsdbg.h	197;"	d
DST_K_UNKNOWN	vmsdbg.h	/^			    DST_K_UNKNOWN = 10, DST_K_CXX = 15} DST_LANGUAGE;$/;"	e	enum:_DST_LANGUAGE
DST_K_VERSION_MAJOR	vmsdbg.h	87;"	d
DST_K_VERSION_MINOR	vmsdbg.h	88;"	d
DST_LANGUAGE	vmsdbg.h	/^			    DST_K_UNKNOWN = 10, DST_K_CXX = 15} DST_LANGUAGE;$/;"	t	typeref:enum:_DST_LANGUAGE
DST_LINE_NUM_HEADER	vmsdbg.h	/^} DST_LINE_NUM_HEADER;$/;"	t	typeref:struct:_DST_LINE_NUM_HEADER
DST_MB_TRLR	vmsdbg.h	/^} DST_MB_TRLR;$/;"	t	typeref:struct:_DST_MB_TRLR
DST_MODULE_BEGIN	vmsdbg.h	/^} DST_MODULE_BEGIN;$/;"	t	typeref:struct:_DST_MODULE_BEGIN
DST_MODULE_END	vmsdbg.h	/^} DST_MODULE_END;$/;"	t	typeref:struct:_DST_MODULE_END
DST_PCLINE_COMMANDS	vmsdbg.h	/^} DST_PCLINE_COMMANDS;$/;"	t	typeref:struct:_DST_PCLINE_COMMANDS
DST_PROLOG	vmsdbg.h	/^} DST_PROLOG;$/;"	t	typeref:struct:_DST_PROLOG
DST_ROUTINE_BEGIN	vmsdbg.h	/^} DST_ROUTINE_BEGIN;$/;"	t	typeref:struct:_DST_ROUTINE_BEGIN
DST_ROUTINE_END	vmsdbg.h	/^} DST_ROUTINE_END;$/;"	t	typeref:struct:_DST_ROUTINE_END
DST_SOURCE_CORR	vmsdbg.h	/^} DST_SOURCE_CORR;$/;"	t	typeref:struct:_DST_SOURCE_CORR
DST_SRC_CMDTRLR	vmsdbg.h	/^} DST_SRC_CMDTRLR;$/;"	t	typeref:struct:_DST_SRC_CMDTRLR
DST_SRC_COMMAND	vmsdbg.h	/^} DST_SRC_COMMAND;$/;"	t	typeref:struct:_DST_SRC_COMMAND
DT_ARY	gsyms.h	/^  DT_ARY = 3$/;"	e	enum:sdb_type_class
DT_FCN	gsyms.h	/^  DT_FCN = 2,$/;"	e	enum:sdb_type_class
DT_NON	gsyms.h	/^  DT_NON = 0,$/;"	e	enum:sdb_type_class
DT_PTR	gsyms.h	/^  DT_PTR = 1,$/;"	e	enum:sdb_type_class
DUMPFILE_FORMAT	toplev.c	175;"	d	file:
DUMP_BINFO	tree-dump.h	27;"	d
DUMP_NONE	tree-dump.h	26;"	d
DWARF2_ADDR_SIZE	dwarf2out.c	210;"	d	file:
DWARF2_ASM_LINE_DEBUG_INFO	dwarf2out.c	3264;"	d	file:
DWARF2_ASM_LINE_DEBUG_INFO	dwarf2out.c	3266;"	d	file:
DWARF2_DEBUG	flags.h	/^  DWARF2_DEBUG,	    \/* Write Dwarf v2 debug info (using dwarf2out.c).  *\/$/;"	e	enum:debug_info_type
DWARF2_DEBUGGING_INFO	elfos.h	70;"	d
DWARF2_DEBUGGING_INFO	x86-64.h	88;"	d
DWARF2_DEBUGGING_INFO	x86-64.h	90;"	d
DWARF2_GENERATE_TEXT_SECTION_LABEL	defaults.h	258;"	d
DWARF2_UNWIND_INFO	defaults.h	209;"	d
DWARF2_UNWIND_INFO	x86-64.h	91;"	d
DWARF_ARANGES_HEADER_SIZE	dwarf2out.c	3251;"	d	file:
DWARF_ARANGES_PAD_SIZE	dwarf2out.c	3257;"	d	file:
DWARF_CIE_DATA_ALIGNMENT	dwarf2out.c	231;"	d	file:
DWARF_CIE_DATA_ALIGNMENT	dwarf2out.c	233;"	d	file:
DWARF_COMPILE_UNIT_HEADER_SIZE	dwarf2out.c	3242;"	d	file:
DWARF_DEBUG	flags.h	/^  DWARF_DEBUG,	    \/* Write Dwarf debug info (using dwarfout.c).  *\/$/;"	e	enum:debug_info_type
DWARF_DEBUGGING_INFO	elfos.h	64;"	d
DWARF_DEBUGGING_INFO	x86-64.h	89;"	d
DWARF_FRAME_REGISTERS	defaults.h	270;"	d
DWARF_FRAME_REGISTERS	i386.h	882;"	d
DWARF_FRAME_REGNUM	dwarf2out.c	373;"	d	file:
DWARF_FRAME_RETURN_COLUMN	dwarf2out.c	364;"	d	file:
DWARF_FRAME_RETURN_COLUMN	dwarf2out.c	366;"	d	file:
DWARF_FRAME_RETURN_COLUMN	i386.h	2833;"	d
DWARF_LINE_BASE	dwarf2out.c	3272;"	d	file:
DWARF_LINE_DEFAULT_IS_STMT_START	dwarf2out.c	3284;"	d	file:
DWARF_LINE_OPCODE_BASE	dwarf2out.c	3275;"	d	file:
DWARF_LINE_PROLOG_HEADER_SIZE	dwarf2out.c	3245;"	d	file:
DWARF_LINE_RANGE	dwarf2out.c	3278;"	d	file:
DWARF_OFFSET_SIZE	dwarf2out.c	219;"	d	file:
DWARF_PUBNAMES_HEADER_SIZE	dwarf2out.c	3248;"	d	file:
DWARF_ROUND	dwarf2out.c	225;"	d	file:
DWARF_VERSION	dwarf2out.c	222;"	d	file:
DW_ACCESS_private	dwarf2.h	/^    DW_ACCESS_private = 3$/;"	e	enum:dwarf_access_attribute
DW_ACCESS_protected	dwarf2.h	/^    DW_ACCESS_protected = 2,$/;"	e	enum:dwarf_access_attribute
DW_ACCESS_public	dwarf2.h	/^    DW_ACCESS_public = 1,$/;"	e	enum:dwarf_access_attribute
DW_ADDR_none	dwarf2.h	569;"	d
DW_ATE_address	dwarf2.h	/^    DW_ATE_address = 0x1,$/;"	e	enum:dwarf_type
DW_ATE_boolean	dwarf2.h	/^    DW_ATE_boolean = 0x2,$/;"	e	enum:dwarf_type
DW_ATE_complex_float	dwarf2.h	/^    DW_ATE_complex_float = 0x3,$/;"	e	enum:dwarf_type
DW_ATE_float	dwarf2.h	/^    DW_ATE_float = 0x4,$/;"	e	enum:dwarf_type
DW_ATE_hi_user	dwarf2.h	425;"	d
DW_ATE_imaginary_float	dwarf2.h	/^    DW_ATE_imaginary_float = 0x9$/;"	e	enum:dwarf_type
DW_ATE_lo_user	dwarf2.h	424;"	d
DW_ATE_signed	dwarf2.h	/^    DW_ATE_signed = 0x5,$/;"	e	enum:dwarf_type
DW_ATE_signed_char	dwarf2.h	/^    DW_ATE_signed_char = 0x6,$/;"	e	enum:dwarf_type
DW_ATE_unsigned	dwarf2.h	/^    DW_ATE_unsigned = 0x7,$/;"	e	enum:dwarf_type
DW_ATE_unsigned_char	dwarf2.h	/^    DW_ATE_unsigned_char = 0x8,$/;"	e	enum:dwarf_type
DW_ATE_void	dwarf2.h	/^    DW_ATE_void = 0x0,$/;"	e	enum:dwarf_type
DW_AT_GNU_vector	dwarf2.h	/^    DW_AT_GNU_vector = 0x2107,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_abstract_name	dwarf2.h	/^    DW_AT_MIPS_abstract_name = 0x2009,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_clone_origin	dwarf2.h	/^    DW_AT_MIPS_clone_origin = 0x200a,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_epilog_begin	dwarf2.h	/^    DW_AT_MIPS_epilog_begin = 0x2004,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_fde	dwarf2.h	/^    DW_AT_MIPS_fde = 0x2001,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_has_inlines	dwarf2.h	/^    DW_AT_MIPS_has_inlines = 0x200b,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_linkage_name	dwarf2.h	/^    DW_AT_MIPS_linkage_name = 0x2007,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_loop_begin	dwarf2.h	/^    DW_AT_MIPS_loop_begin = 0x2002,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_loop_unroll_factor	dwarf2.h	/^    DW_AT_MIPS_loop_unroll_factor = 0x2005,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_software_pipeline_depth	dwarf2.h	/^    DW_AT_MIPS_software_pipeline_depth = 0x2006,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_stride	dwarf2.h	/^    DW_AT_MIPS_stride = 0x2008,$/;"	e	enum:dwarf_attribute
DW_AT_MIPS_tail_loop_begin	dwarf2.h	/^    DW_AT_MIPS_tail_loop_begin = 0x2003,$/;"	e	enum:dwarf_attribute
DW_AT_VMS_rtnbeg_pd_address	dwarf2.h	/^    DW_AT_VMS_rtnbeg_pd_address = 0x2201$/;"	e	enum:dwarf_attribute
DW_AT_abstract_origin	dwarf2.h	/^    DW_AT_abstract_origin = 0x31,$/;"	e	enum:dwarf_attribute
DW_AT_accessibility	dwarf2.h	/^    DW_AT_accessibility = 0x32,$/;"	e	enum:dwarf_attribute
DW_AT_address_class	dwarf2.h	/^    DW_AT_address_class = 0x33,$/;"	e	enum:dwarf_attribute
DW_AT_allocated	dwarf2.h	/^    DW_AT_allocated     = 0x4e,$/;"	e	enum:dwarf_attribute
DW_AT_artificial	dwarf2.h	/^    DW_AT_artificial = 0x34,$/;"	e	enum:dwarf_attribute
DW_AT_associated	dwarf2.h	/^    DW_AT_associated    = 0x4f,$/;"	e	enum:dwarf_attribute
DW_AT_base_types	dwarf2.h	/^    DW_AT_base_types = 0x35,$/;"	e	enum:dwarf_attribute
DW_AT_bit_offset	dwarf2.h	/^    DW_AT_bit_offset = 0x0c,$/;"	e	enum:dwarf_attribute
DW_AT_bit_size	dwarf2.h	/^    DW_AT_bit_size = 0x0d,$/;"	e	enum:dwarf_attribute
DW_AT_body_begin	dwarf2.h	/^    DW_AT_body_begin = 0x2105,$/;"	e	enum:dwarf_attribute
DW_AT_body_end	dwarf2.h	/^    DW_AT_body_end   = 0x2106,$/;"	e	enum:dwarf_attribute
DW_AT_byte_size	dwarf2.h	/^    DW_AT_byte_size = 0x0b,$/;"	e	enum:dwarf_attribute
DW_AT_call_column	dwarf2.h	/^    DW_AT_call_column   = 0x57,$/;"	e	enum:dwarf_attribute
DW_AT_call_file	dwarf2.h	/^    DW_AT_call_file     = 0x58,$/;"	e	enum:dwarf_attribute
DW_AT_call_line	dwarf2.h	/^    DW_AT_call_line     = 0x59,$/;"	e	enum:dwarf_attribute
DW_AT_calling_convention	dwarf2.h	/^    DW_AT_calling_convention = 0x36,$/;"	e	enum:dwarf_attribute
DW_AT_common_reference	dwarf2.h	/^    DW_AT_common_reference = 0x1a,$/;"	e	enum:dwarf_attribute
DW_AT_comp_dir	dwarf2.h	/^    DW_AT_comp_dir = 0x1b,$/;"	e	enum:dwarf_attribute
DW_AT_const_value	dwarf2.h	/^    DW_AT_const_value = 0x1c,$/;"	e	enum:dwarf_attribute
DW_AT_containing_type	dwarf2.h	/^    DW_AT_containing_type = 0x1d,$/;"	e	enum:dwarf_attribute
DW_AT_count	dwarf2.h	/^    DW_AT_count = 0x37,$/;"	e	enum:dwarf_attribute
DW_AT_data_location	dwarf2.h	/^    DW_AT_data_location = 0x50,$/;"	e	enum:dwarf_attribute
DW_AT_data_member_location	dwarf2.h	/^    DW_AT_data_member_location = 0x38,$/;"	e	enum:dwarf_attribute
DW_AT_decl_column	dwarf2.h	/^    DW_AT_decl_column = 0x39,$/;"	e	enum:dwarf_attribute
DW_AT_decl_file	dwarf2.h	/^    DW_AT_decl_file = 0x3a,$/;"	e	enum:dwarf_attribute
DW_AT_decl_line	dwarf2.h	/^    DW_AT_decl_line = 0x3b,$/;"	e	enum:dwarf_attribute
DW_AT_declaration	dwarf2.h	/^    DW_AT_declaration = 0x3c,$/;"	e	enum:dwarf_attribute
DW_AT_default_value	dwarf2.h	/^    DW_AT_default_value = 0x1e,$/;"	e	enum:dwarf_attribute
DW_AT_discr	dwarf2.h	/^    DW_AT_discr = 0x15,$/;"	e	enum:dwarf_attribute
DW_AT_discr_list	dwarf2.h	/^    DW_AT_discr_list = 0x3d,$/;"	e	enum:dwarf_attribute
DW_AT_discr_value	dwarf2.h	/^    DW_AT_discr_value = 0x16,$/;"	e	enum:dwarf_attribute
DW_AT_element_list	dwarf2.h	/^    DW_AT_element_list = 0x0f,$/;"	e	enum:dwarf_attribute
DW_AT_encoding	dwarf2.h	/^    DW_AT_encoding = 0x3e,$/;"	e	enum:dwarf_attribute
DW_AT_entry_pc	dwarf2.h	/^    DW_AT_entry_pc      = 0x52,$/;"	e	enum:dwarf_attribute
DW_AT_extension	dwarf2.h	/^    DW_AT_extension     = 0x54,$/;"	e	enum:dwarf_attribute
DW_AT_external	dwarf2.h	/^    DW_AT_external = 0x3f,$/;"	e	enum:dwarf_attribute
DW_AT_frame_base	dwarf2.h	/^    DW_AT_frame_base = 0x40,$/;"	e	enum:dwarf_attribute
DW_AT_friend	dwarf2.h	/^    DW_AT_friend = 0x41,$/;"	e	enum:dwarf_attribute
DW_AT_hi_user	dwarf2.h	248;"	d
DW_AT_high_pc	dwarf2.h	/^    DW_AT_high_pc = 0x12,$/;"	e	enum:dwarf_attribute
DW_AT_identifier_case	dwarf2.h	/^    DW_AT_identifier_case = 0x42,$/;"	e	enum:dwarf_attribute
DW_AT_import	dwarf2.h	/^    DW_AT_import = 0x18,$/;"	e	enum:dwarf_attribute
DW_AT_inline	dwarf2.h	/^    DW_AT_inline = 0x20,$/;"	e	enum:dwarf_attribute
DW_AT_is_optional	dwarf2.h	/^    DW_AT_is_optional = 0x21,$/;"	e	enum:dwarf_attribute
DW_AT_language	dwarf2.h	/^    DW_AT_language = 0x13,$/;"	e	enum:dwarf_attribute
DW_AT_lo_user	dwarf2.h	247;"	d
DW_AT_location	dwarf2.h	/^    DW_AT_location = 0x02,$/;"	e	enum:dwarf_attribute
DW_AT_low_pc	dwarf2.h	/^    DW_AT_low_pc = 0x11,$/;"	e	enum:dwarf_attribute
DW_AT_lower_bound	dwarf2.h	/^    DW_AT_lower_bound = 0x22,$/;"	e	enum:dwarf_attribute
DW_AT_mac_info	dwarf2.h	/^    DW_AT_mac_info   = 0x2103,$/;"	e	enum:dwarf_attribute
DW_AT_macro_info	dwarf2.h	/^    DW_AT_macro_info = 0x43,$/;"	e	enum:dwarf_attribute
DW_AT_member	dwarf2.h	/^    DW_AT_member = 0x14,$/;"	e	enum:dwarf_attribute
DW_AT_name	dwarf2.h	/^    DW_AT_name = 0x03,$/;"	e	enum:dwarf_attribute
DW_AT_namelist_items	dwarf2.h	/^    DW_AT_namelist_items = 0x44,$/;"	e	enum:dwarf_attribute
DW_AT_ordering	dwarf2.h	/^    DW_AT_ordering = 0x09,$/;"	e	enum:dwarf_attribute
DW_AT_priority	dwarf2.h	/^    DW_AT_priority = 0x45,$/;"	e	enum:dwarf_attribute
DW_AT_producer	dwarf2.h	/^    DW_AT_producer = 0x25,$/;"	e	enum:dwarf_attribute
DW_AT_prototyped	dwarf2.h	/^    DW_AT_prototyped = 0x27,$/;"	e	enum:dwarf_attribute
DW_AT_ranges	dwarf2.h	/^    DW_AT_ranges        = 0x55,$/;"	e	enum:dwarf_attribute
DW_AT_return_addr	dwarf2.h	/^    DW_AT_return_addr = 0x2a,$/;"	e	enum:dwarf_attribute
DW_AT_segment	dwarf2.h	/^    DW_AT_segment = 0x46,$/;"	e	enum:dwarf_attribute
DW_AT_sf_names	dwarf2.h	/^    DW_AT_sf_names   = 0x2101,$/;"	e	enum:dwarf_attribute
DW_AT_sibling	dwarf2.h	/^    DW_AT_sibling = 0x01,$/;"	e	enum:dwarf_attribute
DW_AT_specification	dwarf2.h	/^    DW_AT_specification = 0x47,$/;"	e	enum:dwarf_attribute
DW_AT_src_coords	dwarf2.h	/^    DW_AT_src_coords = 0x2104,$/;"	e	enum:dwarf_attribute
DW_AT_src_info	dwarf2.h	/^    DW_AT_src_info   = 0x2102,$/;"	e	enum:dwarf_attribute
DW_AT_start_scope	dwarf2.h	/^    DW_AT_start_scope = 0x2c,$/;"	e	enum:dwarf_attribute
DW_AT_static_link	dwarf2.h	/^    DW_AT_static_link = 0x48,$/;"	e	enum:dwarf_attribute
DW_AT_stmt_list	dwarf2.h	/^    DW_AT_stmt_list = 0x10,$/;"	e	enum:dwarf_attribute
DW_AT_stride	dwarf2.h	/^    DW_AT_stride        = 0x51,$/;"	e	enum:dwarf_attribute
DW_AT_stride_size	dwarf2.h	/^    DW_AT_stride_size = 0x2e,$/;"	e	enum:dwarf_attribute
DW_AT_string_length	dwarf2.h	/^    DW_AT_string_length = 0x19,$/;"	e	enum:dwarf_attribute
DW_AT_subscr_data	dwarf2.h	/^    DW_AT_subscr_data = 0x0a,$/;"	e	enum:dwarf_attribute
DW_AT_trampoline	dwarf2.h	/^    DW_AT_trampoline    = 0x56,$/;"	e	enum:dwarf_attribute
DW_AT_type	dwarf2.h	/^    DW_AT_type = 0x49,$/;"	e	enum:dwarf_attribute
DW_AT_upper_bound	dwarf2.h	/^    DW_AT_upper_bound = 0x2f,$/;"	e	enum:dwarf_attribute
DW_AT_use_UTF8	dwarf2.h	/^    DW_AT_use_UTF8      = 0x53,$/;"	e	enum:dwarf_attribute
DW_AT_use_location	dwarf2.h	/^    DW_AT_use_location = 0x4a,$/;"	e	enum:dwarf_attribute
DW_AT_variable_parameter	dwarf2.h	/^    DW_AT_variable_parameter = 0x4b,$/;"	e	enum:dwarf_attribute
DW_AT_virtuality	dwarf2.h	/^    DW_AT_virtuality = 0x4c,$/;"	e	enum:dwarf_attribute
DW_AT_visibility	dwarf2.h	/^    DW_AT_visibility = 0x17,$/;"	e	enum:dwarf_attribute
DW_AT_vtable_elem_location	dwarf2.h	/^    DW_AT_vtable_elem_location = 0x4d,$/;"	e	enum:dwarf_attribute
DW_CC_hi_user	dwarf2.h	476;"	d
DW_CC_lo_user	dwarf2.h	475;"	d
DW_CC_nocall	dwarf2.h	/^    DW_CC_nocall = 0x3$/;"	e	enum:dwarf_calling_convention
DW_CC_normal	dwarf2.h	/^    DW_CC_normal = 0x1,$/;"	e	enum:dwarf_calling_convention
DW_CC_program	dwarf2.h	/^    DW_CC_program = 0x2,$/;"	e	enum:dwarf_calling_convention
DW_CFA_GNU_args_size	dwarf2.h	/^    DW_CFA_GNU_args_size = 0x2e,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_GNU_negative_offset_extended	dwarf2.h	/^    DW_CFA_GNU_negative_offset_extended = 0x2f$/;"	e	enum:dwarf_call_frame_info
DW_CFA_GNU_window_save	dwarf2.h	/^    DW_CFA_GNU_window_save = 0x2d,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_MIPS_advance_loc8	dwarf2.h	/^    DW_CFA_MIPS_advance_loc8 = 0x1d,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_advance_loc	dwarf2.h	/^    DW_CFA_advance_loc = 0x40,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_advance_loc1	dwarf2.h	/^    DW_CFA_advance_loc1 = 0x02,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_advance_loc2	dwarf2.h	/^    DW_CFA_advance_loc2 = 0x03,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_advance_loc4	dwarf2.h	/^    DW_CFA_advance_loc4 = 0x04,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_def_cfa	dwarf2.h	/^    DW_CFA_def_cfa = 0x0c,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_def_cfa_expression	dwarf2.h	/^    DW_CFA_def_cfa_expression = 0x0f,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_def_cfa_offset	dwarf2.h	/^    DW_CFA_def_cfa_offset = 0x0e,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_def_cfa_offset_sf	dwarf2.h	/^    DW_CFA_def_cfa_offset_sf = 0x13,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_def_cfa_register	dwarf2.h	/^    DW_CFA_def_cfa_register = 0x0d,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_def_cfa_sf	dwarf2.h	/^    DW_CFA_def_cfa_sf = 0x12,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_expression	dwarf2.h	/^    DW_CFA_expression = 0x10,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_extended	dwarf2.h	562;"	d
DW_CFA_high_user	dwarf2.h	564;"	d
DW_CFA_low_user	dwarf2.h	563;"	d
DW_CFA_nop	dwarf2.h	/^    DW_CFA_nop = 0x00,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_offset	dwarf2.h	/^    DW_CFA_offset = 0x80,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_offset_extended	dwarf2.h	/^    DW_CFA_offset_extended = 0x05,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_offset_extended_sf	dwarf2.h	/^    DW_CFA_offset_extended_sf = 0x11,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_register	dwarf2.h	/^    DW_CFA_register = 0x09,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_remember_state	dwarf2.h	/^    DW_CFA_remember_state = 0x0a,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_restore	dwarf2.h	/^    DW_CFA_restore = 0xc0,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_restore_extended	dwarf2.h	/^    DW_CFA_restore_extended = 0x06,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_restore_state	dwarf2.h	/^    DW_CFA_restore_state = 0x0b,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_same_value	dwarf2.h	/^    DW_CFA_same_value = 0x08,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_set_loc	dwarf2.h	/^    DW_CFA_set_loc = 0x01,$/;"	e	enum:dwarf_call_frame_info
DW_CFA_undefined	dwarf2.h	/^    DW_CFA_undefined = 0x07,$/;"	e	enum:dwarf_call_frame_info
DW_CHILDREN_no	dwarf2.h	566;"	d
DW_CHILDREN_yes	dwarf2.h	567;"	d
DW_CIE_ID	dwarf2.h	559;"	d
DW_CIE_VERSION	dwarf2.h	560;"	d
DW_DSC_label	dwarf2.h	/^    DW_DSC_label = 0,$/;"	e	enum:dwarf_discrim_list
DW_DSC_range	dwarf2.h	/^    DW_DSC_range = 1$/;"	e	enum:dwarf_discrim_list
DW_EH_PE_absptr	dwarf2.h	609;"	d
DW_EH_PE_aligned	dwarf2.h	626;"	d
DW_EH_PE_datarel	dwarf2.h	624;"	d
DW_EH_PE_funcrel	dwarf2.h	625;"	d
DW_EH_PE_indirect	dwarf2.h	628;"	d
DW_EH_PE_omit	dwarf2.h	610;"	d
DW_EH_PE_pcrel	dwarf2.h	622;"	d
DW_EH_PE_sdata2	dwarf2.h	617;"	d
DW_EH_PE_sdata4	dwarf2.h	618;"	d
DW_EH_PE_sdata8	dwarf2.h	619;"	d
DW_EH_PE_signed	dwarf2.h	620;"	d
DW_EH_PE_sleb128	dwarf2.h	616;"	d
DW_EH_PE_textrel	dwarf2.h	623;"	d
DW_EH_PE_udata2	dwarf2.h	613;"	d
DW_EH_PE_udata4	dwarf2.h	614;"	d
DW_EH_PE_udata8	dwarf2.h	615;"	d
DW_EH_PE_uleb128	dwarf2.h	612;"	d
DW_FORM_addr	dwarf2.h	/^    DW_FORM_addr = 0x01,$/;"	e	enum:dwarf_form
DW_FORM_block	dwarf2.h	/^    DW_FORM_block = 0x09,$/;"	e	enum:dwarf_form
DW_FORM_block1	dwarf2.h	/^    DW_FORM_block1 = 0x0a,$/;"	e	enum:dwarf_form
DW_FORM_block2	dwarf2.h	/^    DW_FORM_block2 = 0x03,$/;"	e	enum:dwarf_form
DW_FORM_block4	dwarf2.h	/^    DW_FORM_block4 = 0x04,$/;"	e	enum:dwarf_form
DW_FORM_data	dwarf2out.c	307;"	d	file:
DW_FORM_data1	dwarf2.h	/^    DW_FORM_data1 = 0x0b,$/;"	e	enum:dwarf_form
DW_FORM_data2	dwarf2.h	/^    DW_FORM_data2 = 0x05,$/;"	e	enum:dwarf_form
DW_FORM_data4	dwarf2.h	/^    DW_FORM_data4 = 0x06,$/;"	e	enum:dwarf_form
DW_FORM_data8	dwarf2.h	/^    DW_FORM_data8 = 0x07,$/;"	e	enum:dwarf_form
DW_FORM_flag	dwarf2.h	/^    DW_FORM_flag = 0x0c,$/;"	e	enum:dwarf_form
DW_FORM_indirect	dwarf2.h	/^    DW_FORM_indirect = 0x16$/;"	e	enum:dwarf_form
DW_FORM_ref	dwarf2out.c	308;"	d	file:
DW_FORM_ref1	dwarf2.h	/^    DW_FORM_ref1 = 0x11,$/;"	e	enum:dwarf_form
DW_FORM_ref2	dwarf2.h	/^    DW_FORM_ref2 = 0x12,$/;"	e	enum:dwarf_form
DW_FORM_ref4	dwarf2.h	/^    DW_FORM_ref4 = 0x13,$/;"	e	enum:dwarf_form
DW_FORM_ref8	dwarf2.h	/^    DW_FORM_ref8 = 0x14,$/;"	e	enum:dwarf_form
DW_FORM_ref_addr	dwarf2.h	/^    DW_FORM_ref_addr = 0x10,$/;"	e	enum:dwarf_form
DW_FORM_ref_udata	dwarf2.h	/^    DW_FORM_ref_udata = 0x15,$/;"	e	enum:dwarf_form
DW_FORM_sdata	dwarf2.h	/^    DW_FORM_sdata = 0x0d,$/;"	e	enum:dwarf_form
DW_FORM_string	dwarf2.h	/^    DW_FORM_string = 0x08,$/;"	e	enum:dwarf_form
DW_FORM_strp	dwarf2.h	/^    DW_FORM_strp = 0x0e,$/;"	e	enum:dwarf_form
DW_FORM_udata	dwarf2.h	/^    DW_FORM_udata = 0x0f,$/;"	e	enum:dwarf_form
DW_ID_case_insensitive	dwarf2.h	/^    DW_ID_case_insensitive = 3$/;"	e	enum:dwarf_id_case
DW_ID_case_sensitive	dwarf2.h	/^    DW_ID_case_sensitive = 0,$/;"	e	enum:dwarf_id_case
DW_ID_down_case	dwarf2.h	/^    DW_ID_down_case = 2,$/;"	e	enum:dwarf_id_case
DW_ID_up_case	dwarf2.h	/^    DW_ID_up_case = 1,$/;"	e	enum:dwarf_id_case
DW_INL_declared_inlined	dwarf2.h	/^    DW_INL_declared_inlined = 3$/;"	e	enum:dwarf_inline_attribute
DW_INL_declared_not_inlined	dwarf2.h	/^    DW_INL_declared_not_inlined = 2,$/;"	e	enum:dwarf_inline_attribute
DW_INL_inlined	dwarf2.h	/^    DW_INL_inlined = 1,$/;"	e	enum:dwarf_inline_attribute
DW_INL_not_inlined	dwarf2.h	/^    DW_INL_not_inlined = 0,$/;"	e	enum:dwarf_inline_attribute
DW_LANG_Ada83	dwarf2.h	/^    DW_LANG_Ada83 = 0x0003,$/;"	e	enum:dwarf_source_language
DW_LANG_Ada95	dwarf2.h	/^    DW_LANG_Ada95 = 0x000d,$/;"	e	enum:dwarf_source_language
DW_LANG_C	dwarf2.h	/^    DW_LANG_C = 0x0002,$/;"	e	enum:dwarf_source_language
DW_LANG_C89	dwarf2.h	/^    DW_LANG_C89 = 0x0001,$/;"	e	enum:dwarf_source_language
DW_LANG_C99	dwarf2.h	/^    DW_LANG_C99 = 0x000c,$/;"	e	enum:dwarf_source_language
DW_LANG_C_plus_plus	dwarf2.h	/^    DW_LANG_C_plus_plus = 0x0004,$/;"	e	enum:dwarf_source_language
DW_LANG_Cobol74	dwarf2.h	/^    DW_LANG_Cobol74 = 0x0005,$/;"	e	enum:dwarf_source_language
DW_LANG_Cobol85	dwarf2.h	/^    DW_LANG_Cobol85 = 0x0006,$/;"	e	enum:dwarf_source_language
DW_LANG_Fortran77	dwarf2.h	/^    DW_LANG_Fortran77 = 0x0007,$/;"	e	enum:dwarf_source_language
DW_LANG_Fortran90	dwarf2.h	/^    DW_LANG_Fortran90 = 0x0008,$/;"	e	enum:dwarf_source_language
DW_LANG_Fortran95	dwarf2.h	/^    DW_LANG_Fortran95 = 0x000e,$/;"	e	enum:dwarf_source_language
DW_LANG_Java	dwarf2.h	/^    DW_LANG_Java = 0x000b,$/;"	e	enum:dwarf_source_language
DW_LANG_Mips_Assembler	dwarf2.h	/^    DW_LANG_Mips_Assembler = 0x8001$/;"	e	enum:dwarf_source_language
DW_LANG_Modula2	dwarf2.h	/^    DW_LANG_Modula2 = 0x000a,$/;"	e	enum:dwarf_source_language
DW_LANG_Pascal83	dwarf2.h	/^    DW_LANG_Pascal83 = 0x0009,$/;"	e	enum:dwarf_source_language
DW_LANG_hi_user	dwarf2.h	595;"	d
DW_LANG_lo_user	dwarf2.h	594;"	d
DW_LNE_define_file	dwarf2.h	/^    DW_LNE_define_file = 3$/;"	e	enum:dwarf_line_number_x_ops
DW_LNE_end_sequence	dwarf2.h	/^    DW_LNE_end_sequence = 1,$/;"	e	enum:dwarf_line_number_x_ops
DW_LNE_set_address	dwarf2.h	/^    DW_LNE_set_address = 2,$/;"	e	enum:dwarf_line_number_x_ops
DW_LNS_advance_line	dwarf2.h	/^    DW_LNS_advance_line = 3,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_advance_pc	dwarf2.h	/^    DW_LNS_advance_pc = 2,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_const_add_pc	dwarf2.h	/^    DW_LNS_const_add_pc = 8,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_copy	dwarf2.h	/^    DW_LNS_copy = 1,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_extended_op	dwarf2.h	/^    DW_LNS_extended_op = 0,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_fixed_advance_pc	dwarf2.h	/^    DW_LNS_fixed_advance_pc = 9,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_negate_stmt	dwarf2.h	/^    DW_LNS_negate_stmt = 6,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_set_basic_block	dwarf2.h	/^    DW_LNS_set_basic_block = 7,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_set_column	dwarf2.h	/^    DW_LNS_set_column = 5,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_set_epilogue_begin	dwarf2.h	/^    DW_LNS_set_epilogue_begin = 11,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_set_file	dwarf2.h	/^    DW_LNS_set_file = 4,$/;"	e	enum:dwarf_line_number_ops
DW_LNS_set_isa	dwarf2.h	/^    DW_LNS_set_isa = 12$/;"	e	enum:dwarf_line_number_ops
DW_LNS_set_prologue_end	dwarf2.h	/^    DW_LNS_set_prologue_end = 10,$/;"	e	enum:dwarf_line_number_ops
DW_MACINFO_define	dwarf2.h	/^    DW_MACINFO_define = 1,$/;"	e	enum:dwarf_macinfo_record_type
DW_MACINFO_end_file	dwarf2.h	/^    DW_MACINFO_end_file = 4,$/;"	e	enum:dwarf_macinfo_record_type
DW_MACINFO_start_file	dwarf2.h	/^    DW_MACINFO_start_file = 3,$/;"	e	enum:dwarf_macinfo_record_type
DW_MACINFO_undef	dwarf2.h	/^    DW_MACINFO_undef = 2,$/;"	e	enum:dwarf_macinfo_record_type
DW_MACINFO_vendor_ext	dwarf2.h	/^    DW_MACINFO_vendor_ext = 255$/;"	e	enum:dwarf_macinfo_record_type
DW_OP_abs	dwarf2.h	/^    DW_OP_abs = 0x19,$/;"	e	enum:dwarf_location_atom
DW_OP_addr	dwarf2.h	/^    DW_OP_addr = 0x03,$/;"	e	enum:dwarf_location_atom
DW_OP_and	dwarf2.h	/^    DW_OP_and = 0x1a,$/;"	e	enum:dwarf_location_atom
DW_OP_bra	dwarf2.h	/^    DW_OP_bra = 0x28,$/;"	e	enum:dwarf_location_atom
DW_OP_breg0	dwarf2.h	/^    DW_OP_breg0 = 0x70,$/;"	e	enum:dwarf_location_atom
DW_OP_breg1	dwarf2.h	/^    DW_OP_breg1 = 0x71,$/;"	e	enum:dwarf_location_atom
DW_OP_breg10	dwarf2.h	/^    DW_OP_breg10 = 0x7a,$/;"	e	enum:dwarf_location_atom
DW_OP_breg11	dwarf2.h	/^    DW_OP_breg11 = 0x7b,$/;"	e	enum:dwarf_location_atom
DW_OP_breg12	dwarf2.h	/^    DW_OP_breg12 = 0x7c,$/;"	e	enum:dwarf_location_atom
DW_OP_breg13	dwarf2.h	/^    DW_OP_breg13 = 0x7d,$/;"	e	enum:dwarf_location_atom
DW_OP_breg14	dwarf2.h	/^    DW_OP_breg14 = 0x7e,$/;"	e	enum:dwarf_location_atom
DW_OP_breg15	dwarf2.h	/^    DW_OP_breg15 = 0x7f,$/;"	e	enum:dwarf_location_atom
DW_OP_breg16	dwarf2.h	/^    DW_OP_breg16 = 0x80,$/;"	e	enum:dwarf_location_atom
DW_OP_breg17	dwarf2.h	/^    DW_OP_breg17 = 0x81,$/;"	e	enum:dwarf_location_atom
DW_OP_breg18	dwarf2.h	/^    DW_OP_breg18 = 0x82,$/;"	e	enum:dwarf_location_atom
DW_OP_breg19	dwarf2.h	/^    DW_OP_breg19 = 0x83,$/;"	e	enum:dwarf_location_atom
DW_OP_breg2	dwarf2.h	/^    DW_OP_breg2 = 0x72,$/;"	e	enum:dwarf_location_atom
DW_OP_breg20	dwarf2.h	/^    DW_OP_breg20 = 0x84,$/;"	e	enum:dwarf_location_atom
DW_OP_breg21	dwarf2.h	/^    DW_OP_breg21 = 0x85,$/;"	e	enum:dwarf_location_atom
DW_OP_breg22	dwarf2.h	/^    DW_OP_breg22 = 0x86,$/;"	e	enum:dwarf_location_atom
DW_OP_breg23	dwarf2.h	/^    DW_OP_breg23 = 0x87,$/;"	e	enum:dwarf_location_atom
DW_OP_breg24	dwarf2.h	/^    DW_OP_breg24 = 0x88,$/;"	e	enum:dwarf_location_atom
DW_OP_breg25	dwarf2.h	/^    DW_OP_breg25 = 0x89,$/;"	e	enum:dwarf_location_atom
DW_OP_breg26	dwarf2.h	/^    DW_OP_breg26 = 0x8a,$/;"	e	enum:dwarf_location_atom
DW_OP_breg27	dwarf2.h	/^    DW_OP_breg27 = 0x8b,$/;"	e	enum:dwarf_location_atom
DW_OP_breg28	dwarf2.h	/^    DW_OP_breg28 = 0x8c,$/;"	e	enum:dwarf_location_atom
DW_OP_breg29	dwarf2.h	/^    DW_OP_breg29 = 0x8d,$/;"	e	enum:dwarf_location_atom
DW_OP_breg3	dwarf2.h	/^    DW_OP_breg3 = 0x73,$/;"	e	enum:dwarf_location_atom
DW_OP_breg30	dwarf2.h	/^    DW_OP_breg30 = 0x8e,$/;"	e	enum:dwarf_location_atom
DW_OP_breg31	dwarf2.h	/^    DW_OP_breg31 = 0x8f,$/;"	e	enum:dwarf_location_atom
DW_OP_breg4	dwarf2.h	/^    DW_OP_breg4 = 0x74,$/;"	e	enum:dwarf_location_atom
DW_OP_breg5	dwarf2.h	/^    DW_OP_breg5 = 0x75,$/;"	e	enum:dwarf_location_atom
DW_OP_breg6	dwarf2.h	/^    DW_OP_breg6 = 0x76,$/;"	e	enum:dwarf_location_atom
DW_OP_breg7	dwarf2.h	/^    DW_OP_breg7 = 0x77,$/;"	e	enum:dwarf_location_atom
DW_OP_breg8	dwarf2.h	/^    DW_OP_breg8 = 0x78,$/;"	e	enum:dwarf_location_atom
DW_OP_breg9	dwarf2.h	/^    DW_OP_breg9 = 0x79,$/;"	e	enum:dwarf_location_atom
DW_OP_bregx	dwarf2.h	/^    DW_OP_bregx = 0x92,$/;"	e	enum:dwarf_location_atom
DW_OP_call2	dwarf2.h	/^    DW_OP_call2 = 0x98,$/;"	e	enum:dwarf_location_atom
DW_OP_call4	dwarf2.h	/^    DW_OP_call4 = 0x99,$/;"	e	enum:dwarf_location_atom
DW_OP_calli	dwarf2.h	/^    DW_OP_calli = 0x9a$/;"	e	enum:dwarf_location_atom
DW_OP_const1s	dwarf2.h	/^    DW_OP_const1s = 0x09,$/;"	e	enum:dwarf_location_atom
DW_OP_const1u	dwarf2.h	/^    DW_OP_const1u = 0x08,$/;"	e	enum:dwarf_location_atom
DW_OP_const2s	dwarf2.h	/^    DW_OP_const2s = 0x0b,$/;"	e	enum:dwarf_location_atom
DW_OP_const2u	dwarf2.h	/^    DW_OP_const2u = 0x0a,$/;"	e	enum:dwarf_location_atom
DW_OP_const4s	dwarf2.h	/^    DW_OP_const4s = 0x0d,$/;"	e	enum:dwarf_location_atom
DW_OP_const4u	dwarf2.h	/^    DW_OP_const4u = 0x0c,$/;"	e	enum:dwarf_location_atom
DW_OP_const8s	dwarf2.h	/^    DW_OP_const8s = 0x0f,$/;"	e	enum:dwarf_location_atom
DW_OP_const8u	dwarf2.h	/^    DW_OP_const8u = 0x0e,$/;"	e	enum:dwarf_location_atom
DW_OP_consts	dwarf2.h	/^    DW_OP_consts = 0x11,$/;"	e	enum:dwarf_location_atom
DW_OP_constu	dwarf2.h	/^    DW_OP_constu = 0x10,$/;"	e	enum:dwarf_location_atom
DW_OP_deref	dwarf2.h	/^    DW_OP_deref = 0x06,$/;"	e	enum:dwarf_location_atom
DW_OP_deref_size	dwarf2.h	/^    DW_OP_deref_size = 0x94,$/;"	e	enum:dwarf_location_atom
DW_OP_div	dwarf2.h	/^    DW_OP_div = 0x1b,$/;"	e	enum:dwarf_location_atom
DW_OP_drop	dwarf2.h	/^    DW_OP_drop = 0x13,$/;"	e	enum:dwarf_location_atom
DW_OP_dup	dwarf2.h	/^    DW_OP_dup = 0x12,$/;"	e	enum:dwarf_location_atom
DW_OP_eq	dwarf2.h	/^    DW_OP_eq = 0x29,$/;"	e	enum:dwarf_location_atom
DW_OP_fbreg	dwarf2.h	/^    DW_OP_fbreg = 0x91,$/;"	e	enum:dwarf_location_atom
DW_OP_ge	dwarf2.h	/^    DW_OP_ge = 0x2a,$/;"	e	enum:dwarf_location_atom
DW_OP_gt	dwarf2.h	/^    DW_OP_gt = 0x2b,$/;"	e	enum:dwarf_location_atom
DW_OP_hi_user	dwarf2.h	406;"	d
DW_OP_le	dwarf2.h	/^    DW_OP_le = 0x2c,$/;"	e	enum:dwarf_location_atom
DW_OP_lit0	dwarf2.h	/^    DW_OP_lit0 = 0x30,$/;"	e	enum:dwarf_location_atom
DW_OP_lit1	dwarf2.h	/^    DW_OP_lit1 = 0x31,$/;"	e	enum:dwarf_location_atom
DW_OP_lit10	dwarf2.h	/^    DW_OP_lit10 = 0x3a,$/;"	e	enum:dwarf_location_atom
DW_OP_lit11	dwarf2.h	/^    DW_OP_lit11 = 0x3b,$/;"	e	enum:dwarf_location_atom
DW_OP_lit12	dwarf2.h	/^    DW_OP_lit12 = 0x3c,$/;"	e	enum:dwarf_location_atom
DW_OP_lit13	dwarf2.h	/^    DW_OP_lit13 = 0x3d,$/;"	e	enum:dwarf_location_atom
DW_OP_lit14	dwarf2.h	/^    DW_OP_lit14 = 0x3e,$/;"	e	enum:dwarf_location_atom
DW_OP_lit15	dwarf2.h	/^    DW_OP_lit15 = 0x3f,$/;"	e	enum:dwarf_location_atom
DW_OP_lit16	dwarf2.h	/^    DW_OP_lit16 = 0x40,$/;"	e	enum:dwarf_location_atom
DW_OP_lit17	dwarf2.h	/^    DW_OP_lit17 = 0x41,$/;"	e	enum:dwarf_location_atom
DW_OP_lit18	dwarf2.h	/^    DW_OP_lit18 = 0x42,$/;"	e	enum:dwarf_location_atom
DW_OP_lit19	dwarf2.h	/^    DW_OP_lit19 = 0x43,$/;"	e	enum:dwarf_location_atom
DW_OP_lit2	dwarf2.h	/^    DW_OP_lit2 = 0x32,$/;"	e	enum:dwarf_location_atom
DW_OP_lit20	dwarf2.h	/^    DW_OP_lit20 = 0x44,$/;"	e	enum:dwarf_location_atom
DW_OP_lit21	dwarf2.h	/^    DW_OP_lit21 = 0x45,$/;"	e	enum:dwarf_location_atom
DW_OP_lit22	dwarf2.h	/^    DW_OP_lit22 = 0x46,$/;"	e	enum:dwarf_location_atom
DW_OP_lit23	dwarf2.h	/^    DW_OP_lit23 = 0x47,$/;"	e	enum:dwarf_location_atom
DW_OP_lit24	dwarf2.h	/^    DW_OP_lit24 = 0x48,$/;"	e	enum:dwarf_location_atom
DW_OP_lit25	dwarf2.h	/^    DW_OP_lit25 = 0x49,$/;"	e	enum:dwarf_location_atom
DW_OP_lit26	dwarf2.h	/^    DW_OP_lit26 = 0x4a,$/;"	e	enum:dwarf_location_atom
DW_OP_lit27	dwarf2.h	/^    DW_OP_lit27 = 0x4b,$/;"	e	enum:dwarf_location_atom
DW_OP_lit28	dwarf2.h	/^    DW_OP_lit28 = 0x4c,$/;"	e	enum:dwarf_location_atom
DW_OP_lit29	dwarf2.h	/^    DW_OP_lit29 = 0x4d,$/;"	e	enum:dwarf_location_atom
DW_OP_lit3	dwarf2.h	/^    DW_OP_lit3 = 0x33,$/;"	e	enum:dwarf_location_atom
DW_OP_lit30	dwarf2.h	/^    DW_OP_lit30 = 0x4e,$/;"	e	enum:dwarf_location_atom
DW_OP_lit31	dwarf2.h	/^    DW_OP_lit31 = 0x4f,$/;"	e	enum:dwarf_location_atom
DW_OP_lit4	dwarf2.h	/^    DW_OP_lit4 = 0x34,$/;"	e	enum:dwarf_location_atom
DW_OP_lit5	dwarf2.h	/^    DW_OP_lit5 = 0x35,$/;"	e	enum:dwarf_location_atom
DW_OP_lit6	dwarf2.h	/^    DW_OP_lit6 = 0x36,$/;"	e	enum:dwarf_location_atom
DW_OP_lit7	dwarf2.h	/^    DW_OP_lit7 = 0x37,$/;"	e	enum:dwarf_location_atom
DW_OP_lit8	dwarf2.h	/^    DW_OP_lit8 = 0x38,$/;"	e	enum:dwarf_location_atom
DW_OP_lit9	dwarf2.h	/^    DW_OP_lit9 = 0x39,$/;"	e	enum:dwarf_location_atom
DW_OP_lo_user	dwarf2.h	405;"	d
DW_OP_lt	dwarf2.h	/^    DW_OP_lt = 0x2d,$/;"	e	enum:dwarf_location_atom
DW_OP_minus	dwarf2.h	/^    DW_OP_minus = 0x1c,$/;"	e	enum:dwarf_location_atom
DW_OP_mod	dwarf2.h	/^    DW_OP_mod = 0x1d,$/;"	e	enum:dwarf_location_atom
DW_OP_mul	dwarf2.h	/^    DW_OP_mul = 0x1e,$/;"	e	enum:dwarf_location_atom
DW_OP_ne	dwarf2.h	/^    DW_OP_ne = 0x2e,$/;"	e	enum:dwarf_location_atom
DW_OP_neg	dwarf2.h	/^    DW_OP_neg = 0x1f,$/;"	e	enum:dwarf_location_atom
DW_OP_nop	dwarf2.h	/^    DW_OP_nop = 0x96,$/;"	e	enum:dwarf_location_atom
DW_OP_not	dwarf2.h	/^    DW_OP_not = 0x20,$/;"	e	enum:dwarf_location_atom
DW_OP_or	dwarf2.h	/^    DW_OP_or = 0x21,$/;"	e	enum:dwarf_location_atom
DW_OP_over	dwarf2.h	/^    DW_OP_over = 0x14,$/;"	e	enum:dwarf_location_atom
DW_OP_pick	dwarf2.h	/^    DW_OP_pick = 0x15,$/;"	e	enum:dwarf_location_atom
DW_OP_piece	dwarf2.h	/^    DW_OP_piece = 0x93,$/;"	e	enum:dwarf_location_atom
DW_OP_plus	dwarf2.h	/^    DW_OP_plus = 0x22,$/;"	e	enum:dwarf_location_atom
DW_OP_plus_uconst	dwarf2.h	/^    DW_OP_plus_uconst = 0x23,$/;"	e	enum:dwarf_location_atom
DW_OP_push_object_address	dwarf2.h	/^    DW_OP_push_object_address = 0x97,$/;"	e	enum:dwarf_location_atom
DW_OP_reg0	dwarf2.h	/^    DW_OP_reg0 = 0x50,$/;"	e	enum:dwarf_location_atom
DW_OP_reg1	dwarf2.h	/^    DW_OP_reg1 = 0x51,$/;"	e	enum:dwarf_location_atom
DW_OP_reg10	dwarf2.h	/^    DW_OP_reg10 = 0x5a,$/;"	e	enum:dwarf_location_atom
DW_OP_reg11	dwarf2.h	/^    DW_OP_reg11 = 0x5b,$/;"	e	enum:dwarf_location_atom
DW_OP_reg12	dwarf2.h	/^    DW_OP_reg12 = 0x5c,$/;"	e	enum:dwarf_location_atom
DW_OP_reg13	dwarf2.h	/^    DW_OP_reg13 = 0x5d,$/;"	e	enum:dwarf_location_atom
DW_OP_reg14	dwarf2.h	/^    DW_OP_reg14 = 0x5e,$/;"	e	enum:dwarf_location_atom
DW_OP_reg15	dwarf2.h	/^    DW_OP_reg15 = 0x5f,$/;"	e	enum:dwarf_location_atom
DW_OP_reg16	dwarf2.h	/^    DW_OP_reg16 = 0x60,$/;"	e	enum:dwarf_location_atom
DW_OP_reg17	dwarf2.h	/^    DW_OP_reg17 = 0x61,$/;"	e	enum:dwarf_location_atom
DW_OP_reg18	dwarf2.h	/^    DW_OP_reg18 = 0x62,$/;"	e	enum:dwarf_location_atom
DW_OP_reg19	dwarf2.h	/^    DW_OP_reg19 = 0x63,$/;"	e	enum:dwarf_location_atom
DW_OP_reg2	dwarf2.h	/^    DW_OP_reg2 = 0x52,$/;"	e	enum:dwarf_location_atom
DW_OP_reg20	dwarf2.h	/^    DW_OP_reg20 = 0x64,$/;"	e	enum:dwarf_location_atom
DW_OP_reg21	dwarf2.h	/^    DW_OP_reg21 = 0x65,$/;"	e	enum:dwarf_location_atom
DW_OP_reg22	dwarf2.h	/^    DW_OP_reg22 = 0x66,$/;"	e	enum:dwarf_location_atom
DW_OP_reg23	dwarf2.h	/^    DW_OP_reg23 = 0x67,$/;"	e	enum:dwarf_location_atom
DW_OP_reg24	dwarf2.h	/^    DW_OP_reg24 = 0x68,$/;"	e	enum:dwarf_location_atom
DW_OP_reg25	dwarf2.h	/^    DW_OP_reg25 = 0x69,$/;"	e	enum:dwarf_location_atom
DW_OP_reg26	dwarf2.h	/^    DW_OP_reg26 = 0x6a,$/;"	e	enum:dwarf_location_atom
DW_OP_reg27	dwarf2.h	/^    DW_OP_reg27 = 0x6b,$/;"	e	enum:dwarf_location_atom
DW_OP_reg28	dwarf2.h	/^    DW_OP_reg28 = 0x6c,$/;"	e	enum:dwarf_location_atom
DW_OP_reg29	dwarf2.h	/^    DW_OP_reg29 = 0x6d,$/;"	e	enum:dwarf_location_atom
DW_OP_reg3	dwarf2.h	/^    DW_OP_reg3 = 0x53,$/;"	e	enum:dwarf_location_atom
DW_OP_reg30	dwarf2.h	/^    DW_OP_reg30 = 0x6e,$/;"	e	enum:dwarf_location_atom
DW_OP_reg31	dwarf2.h	/^    DW_OP_reg31 = 0x6f,$/;"	e	enum:dwarf_location_atom
DW_OP_reg4	dwarf2.h	/^    DW_OP_reg4 = 0x54,$/;"	e	enum:dwarf_location_atom
DW_OP_reg5	dwarf2.h	/^    DW_OP_reg5 = 0x55,$/;"	e	enum:dwarf_location_atom
DW_OP_reg6	dwarf2.h	/^    DW_OP_reg6 = 0x56,$/;"	e	enum:dwarf_location_atom
DW_OP_reg7	dwarf2.h	/^    DW_OP_reg7 = 0x57,$/;"	e	enum:dwarf_location_atom
DW_OP_reg8	dwarf2.h	/^    DW_OP_reg8 = 0x58,$/;"	e	enum:dwarf_location_atom
DW_OP_reg9	dwarf2.h	/^    DW_OP_reg9 = 0x59,$/;"	e	enum:dwarf_location_atom
DW_OP_regx	dwarf2.h	/^    DW_OP_regx = 0x90,$/;"	e	enum:dwarf_location_atom
DW_OP_rot	dwarf2.h	/^    DW_OP_rot = 0x17,$/;"	e	enum:dwarf_location_atom
DW_OP_shl	dwarf2.h	/^    DW_OP_shl = 0x24,$/;"	e	enum:dwarf_location_atom
DW_OP_shr	dwarf2.h	/^    DW_OP_shr = 0x25,$/;"	e	enum:dwarf_location_atom
DW_OP_shra	dwarf2.h	/^    DW_OP_shra = 0x26,$/;"	e	enum:dwarf_location_atom
DW_OP_skip	dwarf2.h	/^    DW_OP_skip = 0x2f,$/;"	e	enum:dwarf_location_atom
DW_OP_swap	dwarf2.h	/^    DW_OP_swap = 0x16,$/;"	e	enum:dwarf_location_atom
DW_OP_xderef	dwarf2.h	/^    DW_OP_xderef = 0x18,$/;"	e	enum:dwarf_location_atom
DW_OP_xderef_size	dwarf2.h	/^    DW_OP_xderef_size = 0x95,$/;"	e	enum:dwarf_location_atom
DW_OP_xor	dwarf2.h	/^    DW_OP_xor = 0x27,$/;"	e	enum:dwarf_location_atom
DW_ORD_col_major	dwarf2.h	/^    DW_ORD_col_major = 1$/;"	e	enum:dwarf_array_dim_ordering
DW_ORD_row_major	dwarf2.h	/^    DW_ORD_row_major = 0,$/;"	e	enum:dwarf_array_dim_ordering
DW_TAG_GNU_BINCL	dwarf2.h	/^    DW_TAG_GNU_BINCL = 0x4104,$/;"	e	enum:dwarf_tag
DW_TAG_GNU_EINCL	dwarf2.h	/^    DW_TAG_GNU_EINCL = 0x4105$/;"	e	enum:dwarf_tag
DW_TAG_MIPS_loop	dwarf2.h	/^    DW_TAG_MIPS_loop = 0x4081,$/;"	e	enum:dwarf_tag
DW_TAG_access_declaration	dwarf2.h	/^    DW_TAG_access_declaration = 0x23,$/;"	e	enum:dwarf_tag
DW_TAG_array_type	dwarf2.h	/^    DW_TAG_array_type = 0x01,$/;"	e	enum:dwarf_tag
DW_TAG_base_type	dwarf2.h	/^    DW_TAG_base_type = 0x24,$/;"	e	enum:dwarf_tag
DW_TAG_catch_block	dwarf2.h	/^    DW_TAG_catch_block = 0x25,$/;"	e	enum:dwarf_tag
DW_TAG_class_template	dwarf2.h	/^    DW_TAG_class_template = 0x4103,	\/* For C++.  *\/$/;"	e	enum:dwarf_tag
DW_TAG_class_type	dwarf2.h	/^    DW_TAG_class_type = 0x02,$/;"	e	enum:dwarf_tag
DW_TAG_common_block	dwarf2.h	/^    DW_TAG_common_block = 0x1a,$/;"	e	enum:dwarf_tag
DW_TAG_common_inclusion	dwarf2.h	/^    DW_TAG_common_inclusion = 0x1b,$/;"	e	enum:dwarf_tag
DW_TAG_compile_unit	dwarf2.h	/^    DW_TAG_compile_unit = 0x11,$/;"	e	enum:dwarf_tag
DW_TAG_const_type	dwarf2.h	/^    DW_TAG_const_type = 0x26,$/;"	e	enum:dwarf_tag
DW_TAG_constant	dwarf2.h	/^    DW_TAG_constant = 0x27,$/;"	e	enum:dwarf_tag
DW_TAG_dwarf_procedure	dwarf2.h	/^    DW_TAG_dwarf_procedure = 0x36,$/;"	e	enum:dwarf_tag
DW_TAG_entry_point	dwarf2.h	/^    DW_TAG_entry_point = 0x03,$/;"	e	enum:dwarf_tag
DW_TAG_enumeration_type	dwarf2.h	/^    DW_TAG_enumeration_type = 0x04,$/;"	e	enum:dwarf_tag
DW_TAG_enumerator	dwarf2.h	/^    DW_TAG_enumerator = 0x28,$/;"	e	enum:dwarf_tag
DW_TAG_file_type	dwarf2.h	/^    DW_TAG_file_type = 0x29,$/;"	e	enum:dwarf_tag
DW_TAG_formal_parameter	dwarf2.h	/^    DW_TAG_formal_parameter = 0x05,$/;"	e	enum:dwarf_tag
DW_TAG_format_label	dwarf2.h	/^    DW_TAG_format_label = 0x4101,	\/* For FORTRAN 77 and Fortran 90.  *\/$/;"	e	enum:dwarf_tag
DW_TAG_friend	dwarf2.h	/^    DW_TAG_friend = 0x2a,$/;"	e	enum:dwarf_tag
DW_TAG_function_template	dwarf2.h	/^    DW_TAG_function_template = 0x4102,	\/* For C++.  *\/$/;"	e	enum:dwarf_tag
DW_TAG_hi_user	dwarf2.h	112;"	d
DW_TAG_imported_declaration	dwarf2.h	/^    DW_TAG_imported_declaration = 0x08,$/;"	e	enum:dwarf_tag
DW_TAG_imported_module	dwarf2.h	/^    DW_TAG_imported_module = 0x3a,$/;"	e	enum:dwarf_tag
DW_TAG_imported_unit	dwarf2.h	/^    DW_TAG_imported_unit = 0x3d,$/;"	e	enum:dwarf_tag
DW_TAG_inheritance	dwarf2.h	/^    DW_TAG_inheritance = 0x1c,$/;"	e	enum:dwarf_tag
DW_TAG_inlined_subroutine	dwarf2.h	/^    DW_TAG_inlined_subroutine = 0x1d,$/;"	e	enum:dwarf_tag
DW_TAG_interface_type	dwarf2.h	/^    DW_TAG_interface_type = 0x38,$/;"	e	enum:dwarf_tag
DW_TAG_label	dwarf2.h	/^    DW_TAG_label = 0x0a,$/;"	e	enum:dwarf_tag
DW_TAG_lexical_block	dwarf2.h	/^    DW_TAG_lexical_block = 0x0b,$/;"	e	enum:dwarf_tag
DW_TAG_lo_user	dwarf2.h	111;"	d
DW_TAG_member	dwarf2.h	/^    DW_TAG_member = 0x0d,$/;"	e	enum:dwarf_tag
DW_TAG_module	dwarf2.h	/^    DW_TAG_module = 0x1e,$/;"	e	enum:dwarf_tag
DW_TAG_namelist	dwarf2.h	/^    DW_TAG_namelist = 0x2b,$/;"	e	enum:dwarf_tag
DW_TAG_namelist_item	dwarf2.h	/^    DW_TAG_namelist_item = 0x2c,$/;"	e	enum:dwarf_tag
DW_TAG_namespace	dwarf2.h	/^    DW_TAG_namespace = 0x39,$/;"	e	enum:dwarf_tag
DW_TAG_packed_type	dwarf2.h	/^    DW_TAG_packed_type = 0x2d,$/;"	e	enum:dwarf_tag
DW_TAG_padding	dwarf2.h	/^    DW_TAG_padding = 0x00,$/;"	e	enum:dwarf_tag
DW_TAG_partial_unit	dwarf2.h	/^    DW_TAG_partial_unit = 0x3c,$/;"	e	enum:dwarf_tag
DW_TAG_pointer_type	dwarf2.h	/^    DW_TAG_pointer_type = 0x0f,$/;"	e	enum:dwarf_tag
DW_TAG_ptr_to_member_type	dwarf2.h	/^    DW_TAG_ptr_to_member_type = 0x1f,$/;"	e	enum:dwarf_tag
DW_TAG_reference_type	dwarf2.h	/^    DW_TAG_reference_type = 0x10,$/;"	e	enum:dwarf_tag
DW_TAG_restrict_type	dwarf2.h	/^    DW_TAG_restrict_type = 0x37,$/;"	e	enum:dwarf_tag
DW_TAG_set_type	dwarf2.h	/^    DW_TAG_set_type = 0x20,$/;"	e	enum:dwarf_tag
DW_TAG_string_type	dwarf2.h	/^    DW_TAG_string_type = 0x12,$/;"	e	enum:dwarf_tag
DW_TAG_structure_type	dwarf2.h	/^    DW_TAG_structure_type = 0x13,$/;"	e	enum:dwarf_tag
DW_TAG_subprogram	dwarf2.h	/^    DW_TAG_subprogram = 0x2e,$/;"	e	enum:dwarf_tag
DW_TAG_subrange_type	dwarf2.h	/^    DW_TAG_subrange_type = 0x21,$/;"	e	enum:dwarf_tag
DW_TAG_subroutine_type	dwarf2.h	/^    DW_TAG_subroutine_type = 0x15,$/;"	e	enum:dwarf_tag
DW_TAG_template_type_param	dwarf2.h	/^    DW_TAG_template_type_param = 0x2f,$/;"	e	enum:dwarf_tag
DW_TAG_template_value_param	dwarf2.h	/^    DW_TAG_template_value_param = 0x30,$/;"	e	enum:dwarf_tag
DW_TAG_thrown_type	dwarf2.h	/^    DW_TAG_thrown_type = 0x31,$/;"	e	enum:dwarf_tag
DW_TAG_try_block	dwarf2.h	/^    DW_TAG_try_block = 0x32,$/;"	e	enum:dwarf_tag
DW_TAG_typedef	dwarf2.h	/^    DW_TAG_typedef = 0x16,$/;"	e	enum:dwarf_tag
DW_TAG_union_type	dwarf2.h	/^    DW_TAG_union_type = 0x17,$/;"	e	enum:dwarf_tag
DW_TAG_unspecified_parameters	dwarf2.h	/^    DW_TAG_unspecified_parameters = 0x18,$/;"	e	enum:dwarf_tag
DW_TAG_unspecified_type	dwarf2.h	/^    DW_TAG_unspecified_type = 0x3b,$/;"	e	enum:dwarf_tag
DW_TAG_variable	dwarf2.h	/^    DW_TAG_variable = 0x34,$/;"	e	enum:dwarf_tag
DW_TAG_variant	dwarf2.h	/^    DW_TAG_variant = 0x19,$/;"	e	enum:dwarf_tag
DW_TAG_variant_part	dwarf2.h	/^    DW_TAG_variant_part = 0x33,$/;"	e	enum:dwarf_tag
DW_TAG_volatile_type	dwarf2.h	/^    DW_TAG_volatile_type = 0x35,$/;"	e	enum:dwarf_tag
DW_TAG_with_stmt	dwarf2.h	/^    DW_TAG_with_stmt = 0x22,$/;"	e	enum:dwarf_tag
DW_VIRTUALITY_none	dwarf2.h	/^    DW_VIRTUALITY_none = 0,$/;"	e	enum:dwarf_virtuality_attribute
DW_VIRTUALITY_pure_virtual	dwarf2.h	/^    DW_VIRTUALITY_pure_virtual = 2$/;"	e	enum:dwarf_virtuality_attribute
DW_VIRTUALITY_virtual	dwarf2.h	/^    DW_VIRTUALITY_virtual = 1,$/;"	e	enum:dwarf_virtuality_attribute
DW_VIS_exported	dwarf2.h	/^    DW_VIS_exported = 2,$/;"	e	enum:dwarf_visibility_attribute
DW_VIS_local	dwarf2.h	/^    DW_VIS_local = 1,$/;"	e	enum:dwarf_visibility_attribute
DW_VIS_qualified	dwarf2.h	/^    DW_VIS_qualified = 3$/;"	e	enum:dwarf_visibility_attribute
DW_children_no	dwarf2.h	115;"	d
DW_children_yes	dwarf2.h	116;"	d
D_C89	c-parse.c	4556;"	d	file:
D_EXT	c-parse.c	4557;"	d	file:
D_EXT89	c-parse.c	4558;"	d	file:
D_OBJC	c-parse.c	4559;"	d	file:
D_TRAD	c-parse.c	4555;"	d	file:
Disassembly	gcc.asm	/^Disassembly of section .text:$/;"	l
E	real.c	342;"	d	file:
ECF_ALWAYS_RETURN	calls.c	178;"	d	file:
ECF_CONST	calls.c	154;"	d	file:
ECF_FORK_OR_EXEC	calls.c	169;"	d	file:
ECF_LIBCALL_BLOCK	calls.c	180;"	d	file:
ECF_LONGJMP	calls.c	166;"	d	file:
ECF_MALLOC	calls.c	158;"	d	file:
ECF_MAY_BE_ALLOCA	calls.c	160;"	d	file:
ECF_NORETURN	calls.c	156;"	d	file:
ECF_NOTHROW	calls.c	162;"	d	file:
ECF_PURE	calls.c	173;"	d	file:
ECF_RETURNS_TWICE	calls.c	164;"	d	file:
ECF_SIBCALL	calls.c	170;"	d	file:
ECF_SP_DEPRESSED	calls.c	176;"	d	file:
EDGE_ABNORMAL	basic-block.h	139;"	d
EDGE_ABNORMAL_CALL	basic-block.h	140;"	d
EDGE_COMPLEX	basic-block.h	145;"	d
EDGE_CRITICAL_P	basic-block.h	536;"	d
EDGE_DFS_BACK	basic-block.h	143;"	d
EDGE_EH	basic-block.h	141;"	d
EDGE_FAKE	basic-block.h	142;"	d
EDGE_FALLTHRU	basic-block.h	138;"	d
EDGE_FREQUENCY	basic-block.h	530;"	d
EDGE_INDEX	basic-block.h	508;"	d
EDGE_INDEX_NO_EDGE	basic-block.h	504;"	d
EDGE_INFO	predict.c	647;"	d	file:
EDGE_INFO	profile.c	67;"	d	file:
EDGE_TO_BIT	sched-rgn.c	257;"	d	file:
EE_BEGIN_LABEL_FMT	dwarfout.c	1130;"	d	file:
EE_END_LABEL_FMT	dwarfout.c	1133;"	d	file:
EH_FRAME_SECTION_NAME	defaults.h	216;"	d
EH_RETURN_DATA_REGNO	except.c	83;"	d	file:
EH_RETURN_DATA_REGNO	i386.h	2839;"	d
EH_RETURN_HANDLER_RTX	except.c	80;"	d	file:
EH_RETURN_STACKADJ_RTX	except.c	77;"	d	file:
EH_RETURN_STACKADJ_RTX	i386.h	2840;"	d
EH_USES	flow.c	171;"	d	file:
EIE	ssa-ccp.c	124;"	d	file:
ELIDE_CODE	obstack.c	45;"	d	file:
ELIMINABLE_REGS	i386.h	1823;"	d
ELLIPSIS	c-parse.c	14;"	d	file:
ELSE	c-parse.c	20;"	d	file:
ELSE_CLAUSE	c-common.h	579;"	d
EMIT_AFTER	reg-stack.c	/^  EMIT_AFTER,$/;"	e	enum:emit_where	file:
EMIT_BEFORE	reg-stack.c	/^  EMIT_BEFORE$/;"	e	enum:emit_where	file:
EMIT_MODE_SET	i386.h	3190;"	d
EMPTY	mbchar.c	/^	      EMPTY, ERROR} JIS_ACTION;$/;"	e	enum:__anon6	file:
EMPTY_ENTRY	hashtab.c	53;"	d	file:
EMPTY_FIELD_BOUNDARY	i386.h	764;"	d
EMULONG	real.c	232;"	d	file:
EMULONG	real.c	235;"	d	file:
EMULONG	real.c	238;"	d	file:
EMULONG	real.c	241;"	d	file:
EMULONG_SIZE	real.c	192;"	d	file:
EMULONG_SIZE	real.c	222;"	d	file:
EMULONG_SIZE	real.c	226;"	d	file:
EMUSHORT	real.c	190;"	d	file:
EMUSHORT	real.c	220;"	d	file:
EMUSHORT	real.c	223;"	d	file:
EMUSHORT_SIZE	real.c	191;"	d	file:
EMUSHORT_SIZE	real.c	221;"	d	file:
EMUSHORT_SIZE	real.c	225;"	d	file:
EMU_NON_COMPILE	real.c	244;"	d	file:
EMU_NON_COMPILE	real.c	253;"	d	file:
ENABLE_NLS	auto-host.h	515;"	d
ENABLE_NLS	intl.h	36;"	d
ENABLE_TREE_CHECKING	print-rtl.c	29;"	d	file:
ENCODE	c-parse.c	64;"	d	file:
ENCODE_BLOCKAGE	sched-int.h	235;"	d
ENCODE_SECTION_INFO	i386.h	2254;"	d
END	c-parse.c	61;"	d	file:
END	cppinit.c	136;"	d	file:
END	cppinit.c	145;"	d	file:
END	cppinit.c	157;"	d	file:
ENDFILE_SPEC	linux64.h	64;"	d
ENDFILE_SPEC	linux64.h	65;"	d
ENDFILE_SPEC	svr4.h	127;"	d
ENDFILE_SPEC	svr4.h	128;"	d
END_BUILTINS	tree.h	/^  END_BUILTINS$/;"	e	enum:built_in_function
END_PREDICTORS	predict.h	/^  END_PREDICTORS$/;"	e	enum:br_predictor
ENOENT	cppfiles.c	69;"	d	file:
ENOTDIR	cppfiles.c	72;"	d	file:
ENTRY_BLOCK	basic-block.h	271;"	d
ENTRY_BLOCK_PTR	basic-block.h	279;"	d
ENTRY_VALUE_EXPR_CHECK	tree-check.h	129;"	d
ENUM	c-parse.c	16;"	d	file:
ENUMERAL_TYPE_CHECK	tree-check.h	16;"	d
ENUM_BITFIELD	system.h	508;"	d
ENUM_BITFIELD	system.h	511;"	d
ENUM_BITFIELD	system.h	513;"	d
EOL_COLUMN	tree-dump.c	138;"	d	file:
EPILOGUE_USES	flow.c	168;"	d	file:
EP_extv	expr.h	/^enum extraction_pattern { EP_insv, EP_extv, EP_extzv };$/;"	e	enum:extraction_pattern
EP_extzv	expr.h	/^enum extraction_pattern { EP_insv, EP_extv, EP_extzv };$/;"	e	enum:extraction_pattern
EP_insv	expr.h	/^enum extraction_pattern { EP_insv, EP_extv, EP_extzv };$/;"	e	enum:extraction_pattern
EQCOMPARE	c-parse.c	50;"	d	file:
EQUALITY	cppexp.c	532;"	d	file:
EQUAL_PRIO	cppexp.c	484;"	d	file:
EQ_EXPR_CHECK	tree-check.h	107;"	d
ERROR	c-lex.c	830;"	d	file:
ERROR	cpphash.h	/^enum error_type { WARNING = 0, WARNING_SYSHDR, PEDWARN, ERROR, FATAL, ICE };$/;"	e	enum:error_type
ERROR	mbchar.c	/^	      EMPTY, ERROR} JIS_ACTION;$/;"	e	enum:__anon6	file:
ERROR_MARK_CHECK	tree-check.h	6;"	d
ERRSTR_FMT	xstrerror.c	35;"	d	file:
ERT_ALLOWED_EXCEPTIONS	except.c	/^    ERT_ALLOWED_EXCEPTIONS,$/;"	e	enum:eh_region::eh_region_type	file:
ERT_CATCH	except.c	/^    ERT_CATCH,$/;"	e	enum:eh_region::eh_region_type	file:
ERT_CLEANUP	except.c	/^    ERT_CLEANUP,$/;"	e	enum:eh_region::eh_region_type	file:
ERT_FIXUP	except.c	/^    ERT_FIXUP$/;"	e	enum:eh_region::eh_region_type	file:
ERT_MUST_NOT_THROW	except.c	/^    ERT_MUST_NOT_THROW,$/;"	e	enum:eh_region::eh_region_type	file:
ERT_THROW	except.c	/^    ERT_THROW,$/;"	e	enum:eh_region::eh_region_type	file:
ERT_TRY	except.c	/^    ERT_TRY,$/;"	e	enum:eh_region::eh_region_type	file:
ERT_UNKNOWN	except.c	/^    ERT_UNKNOWN = 0,$/;"	e	enum:eh_region::eh_region_type	file:
ESCAPE	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
ESCAPES	elfos.h	570;"	d
EXACT_DIV_EXPR_CHECK	tree-check.h	77;"	d
EXACT_POWER_OF_2_OR_ZERO_P	expmed.c	2948;"	d	file:
EXCHANGE	local-alloc.c	1509;"	d	file:
EXCHANGE	local-alloc.c	1559;"	d	file:
EXC_PTR_EXPR_CHECK	tree-check.h	152;"	d
EXECUTE_IF_AND_COMPL_IN_BITMAP	bitmap.h	221;"	d
EXECUTE_IF_AND_COMPL_IN_REG_SET	basic-block.h	89;"	d
EXECUTE_IF_AND_IN_BITMAP	bitmap.h	288;"	d
EXECUTE_IF_AND_IN_REG_SET	basic-block.h	95;"	d
EXECUTE_IF_CONTROL_DEPENDENT	ssa-dce.c	196;"	d	file:
EXECUTE_IF_SET_IN_ALLOCNO_SET	global.c	180;"	d	file:
EXECUTE_IF_SET_IN_BITMAP	bitmap.h	164;"	d
EXECUTE_IF_SET_IN_REG_SET	basic-block.h	83;"	d
EXECUTE_IF_SET_IN_SBITMAP	sbitmap.h	59;"	d
EXECUTE_IF_UNNECESSARY	ssa-dce.c	131;"	d	file:
EXIT_BLOCK	basic-block.h	272;"	d
EXIT_BLOCK_EXPR_CHECK	tree-check.h	149;"	d
EXIT_BLOCK_LABELED_BLOCK	tree.h	856;"	d
EXIT_BLOCK_PTR	basic-block.h	280;"	d
EXIT_BLOCK_RETURN	tree.h	858;"	d
EXIT_EXPR_CHECK	tree-check.h	146;"	d
EXIT_FAILURE	obstack.c	95;"	d	file:
EXIT_IGNORE_STACK	flow.c	151;"	d	file:
EXIT_IGNORE_STACK	i386.h	1787;"	d
EXONE	real.c	356;"	d	file:
EXPAND_BUILTIN_VA_ARG	i386.h	1752;"	d
EXPAND_BUILTIN_VA_START	i386.h	1748;"	d
EXPAND_CONST_ADDRESS	expr.h	/^enum expand_modifier {EXPAND_NORMAL, EXPAND_SUM, EXPAND_CONST_ADDRESS,$/;"	e	enum:expand_modifier
EXPAND_INITIALIZER	expr.h	/^			EXPAND_INITIALIZER, EXPAND_WRITE};$/;"	e	enum:expand_modifier
EXPAND_NORMAL	expr.h	/^enum expand_modifier {EXPAND_NORMAL, EXPAND_SUM, EXPAND_CONST_ADDRESS,$/;"	e	enum:expand_modifier
EXPAND_SUM	expr.h	/^enum expand_modifier {EXPAND_NORMAL, EXPAND_SUM, EXPAND_CONST_ADDRESS,$/;"	e	enum:expand_modifier
EXPAND_WRITE	expr.h	/^			EXPAND_INITIALIZER, EXPAND_WRITE};$/;"	e	enum:expand_modifier
EXPR_CHECK	tree.h	307;"	d
EXPR_CHECK	tree.h	328;"	d
EXPR_STMT_CHECK	tree-check.h	157;"	d
EXPR_STMT_EXPR	c-common.h	598;"	d
EXPR_WFL_COLNO	tree.h	875;"	d
EXPR_WFL_EMIT_LINE_NOTE	tree.h	864;"	d
EXPR_WFL_FILENAME	tree.h	870;"	d
EXPR_WFL_FILENAME_NODE	tree.h	868;"	d
EXPR_WFL_LINECOL	tree.h	873;"	d
EXPR_WFL_LINENO	tree.h	874;"	d
EXPR_WFL_NODE	tree.h	866;"	d
EXPR_WFL_SET_LINECOL	tree.h	876;"	d
EXPR_WITH_FILE_LOCATION_CHECK	tree-check.h	150;"	d
EXTENDED_BUFF_SIZE	cpplex.c	1937;"	d	file:
EXTENSION	c-parse.c	35;"	d	file:
EXTENSION	cpplib.c	67;"	d	file:
EXTRACT_FLAGS	cppexp.c	462;"	d	file:
EXTRACT_PRIO	cppexp.c	461;"	d	file:
EXTRA_CC_MODES	i386.h	2732;"	d
EXTRA_CONSTRAINT	i386.h	1440;"	d
EXTRA_SECTIONS	elfos.h	255;"	d
EXTRA_SECTIONS	elfos.h	256;"	d
EXTRA_SECTIONS	varasm.c	/^  , EXTRA_SECTIONS$/;"	e	enum:in_section	file:
EXTRA_SECTION_FUNCTIONS	elfos.h	262;"	d
EXTRA_SECTION_FUNCTIONS	elfos.h	263;"	d
EXTRA_SPECS	i386.h	659;"	d
FAB_C_VAR	cppfiles.c	99;"	d	file:
FAIL	insn-emit.c	22;"	d	file:
FALLTHRU_EDGE	basic-block.h	522;"	d
FALSE	system.h	552;"	d
FALSE	system.h	566;"	d
FAST_PROLOGUE_INSN_COUNT	i386.c	400;"	d	file:
FATAL	cpphash.h	/^enum error_type { WARNING = 0, WARNING_SYSHDR, PEDWARN, ERROR, FATAL, ICE };$/;"	e	enum:error_type
FATAL_EXIT_CODE	system.h	150;"	d
FATAL_EXIT_CODE	system.h	152;"	d
FDESC_EXPR_CHECK	tree-check.h	130;"	d
FDE_AFTER_SIZE_LABEL	dwarf2out.c	332;"	d	file:
FDE_END_LABEL	dwarf2out.c	333;"	d	file:
FDE_LABEL	dwarf2out.c	331;"	d	file:
FDE_LENGTH_LABEL	dwarf2out.c	334;"	d	file:
FDE_TABLE_INCREMENT	dwarf2out.c	249;"	d	file:
FED_BY_SPEC_LOAD	sched-rgn.c	80;"	d	file:
FF	md5.c	255;"	d	file:
FFS	diagnostic.c	28;"	d	file:
FFS	rtl-error.c	24;"	d	file:
FFS	rtl.h	29;"	d
FFS	toplev.c	29;"	d	file:
FFS_EXPR_CHECK	tree-check.h	87;"	d
FG	md5.c	256;"	d	file:
FH	md5.c	257;"	d	file:
FI	md5.c	258;"	d	file:
FIBHEAPKEY_MIN	fibheap.c	36;"	d	file:
FIELD	c-decl.c	/^  FIELD,			\/* Declaration inside struct or union *\/$/;"	e	enum:decl_context	file:
FIELD_DECL_CHECK	tree-check.h	43;"	d
FILE_ASM_OP	dwarfout.c	945;"	d	file:
FILE_FUNCTION_FORMAT	tree.c	4531;"	d	file:
FILE_FUNCTION_PREFIX_LEN	tree.c	4529;"	d	file:
FILE_NAME_JOINER	dbxout.c	128;"	d	file:
FILE_NAME_MAP_FILE	cppfiles.c	866;"	d	file:
FILE_STMT_CHECK	tree-check.h	172;"	d
FILE_STMT_FILENAME	c-common.h	715;"	d
FILE_STMT_FILENAME_NODE	c-common.h	713;"	d
FILE_TABLE_INCREMENT	dwarf2out.c	3307;"	d	file:
FILE_TABLE_INCREMENT	vmsdbgout.c	102;"	d	file:
FILE_TYPE_CHECK	tree-check.h	23;"	d
FINALIZE_PIC	i386.h	2285;"	d
FIND_BASE_TERM	i386.h	1972;"	d
FIND_REG_INC_NOTE	rtl.h	1022;"	d
FIND_REG_INC_NOTE	rtl.h	1027;"	d
FINI_SECTION_ASM_OP	elfos.h	238;"	d
FIRST_FLOAT_REG	i386.h	1094;"	d
FIRST_INSN_ADDRESS	final.c	875;"	d	file:
FIRST_MMX_REG	i386.h	1107;"	d
FIRST_PARM_OFFSET	i386.h	1585;"	d
FIRST_PSEUDO_REGISTER	i386.h	877;"	d
FIRST_REX_INT_REG	i386.h	1110;"	d
FIRST_REX_SSE_REG	i386.h	1113;"	d
FIRST_SSE_REG	i386.h	1104;"	d
FIRST_STACK_REG	i386.h	1097;"	d
FIRST_VIRTUAL_REGISTER	rtl.h	1670;"	d
FIXED_BASE_PLUS_P	cse.c	593;"	d	file:
FIXED_BASE_PLUS_P	integrate.c	562;"	d	file:
FIXED_BASE_PLUS_P	simplify-rtx.c	51;"	d	file:
FIXED_REGISTERS	i386.h	892;"	d
FIXED_REGNO_P	cse.c	482;"	d	file:
FIX_CEIL_EXPR_CHECK	tree-check.h	79;"	d
FIX_FLOOR_EXPR_CHECK	tree-check.h	80;"	d
FIX_ROUND_EXPR_CHECK	tree-check.h	81;"	d
FIX_TRUNC_EXPR_CHECK	tree-check.h	78;"	d
FLAGS_REG	i386.h	1100;"	d
FLAG_BITS	cppexp.c	458;"	d	file:
FLAG_MASK	cppexp.c	459;"	d	file:
FLOAT	diagnostic.c	27;"	d	file:
FLOAT	rtl-error.c	23;"	d	file:
FLOAT	rtl.h	30;"	d
FLOAT	toplev.c	28;"	d	file:
FLOAT_CLASS_P	i386.h	1229;"	d
FLOAT_EXPR_CHECK	tree-check.h	82;"	d
FLOAT_INT_REGS	i386.h	/^  FLOAT_INT_REGS,$/;"	e	enum:reg_class
FLOAT_INT_SSE_REGS	i386.h	/^  FLOAT_INT_SSE_REGS,$/;"	e	enum:reg_class
FLOAT_MODE_P	machmode.h	63;"	d
FLOAT_REGS	i386.h	/^  FLOAT_REGS,$/;"	e	enum:reg_class
FLOAT_SSE_REGS	i386.h	/^  FLOAT_SSE_REGS,$/;"	e	enum:reg_class
FLOAT_TYPE_P	tree.h	405;"	d
FLOAT_TYPE_SIZE	defaults.h	318;"	d
FLOAT_TYPE_SIZE	i386.h	692;"	d
FLOAT_WORDS_BIG_ENDIAN	real.h	56;"	d
FLOOR_DIV_EXPR_CHECK	tree-check.h	70;"	d
FLOOR_MOD_EXPR_CHECK	tree-check.h	74;"	d
FLOOR_ROUND	function.c	83;"	d	file:
FMT_CODE	dwarf.h	288;"	d
FMT_ET	dwarf.h	/^    FMT_ET	= 0x8$/;"	e	enum:dwarf_subscr_data_formats
FMT_FLAG_ARG_CONVERT	c-format.c	/^  FMT_FLAG_ARG_CONVERT = 1,$/;"	e	enum:__anon37	file:
FMT_FLAG_DOLLAR_GAP_POINTER_OK	c-format.c	/^  FMT_FLAG_DOLLAR_GAP_POINTER_OK = 128$/;"	e	enum:__anon37	file:
FMT_FLAG_DOLLAR_MULTIPLE	c-format.c	/^  FMT_FLAG_DOLLAR_MULTIPLE = 8,$/;"	e	enum:__anon37	file:
FMT_FLAG_EMPTY_PREC_OK	c-format.c	/^  FMT_FLAG_EMPTY_PREC_OK = 64,$/;"	e	enum:__anon37	file:
FMT_FLAG_FANCY_PERCENT_OK	c-format.c	/^  FMT_FLAG_FANCY_PERCENT_OK = 4,$/;"	e	enum:__anon37	file:
FMT_FLAG_SCANF_A_KLUDGE	c-format.c	/^  FMT_FLAG_SCANF_A_KLUDGE = 2,$/;"	e	enum:__anon37	file:
FMT_FLAG_USE_DOLLAR	c-format.c	/^  FMT_FLAG_USE_DOLLAR = 16,$/;"	e	enum:__anon37	file:
FMT_FLAG_ZERO_WIDTH_BAD	c-format.c	/^  FMT_FLAG_ZERO_WIDTH_BAD = 32,$/;"	e	enum:__anon37	file:
FMT_FT_C_C	dwarf.h	/^    FMT_FT_C_C	= 0x0,$/;"	e	enum:dwarf_subscr_data_formats
FMT_FT_C_X	dwarf.h	/^    FMT_FT_C_X	= 0x1,$/;"	e	enum:dwarf_subscr_data_formats
FMT_FT_X_C	dwarf.h	/^    FMT_FT_X_C	= 0x2,$/;"	e	enum:dwarf_subscr_data_formats
FMT_FT_X_X	dwarf.h	/^    FMT_FT_X_X	= 0x3,$/;"	e	enum:dwarf_subscr_data_formats
FMT_LEN_L	c-format.c	/^  FMT_LEN_L,$/;"	e	enum:format_lengths	file:
FMT_LEN_MAX	c-format.c	/^  FMT_LEN_MAX$/;"	e	enum:format_lengths	file:
FMT_LEN_h	c-format.c	/^  FMT_LEN_h,$/;"	e	enum:format_lengths	file:
FMT_LEN_hh	c-format.c	/^  FMT_LEN_hh,$/;"	e	enum:format_lengths	file:
FMT_LEN_j	c-format.c	/^  FMT_LEN_j,$/;"	e	enum:format_lengths	file:
FMT_LEN_l	c-format.c	/^  FMT_LEN_l,$/;"	e	enum:format_lengths	file:
FMT_LEN_ll	c-format.c	/^  FMT_LEN_ll,$/;"	e	enum:format_lengths	file:
FMT_LEN_none	c-format.c	/^  FMT_LEN_none,$/;"	e	enum:format_lengths	file:
FMT_LEN_t	c-format.c	/^  FMT_LEN_t,$/;"	e	enum:format_lengths	file:
FMT_LEN_z	c-format.c	/^  FMT_LEN_z,$/;"	e	enum:format_lengths	file:
FMT_UT_C_C	dwarf.h	/^    FMT_UT_C_C	= 0x4,$/;"	e	enum:dwarf_subscr_data_formats
FMT_UT_C_X	dwarf.h	/^    FMT_UT_C_X	= 0x5,$/;"	e	enum:dwarf_subscr_data_formats
FMT_UT_X_C	dwarf.h	/^    FMT_UT_X_C	= 0x6,$/;"	e	enum:dwarf_subscr_data_formats
FMT_UT_X_X	dwarf.h	/^    FMT_UT_X_X	= 0x7,$/;"	e	enum:dwarf_subscr_data_formats
FOLLOW_BACK_EDGES	gcse.c	181;"	d	file:
FOR	c-parse.c	23;"	d	file:
FORBIDDEN_INC_DEC_CLASSES	regclass.c	58;"	d	file:
FORCE_PREFERRED_STACK_BOUNDARY_IN_MAIN	i386.h	756;"	d
FORCE_REDUCE_PRIO	cppexp.c	472;"	d	file:
FORCE_TEXT	dbxout.c	158;"	d	file:
FORCE_TEXT	dbxout.c	160;"	d	file:
FORM_ADDR	dwarf.h	/^    FORM_ADDR	= 0x1,$/;"	e	enum:dwarf_form
FORM_BLOCK2	dwarf.h	/^    FORM_BLOCK2	= 0x3,$/;"	e	enum:dwarf_form
FORM_BLOCK4	dwarf.h	/^    FORM_BLOCK4	= 0x4,$/;"	e	enum:dwarf_form
FORM_DATA2	dwarf.h	/^    FORM_DATA2	= 0x5,$/;"	e	enum:dwarf_form
FORM_DATA4	dwarf.h	/^    FORM_DATA4	= 0x6,$/;"	e	enum:dwarf_form
FORM_DATA8	dwarf.h	/^    FORM_DATA8	= 0x7,$/;"	e	enum:dwarf_form
FORM_REF	dwarf.h	/^    FORM_REF	= 0x2,$/;"	e	enum:dwarf_form
FORM_STRING	dwarf.h	/^    FORM_STRING	= 0x8$/;"	e	enum:dwarf_form
FORWARD	df.h	/^    FORWARD,$/;"	e	enum:df_flow_dir
FORWARDER_BLOCK_P	cfgcleanup.c	68;"	d	file:
FOR_ALL_BBS	df.c	174;"	d	file:
FOR_BODY	c-common.h	606;"	d
FOR_COND	c-common.h	604;"	d
FOR_EACH_BB_IN_BITMAP	df.c	180;"	d	file:
FOR_EACH_BB_IN_BITMAP_REV	df.c	186;"	d	file:
FOR_EACH_BB_IN_SBITMAP	df.c	192;"	d	file:
FOR_EXPR	c-common.h	605;"	d
FOR_INIT_STMT	c-common.h	603;"	d
FOR_STMT_CHECK	tree-check.h	161;"	d
FPMATH_387	i386.h	/^  FPMATH_387 = 1,$/;"	e	enum:fpmath_unit
FPMATH_SSE	i386.h	/^  FPMATH_SSE = 2$/;"	e	enum:fpmath_unit
FPSR_REG	i386.h	1101;"	d
FP_CW_ANY	i386.h	/^enum fp_cw_mode {FP_CW_STORED, FP_CW_UNINITIALIZED, FP_CW_ANY};$/;"	e	enum:fp_cw_mode
FP_CW_STORED	i386.h	/^enum fp_cw_mode {FP_CW_STORED, FP_CW_UNINITIALIZED, FP_CW_ANY};$/;"	e	enum:fp_cw_mode
FP_CW_UNINITIALIZED	i386.h	/^enum fp_cw_mode {FP_CW_STORED, FP_CW_UNINITIALIZED, FP_CW_ANY};$/;"	e	enum:fp_cw_mode
FP_INT_SRC_FALSE	insn-attr.h	/^enum attr_fp_int_src {FP_INT_SRC_FALSE, FP_INT_SRC_TRUE};$/;"	e	enum:attr_fp_int_src
FP_INT_SRC_TRUE	insn-attr.h	/^enum attr_fp_int_src {FP_INT_SRC_FALSE, FP_INT_SRC_TRUE};$/;"	e	enum:attr_fp_int_src
FP_MODE_REG	reg-stack.c	228;"	d	file:
FP_REGNO_P	i386.h	1329;"	d
FP_REG_P	i386.h	1328;"	d
FP_SECOND_REG	i386.h	/^  FP_TOP_REG, FP_SECOND_REG,	\/* %st(0) %st(1) *\/$/;"	e	enum:reg_class
FP_SECOND_SSE_REGS	i386.h	/^  FP_SECOND_SSE_REGS,$/;"	e	enum:reg_class
FP_TOP_REG	i386.h	/^  FP_TOP_REG, FP_SECOND_REG,	\/* %st(0) %st(1) *\/$/;"	e	enum:reg_class
FP_TOP_SSE_REGS	i386.h	/^  FP_TOP_SSE_REGS,$/;"	e	enum:reg_class
FP_mode_reg	reg-stack.c	/^  FP_mode_reg[LAST_STACK_REG+1-FIRST_STACK_REG][(int) MAX_MACHINE_MODE];$/;"	v	file:
FRAME_BEGIN_LABEL	dwarf2out.c	327;"	d	file:
FRAME_GROWS_DOWNWARD	i386.h	1549;"	d
FRAME_POINTER_REGNUM	i386.h	1091;"	d
FRAME_POINTER_REQUIRED	i386.h	1120;"	d
FREE_REG_SET	basic-block.h	105;"	d
FROM_BLOCK	sched-rgn.c	102;"	d	file:
FT_ENTRIES_INCREMENT	dwarfout.c	667;"	d	file:
FT_boolean	dwarf.h	/^    FT_boolean		= 0x0015,  \/* breaks "classic" svr4 SDB *\/$/;"	e	enum:dwarf_fundamental_type
FT_char	dwarf.h	/^    FT_char		= 0x0001,$/;"	e	enum:dwarf_fundamental_type
FT_complex	dwarf.h	/^    FT_complex		= 0x0011,  \/* breaks "classic" svr4 SDB *\/$/;"	e	enum:dwarf_fundamental_type
FT_dbl_prec_complex	dwarf.h	/^    FT_dbl_prec_complex	= 0x0012,  \/* breaks "classic" svr4 SDB *\/$/;"	e	enum:dwarf_fundamental_type
FT_dbl_prec_float	dwarf.h	/^    FT_dbl_prec_float	= 0x000f,$/;"	e	enum:dwarf_fundamental_type
FT_ext_prec_complex	dwarf.h	/^    FT_ext_prec_complex	= 0x0016,  \/* breaks "classic" svr4 SDB *\/$/;"	e	enum:dwarf_fundamental_type
FT_ext_prec_float	dwarf.h	/^    FT_ext_prec_float	= 0x0010,  \/* breaks "classic" svr4 SDB *\/$/;"	e	enum:dwarf_fundamental_type
FT_float	dwarf.h	/^    FT_float		= 0x000e,$/;"	e	enum:dwarf_fundamental_type
FT_hi_user	dwarf.h	251;"	d
FT_int128	dwarf.h	/^    FT_int128		= 0x9c10,$/;"	e	enum:dwarf_fundamental_type
FT_int16	dwarf.h	/^    FT_int16		= 0x9302,$/;"	e	enum:dwarf_fundamental_type
FT_int32	dwarf.h	/^    FT_int32		= 0x9604,$/;"	e	enum:dwarf_fundamental_type
FT_int64	dwarf.h	/^    FT_int64		= 0x9908,$/;"	e	enum:dwarf_fundamental_type
FT_int8	dwarf.h	/^    FT_int8		= 0x9001,$/;"	e	enum:dwarf_fundamental_type
FT_integer	dwarf.h	/^    FT_integer		= 0x0007,$/;"	e	enum:dwarf_fundamental_type
FT_label	dwarf.h	/^    FT_label		= 0x0017,$/;"	e	enum:dwarf_fundamental_type
FT_lo_user	dwarf.h	250;"	d
FT_long	dwarf.h	/^    FT_long		= 0x000a,$/;"	e	enum:dwarf_fundamental_type
FT_long_long	dwarf.h	/^    FT_long_long	= 0x8008,$/;"	e	enum:dwarf_fundamental_type
FT_pointer	dwarf.h	/^    FT_pointer		= 0x000d,  \/* an alias for (void *) *\/$/;"	e	enum:dwarf_fundamental_type
FT_real128	dwarf.h	/^    FT_real128		= 0xa310$/;"	e	enum:dwarf_fundamental_type
FT_real32	dwarf.h	/^    FT_real32		= 0xa004,$/;"	e	enum:dwarf_fundamental_type
FT_real64	dwarf.h	/^    FT_real64		= 0xa108,$/;"	e	enum:dwarf_fundamental_type
FT_real96	dwarf.h	/^    FT_real96		= 0xa20c,$/;"	e	enum:dwarf_fundamental_type
FT_short	dwarf.h	/^    FT_short		= 0x0004,$/;"	e	enum:dwarf_fundamental_type
FT_signed_char	dwarf.h	/^    FT_signed_char	= 0x0002,$/;"	e	enum:dwarf_fundamental_type
FT_signed_int128	dwarf.h	/^    FT_signed_int128	= 0x9d10,$/;"	e	enum:dwarf_fundamental_type
FT_signed_int16	dwarf.h	/^    FT_signed_int16	= 0x9402,$/;"	e	enum:dwarf_fundamental_type
FT_signed_int32	dwarf.h	/^    FT_signed_int32	= 0x9704,$/;"	e	enum:dwarf_fundamental_type
FT_signed_int64	dwarf.h	/^    FT_signed_int64	= 0x9a08,$/;"	e	enum:dwarf_fundamental_type
FT_signed_int8	dwarf.h	/^    FT_signed_int8	= 0x9101,$/;"	e	enum:dwarf_fundamental_type
FT_signed_integer	dwarf.h	/^    FT_signed_integer	= 0x0008,$/;"	e	enum:dwarf_fundamental_type
FT_signed_long	dwarf.h	/^    FT_signed_long	= 0x000b,$/;"	e	enum:dwarf_fundamental_type
FT_signed_long_long	dwarf.h	/^    FT_signed_long_long	= 0x8108,$/;"	e	enum:dwarf_fundamental_type
FT_signed_short	dwarf.h	/^    FT_signed_short	= 0x0005,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_char	dwarf.h	/^    FT_unsigned_char	= 0x0003,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_int128	dwarf.h	/^    FT_unsigned_int128	= 0x9e10,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_int16	dwarf.h	/^    FT_unsigned_int16	= 0x9502,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_int32	dwarf.h	/^    FT_unsigned_int32	= 0x9804,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_int64	dwarf.h	/^    FT_unsigned_int64	= 0x9b08,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_int8	dwarf.h	/^    FT_unsigned_int8	= 0x9201,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_integer	dwarf.h	/^    FT_unsigned_integer	= 0x0009,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_long	dwarf.h	/^    FT_unsigned_long	= 0x000c,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_long_long	dwarf.h	/^    FT_unsigned_long_long = 0x8208,$/;"	e	enum:dwarf_fundamental_type
FT_unsigned_short	dwarf.h	/^    FT_unsigned_short	= 0x0006,$/;"	e	enum:dwarf_fundamental_type
FT_void	dwarf.h	/^    FT_void		= 0x0014,$/;"	e	enum:dwarf_fundamental_type
FUNCDEF	c-decl.c	/^  FUNCDEF,			\/* Function definition *\/$/;"	e	enum:decl_context	file:
FUNCTION_ARG	i386.h	1704;"	d
FUNCTION_ARG_ADVANCE	i386.h	1688;"	d
FUNCTION_ARG_BOUNDARY	expr.h	137;"	d
FUNCTION_ARG_BOUNDARY	i386.h	839;"	d
FUNCTION_ARG_PADDING	expr.h	122;"	d
FUNCTION_ARG_PARTIAL_NREGS	i386.h	1711;"	d
FUNCTION_ARG_REGNO_P	i386.h	1659;"	d
FUNCTION_ARG_REG_LITTLE_ENDIAN	defaults.h	455;"	d
FUNCTION_BOUNDARY	i386.h	760;"	d
FUNCTION_DECL_CHECK	tree-check.h	36;"	d
FUNCTION_MODE	i386.h	2380;"	d
FUNCTION_OK_FOR_SIBCALL	calls.c	38;"	d	file:
FUNCTION_OK_FOR_SIBCALL	i386.h	1718;"	d
FUNCTION_PROFILER	i386.h	1764;"	d
FUNCTION_PROFILER	linux.h	57;"	d
FUNCTION_PROFILER	linux.h	58;"	d
FUNCTION_PROFILER	x86-64.h	32;"	d
FUNCTION_PROFILER	x86-64.h	33;"	d
FUNCTION_TYPE_CHECK	tree-check.h	29;"	d
FUNCTION_UNITS_SIZE	insn-attr.h	96;"	d
FUNCTION_VALUE	i386.h	1640;"	d
FUNCTION_VALUE_REGNO_P	i386.h	1643;"	d
FUNC_BEGIN_LABEL	dwarf2out.c	320;"	d	file:
FUNC_BEGIN_LABEL	vmsdbgout.c	261;"	d	file:
FUNC_END_LABEL	dwarf2out.c	324;"	d	file:
FUNC_END_LABEL	vmsdbgout.c	267;"	d	file:
FUNC_END_LABEL_FMT	dwarfout.c	1172;"	d	file:
FUNC_PROLOG_LABEL	vmsdbgout.c	264;"	d	file:
FUNC_TABLE_INCREMENT	vmsdbgout.c	107;"	d	file:
F_OK	system.h	226;"	d
G	ggc-page.c	/^} G;$/;"	v	typeref:struct:globals	file:
GCCBUGURL	system.h	29;"	d
GCC_BAD	c-pragma.c	37;"	d	file:
GCC_BAD2	c-pragma.c	38;"	d	file:
GCC_BAD_ACTION	c-pragma.c	201;"	d	file:
GCC_BAD_ACTION	c-pragma.c	244;"	d	file:
GCC_BASIC_BLOCK_H	basic-block.h	23;"	d
GCC_BITMAP_H	bitmap.h	23;"	d
GCC_CPPDEFAULT_H	cppdefault.h	23;"	d
GCC_CPPHASH_H	cpphash.h	24;"	d
GCC_CPPLIB_H	cpplib.h	24;"	d
GCC_C_COMMON_H	c-common.h	23;"	d
GCC_C_LEX_H	c-lex.h	22;"	d
GCC_C_PRAGMA_H	c-pragma.h	23;"	d
GCC_C_TREE_H	c-tree.h	23;"	d
GCC_DBX_ELF_H	dbxelf.h	26;"	d
GCC_DEBUG_H	debug.h	19;"	d
GCC_DEFAULTS_H	defaults.h	24;"	d
GCC_DIAGNOSTIC_H	diagnostic.h	23;"	d
GCC_ERRORS_H	errors.h	30;"	d
GCC_FLAGS_H	flags.h	23;"	d
GCC_GCOV_IO_H	gcov-io.h	23;"	d
GCC_GENRTL_H	genrtl.h	4;"	d
GCC_GRAPH_H	graph.h	22;"	d
GCC_GSTAB_H	gstab.h	2;"	d
GCC_HARD_REG_SET_H	hard-reg-set.h	22;"	d
GCC_HASHTABLE_H	hashtable.h	19;"	d
GCC_HOOKS_H	hooks.h	23;"	d
GCC_HWINT_H	hwint.h	10;"	d
GCC_IDENT_TO_HT_IDENT	tree.h	789;"	d
GCC_INSN_ADDR_H	insn-addr.h	22;"	d
GCC_INSN_ATTR_H	insn-attr.h	5;"	d
GCC_INSN_CODES_H	insn-codes.h	5;"	d
GCC_INSN_CONFIG_H	insn-config.h	5;"	d
GCC_INSN_CONSTANTS_H	insn-constants.h	5;"	d
GCC_INSN_FLAGS_H	insn-flags.h	5;"	d
GCC_INTL_H	intl.h	20;"	d
GCC_LANG_HOOKS_DEF_H	langhooks-def.h	23;"	d
GCC_LANG_HOOKS_H	langhooks.h	22;"	d
GCC_LIBFUNCS_H	libfuncs.h	22;"	d
GCC_LINE_MAP_H	line-map.h	24;"	d
GCC_MBCHAR_H	mbchar.h	22;"	d
GCC_MKDEPS_H	mkdeps.h	24;"	d
GCC_OPTABS_H	optabs.h	22;"	d
GCC_PARAMS_H	params.h	36;"	d
GCC_PREFIX_H	prefix.h	23;"	d
GCC_REAL_H	real.h	23;"	d
GCC_RTL_H	rtl.h	23;"	d
GCC_SBITMAP_H	sbitmap.h	22;"	d
GCC_SYSTEM_H	system.h	24;"	d
GCC_TIMEVAR_H	timevar.h	23;"	d
GCC_TM_PREDS_H	tm-preds.h	4;"	d
GCC_TOPLEV_H	toplev.h	22;"	d
GCC_TREE_CHECK_H	tree-check.h	4;"	d
GCC_TREE_DUMP_H	tree-dump.h	23;"	d
GCC_TREE_INLINE_H	tree-inline.h	23;"	d
GCC_VARRAY_H	varray.h	23;"	d
GCC_VERSION	ansidecl.h	136;"	d
GCC_VERSION_H	version.h	2;"	d
GCC_VMSDBG_H	vmsdbg.h	22;"	d
GCOV_INDEX_TO_BB	profile.c	72;"	d	file:
GCOV_TYPE_SIZE	defaults.h	340;"	d
GCOV_TYPE_SIZE	defaults.h	342;"	d
GDB_INV_REF_REGPARM_STABS_LETTER	dbxout.c	120;"	d	file:
GENERAL_INDUCT	loop.h	/^  GENERAL_INDUCT$/;"	e	enum:iv_mode
GENERAL_REGNO_P	i386.h	1314;"	d
GENERAL_REGS	i386.h	/^  GENERAL_REGS,			\/* %eax %ebx %ecx %edx %esi %edi %ebp %esp %r8 - %r15*\/$/;"	e	enum:reg_class
GENERAL_REG_P	i386.h	1317;"	d
GEN_CALL	insn-flags.h	1083;"	d
GEN_CALL_POP	insn-flags.h	1081;"	d
GEN_CALL_VALUE	insn-flags.h	1088;"	d
GEN_CALL_VALUE_POP	insn-flags.h	1086;"	d
GEN_FCN	optabs.h	52;"	d
GEN_INT	rtl.h	1662;"	d
GETGROUPS_T	auto-host.h	16;"	d
GET_CLASS_NARROWEST_MODE	machmode.h	158;"	d
GET_CODE	rtl.h	208;"	d
GET_CSE_REG_INFO	cse.c	503;"	d	file:
GET_DIRECTIVE_LINE	c-common.h	535;"	d
GET_ENVIRONMENT	c-lex.c	54;"	d	file:
GET_ENV_PATH_LIST	cppinit.c	36;"	d	file:
GET_MODE	rtl.h	211;"	d
GET_MODE_ALIGNMENT	machmode.h	153;"	d
GET_MODE_BITSIZE	machmode.h	97;"	d
GET_MODE_CLASS	machmode.h	53;"	d
GET_MODE_INNER	machmode.h	114;"	d
GET_MODE_MASK	machmode.h	108;"	d
GET_MODE_NAME	machmode.h	42;"	d
GET_MODE_NUNITS	machmode.h	90;"	d
GET_MODE_SIZE	machmode.h	81;"	d
GET_MODE_UNIT_SIZE	machmode.h	86;"	d
GET_MODE_WIDER_MODE	machmode.h	124;"	d
GET_NOTE_INSN_NAME	rtl.h	744;"	d
GET_NUM_ELEM	rtl.h	229;"	d
GET_REAL	real.c	270;"	d	file:
GET_REAL	real.c	282;"	d	file:
GET_REAL	real.c	297;"	d	file:
GET_REAL	real.c	330;"	d	file:
GET_REG_NOTE_NAME	rtl.h	608;"	d
GET_RTX_CLASS	rtl.h	64;"	d
GET_RTX_FORMAT	rtl.h	61;"	d
GET_RTX_LENGTH	rtl.h	55;"	d
GET_RTX_NAME	rtl.h	58;"	d
GET_SRC_PROB	sched-rgn.c	242;"	d	file:
GE_EXPR_CHECK	tree-check.h	106;"	d
GGC_ALWAYS_COLLECT	ggc-page.c	105;"	d	file:
GGC_ALWAYS_COLLECT	ggc-page.c	99;"	d	file:
GGC_DEBUG_LEVEL	ggc-page.c	114;"	d	file:
GGC_MIN_EXPAND_FOR_GC	ggc-page.c	347;"	d	file:
GGC_MIN_LAST_ALLOCATED	ggc-page.c	351;"	d	file:
GGC_POISON	ggc-page.c	102;"	d	file:
GGC_POISON	ggc-page.c	93;"	d	file:
GGC_QUIRE_SIZE	ggc-page.c	357;"	d	file:
GOTO	c-parse.c	30;"	d	file:
GOTO_DESTINATION	c-common.h	623;"	d
GOTO_EXPR_CHECK	tree-check.h	144;"	d
GOTO_FAKE_P	c-common.h	625;"	d
GOTO_STMT_CHECK	tree-check.h	168;"	d
GOTO_SUBROUTINE_EXPR_CHECK	tree-check.h	142;"	d
GO_IF_HARD_REG_EQUAL	hard-reg-set.h	110;"	d
GO_IF_HARD_REG_EQUAL	hard-reg-set.h	175;"	d
GO_IF_HARD_REG_EQUAL	hard-reg-set.h	238;"	d
GO_IF_HARD_REG_EQUAL	hard-reg-set.h	311;"	d
GO_IF_HARD_REG_EQUAL	hard-reg-set.h	376;"	d
GO_IF_HARD_REG_SUBSET	hard-reg-set.h	108;"	d
GO_IF_HARD_REG_SUBSET	hard-reg-set.h	169;"	d
GO_IF_HARD_REG_SUBSET	hard-reg-set.h	231;"	d
GO_IF_HARD_REG_SUBSET	hard-reg-set.h	303;"	d
GO_IF_HARD_REG_SUBSET	hard-reg-set.h	369;"	d
GO_IF_LEGITIMATE_ADDRESS	i386.h	1948;"	d
GO_IF_LEGITIMATE_ADDRESS	i386.h	1955;"	d
GO_IF_MODE_DEPENDENT_ADDRESS	i386.h	2021;"	d
GR_ARG_POINTER	rtl.h	/^  GR_ARG_POINTER = GR_FRAME_POINTER,$/;"	e	enum:global_rtl_index
GR_ARG_POINTER	rtl.h	/^  GR_ARG_POINTER = GR_HARD_FRAME_POINTER,$/;"	e	enum:global_rtl_index
GR_CC0	rtl.h	/^  GR_CC0,$/;"	e	enum:global_rtl_index
GR_FRAME_POINTER	rtl.h	/^  GR_FRAME_POINTER,$/;"	e	enum:global_rtl_index
GR_HARD_FRAME_POINTER	rtl.h	/^  GR_HARD_FRAME_POINTER = GR_FRAME_POINTER,$/;"	e	enum:global_rtl_index
GR_MAX	rtl.h	/^  GR_MAX$/;"	e	enum:global_rtl_index
GR_PC	rtl.h	/^  GR_PC,$/;"	e	enum:global_rtl_index
GR_STACK_POINTER	rtl.h	/^  GR_STACK_POINTER,$/;"	e	enum:global_rtl_index
GR_VIRTUAL_CFA	rtl.h	/^  GR_VIRTUAL_CFA,$/;"	e	enum:global_rtl_index
GR_VIRTUAL_INCOMING_ARGS	rtl.h	/^  GR_VIRTUAL_INCOMING_ARGS,$/;"	e	enum:global_rtl_index
GR_VIRTUAL_OUTGOING_ARGS	rtl.h	/^  GR_VIRTUAL_OUTGOING_ARGS,$/;"	e	enum:global_rtl_index
GR_VIRTUAL_STACK_ARGS	rtl.h	/^  GR_VIRTUAL_STACK_ARGS,$/;"	e	enum:global_rtl_index
GR_VIRTUAL_STACK_DYNAMIC	rtl.h	/^  GR_VIRTUAL_STACK_DYNAMIC,$/;"	e	enum:global_rtl_index
GT_EXPR_CHECK	tree-check.h	105;"	d
GUESSPATHLEN	getpwd.c	52;"	d	file:
GUESSPATHLEN	getpwd.c	54;"	d	file:
HAIFA_INLINE	sched-int.h	254;"	d
HAIFA_INLINE	sched-int.h	261;"	d
HALF_PIC_ADDRESS_P	i386.h	46;"	d
HALF_PIC_DECLARE	i386.h	44;"	d
HALF_PIC_ENCODE	i386.h	43;"	d
HALF_PIC_FINISH	i386.h	48;"	d
HALF_PIC_INIT	i386.h	45;"	d
HALF_PIC_NUMBER_PTRS	i386.h	41;"	d
HALF_PIC_NUMBER_REFS	i386.h	42;"	d
HALF_PIC_P	i386.h	40;"	d
HALF_PIC_PTR	i386.h	47;"	d
HANDLE_PRAGMA_PACK	c-pragma.h	33;"	d
HANDLE_PRAGMA_PACK	c-pragma.h	41;"	d
HANDLE_PRAGMA_WEAK	c-pragma.h	28;"	d
HANDLE_SUBREG	df.c	156;"	d	file:
HANDLE_SYSV_PRAGMA	elfos.h	59;"	d
HARD_CONST	hard-reg-set.h	59;"	d
HARD_FRAME_POINTER_REGNUM	i386.h	1088;"	d
HARD_FRAME_POINTER_REGNUM	rtl.h	1580;"	d
HARD_REGISTER_NUM_P	rtl.h	808;"	d
HARD_REGISTER_P	rtl.h	805;"	d
HARD_REGNO_CALLER_SAVE_MODE	i386.h	1070;"	d
HARD_REGNO_CALLER_SAVE_MODE	regs.h	219;"	d
HARD_REGNO_CALL_PART_CLOBBERED	regs.h	226;"	d
HARD_REGNO_MODE_OK	i386.h	1045;"	d
HARD_REGNO_NREGS	i386.h	1004;"	d
HARD_REGNO_RENAME_OK	i386.h	3202;"	d
HARD_REG_ELT_TYPE	hard-reg-set.h	/^typedef unsigned HOST_WIDE_INT HARD_REG_ELT_TYPE;$/;"	t
HARD_REG_SET	hard-reg-set.h	/^typedef HARD_REG_ELT_TYPE HARD_REG_SET[HARD_REG_SET_LONGS];$/;"	t
HARD_REG_SET	hard-reg-set.h	45;"	d
HARD_REG_SET_LONGS	hard-reg-set.h	49;"	d
HASH	cse.c	472;"	d	file:
HASHBITS	varasm.c	2406;"	d	file:
HASHSTEP	hashtable.c	67;"	d	file:
HASHSTEP	hashtable.c	73;"	d	file:
HASH_MASK	cse.c	467;"	d	file:
HASH_SHIFT	cse.c	465;"	d	file:
HASH_SIZE	cse.c	466;"	d	file:
HASH_SIZE	print-tree.c	32;"	d	file:
HAS_INIT_SECTION	function.c	6422;"	d	file:
HAS_INIT_SECTION	function.c	6423;"	d	file:
HAVE_ALLOCA	auto-host.h	22;"	d
HAVE_ALLOCA_H	auto-host.h	25;"	d
HAVE_ARGZ_H	auto-host.h	207;"	d
HAVE_AS_DWARF2_DEBUG_LINE	auto-host.h	575;"	d
HAVE_AS_DWARF2_DEBUG_LINE	x86-64.h	93;"	d
HAVE_AS_DWARF2_DEBUG_LINE	x86-64.h	94;"	d
HAVE_AS_GDWARF2_DEBUG_FLAG	auto-host.h	578;"	d
HAVE_AS_GOTOFF_IN_DATA	auto-host.h	571;"	d
HAVE_AS_GSTABS_DEBUG_FLAG	auto-host.h	581;"	d
HAVE_AS_LEB128	auto-host.h	544;"	d
HAVE_ATOLL	auto-host.h	100;"	d
HAVE_ATTR_alternative	insn-attr.h	7;"	d
HAVE_ATTR_athlon_decode	insn-attr.h	68;"	d
HAVE_ATTR_athlon_fpunits	insn-attr.h	72;"	d
HAVE_ATTR_cpu	insn-attr.h	9;"	d
HAVE_ATTR_fp_int_src	insn-attr.h	52;"	d
HAVE_ATTR_i387	insn-attr.h	21;"	d
HAVE_ATTR_imm_disp	insn-attr.h	48;"	d
HAVE_ATTR_length	insn-attr.h	35;"	d
HAVE_ATTR_length_address	insn-attr.h	25;"	d
HAVE_ATTR_length_immediate	insn-attr.h	23;"	d
HAVE_ATTR_memory	insn-attr.h	44;"	d
HAVE_ATTR_mode	insn-attr.h	17;"	d
HAVE_ATTR_modrm	insn-attr.h	33;"	d
HAVE_ATTR_pent_pair	insn-attr.h	60;"	d
HAVE_ATTR_pent_prefix	insn-attr.h	56;"	d
HAVE_ATTR_ppro_uops	insn-attr.h	64;"	d
HAVE_ATTR_prefix_0f	insn-attr.h	31;"	d
HAVE_ATTR_prefix_data16	insn-attr.h	27;"	d
HAVE_ATTR_prefix_rep	insn-attr.h	29;"	d
HAVE_ATTR_type	insn-attr.h	13;"	d
HAVE_CLOCK	auto-host.h	106;"	d
HAVE_CLOCK_T	auto-host.h	496;"	d
HAVE_DCGETTEXT	auto-host.h	109;"	d
HAVE_DECL_ABORT	auto-host.h	427;"	d
HAVE_DECL_ATOF	auto-host.h	430;"	d
HAVE_DECL_ATOL	auto-host.h	421;"	d
HAVE_DECL_BASENAME	auto-host.h	472;"	d
HAVE_DECL_CALLOC	auto-host.h	466;"	d
HAVE_DECL_CLOCK	auto-host.h	478;"	d
HAVE_DECL_ERRNO	auto-host.h	457;"	d
HAVE_DECL_FREE	auto-host.h	469;"	d
HAVE_DECL_GETCWD	auto-host.h	433;"	d
HAVE_DECL_GETENV	auto-host.h	418;"	d
HAVE_DECL_GETOPT	auto-host.h	475;"	d
HAVE_DECL_GETRLIMIT	auto-host.h	481;"	d
HAVE_DECL_GETWD	auto-host.h	436;"	d
HAVE_DECL_MALLOC	auto-host.h	460;"	d
HAVE_DECL_REALLOC	auto-host.h	463;"	d
HAVE_DECL_SBRK	auto-host.h	424;"	d
HAVE_DECL_SETRLIMIT	auto-host.h	484;"	d
HAVE_DECL_STRSTR	auto-host.h	454;"	d
HAVE_DESIGNATED_INITIALIZERS	system.h	369;"	d
HAVE_DOS_BASED_FILE_SYSTEM	lbasename.c	50;"	d	file:
HAVE_DUP2	auto-host.h	112;"	d
HAVE_FCNTL_H	auto-host.h	213;"	d
HAVE_GAS_BALIGN_AND_P2ALIGN	auto-host.h	77;"	d
HAVE_GAS_FILDS_FISTS	auto-host.h	80;"	d
HAVE_GAS_HIDDEN	auto-host.h	541;"	d
HAVE_GAS_MAX_SKIP_P2ALIGN	auto-host.h	74;"	d
HAVE_GAS_SHF_MERGE	auto-host.h	550;"	d
HAVE_GAS_SUBSECTION_ORDERING	auto-host.h	535;"	d
HAVE_GAS_WEAK	auto-host.h	538;"	d
HAVE_GETCWD	auto-host.h	126;"	d
HAVE_GETEGID	auto-host.h	129;"	d
HAVE_GETEUID	auto-host.h	132;"	d
HAVE_GETGID	auto-host.h	135;"	d
HAVE_GETRLIMIT	auto-host.h	141;"	d
HAVE_GETTEXT	auto-host.h	520;"	d
HAVE_GETUID	auto-host.h	147;"	d
HAVE_ICONV	auto-host.h	412;"	d
HAVE_ICONV	auto-host.h	502;"	d
HAVE_INTTYPES_H	auto-host.h	397;"	d
HAVE_KILL	auto-host.h	150;"	d
HAVE_LANGINFO_CODESET	auto-host.h	508;"	d
HAVE_LANGINFO_H	auto-host.h	216;"	d
HAVE_LC_MESSAGES	auto-host.h	511;"	d
HAVE_LD_EH_FRAME_HDR	auto-host.h	584;"	d
HAVE_LIMITS_H	auto-host.h	219;"	d
HAVE_LOCALE_H	auto-host.h	222;"	d
HAVE_LONG_DOUBLE	ansidecl.h	266;"	d
HAVE_LONG_DOUBLE	auto-host.h	312;"	d
HAVE_LONG_LONG	auto-host.h	323;"	d
HAVE_MACHINE_MODES	machmode.h	23;"	d
HAVE_MALLOC_H	auto-host.h	226;"	d
HAVE_MEMPCPY	auto-host.h	156;"	d
HAVE_MMAP_DEV_ZERO	ggc-page.c	35;"	d	file:
HAVE_MUNMAP	auto-host.h	159;"	d
HAVE_NL_LANGINFO	auto-host.h	162;"	d
HAVE_NL_TYPES_H	auto-host.h	230;"	d
HAVE_POST_DECREMENT	rtl.h	1051;"	d
HAVE_POST_INCREMENT	rtl.h	1047;"	d
HAVE_POST_MODIFY_DISP	rtl.h	1055;"	d
HAVE_POST_MODIFY_REG	rtl.h	1059;"	d
HAVE_PRE_DECREMENT	rtl.h	1043;"	d
HAVE_PRE_INCREMENT	rtl.h	1039;"	d
HAVE_PRE_MODIFY_DISP	rtl.h	1063;"	d
HAVE_PRE_MODIFY_REG	rtl.h	1067;"	d
HAVE_PRINTF_PTR	auto-host.h	400;"	d
HAVE_PUTENV	auto-host.h	168;"	d
HAVE_SECONDARY_RELOADS	reload.h	35;"	d
HAVE_SETENV	auto-host.h	171;"	d
HAVE_SETLOCALE	auto-host.h	174;"	d
HAVE_SETRLIMIT	auto-host.h	177;"	d
HAVE_STDDEF_H	auto-host.h	233;"	d
HAVE_STDLIB_H	auto-host.h	236;"	d
HAVE_STPCPY	auto-host.h	180;"	d
HAVE_STRCASECMP	auto-host.h	183;"	d
HAVE_STRCHR	auto-host.h	186;"	d
HAVE_STRDUP	auto-host.h	189;"	d
HAVE_STRINGIZE	auto-host.h	28;"	d
HAVE_STRING_H	auto-host.h	239;"	d
HAVE_STRSIGNAL	auto-host.h	192;"	d
HAVE_STRTOUL	auto-host.h	195;"	d
HAVE_SYSCONF	auto-host.h	198;"	d
HAVE_SYS_FILE_H	auto-host.h	245;"	d
HAVE_SYS_STAT_H	auto-host.h	254;"	d
HAVE_SYS_TIME	timevar.c	83;"	d	file:
HAVE_SYS_TIME	timevar.c	89;"	d	file:
HAVE_TIME_H	auto-host.h	263;"	d
HAVE_TSEARCH	auto-host.h	204;"	d
HAVE_UNISTD_H	auto-host.h	325;"	d
HAVE_USER_TIME	timevar.c	82;"	d	file:
HAVE_USER_TIME	timevar.c	88;"	d	file:
HAVE_USER_TIME	timevar.c	93;"	d	file:
HAVE_VALUE	cppexp.c	465;"	d	file:
HAVE_VOLATILE	auto-host.h	309;"	d
HAVE_WALL_TIME	timevar.c	84;"	d	file:
HAVE__BOOL	auto-host.h	334;"	d
HAVE__BOOL	system.h	375;"	d
HAVE___ARGZ_COUNT	auto-host.h	91;"	d
HAVE___ARGZ_NEXT	auto-host.h	94;"	d
HAVE___ARGZ_STRINGIFY	auto-host.h	97;"	d
HAVE___INT64	auto-host.h	318;"	d
HAVE_absdf2	insn-flags.h	463;"	d
HAVE_absdf2_ifs	insn-flags.h	87;"	d
HAVE_absdf2_memory	insn-flags.h	86;"	d
HAVE_abssf2	insn-flags.h	462;"	d
HAVE_abssf2_ifs	insn-flags.h	82;"	d
HAVE_abssf2_memory	insn-flags.h	81;"	d
HAVE_abstf2	insn-flags.h	465;"	d
HAVE_absxf2	insn-flags.h	464;"	d
HAVE_adddf3	insn-flags.h	403;"	d
HAVE_adddi3	insn-flags.h	397;"	d
HAVE_addhi3	insn-flags.h	399;"	d
HAVE_addqi3	insn-flags.h	400;"	d
HAVE_addqi3_cc	insn-flags.h	58;"	d
HAVE_addqi_ext_1	insn-flags.h	60;"	d
HAVE_addsf3	insn-flags.h	404;"	d
HAVE_addsi3	insn-flags.h	398;"	d
HAVE_addsi_1_zext	insn-flags.h	59;"	d
HAVE_addtf3	insn-flags.h	402;"	d
HAVE_addv2sf3	insn-flags.h	318;"	d
HAVE_addv2si3	insn-flags.h	261;"	d
HAVE_addv4hi3	insn-flags.h	260;"	d
HAVE_addv4sf3	insn-flags.h	219;"	d
HAVE_addv8qi3	insn-flags.h	259;"	d
HAVE_addxf3	insn-flags.h	401;"	d
HAVE_allocate_stack	insn-flags.h	586;"	d
HAVE_allocate_stack_worker	insn-flags.h	585;"	d
HAVE_allocate_stack_worker_1	insn-flags.h	191;"	d
HAVE_allocate_stack_worker_rex64	insn-flags.h	192;"	d
HAVE_anddi3	insn-flags.h	441;"	d
HAVE_andhi3	insn-flags.h	443;"	d
HAVE_andqi3	insn-flags.h	444;"	d
HAVE_andqi_ext_0	insn-flags.h	70;"	d
HAVE_andsi3	insn-flags.h	442;"	d
HAVE_ashldi3	insn-flags.h	470;"	d
HAVE_ashldi3_1	insn-flags.h	91;"	d
HAVE_ashlhi3	insn-flags.h	474;"	d
HAVE_ashlqi3	insn-flags.h	475;"	d
HAVE_ashlsi3	insn-flags.h	473;"	d
HAVE_ashlv2si3	insn-flags.h	304;"	d
HAVE_ashlv4hi3	insn-flags.h	303;"	d
HAVE_ashrdi3	insn-flags.h	476;"	d
HAVE_ashrdi3_1	insn-flags.h	95;"	d
HAVE_ashrdi3_63_rex64	insn-flags.h	93;"	d
HAVE_ashrhi3	insn-flags.h	479;"	d
HAVE_ashrqi3	insn-flags.h	480;"	d
HAVE_ashrsi3	insn-flags.h	478;"	d
HAVE_ashrsi3_31	insn-flags.h	97;"	d
HAVE_ashrv2si3	insn-flags.h	299;"	d
HAVE_ashrv4hi3	insn-flags.h	298;"	d
HAVE_beq	insn-flags.h	514;"	d
HAVE_bge	insn-flags.h	520;"	d
HAVE_bgeu	insn-flags.h	521;"	d
HAVE_bgt	insn-flags.h	516;"	d
HAVE_bgtu	insn-flags.h	517;"	d
HAVE_ble	insn-flags.h	522;"	d
HAVE_bleu	insn-flags.h	523;"	d
HAVE_blockage	insn-flags.h	103;"	d
HAVE_blt	insn-flags.h	518;"	d
HAVE_bltgt	insn-flags.h	531;"	d
HAVE_bltu	insn-flags.h	519;"	d
HAVE_bne	insn-flags.h	515;"	d
HAVE_bordered	insn-flags.h	525;"	d
HAVE_builtin_setjmp_receiver	insn-flags.h	587;"	d
HAVE_buneq	insn-flags.h	526;"	d
HAVE_bunge	insn-flags.h	527;"	d
HAVE_bungt	insn-flags.h	528;"	d
HAVE_bunle	insn-flags.h	529;"	d
HAVE_bunlt	insn-flags.h	530;"	d
HAVE_bunordered	insn-flags.h	524;"	d
HAVE_call	insn-flags.h	536;"	d
HAVE_call_exp	insn-flags.h	537;"	d
HAVE_call_pop	insn-flags.h	535;"	d
HAVE_call_value	insn-flags.h	539;"	d
HAVE_call_value_exp	insn-flags.h	540;"	d
HAVE_call_value_pop	insn-flags.h	538;"	d
HAVE_casesi	expr.c	10443;"	d	file:
HAVE_cld	insn-flags.h	145;"	d
HAVE_clrstrdi	insn-flags.h	561;"	d
HAVE_clrstrsi	insn-flags.h	560;"	d
HAVE_cmpdf	insn-flags.h	353;"	d
HAVE_cmpdi	insn-flags.h	344;"	d
HAVE_cmpdi_1_insn_rex64	insn-flags.h	8;"	d
HAVE_cmpdi_1_rex64	insn-flags.h	348;"	d
HAVE_cmpdi_ccno_1_rex64	insn-flags.h	7;"	d
HAVE_cmphi	insn-flags.h	346;"	d
HAVE_cmpintqi	insn-flags.h	570;"	d
HAVE_cmpqi	insn-flags.h	347;"	d
HAVE_cmpqi_ext_3	insn-flags.h	350;"	d
HAVE_cmpqi_ext_3_insn	insn-flags.h	9;"	d
HAVE_cmpqi_ext_3_insn_rex64	insn-flags.h	10;"	d
HAVE_cmpsf	insn-flags.h	354;"	d
HAVE_cmpsi	insn-flags.h	345;"	d
HAVE_cmpsi_1	insn-flags.h	349;"	d
HAVE_cmpstrqi_1	insn-flags.h	172;"	d
HAVE_cmpstrqi_nz_1	insn-flags.h	170;"	d
HAVE_cmpstrqi_nz_rex_1	insn-flags.h	171;"	d
HAVE_cmpstrqi_rex_1	insn-flags.h	173;"	d
HAVE_cmpstrsi	insn-flags.h	569;"	d
HAVE_cmptf	insn-flags.h	352;"	d
HAVE_cmpxf	insn-flags.h	351;"	d
HAVE_conditional_execution	ifcvt.c	41;"	d	file:
HAVE_conditional_move	ifcvt.c	44;"	d	file:
HAVE_conditional_move	insn-config.h	12;"	d
HAVE_conditional_trap	ifcvt.c	56;"	d	file:
HAVE_conditional_trap	insn-flags.h	588;"	d
HAVE_cosdf2	insn-flags.h	137;"	d
HAVE_cossf2	insn-flags.h	139;"	d
HAVE_costf2	insn-flags.h	143;"	d
HAVE_cosxf2	insn-flags.h	141;"	d
HAVE_cvtpi2ps	insn-flags.h	253;"	d
HAVE_cvtps2pi	insn-flags.h	254;"	d
HAVE_cvtsi2ss	insn-flags.h	256;"	d
HAVE_cvtss2si	insn-flags.h	257;"	d
HAVE_cvttps2pi	insn-flags.h	255;"	d
HAVE_cvttss2si	insn-flags.h	258;"	d
HAVE_decscc	ifcvt.c	50;"	d	file:
HAVE_divdf3	insn-flags.h	433;"	d
HAVE_divmoddi4	insn-flags.h	435;"	d
HAVE_divmodhi4	insn-flags.h	66;"	d
HAVE_divmodsi4	insn-flags.h	436;"	d
HAVE_divqi3	insn-flags.h	64;"	d
HAVE_divsf3	insn-flags.h	434;"	d
HAVE_divtf3	insn-flags.h	432;"	d
HAVE_divv4sf3	insn-flags.h	225;"	d
HAVE_divxf3	insn-flags.h	431;"	d
HAVE_doloop_end	insn-flags.h	534;"	d
HAVE_doloop_end_internal	insn-flags.h	102;"	d
HAVE_eh_return	insn-flags.h	546;"	d
HAVE_eh_return_di	insn-flags.h	111;"	d
HAVE_eh_return_si	insn-flags.h	110;"	d
HAVE_emms	insn-flags.h	315;"	d
HAVE_epilogue	flow.c	155;"	d	file:
HAVE_epilogue	insn-flags.h	544;"	d
HAVE_eqv2sf3	insn-flags.h	323;"	d
HAVE_eqv2si3	insn-flags.h	290;"	d
HAVE_eqv4hi3	insn-flags.h	289;"	d
HAVE_eqv8qi3	insn-flags.h	288;"	d
HAVE_extenddftf2	insn-flags.h	375;"	d
HAVE_extenddfxf2	insn-flags.h	374;"	d
HAVE_extendhidi2	insn-flags.h	25;"	d
HAVE_extendhisi2	insn-flags.h	27;"	d
HAVE_extendqidi2	insn-flags.h	26;"	d
HAVE_extendqihi2	insn-flags.h	28;"	d
HAVE_extendqisi2	insn-flags.h	29;"	d
HAVE_extendsfdf2	insn-flags.h	371;"	d
HAVE_extendsftf2	insn-flags.h	373;"	d
HAVE_extendsfxf2	insn-flags.h	372;"	d
HAVE_extendsidi2	insn-flags.h	370;"	d
HAVE_extendsidi2_rex64	insn-flags.h	24;"	d
HAVE_extv	expmed.c	82;"	d	file:
HAVE_extv	insn-flags.h	493;"	d
HAVE_extzv	expmed.c	87;"	d	file:
HAVE_extzv	insn-flags.h	494;"	d
HAVE_femms	insn-flags.h	327;"	d
HAVE_ffssi2	insn-flags.h	547;"	d
HAVE_ffssi_1	insn-flags.h	114;"	d
HAVE_fix_truncdfdi2	insn-flags.h	383;"	d
HAVE_fix_truncdfdi_sse	insn-flags.h	37;"	d
HAVE_fix_truncdfhi2	insn-flags.h	391;"	d
HAVE_fix_truncdfsi2	insn-flags.h	387;"	d
HAVE_fix_truncdfsi_sse	insn-flags.h	43;"	d
HAVE_fix_truncdi_memory	insn-flags.h	34;"	d
HAVE_fix_truncdi_nomemory	insn-flags.h	32;"	d
HAVE_fix_trunchi_memory	insn-flags.h	46;"	d
HAVE_fix_trunchi_nomemory	insn-flags.h	44;"	d
HAVE_fix_truncsfdi2	insn-flags.h	384;"	d
HAVE_fix_truncsfdi_sse	insn-flags.h	36;"	d
HAVE_fix_truncsfhi2	insn-flags.h	392;"	d
HAVE_fix_truncsfsi2	insn-flags.h	388;"	d
HAVE_fix_truncsfsi_sse	insn-flags.h	42;"	d
HAVE_fix_truncsi_memory	insn-flags.h	40;"	d
HAVE_fix_truncsi_nomemory	insn-flags.h	38;"	d
HAVE_fix_trunctfdi2	insn-flags.h	382;"	d
HAVE_fix_trunctfhi2	insn-flags.h	390;"	d
HAVE_fix_trunctfsi2	insn-flags.h	386;"	d
HAVE_fix_truncxfdi2	insn-flags.h	381;"	d
HAVE_fix_truncxfhi2	insn-flags.h	389;"	d
HAVE_fix_truncxfsi2	insn-flags.h	385;"	d
HAVE_floatdidf2	insn-flags.h	396;"	d
HAVE_floatdisf2	insn-flags.h	394;"	d
HAVE_floatditf2	insn-flags.h	57;"	d
HAVE_floatdixf2	insn-flags.h	56;"	d
HAVE_floathidf2	insn-flags.h	51;"	d
HAVE_floathisf2	insn-flags.h	50;"	d
HAVE_floathitf2	insn-flags.h	53;"	d
HAVE_floathixf2	insn-flags.h	52;"	d
HAVE_floatsidf2	insn-flags.h	395;"	d
HAVE_floatsisf2	insn-flags.h	393;"	d
HAVE_floatsitf2	insn-flags.h	55;"	d
HAVE_floatsixf2	insn-flags.h	54;"	d
HAVE_floatv2si2	insn-flags.h	334;"	d
HAVE_gev2sf3	insn-flags.h	322;"	d
HAVE_gtv2sf3	insn-flags.h	321;"	d
HAVE_gtv2si3	insn-flags.h	293;"	d
HAVE_gtv4hi3	insn-flags.h	292;"	d
HAVE_gtv8qi3	insn-flags.h	291;"	d
HAVE_incscc	ifcvt.c	47;"	d	file:
HAVE_indirect_jump	insn-flags.h	532;"	d
HAVE_insv	expmed.c	77;"	d	file:
HAVE_insv	insn-flags.h	495;"	d
HAVE_iordi3	insn-flags.h	445;"	d
HAVE_iorhi3	insn-flags.h	447;"	d
HAVE_iorqi3	insn-flags.h	448;"	d
HAVE_iorsi3	insn-flags.h	446;"	d
HAVE_jump	insn-flags.h	101;"	d
HAVE_ldmxcsr	insn-flags.h	316;"	d
HAVE_leave	insn-flags.h	112;"	d
HAVE_leave_rex64	insn-flags.h	113;"	d
HAVE_lshrdi3	insn-flags.h	481;"	d
HAVE_lshrdi3_1	insn-flags.h	99;"	d
HAVE_lshrhi3	insn-flags.h	483;"	d
HAVE_lshrqi3	insn-flags.h	484;"	d
HAVE_lshrsi3	insn-flags.h	482;"	d
HAVE_lshrv2si3	insn-flags.h	301;"	d
HAVE_lshrv4hi3	insn-flags.h	300;"	d
HAVE_maskcmpv4sf3	insn-flags.h	241;"	d
HAVE_maskncmpv4sf3	insn-flags.h	242;"	d
HAVE_maxdf3	insn-flags.h	583;"	d
HAVE_maxsf3	insn-flags.h	582;"	d
HAVE_mindf3	insn-flags.h	581;"	d
HAVE_minsf3	insn-flags.h	580;"	d
HAVE_mmx_anddi3	insn-flags.h	280;"	d
HAVE_mmx_ashldi3	insn-flags.h	305;"	d
HAVE_mmx_clrdi	insn-flags.h	279;"	d
HAVE_mmx_iordi3	insn-flags.h	277;"	d
HAVE_mmx_lshrdi3	insn-flags.h	302;"	d
HAVE_mmx_maskmovq	insn-flags.h	205;"	d
HAVE_mmx_maskmovq_rex	insn-flags.h	206;"	d
HAVE_mmx_nanddi3	insn-flags.h	281;"	d
HAVE_mmx_packssdw	insn-flags.h	307;"	d
HAVE_mmx_packsswb	insn-flags.h	306;"	d
HAVE_mmx_packuswb	insn-flags.h	308;"	d
HAVE_mmx_pextrw	insn-flags.h	286;"	d
HAVE_mmx_pinsrw	insn-flags.h	285;"	d
HAVE_mmx_pmaddwd	insn-flags.h	276;"	d
HAVE_mmx_pmovmskb	insn-flags.h	204;"	d
HAVE_mmx_psadbw	insn-flags.h	284;"	d
HAVE_mmx_pshufw	insn-flags.h	287;"	d
HAVE_mmx_punpckhbw	insn-flags.h	309;"	d
HAVE_mmx_punpckhdq	insn-flags.h	311;"	d
HAVE_mmx_punpckhwd	insn-flags.h	310;"	d
HAVE_mmx_punpcklbw	insn-flags.h	312;"	d
HAVE_mmx_punpckldq	insn-flags.h	314;"	d
HAVE_mmx_punpcklwd	insn-flags.h	313;"	d
HAVE_mmx_uavgv4hi3	insn-flags.h	283;"	d
HAVE_mmx_uavgv8qi3	insn-flags.h	282;"	d
HAVE_mmx_xordi3	insn-flags.h	278;"	d
HAVE_movdf	insn-flags.h	363;"	d
HAVE_movdfcc	insn-flags.h	577;"	d
HAVE_movdi	insn-flags.h	361;"	d
HAVE_movdicc	insn-flags.h	573;"	d
HAVE_movhi	insn-flags.h	356;"	d
HAVE_movhicc	insn-flags.h	575;"	d
HAVE_movqi	insn-flags.h	358;"	d
HAVE_movsf	insn-flags.h	362;"	d
HAVE_movsfcc	insn-flags.h	576;"	d
HAVE_movsi	insn-flags.h	355;"	d
HAVE_movsi_insv_1	insn-flags.h	14;"	d
HAVE_movsicc	insn-flags.h	574;"	d
HAVE_movstrdi	insn-flags.h	552;"	d
HAVE_movstricthi	insn-flags.h	357;"	d
HAVE_movstrictqi	insn-flags.h	360;"	d
HAVE_movstrsi	insn-flags.h	551;"	d
HAVE_movtf	insn-flags.h	365;"	d
HAVE_movtfcc	insn-flags.h	579;"	d
HAVE_movti	insn-flags.h	589;"	d
HAVE_movti_internal	insn-flags.h	200;"	d
HAVE_movv2sf	insn-flags.h	595;"	d
HAVE_movv2sf_internal	insn-flags.h	199;"	d
HAVE_movv2si	insn-flags.h	592;"	d
HAVE_movv2si_internal	insn-flags.h	198;"	d
HAVE_movv4hi	insn-flags.h	593;"	d
HAVE_movv4hi_internal	insn-flags.h	197;"	d
HAVE_movv4sf	insn-flags.h	590;"	d
HAVE_movv4sf_internal	insn-flags.h	194;"	d
HAVE_movv4si	insn-flags.h	591;"	d
HAVE_movv4si_internal	insn-flags.h	195;"	d
HAVE_movv8qi	insn-flags.h	594;"	d
HAVE_movv8qi_internal	insn-flags.h	196;"	d
HAVE_movxf	insn-flags.h	364;"	d
HAVE_movxfcc	insn-flags.h	578;"	d
HAVE_muldf3	insn-flags.h	429;"	d
HAVE_muldi3	insn-flags.h	413;"	d
HAVE_mulditi3	insn-flags.h	421;"	d
HAVE_mulhi3	insn-flags.h	415;"	d
HAVE_mulqi3	insn-flags.h	416;"	d
HAVE_mulqihi3	insn-flags.h	418;"	d
HAVE_mulsf3	insn-flags.h	430;"	d
HAVE_mulsi3	insn-flags.h	414;"	d
HAVE_mulsidi3	insn-flags.h	422;"	d
HAVE_multf3	insn-flags.h	428;"	d
HAVE_mulv2sf3	insn-flags.h	326;"	d
HAVE_mulv4hi3	insn-flags.h	273;"	d
HAVE_mulv4sf3	insn-flags.h	223;"	d
HAVE_mulxf3	insn-flags.h	427;"	d
HAVE_negdf2	insn-flags.h	459;"	d
HAVE_negdf2_ifs	insn-flags.h	77;"	d
HAVE_negdf2_memory	insn-flags.h	76;"	d
HAVE_negdi2	insn-flags.h	454;"	d
HAVE_neghi2	insn-flags.h	456;"	d
HAVE_negqi2	insn-flags.h	457;"	d
HAVE_negsf2	insn-flags.h	458;"	d
HAVE_negsf2_ifs	insn-flags.h	72;"	d
HAVE_negsf2_memory	insn-flags.h	71;"	d
HAVE_negsi2	insn-flags.h	455;"	d
HAVE_negtf2	insn-flags.h	461;"	d
HAVE_negxf2	insn-flags.h	460;"	d
HAVE_nop	insn-flags.h	107;"	d
HAVE_one_cmpldi2	insn-flags.h	466;"	d
HAVE_one_cmplhi2	insn-flags.h	468;"	d
HAVE_one_cmplqi2	insn-flags.h	469;"	d
HAVE_one_cmplsi2	insn-flags.h	467;"	d
HAVE_pavgusb	insn-flags.h	335;"	d
HAVE_peephole2	insn-config.h	13;"	d
HAVE_pf2id	insn-flags.h	328;"	d
HAVE_pf2iw	insn-flags.h	329;"	d
HAVE_pfacc	insn-flags.h	330;"	d
HAVE_pfmaxv2sf3	insn-flags.h	324;"	d
HAVE_pfminv2sf3	insn-flags.h	325;"	d
HAVE_pfnacc	insn-flags.h	331;"	d
HAVE_pfpnacc	insn-flags.h	332;"	d
HAVE_pfrcpit1v2sf3	insn-flags.h	337;"	d
HAVE_pfrcpit2v2sf3	insn-flags.h	338;"	d
HAVE_pfrcpv2sf2	insn-flags.h	336;"	d
HAVE_pfrsqit1v2sf3	insn-flags.h	340;"	d
HAVE_pfrsqrtv2sf2	insn-flags.h	339;"	d
HAVE_pi2fw	insn-flags.h	333;"	d
HAVE_pmulhrwv4hi3	insn-flags.h	341;"	d
HAVE_popdi1	insn-flags.h	16;"	d
HAVE_popsi1	insn-flags.h	13;"	d
HAVE_prefetch	insn-flags.h	598;"	d
HAVE_prefetch	loop.c	67;"	d	file:
HAVE_pro_epilogue_adjust_stack	insn-flags.h	584;"	d
HAVE_pro_epilogue_adjust_stack_rex64	insn-flags.h	178;"	d
HAVE_prologue	flow.c	158;"	d	file:
HAVE_prologue	insn-flags.h	543;"	d
HAVE_prologue_get_pc	insn-flags.h	109;"	d
HAVE_prologue_set_got	insn-flags.h	108;"	d
HAVE_pswapdv2sf2	insn-flags.h	343;"	d
HAVE_pswapdv2si2	insn-flags.h	342;"	d
HAVE_pushdi2_rex64	insn-flags.h	15;"	d
HAVE_rcpv4sf2	insn-flags.h	227;"	d
HAVE_reload_outqi	insn-flags.h	359;"	d
HAVE_rep_movdi_rex64	insn-flags.h	153;"	d
HAVE_rep_movqi	insn-flags.h	156;"	d
HAVE_rep_movqi_rex64	insn-flags.h	157;"	d
HAVE_rep_movsi	insn-flags.h	154;"	d
HAVE_rep_movsi_rex64	insn-flags.h	155;"	d
HAVE_rep_stosdi_rex64	insn-flags.h	165;"	d
HAVE_rep_stosqi	insn-flags.h	168;"	d
HAVE_rep_stosqi_rex64	insn-flags.h	169;"	d
HAVE_rep_stossi	insn-flags.h	166;"	d
HAVE_rep_stossi_rex64	insn-flags.h	167;"	d
HAVE_return	cfgrtl.c	62;"	d	file:
HAVE_return	insn-flags.h	542;"	d
HAVE_return_indirect_internal	insn-flags.h	106;"	d
HAVE_return_internal	insn-flags.h	104;"	d
HAVE_return_pop_internal	insn-flags.h	105;"	d
HAVE_rotldi3	insn-flags.h	485;"	d
HAVE_rotlhi3	insn-flags.h	487;"	d
HAVE_rotlqi3	insn-flags.h	488;"	d
HAVE_rotlsi3	insn-flags.h	486;"	d
HAVE_rotrdi3	insn-flags.h	489;"	d
HAVE_rotrhi3	insn-flags.h	491;"	d
HAVE_rotrqi3	insn-flags.h	492;"	d
HAVE_rotrsi3	insn-flags.h	490;"	d
HAVE_rsqrtv4sf2	insn-flags.h	229;"	d
HAVE_seq	insn-flags.h	496;"	d
HAVE_setcc_2	insn-flags.h	100;"	d
HAVE_sfence	insn-flags.h	596;"	d
HAVE_sge	insn-flags.h	502;"	d
HAVE_sgeu	insn-flags.h	503;"	d
HAVE_sgt	insn-flags.h	498;"	d
HAVE_sgtu	insn-flags.h	499;"	d
HAVE_sibcall_epilogue	flow.c	161;"	d	file:
HAVE_sibcall_epilogue	insn-flags.h	545;"	d
HAVE_sindf2	insn-flags.h	129;"	d
HAVE_sinsf2	insn-flags.h	131;"	d
HAVE_sintf2	insn-flags.h	135;"	d
HAVE_sinxf2	insn-flags.h	133;"	d
HAVE_sle	insn-flags.h	504;"	d
HAVE_sleu	insn-flags.h	505;"	d
HAVE_slt	insn-flags.h	500;"	d
HAVE_sltgt	insn-flags.h	513;"	d
HAVE_sltu	insn-flags.h	501;"	d
HAVE_smaxv4hi3	insn-flags.h	295;"	d
HAVE_smaxv4sf3	insn-flags.h	249;"	d
HAVE_sminv4hi3	insn-flags.h	297;"	d
HAVE_sminv4sf3	insn-flags.h	251;"	d
HAVE_smuldi3_highpart	insn-flags.h	425;"	d
HAVE_smulsi3_highpart	insn-flags.h	426;"	d
HAVE_smulv4hi3_highpart	insn-flags.h	274;"	d
HAVE_sne	insn-flags.h	497;"	d
HAVE_sordered	insn-flags.h	507;"	d
HAVE_sqrtdf2	insn-flags.h	549;"	d
HAVE_sqrtdf2_1	insn-flags.h	120;"	d
HAVE_sqrtdf2_1_sse_only	insn-flags.h	122;"	d
HAVE_sqrtdf2_i387	insn-flags.h	123;"	d
HAVE_sqrtsf2	insn-flags.h	548;"	d
HAVE_sqrtsf2_1	insn-flags.h	115;"	d
HAVE_sqrtsf2_1_sse_only	insn-flags.h	117;"	d
HAVE_sqrtsf2_i387	insn-flags.h	118;"	d
HAVE_sqrttf2	insn-flags.h	127;"	d
HAVE_sqrtv4sf2	insn-flags.h	231;"	d
HAVE_sqrtxf2	insn-flags.h	125;"	d
HAVE_ssaddv4hi3	insn-flags.h	263;"	d
HAVE_ssaddv8qi3	insn-flags.h	262;"	d
HAVE_sse_andti3	insn-flags.h	233;"	d
HAVE_sse_clrv4sf	insn-flags.h	240;"	d
HAVE_sse_comi	insn-flags.h	245;"	d
HAVE_sse_iorti3	insn-flags.h	236;"	d
HAVE_sse_loadss	insn-flags.h	215;"	d
HAVE_sse_movaps	insn-flags.h	201;"	d
HAVE_sse_movdfcc	insn-flags.h	185;"	d
HAVE_sse_movdfcc_eq	insn-flags.h	189;"	d
HAVE_sse_movhlps	insn-flags.h	209;"	d
HAVE_sse_movhps	insn-flags.h	211;"	d
HAVE_sse_movlhps	insn-flags.h	210;"	d
HAVE_sse_movlps	insn-flags.h	213;"	d
HAVE_sse_movmskps	insn-flags.h	203;"	d
HAVE_sse_movntdi	insn-flags.h	208;"	d
HAVE_sse_movntv4sf	insn-flags.h	207;"	d
HAVE_sse_movsfcc	insn-flags.h	179;"	d
HAVE_sse_movsfcc_eq	insn-flags.h	183;"	d
HAVE_sse_movss	insn-flags.h	216;"	d
HAVE_sse_movups	insn-flags.h	202;"	d
HAVE_sse_nandti3	insn-flags.h	235;"	d
HAVE_sse_prologue_save	insn-flags.h	597;"	d
HAVE_sse_shufps	insn-flags.h	218;"	d
HAVE_sse_storess	insn-flags.h	217;"	d
HAVE_sse_ucomi	insn-flags.h	246;"	d
HAVE_sse_unpckhps	insn-flags.h	247;"	d
HAVE_sse_unpcklps	insn-flags.h	248;"	d
HAVE_sse_xorti3	insn-flags.h	238;"	d
HAVE_sssubv4hi3	insn-flags.h	270;"	d
HAVE_sssubv8qi3	insn-flags.h	269;"	d
HAVE_stmxcsr	insn-flags.h	317;"	d
HAVE_strlendi	insn-flags.h	572;"	d
HAVE_strlenqi_1	insn-flags.h	174;"	d
HAVE_strlenqi_rex_1	insn-flags.h	175;"	d
HAVE_strlensi	insn-flags.h	571;"	d
HAVE_strmovdi_rex64	insn-flags.h	553;"	d
HAVE_strmovdi_rex_1	insn-flags.h	146;"	d
HAVE_strmovhi	insn-flags.h	556;"	d
HAVE_strmovhi_1	insn-flags.h	149;"	d
HAVE_strmovhi_rex64	insn-flags.h	557;"	d
HAVE_strmovhi_rex_1	insn-flags.h	150;"	d
HAVE_strmovqi	insn-flags.h	558;"	d
HAVE_strmovqi_1	insn-flags.h	151;"	d
HAVE_strmovqi_rex64	insn-flags.h	559;"	d
HAVE_strmovqi_rex_1	insn-flags.h	152;"	d
HAVE_strmovsi	insn-flags.h	554;"	d
HAVE_strmovsi_1	insn-flags.h	147;"	d
HAVE_strmovsi_rex64	insn-flags.h	555;"	d
HAVE_strmovsi_rex_1	insn-flags.h	148;"	d
HAVE_strsetdi_rex64	insn-flags.h	562;"	d
HAVE_strsetdi_rex_1	insn-flags.h	158;"	d
HAVE_strsethi	insn-flags.h	565;"	d
HAVE_strsethi_1	insn-flags.h	161;"	d
HAVE_strsethi_rex64	insn-flags.h	566;"	d
HAVE_strsethi_rex_1	insn-flags.h	162;"	d
HAVE_strsetqi	insn-flags.h	567;"	d
HAVE_strsetqi_1	insn-flags.h	163;"	d
HAVE_strsetqi_rex64	insn-flags.h	568;"	d
HAVE_strsetqi_rex_1	insn-flags.h	164;"	d
HAVE_strsetsi	insn-flags.h	563;"	d
HAVE_strsetsi_1	insn-flags.h	159;"	d
HAVE_strsetsi_rex64	insn-flags.h	564;"	d
HAVE_strsetsi_rex_1	insn-flags.h	160;"	d
HAVE_subdf3	insn-flags.h	411;"	d
HAVE_subdi3	insn-flags.h	405;"	d
HAVE_subdi3_carry_rex64	insn-flags.h	61;"	d
HAVE_subhi3	insn-flags.h	407;"	d
HAVE_subqi3	insn-flags.h	408;"	d
HAVE_subrv2sf3	insn-flags.h	320;"	d
HAVE_subsf3	insn-flags.h	412;"	d
HAVE_subsi3	insn-flags.h	406;"	d
HAVE_subsi3_carry	insn-flags.h	62;"	d
HAVE_subsi3_carry_zext	insn-flags.h	63;"	d
HAVE_subtf3	insn-flags.h	410;"	d
HAVE_subv2sf3	insn-flags.h	319;"	d
HAVE_subv2si3	insn-flags.h	268;"	d
HAVE_subv4hi3	insn-flags.h	267;"	d
HAVE_subv4sf3	insn-flags.h	221;"	d
HAVE_subv8qi3	insn-flags.h	266;"	d
HAVE_subxf3	insn-flags.h	409;"	d
HAVE_suneq	insn-flags.h	508;"	d
HAVE_sunge	insn-flags.h	509;"	d
HAVE_sungt	insn-flags.h	510;"	d
HAVE_sunle	insn-flags.h	511;"	d
HAVE_sunlt	insn-flags.h	512;"	d
HAVE_sunordered	insn-flags.h	506;"	d
HAVE_swaptf	insn-flags.h	18;"	d
HAVE_swapxf	insn-flags.h	17;"	d
HAVE_tablejump	expr.c	10539;"	d	file:
HAVE_tablejump	insn-flags.h	533;"	d
HAVE_testqi_ccz_1	insn-flags.h	439;"	d
HAVE_testqi_ext_ccno_0	insn-flags.h	440;"	d
HAVE_testsi_1	insn-flags.h	69;"	d
HAVE_testsi_ccno_1	insn-flags.h	438;"	d
HAVE_trap	ifcvt.c	53;"	d	file:
HAVE_trap	insn-flags.h	193;"	d
HAVE_truncdfsf2	insn-flags.h	376;"	d
HAVE_truncdfsf2_3	insn-flags.h	30;"	d
HAVE_truncdfsf2_sse_only	insn-flags.h	31;"	d
HAVE_trunctfdf2	insn-flags.h	380;"	d
HAVE_trunctfsf2	insn-flags.h	378;"	d
HAVE_truncxfdf2	insn-flags.h	379;"	d
HAVE_truncxfsf2	insn-flags.h	377;"	d
HAVE_udivmoddi4	insn-flags.h	67;"	d
HAVE_udivmodhi4	insn-flags.h	437;"	d
HAVE_udivmodsi4	insn-flags.h	68;"	d
HAVE_udivqi3	insn-flags.h	65;"	d
HAVE_umaxv8qi3	insn-flags.h	294;"	d
HAVE_uminv8qi3	insn-flags.h	296;"	d
HAVE_umuldi3_highpart	insn-flags.h	423;"	d
HAVE_umulditi3	insn-flags.h	419;"	d
HAVE_umulqihi3	insn-flags.h	417;"	d
HAVE_umulsi3_highpart	insn-flags.h	424;"	d
HAVE_umulsidi3	insn-flags.h	420;"	d
HAVE_umulv4hi3_highpart	insn-flags.h	275;"	d
HAVE_untyped_call	insn-flags.h	541;"	d
HAVE_usaddv4hi3	insn-flags.h	265;"	d
HAVE_usaddv8qi3	insn-flags.h	264;"	d
HAVE_ussubv4hi3	insn-flags.h	272;"	d
HAVE_ussubv8qi3	insn-flags.h	271;"	d
HAVE_vmaddv4sf3	insn-flags.h	220;"	d
HAVE_vmdivv4sf3	insn-flags.h	226;"	d
HAVE_vmmaskcmpv4sf3	insn-flags.h	243;"	d
HAVE_vmmaskncmpv4sf3	insn-flags.h	244;"	d
HAVE_vmmulv4sf3	insn-flags.h	224;"	d
HAVE_vmrcpv4sf2	insn-flags.h	228;"	d
HAVE_vmrsqrtv4sf2	insn-flags.h	230;"	d
HAVE_vmsmaxv4sf3	insn-flags.h	250;"	d
HAVE_vmsminv4sf3	insn-flags.h	252;"	d
HAVE_vmsqrtv4sf2	insn-flags.h	232;"	d
HAVE_vmsubv4sf3	insn-flags.h	222;"	d
HAVE_x86_fldcw_1	insn-flags.h	49;"	d
HAVE_x86_fnstcw_1	insn-flags.h	48;"	d
HAVE_x86_fnstsw_1	insn-flags.h	11;"	d
HAVE_x86_movdicc_0_m1_rex64	insn-flags.h	176;"	d
HAVE_x86_movsicc_0_m1	insn-flags.h	177;"	d
HAVE_x86_sahf_1	insn-flags.h	12;"	d
HAVE_x86_shift_adj_1	insn-flags.h	471;"	d
HAVE_x86_shift_adj_2	insn-flags.h	472;"	d
HAVE_x86_shift_adj_3	insn-flags.h	477;"	d
HAVE_x86_shld_1	insn-flags.h	92;"	d
HAVE_x86_shrd_1	insn-flags.h	96;"	d
HAVE_xordi3	insn-flags.h	449;"	d
HAVE_xorhi3	insn-flags.h	451;"	d
HAVE_xorqi3	insn-flags.h	452;"	d
HAVE_xorqi_cc_ext_1	insn-flags.h	453;"	d
HAVE_xorsi3	insn-flags.h	450;"	d
HAVE_zero_extendhidi2	insn-flags.h	22;"	d
HAVE_zero_extendhisi2	insn-flags.h	366;"	d
HAVE_zero_extendhisi2_and	insn-flags.h	19;"	d
HAVE_zero_extendqidi2	insn-flags.h	23;"	d
HAVE_zero_extendqihi2	insn-flags.h	367;"	d
HAVE_zero_extendqisi2	insn-flags.h	368;"	d
HAVE_zero_extendsidi2	insn-flags.h	369;"	d
HAVE_zero_extendsidi2_32	insn-flags.h	20;"	d
HAVE_zero_extendsidi2_rex64	insn-flags.h	21;"	d
HIGHEST_INDEX	bitmap.c	516;"	d	file:
HIGHPART	fold-const.c	136;"	d	file:
HITRATE	predict.c	83;"	d	file:
HI_REGISTER_NAMES	i386.h	2775;"	d
HI_REGISTER_NAMES	i386.h	2776;"	d
HItype	real.c	/^typedef int HItype __attribute__ ((mode (HI)));$/;"	t	file:
HOST_BITS_PER_CHAR	hwint.h	13;"	d
HOST_BITS_PER_INT	hwint.h	15;"	d
HOST_BITS_PER_LONG	hwint.h	16;"	d
HOST_BITS_PER_LONGLONG	hwint.h	19;"	d
HOST_BITS_PER_LONGLONG	hwint.h	22;"	d
HOST_BITS_PER_LONGLONG	hwint.h	27;"	d
HOST_BITS_PER_PTR	ggc-page.c	117;"	d	file:
HOST_BITS_PER_SHORT	hwint.h	14;"	d
HOST_BITS_PER_WIDEST_INT	hwint.h	166;"	d
HOST_BITS_PER_WIDEST_INT	hwint.h	178;"	d
HOST_BITS_PER_WIDE_INT	hwint.h	46;"	d
HOST_BITS_PER_WIDE_INT	hwint.h	51;"	d
HOST_BITS_PER_WIDE_INT	hwint.h	60;"	d
HOST_BITS_PER_WIDE_INT	hwint.h	67;"	d
HOST_BITS_PER_WIDE_INT	hwint.h	70;"	d
HOST_BIT_BUCKET	system.h	500;"	d
HOST_FLOAT_FORMAT	real.h	39;"	d
HOST_FLOAT_WORDS_BIG_ENDIAN	real.h	62;"	d
HOST_FLOAT_WORDS_BIG_ENDIAN	real.h	64;"	d
HOST_PTR_PRINTF	system.h	454;"	d
HOST_PTR_PRINTF	system.h	456;"	d
HOST_WIDEST_INT	hwint.h	167;"	d
HOST_WIDEST_INT	hwint.h	179;"	d
HOST_WIDEST_INT_PRINT_DEC	hwint.h	171;"	d
HOST_WIDEST_INT_PRINT_DEC	hwint.h	175;"	d
HOST_WIDEST_INT_PRINT_DEC	hwint.h	180;"	d
HOST_WIDEST_INT_PRINT_HEX	hwint.h	169;"	d
HOST_WIDEST_INT_PRINT_HEX	hwint.h	173;"	d
HOST_WIDEST_INT_PRINT_HEX	hwint.h	182;"	d
HOST_WIDEST_INT_PRINT_UNSIGNED	hwint.h	170;"	d
HOST_WIDEST_INT_PRINT_UNSIGNED	hwint.h	174;"	d
HOST_WIDEST_INT_PRINT_UNSIGNED	hwint.h	181;"	d
HOST_WIDE_INT	hwint.h	47;"	d
HOST_WIDE_INT	hwint.h	52;"	d
HOST_WIDE_INT	hwint.h	61;"	d
HOST_WIDE_INT	hwint.h	68;"	d
HOST_WIDE_INT	hwint.h	71;"	d
HOST_WIDE_INT_PRINT_DEC	hwint.h	81;"	d
HOST_WIDE_INT_PRINT_DEC	hwint.h	84;"	d
HOST_WIDE_INT_PRINT_DEC	hwint.h	87;"	d
HOST_WIDE_INT_PRINT_DEC	hwint.h	89;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	130;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	133;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	136;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	138;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	144;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	147;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	150;"	d
HOST_WIDE_INT_PRINT_DOUBLE_HEX	hwint.h	152;"	d
HOST_WIDE_INT_PRINT_HEX	hwint.h	113;"	d
HOST_WIDE_INT_PRINT_HEX	hwint.h	116;"	d
HOST_WIDE_INT_PRINT_HEX	hwint.h	119;"	d
HOST_WIDE_INT_PRINT_HEX	hwint.h	121;"	d
HOST_WIDE_INT_PRINT_UNSIGNED	hwint.h	100;"	d
HOST_WIDE_INT_PRINT_UNSIGNED	hwint.h	103;"	d
HOST_WIDE_INT_PRINT_UNSIGNED	hwint.h	105;"	d
HOST_WIDE_INT_PRINT_UNSIGNED	hwint.h	97;"	d
HT_ALLOC	hashtable.h	/^enum ht_lookup_option {HT_NO_INSERT = 0, HT_ALLOC, HT_ALLOCED};$/;"	e	enum:ht_lookup_option
HT_ALLOCED	hashtable.h	/^enum ht_lookup_option {HT_NO_INSERT = 0, HT_ALLOC, HT_ALLOCED};$/;"	e	enum:ht_lookup_option
HT_IDENT_TO_GCC_IDENT	tree.h	787;"	d
HT_LEN	hashtable.h	32;"	d
HT_NODE	cpplib.h	432;"	d
HT_NO_INSERT	hashtable.h	/^enum ht_lookup_option {HT_NO_INSERT = 0, HT_ALLOC, HT_ALLOCED};$/;"	e	enum:ht_lookup_option
HT_STR	hashtable.h	33;"	d
HWI_SIGN_EXTEND	simplify-rtx.c	95;"	d	file:
HYPERUNARY	c-parse.c	57;"	d	file:
IBM	real.c	126;"	d	file:
IBM_FLOAT_FORMAT	real.h	29;"	d
ICE	cpphash.h	/^enum error_type { WARNING = 0, WARNING_SYSHDR, PEDWARN, ERROR, FATAL, ICE };$/;"	e	enum:error_type
ICONV_CONST	auto-host.h	415;"	d
ICONV_CONST	auto-host.h	505;"	d
IDENTIFIER	c-parse.c	7;"	d	file:
IDENTIFIER_ERROR_LOCUS	c-tree.h	80;"	d
IDENTIFIER_GLOBAL_VALUE	c-tree.h	60;"	d
IDENTIFIER_IMPLICIT_DECL	c-tree.h	76;"	d
IDENTIFIER_LABEL_VALUE	c-tree.h	68;"	d
IDENTIFIER_LENGTH	tree.h	779;"	d
IDENTIFIER_LIMBO_VALUE	c-tree.h	72;"	d
IDENTIFIER_LOCAL_VALUE	c-tree.h	64;"	d
IDENTIFIER_NODE_CHECK	tree-check.h	7;"	d
IDENTIFIER_POINTER	tree.h	781;"	d
IDENT_ASM_OP	elfos.h	90;"	d
IEEE	real.c	133;"	d	file:
IEEE_FLOAT_FORMAT	real.h	27;"	d
IF	c-parse.c	19;"	d	file:
IFREE	sched-rgn.c	/^  TRAP_FREE = 0, IFREE = 1, PFREE_CANDIDATE = 2,$/;"	e	enum:INSN_TRAP_CLASS	file:
IF_COND	c-common.h	577;"	d
IF_COND	cpplib.c	75;"	d	file:
IF_NEXT_IS	cpplex.c	854;"	d	file:
IF_STMT_CHECK	tree-check.h	160;"	d
IMAGPART	c-parse.c	38;"	d	file:
IMAGPART_EXPR_CHECK	tree-check.h	134;"	d
IMM_DISP_FALSE	insn-attr.h	/^enum attr_imm_disp {IMM_DISP_FALSE, IMM_DISP_TRUE, IMM_DISP_UNKNOWN};$/;"	e	enum:attr_imm_disp
IMM_DISP_TRUE	insn-attr.h	/^enum attr_imm_disp {IMM_DISP_FALSE, IMM_DISP_TRUE, IMM_DISP_UNKNOWN};$/;"	e	enum:attr_imm_disp
IMM_DISP_UNKNOWN	insn-attr.h	/^enum attr_imm_disp {IMM_DISP_FALSE, IMM_DISP_TRUE, IMM_DISP_UNKNOWN};$/;"	e	enum:attr_imm_disp
IMPLEMENTATION	c-parse.c	60;"	d	file:
INCL	cpplib.c	76;"	d	file:
INCLUDED_FROM	line-map.h	110;"	d
INCOMING_FRAME_SP_OFFSET	dwarf2out.c	379;"	d	file:
INCOMING_FRAME_SP_OFFSET	i386.h	2836;"	d
INCOMING_REGNO	builtins.c	50;"	d	file:
INCOMING_RETURN_ADDR_RTX	i386.h	2823;"	d
INCOMPLETE_TYPES_INCREMENT	dwarfout.c	751;"	d	file:
INDEX_EDGE	basic-block.h	516;"	d
INDEX_EDGE_PRED_BB	basic-block.h	512;"	d
INDEX_EDGE_SUCC_BB	basic-block.h	513;"	d
INDEX_LIMIT_CHECK	dependence.c	474;"	d	file:
INDEX_REGS	i386.h	/^  INDEX_REGS,			\/* %eax %ebx %ecx %edx %esi %edi %ebp *\/$/;"	e	enum:reg_class
INDEX_REG_CLASS	i386.h	1366;"	d
INDIRECT_REF_CHECK	tree-check.h	47;"	d
INFINITY	real.c	175;"	d	file:
INFINITY	real.c	182;"	d	file:
INITIALIZE_REG_SET	basic-block.h	102;"	d
INITIALIZE_TRAMPOLINE	i386.h	1807;"	d
INITIAL_ARC_CAPACITY	conflict.c	112;"	d	file:
INITIAL_ELIMINATION_OFFSET	i386.h	1840;"	d
INIT_CUMULATIVE_ARGS	i386.h	1681;"	d
INIT_EXPR_CHECK	tree-check.h	55;"	d
INIT_ONCE_REG_SET	basic-block.h	108;"	d
INIT_REG_SET	basic-block.h	36;"	d
INIT_SECTION_ASM_OP	elfos.h	237;"	d
INIT_STACK_SIZE	cppexp.c	570;"	d	file:
INLINE	bitmap.c	36;"	d	file:
INLINE	bitmap.c	38;"	d	file:
INO_TO_INT	tree.c	4566;"	d	file:
INO_T_COPY	cppinit.c	44;"	d	file:
INO_T_COPY	cppinit.c	51;"	d	file:
INO_T_EQ	cppinit.c	43;"	d	file:
INO_T_EQ	cppinit.c	47;"	d	file:
INO_T_EQ	cppinit.c	49;"	d	file:
INSERT	hashtab.h	/^enum insert_option {NO_INSERT, INSERT};$/;"	e	enum:insert_option
INSNS_PER_STMT	tree-inline.c	119;"	d	file:
INSN_ADDRESSES	insn-addr.h	30;"	d
INSN_ADDRESSES_ALLOC	insn-addr.h	31;"	d
INSN_ADDRESSES_DEFN	insn-addr.h	29;"	d
INSN_ADDRESSES_FREE	insn-addr.h	33;"	d
INSN_ADDRESSES_NEW	insn-addr.h	36;"	d
INSN_ADDRESSES_SET_P	insn-addr.h	34;"	d
INSN_ADDRESSES_SIZE	insn-addr.h	35;"	d
INSN_ANNULLED_BRANCH_P	rtl.h	427;"	d
INSN_BB	sched-rgn.c	275;"	d	file:
INSN_BLOCKAGE	sched-int.h	232;"	d
INSN_CODE	rtl.h	407;"	d
INSN_COST	sched-int.h	228;"	d
INSN_CUID	combine.c	131;"	d	file:
INSN_CUID	cse.c	367;"	d	file:
INSN_CUID	gcse.c	390;"	d	file:
INSN_CUID	gcse.c	392;"	d	file:
INSN_DEAD_CODE_P	rtl.h	430;"	d
INSN_DELETED_P	rtl.h	417;"	d
INSN_DEPEND	sched-int.h	222;"	d
INSN_DEP_COUNT	sched-int.h	225;"	d
INSN_FROM_TARGET_P	rtl.h	436;"	d
INSN_IN_RANGE_P	loop.c	378;"	d	file:
INSN_LEN	sched-vis.c	85;"	d	file:
INSN_LENGTH_ALIGNMENT	final.c	656;"	d	file:
INSN_LUID	loop.h	48;"	d
INSN_LUID	sched-int.h	223;"	d
INSN_OUTPUT_FORMAT_FUNCTION	recog.h	234;"	d
INSN_OUTPUT_FORMAT_MULTI	recog.h	233;"	d
INSN_OUTPUT_FORMAT_NONE	recog.h	231;"	d
INSN_OUTPUT_FORMAT_SINGLE	recog.h	232;"	d
INSN_P	rtl.h	392;"	d
INSN_PRIORITY	sched-int.h	226;"	d
INSN_PRIORITY_KNOWN	sched-int.h	227;"	d
INSN_PROBABILITY	sched-rgn.c	273;"	d	file:
INSN_QUEUE_SIZE	insn-attr.h	108;"	d
INSN_REF_COUNT	sched-rgn.c	79;"	d	file:
INSN_REG_WEIGHT	sched-int.h	230;"	d
INSN_SCHEDULING	insn-attr.h	76;"	d
INSN_SHUID	final.c	659;"	d	file:
INSN_TICK	haifa-sched.c	203;"	d	file:
INSN_TRAP_CLASS	sched-rgn.c	/^enum INSN_TRAP_CLASS$/;"	g	file:
INSN_UID	rtl.h	396;"	d
INSN_UNIT	sched-int.h	229;"	d
INTEGER_CLASS_P	i386.h	1227;"	d
INTEGER_CST_CHECK	tree-check.h	31;"	d
INTEGER_TYPE_CHECK	tree-check.h	12;"	d
INTEGRAL_MODE_P	machmode.h	56;"	d
INTEGRAL_TYPE_P	tree.h	398;"	d
INTEGRATE_THRESHOLD	integrate.c	62;"	d	file:
INTEL_EXTENDED_IEEE_FORMAT	i386.h	687;"	d
INTEL_EXTENDED_IEEE_FORMAT	real.h	43;"	d
INTERFACE	c-parse.c	59;"	d	file:
INTERSECTION	df.h	/^    INTERSECTION$/;"	e	enum:df_confluence_op
INTMAX_TYPE	c-common.c	68;"	d	file:
INTTYPE_MAXIMUM	system.h	192;"	d
INTTYPE_MINIMUM	system.h	190;"	d
INTTYPE_SIGNED	system.h	187;"	d
INTVAL	rtl.h	812;"	d
INT_BITS	global.c	152;"	d	file:
INT_CST_LT	tree.h	693;"	d
INT_CST_LT_UNSIGNED	tree.h	698;"	d
INT_MAX	md5.h	49;"	d
INT_MAX_32_BITS	md5.h	41;"	d
INT_SSE_REGS	i386.h	/^  INT_SSE_REGS,$/;"	e	enum:reg_class
INT_TYPE	global.c	153;"	d	file:
INT_TYPE_SIZE	defaults.h	298;"	d
INT_TYPE_SIZE	i386.h	691;"	d
INV	mbchar.c	/^	     J2_ESC, J2_ESC_BR, INV, JIS_S_NUM} JIS_STATE; $/;"	e	enum:__anon5	file:
INVALID	real.c	1538;"	d	file:
INVALID_BLOCK	basic-block.h	275;"	d
INVALID_PARAM_VAL	params.h	40;"	d
INVALID_REGNUM	rtl.h	1726;"	d
IN_EDGES	sched-rgn.c	113;"	d	file:
IN_EXPR_CHECK	tree-check.h	116;"	d
IN_I	cpplib.c	77;"	d	file:
IN_NAMED_SECTION	varasm.c	209;"	d	file:
IN_RANGE	system.h	180;"	d
IOR_AND_COMPL_REG_SET	basic-block.h	61;"	d
IOR_COMPL_HARD_REG_SET	hard-reg-set.h	104;"	d
IOR_COMPL_HARD_REG_SET	hard-reg-set.h	164;"	d
IOR_COMPL_HARD_REG_SET	hard-reg-set.h	225;"	d
IOR_COMPL_HARD_REG_SET	hard-reg-set.h	296;"	d
IOR_COMPL_HARD_REG_SET	hard-reg-set.h	363;"	d
IOR_HARD_REG_SET	hard-reg-set.h	103;"	d
IOR_HARD_REG_SET	hard-reg-set.h	159;"	d
IOR_HARD_REG_SET	hard-reg-set.h	219;"	d
IOR_HARD_REG_SET	hard-reg-set.h	289;"	d
IOR_HARD_REG_SET	hard-reg-set.h	357;"	d
IOR_REG_SET	basic-block.h	55;"	d
IRISKY	sched-rgn.c	/^  PRISKY_CANDIDATE = 3, IRISKY = 4, TRAP_RISKY = 5$/;"	e	enum:INSN_TRAP_CLASS	file:
ISALNUM	safe-ctype.h	77;"	d
ISALPHA	safe-ctype.h	76;"	d
ISBLANK	safe-ctype.h	78;"	d
ISCNTRL	safe-ctype.h	79;"	d
ISDIGIT	safe-ctype.h	80;"	d
ISEUCJP	mbchar.h	31;"	d
ISGRAPH	safe-ctype.h	81;"	d
ISIDNUM	safe-ctype.h	89;"	d
ISIDST	safe-ctype.h	90;"	d
ISJIS	mbchar.h	32;"	d
ISLOWER	safe-ctype.h	82;"	d
ISPRINT	safe-ctype.h	83;"	d
ISPUNCT	safe-ctype.h	84;"	d
ISSJIS1	mbchar.h	29;"	d
ISSJIS2	mbchar.h	30;"	d
ISSPACE	safe-ctype.h	85;"	d
ISUPPER	safe-ctype.h	86;"	d
ISXDIGIT	safe-ctype.h	87;"	d
IS_ABSOLUTE_PATHNAME	system.h	484;"	d
IS_ABSOLUTE_PATHNAME	system.h	488;"	d
IS_ASM_LOGICAL_LINE_SEPARATOR	final.c	94;"	d	file:
IS_DIR_SEPARATOR	lbasename.c	61;"	d	file:
IS_DIR_SEPARATOR	lbasename.c	64;"	d	file:
IS_DIR_SEPARATOR	lbasename.c	66;"	d	file:
IS_DIR_SEPARATOR	system.h	473;"	d
IS_DIR_SEPARATOR	system.h	475;"	d
IS_DOMINATED	sched-rgn.c	232;"	d	file:
IS_EXPR_CODE_CLASS	tree.h	55;"	d
IS_ISOBASIC	safe-ctype.h	91;"	d
IS_LOAD_INSN	sched-rgn.c	81;"	d	file:
IS_NVSPACE	safe-ctype.h	93;"	d
IS_REACHABLE	sched-rgn.c	1563;"	d	file:
IS_RGN_ENTRY	sched-rgn.c	229;"	d	file:
IS_SPACE_OR_NUL	safe-ctype.h	94;"	d
IS_SPECULATIVE	sched-rgn.c	209;"	d	file:
IS_SPECULATIVE_INSN	sched-rgn.c	274;"	d	file:
IS_STACK_MODE	i386.h	857;"	d
IS_VALID	sched-rgn.c	208;"	d	file:
IS_VSPACE	safe-ctype.h	92;"	d
IT_CMDLINE	cpphash.h	/^enum include_type {IT_INCLUDE, IT_INCLUDE_NEXT, IT_IMPORT, IT_CMDLINE};$/;"	e	enum:include_type
IT_IMPORT	cpphash.h	/^enum include_type {IT_INCLUDE, IT_INCLUDE_NEXT, IT_IMPORT, IT_CMDLINE};$/;"	e	enum:include_type
IT_INCLUDE	cpphash.h	/^enum include_type {IT_INCLUDE, IT_INCLUDE_NEXT, IT_IMPORT, IT_CMDLINE};$/;"	e	enum:include_type
IT_INCLUDE_NEXT	cpphash.h	/^enum include_type {IT_INCLUDE, IT_INCLUDE_NEXT, IT_IMPORT, IT_CMDLINE};$/;"	e	enum:include_type
IX86_BUILTIN_ADDPS	i386.h	/^  IX86_BUILTIN_ADDPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_ADDSS	i386.h	/^  IX86_BUILTIN_ADDSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_ANDNPS	i386.h	/^  IX86_BUILTIN_ANDNPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_ANDPS	i386.h	/^  IX86_BUILTIN_ANDPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPEQPS	i386.h	/^  IX86_BUILTIN_CMPEQPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPEQSS	i386.h	/^  IX86_BUILTIN_CMPEQSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPGEPS	i386.h	/^  IX86_BUILTIN_CMPGEPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPGESS	i386.h	/^  IX86_BUILTIN_CMPGESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPGTPS	i386.h	/^  IX86_BUILTIN_CMPGTPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPGTSS	i386.h	/^  IX86_BUILTIN_CMPGTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPLEPS	i386.h	/^  IX86_BUILTIN_CMPLEPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPLESS	i386.h	/^  IX86_BUILTIN_CMPLESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPLTPS	i386.h	/^  IX86_BUILTIN_CMPLTPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPLTSS	i386.h	/^  IX86_BUILTIN_CMPLTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNEPS	i386.h	/^  IX86_BUILTIN_CMPNEPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNEQPS	i386.h	/^  IX86_BUILTIN_CMPNEQPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNEQSS	i386.h	/^  IX86_BUILTIN_CMPNEQSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNESS	i386.h	/^  IX86_BUILTIN_CMPNESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNGEPS	i386.h	/^  IX86_BUILTIN_CMPNGEPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNGESS	i386.h	/^  IX86_BUILTIN_CMPNGESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNGTPS	i386.h	/^  IX86_BUILTIN_CMPNGTPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNGTSS	i386.h	/^  IX86_BUILTIN_CMPNGTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNLEPS	i386.h	/^  IX86_BUILTIN_CMPNLEPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNLESS	i386.h	/^  IX86_BUILTIN_CMPNLESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNLTPS	i386.h	/^  IX86_BUILTIN_CMPNLTPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPNLTSS	i386.h	/^  IX86_BUILTIN_CMPNLTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPORDPS	i386.h	/^  IX86_BUILTIN_CMPORDPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPORDSS	i386.h	/^  IX86_BUILTIN_CMPORDSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPUNORDPS	i386.h	/^  IX86_BUILTIN_CMPUNORDPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CMPUNORDSS	i386.h	/^  IX86_BUILTIN_CMPUNORDSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_COMIEQSS	i386.h	/^  IX86_BUILTIN_COMIEQSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_COMIGESS	i386.h	/^  IX86_BUILTIN_COMIGESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_COMIGTSS	i386.h	/^  IX86_BUILTIN_COMIGTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_COMILESS	i386.h	/^  IX86_BUILTIN_COMILESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_COMILTSS	i386.h	/^  IX86_BUILTIN_COMILTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_COMINEQSS	i386.h	/^  IX86_BUILTIN_COMINEQSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CVTPI2PS	i386.h	/^  IX86_BUILTIN_CVTPI2PS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CVTPS2PI	i386.h	/^  IX86_BUILTIN_CVTPS2PI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CVTSI2SS	i386.h	/^  IX86_BUILTIN_CVTSI2SS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CVTSS2SI	i386.h	/^  IX86_BUILTIN_CVTSS2SI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CVTTPS2PI	i386.h	/^  IX86_BUILTIN_CVTTPS2PI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_CVTTSS2SI	i386.h	/^  IX86_BUILTIN_CVTTSS2SI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_DIVPS	i386.h	/^  IX86_BUILTIN_DIVPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_DIVSS	i386.h	/^  IX86_BUILTIN_DIVSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_EMMS	i386.h	/^  IX86_BUILTIN_EMMS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_FEMMS	i386.h	/^  IX86_BUILTIN_FEMMS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_LDMXCSR	i386.h	/^  IX86_BUILTIN_LDMXCSR,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_LOADAPS	i386.h	/^  IX86_BUILTIN_LOADAPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_LOADHPS	i386.h	/^  IX86_BUILTIN_LOADHPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_LOADLPS	i386.h	/^  IX86_BUILTIN_LOADLPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_LOADSS	i386.h	/^  IX86_BUILTIN_LOADSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_LOADUPS	i386.h	/^  IX86_BUILTIN_LOADUPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MASKMOVQ	i386.h	/^  IX86_BUILTIN_MASKMOVQ,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MAX	i386.h	/^  IX86_BUILTIN_MAX$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MAXPS	i386.h	/^  IX86_BUILTIN_MAXPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MAXSS	i386.h	/^  IX86_BUILTIN_MAXSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MINPS	i386.h	/^  IX86_BUILTIN_MINPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MINSS	i386.h	/^  IX86_BUILTIN_MINSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MMX_ZERO	i386.h	/^  IX86_BUILTIN_MMX_ZERO,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MOVHLPS	i386.h	/^  IX86_BUILTIN_MOVHLPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MOVLHPS	i386.h	/^  IX86_BUILTIN_MOVLHPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MOVMSKPS	i386.h	/^  IX86_BUILTIN_MOVMSKPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MOVNTPS	i386.h	/^  IX86_BUILTIN_MOVNTPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MOVNTQ	i386.h	/^  IX86_BUILTIN_MOVNTQ,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MOVSS	i386.h	/^  IX86_BUILTIN_MOVSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MULPS	i386.h	/^  IX86_BUILTIN_MULPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_MULSS	i386.h	/^  IX86_BUILTIN_MULSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_ORPS	i386.h	/^  IX86_BUILTIN_ORPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PACKSSDW	i386.h	/^  IX86_BUILTIN_PACKSSDW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PACKSSWB	i386.h	/^  IX86_BUILTIN_PACKSSWB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PACKUSWB	i386.h	/^  IX86_BUILTIN_PACKUSWB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PADDB	i386.h	/^  IX86_BUILTIN_PADDB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PADDD	i386.h	/^  IX86_BUILTIN_PADDD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PADDSB	i386.h	/^  IX86_BUILTIN_PADDSB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PADDSW	i386.h	/^  IX86_BUILTIN_PADDSW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PADDUSB	i386.h	/^  IX86_BUILTIN_PADDUSB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PADDUSW	i386.h	/^  IX86_BUILTIN_PADDUSW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PADDW	i386.h	/^  IX86_BUILTIN_PADDW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PAND	i386.h	/^  IX86_BUILTIN_PAND,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PANDN	i386.h	/^  IX86_BUILTIN_PANDN,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PAVGB	i386.h	/^  IX86_BUILTIN_PAVGB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PAVGUSB	i386.h	/^  IX86_BUILTIN_PAVGUSB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PAVGW	i386.h	/^  IX86_BUILTIN_PAVGW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PCMPEQB	i386.h	/^  IX86_BUILTIN_PCMPEQB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PCMPEQD	i386.h	/^  IX86_BUILTIN_PCMPEQD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PCMPEQW	i386.h	/^  IX86_BUILTIN_PCMPEQW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PCMPGTB	i386.h	/^  IX86_BUILTIN_PCMPGTB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PCMPGTD	i386.h	/^  IX86_BUILTIN_PCMPGTD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PCMPGTW	i386.h	/^  IX86_BUILTIN_PCMPGTW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PEXTRW	i386.h	/^  IX86_BUILTIN_PEXTRW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PF2ID	i386.h	/^  IX86_BUILTIN_PF2ID,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PF2IW	i386.h	/^  IX86_BUILTIN_PF2IW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFACC	i386.h	/^  IX86_BUILTIN_PFACC,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFADD	i386.h	/^  IX86_BUILTIN_PFADD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFCMPEQ	i386.h	/^  IX86_BUILTIN_PFCMPEQ,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFCMPGE	i386.h	/^  IX86_BUILTIN_PFCMPGE,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFCMPGT	i386.h	/^  IX86_BUILTIN_PFCMPGT,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFMAX	i386.h	/^  IX86_BUILTIN_PFMAX,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFMIN	i386.h	/^  IX86_BUILTIN_PFMIN,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFMUL	i386.h	/^  IX86_BUILTIN_PFMUL,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFNACC	i386.h	/^  IX86_BUILTIN_PFNACC,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFPNACC	i386.h	/^  IX86_BUILTIN_PFPNACC,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFRCP	i386.h	/^  IX86_BUILTIN_PFRCP,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFRCPIT1	i386.h	/^  IX86_BUILTIN_PFRCPIT1,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFRCPIT2	i386.h	/^  IX86_BUILTIN_PFRCPIT2,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFRSQIT1	i386.h	/^  IX86_BUILTIN_PFRSQIT1,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFRSQRT	i386.h	/^  IX86_BUILTIN_PFRSQRT,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFSUB	i386.h	/^  IX86_BUILTIN_PFSUB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PFSUBR	i386.h	/^  IX86_BUILTIN_PFSUBR,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PI2FD	i386.h	/^  IX86_BUILTIN_PI2FD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PI2FW	i386.h	/^  IX86_BUILTIN_PI2FW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PINSRW	i386.h	/^  IX86_BUILTIN_PINSRW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMADDWD	i386.h	/^  IX86_BUILTIN_PMADDWD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMAXSW	i386.h	/^  IX86_BUILTIN_PMAXSW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMAXUB	i386.h	/^  IX86_BUILTIN_PMAXUB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMINSW	i386.h	/^  IX86_BUILTIN_PMINSW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMINUB	i386.h	/^  IX86_BUILTIN_PMINUB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMOVMSKB	i386.h	/^  IX86_BUILTIN_PMOVMSKB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMULHRW	i386.h	/^  IX86_BUILTIN_PMULHRW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMULHUW	i386.h	/^  IX86_BUILTIN_PMULHUW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMULHW	i386.h	/^  IX86_BUILTIN_PMULHW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PMULLW	i386.h	/^  IX86_BUILTIN_PMULLW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_POR	i386.h	/^  IX86_BUILTIN_POR,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSADBW	i386.h	/^  IX86_BUILTIN_PSADBW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSHUFW	i386.h	/^  IX86_BUILTIN_PSHUFW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSLLD	i386.h	/^  IX86_BUILTIN_PSLLD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSLLDI	i386.h	/^  IX86_BUILTIN_PSLLDI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSLLQ	i386.h	/^  IX86_BUILTIN_PSLLQ,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSLLQI	i386.h	/^  IX86_BUILTIN_PSLLQI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSLLW	i386.h	/^  IX86_BUILTIN_PSLLW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSLLWI	i386.h	/^  IX86_BUILTIN_PSLLWI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRAD	i386.h	/^  IX86_BUILTIN_PSRAD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRADI	i386.h	/^  IX86_BUILTIN_PSRADI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRAW	i386.h	/^  IX86_BUILTIN_PSRAW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRAWI	i386.h	/^  IX86_BUILTIN_PSRAWI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRLD	i386.h	/^  IX86_BUILTIN_PSRLD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRLDI	i386.h	/^  IX86_BUILTIN_PSRLDI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRLQ	i386.h	/^  IX86_BUILTIN_PSRLQ,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRLQI	i386.h	/^  IX86_BUILTIN_PSRLQI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRLW	i386.h	/^  IX86_BUILTIN_PSRLW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSRLWI	i386.h	/^  IX86_BUILTIN_PSRLWI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSUBB	i386.h	/^  IX86_BUILTIN_PSUBB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSUBD	i386.h	/^  IX86_BUILTIN_PSUBD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSUBSB	i386.h	/^  IX86_BUILTIN_PSUBSB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSUBSW	i386.h	/^  IX86_BUILTIN_PSUBSW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSUBUSB	i386.h	/^  IX86_BUILTIN_PSUBUSB,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSUBUSW	i386.h	/^  IX86_BUILTIN_PSUBUSW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSUBW	i386.h	/^  IX86_BUILTIN_PSUBW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSWAPDSF	i386.h	/^  IX86_BUILTIN_PSWAPDSF,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PSWAPDSI	i386.h	/^  IX86_BUILTIN_PSWAPDSI,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PUNPCKHBW	i386.h	/^  IX86_BUILTIN_PUNPCKHBW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PUNPCKHDQ	i386.h	/^  IX86_BUILTIN_PUNPCKHDQ,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PUNPCKHWD	i386.h	/^  IX86_BUILTIN_PUNPCKHWD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PUNPCKLBW	i386.h	/^  IX86_BUILTIN_PUNPCKLBW,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PUNPCKLDQ	i386.h	/^  IX86_BUILTIN_PUNPCKLDQ,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PUNPCKLWD	i386.h	/^  IX86_BUILTIN_PUNPCKLWD,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_PXOR	i386.h	/^  IX86_BUILTIN_PXOR,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_RCPPS	i386.h	/^  IX86_BUILTIN_RCPPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_RCPSS	i386.h	/^  IX86_BUILTIN_RCPSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_RSQRTPS	i386.h	/^  IX86_BUILTIN_RSQRTPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_RSQRTSS	i386.h	/^  IX86_BUILTIN_RSQRTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_SFENCE	i386.h	/^  IX86_BUILTIN_SFENCE,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_SHUFPS	i386.h	/^  IX86_BUILTIN_SHUFPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_SQRTPS	i386.h	/^  IX86_BUILTIN_SQRTPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_SQRTSS	i386.h	/^  IX86_BUILTIN_SQRTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_SSE_ZERO	i386.h	/^  IX86_BUILTIN_SSE_ZERO,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_STMXCSR	i386.h	/^  IX86_BUILTIN_STMXCSR,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_STOREAPS	i386.h	/^  IX86_BUILTIN_STOREAPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_STOREHPS	i386.h	/^  IX86_BUILTIN_STOREHPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_STORELPS	i386.h	/^  IX86_BUILTIN_STORELPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_STORESS	i386.h	/^  IX86_BUILTIN_STORESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_STOREUPS	i386.h	/^  IX86_BUILTIN_STOREUPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_SUBPS	i386.h	/^  IX86_BUILTIN_SUBPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_SUBSS	i386.h	/^  IX86_BUILTIN_SUBSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UCOMIEQSS	i386.h	/^  IX86_BUILTIN_UCOMIEQSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UCOMIGESS	i386.h	/^  IX86_BUILTIN_UCOMIGESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UCOMIGTSS	i386.h	/^  IX86_BUILTIN_UCOMIGTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UCOMILESS	i386.h	/^  IX86_BUILTIN_UCOMILESS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UCOMILTSS	i386.h	/^  IX86_BUILTIN_UCOMILTSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UCOMINEQSS	i386.h	/^  IX86_BUILTIN_UCOMINEQSS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UNPCKHPS	i386.h	/^  IX86_BUILTIN_UNPCKHPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_UNPCKLPS	i386.h	/^  IX86_BUILTIN_UNPCKLPS,$/;"	e	enum:ix86_builtins
IX86_BUILTIN_XORPS	i386.h	/^  IX86_BUILTIN_XORPS,$/;"	e	enum:ix86_builtins
J	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
J2_ESC	mbchar.c	/^	     J2_ESC, J2_ESC_BR, INV, JIS_S_NUM} JIS_STATE; $/;"	e	enum:__anon5	file:
J2_ESC_BR	mbchar.c	/^	     J2_ESC, J2_ESC_BR, INV, JIS_S_NUM} JIS_STATE; $/;"	e	enum:__anon5	file:
JCR_SECTION_NAME	defaults.h	225;"	d
JIS	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
JIS_1	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
JIS_2	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
JIS_ACTION	mbchar.c	/^	      EMPTY, ERROR} JIS_ACTION;$/;"	t	typeref:enum:__anon6	file:
JIS_CHAR	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
JIS_CHAR_TYPE	mbchar.c	/^	      JIS_C_NUM} JIS_CHAR_TYPE;$/;"	t	typeref:enum:__anon4	file:
JIS_C_NUM	mbchar.c	/^	      JIS_C_NUM} JIS_CHAR_TYPE;$/;"	e	enum:__anon4	file:
JIS_ESC_CHAR	mbchar.h	27;"	d
JIS_STATE	mbchar.c	/^	     J2_ESC, J2_ESC_BR, INV, JIS_S_NUM} JIS_STATE; $/;"	t	typeref:enum:__anon5	file:
JIS_S_NUM	mbchar.c	/^	     J2_ESC, J2_ESC_BR, INV, JIS_S_NUM} JIS_STATE; $/;"	e	enum:__anon5	file:
JIS_action_table	mbchar.c	/^static JIS_ACTION JIS_action_table[JIS_S_NUM][JIS_C_NUM] = {$/;"	v	file:
JIS_state_table	mbchar.c	/^static JIS_STATE JIS_state_table[JIS_S_NUM][JIS_C_NUM] = {$/;"	v	file:
JUMP_ALIGN	final.c	632;"	d	file:
JUMP_ALIGN_MAX_SKIP	final.c	636;"	d	file:
JUMP_LABEL	rtl.h	767;"	d
JUMP_P	rtl.h	239;"	d
JUMP_TABLES_IN_TEXT_SECTION	final.c	98;"	d	file:
JUMP_TABLES_IN_TEXT_SECTION	i386.h	2895;"	d
JUMP_TABLE_DATA_P	rtl.h	248;"	d
J_ESC	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
J_ESC_BR	mbchar.c	/^typedef enum {ASCII, A_ESC, A_ESC_DL, JIS, JIS_1, JIS_2, J_ESC, J_ESC_BR,$/;"	e	enum:__anon5	file:
K	fold-const.c	1032;"	d	file:
K	fold-const.c	1083;"	d	file:
KANDR	cpplib.c	65;"	d	file:
KILL_INSN	ssa-dce.c	122;"	d	file:
KNOWN_TYPE_TAG	sdbout.c	249;"	d	file:
K_DELTA_PC	vmsdbgout.c	932;"	d	file:
K_INCR_LINUM	vmsdbgout.c	939;"	d	file:
K_SET_LINUM	vmsdbgout.c	935;"	d	file:
L	safe-ctype.c	51;"	d	file:
LABEL	c-parse.c	36;"	d	file:
LABEL	ggc-common.c	678;"	d	file:
LABEL	ggc-page.c	1469;"	d	file:
LABEL	hashtable.c	255;"	d	file:
LABEL	hashtable.c	302;"	d	file:
LABELED_BLOCK_BODY	tree.h	852;"	d
LABELED_BLOCK_EXPR_CHECK	tree-check.h	148;"	d
LABELED_BLOCK_LABEL	tree.h	850;"	d
LABEL_ALIGN	final.c	608;"	d	file:
LABEL_ALIGN_AFTER_BARRIER	final.c	624;"	d	file:
LABEL_ALIGN_AFTER_BARRIER_MAX_SKIP	final.c	628;"	d	file:
LABEL_ALIGN_MAX_SKIP	final.c	612;"	d	file:
LABEL_ALTERNATE_NAME	rtl.h	756;"	d
LABEL_DECL_CHECK	tree-check.h	37;"	d
LABEL_EXPR_CHECK	tree-check.h	143;"	d
LABEL_LIVE	reload1.c	8609;"	d	file:
LABEL_NAME	rtl.h	749;"	d
LABEL_NEXTREF	rtl.h	779;"	d
LABEL_NUSES	rtl.h	753;"	d
LABEL_OUTSIDE_LOOP_P	rtl.h	960;"	d
LABEL_P	rtl.h	236;"	d
LABEL_PRESERVE_P	rtl.h	967;"	d
LABEL_REFS	rtl.h	773;"	d
LABEL_REF_NONLOCAL_P	rtl.h	964;"	d
LABEL_STMT_CHECK	tree-check.h	169;"	d
LABEL_STMT_LABEL	c-common.h	656;"	d
LABEL_TO_ALIGNMENT	final.c	663;"	d	file:
LABEL_TO_MAX_SKIP	final.c	666;"	d	file:
LANG_ADA83	dwarf.h	/^    LANG_ADA83		= 0x00000003,$/;"	e	enum:dwarf_source_language
LANG_C	dwarf.h	/^    LANG_C		= 0x00000002,$/;"	e	enum:dwarf_source_language
LANG_C89	dwarf.h	/^    LANG_C89		= 0x00000001,$/;"	e	enum:dwarf_source_language
LANG_COBOL74	dwarf.h	/^    LANG_COBOL74	= 0x00000005,$/;"	e	enum:dwarf_source_language
LANG_COBOL85	dwarf.h	/^    LANG_COBOL85	= 0x00000006,$/;"	e	enum:dwarf_source_language
LANG_C_PLUS_PLUS	dwarf.h	/^    LANG_C_PLUS_PLUS	= 0x00000004,$/;"	e	enum:dwarf_source_language
LANG_FORTRAN77	dwarf.h	/^    LANG_FORTRAN77	= 0x00000007,$/;"	e	enum:dwarf_source_language
LANG_FORTRAN90	dwarf.h	/^    LANG_FORTRAN90	= 0x00000008,$/;"	e	enum:dwarf_source_language
LANG_HOOKS_CLEAR_BINDING_STACK	langhooks-def.h	73;"	d
LANG_HOOKS_DECODE_OPTION	c-lang.c	43;"	d	file:
LANG_HOOKS_DECODE_OPTION	c-lang.c	44;"	d	file:
LANG_HOOKS_DECODE_OPTION	langhooks-def.h	75;"	d
LANG_HOOKS_EXPAND_CONSTANT	langhooks-def.h	78;"	d
LANG_HOOKS_FINISH	c-lang.c	39;"	d	file:
LANG_HOOKS_FINISH	c-lang.c	40;"	d	file:
LANG_HOOKS_FINISH	langhooks-def.h	72;"	d
LANG_HOOKS_GET_ALIAS_SET	c-lang.c	47;"	d	file:
LANG_HOOKS_GET_ALIAS_SET	c-lang.c	48;"	d	file:
LANG_HOOKS_GET_ALIAS_SET	langhooks-def.h	77;"	d
LANG_HOOKS_HONOR_READONLY	langhooks-def.h	81;"	d
LANG_HOOKS_IDENTIFIER_SIZE	langhooks-def.h	70;"	d
LANG_HOOKS_INIT	c-lang.c	37;"	d	file:
LANG_HOOKS_INIT	c-lang.c	38;"	d	file:
LANG_HOOKS_INIT	langhooks-def.h	71;"	d
LANG_HOOKS_INITIALIZER	langhooks-def.h	139;"	d
LANG_HOOKS_INIT_OPTIONS	c-lang.c	41;"	d	file:
LANG_HOOKS_INIT_OPTIONS	c-lang.c	42;"	d	file:
LANG_HOOKS_INIT_OPTIONS	langhooks-def.h	74;"	d
LANG_HOOKS_NAME	c-lang.c	35;"	d	file:
LANG_HOOKS_NAME	c-lang.c	36;"	d	file:
LANG_HOOKS_NAME	langhooks-def.h	69;"	d
LANG_HOOKS_POST_OPTIONS	c-lang.c	45;"	d	file:
LANG_HOOKS_POST_OPTIONS	c-lang.c	46;"	d	file:
LANG_HOOKS_POST_OPTIONS	langhooks-def.h	76;"	d
LANG_HOOKS_PRINT_DECL	langhooks-def.h	84;"	d
LANG_HOOKS_PRINT_IDENTIFIER	c-lang.c	53;"	d	file:
LANG_HOOKS_PRINT_IDENTIFIER	c-lang.c	54;"	d	file:
LANG_HOOKS_PRINT_IDENTIFIER	langhooks-def.h	86;"	d
LANG_HOOKS_PRINT_STATISTICS	langhooks-def.h	82;"	d
LANG_HOOKS_PRINT_TYPE	langhooks-def.h	85;"	d
LANG_HOOKS_PRINT_XNODE	langhooks-def.h	83;"	d
LANG_HOOKS_SAFE_FROM_P	c-lang.c	49;"	d	file:
LANG_HOOKS_SAFE_FROM_P	c-lang.c	50;"	d	file:
LANG_HOOKS_SAFE_FROM_P	langhooks-def.h	79;"	d
LANG_HOOKS_SET_YYDEBUG	c-lang.c	55;"	d	file:
LANG_HOOKS_SET_YYDEBUG	c-lang.c	56;"	d	file:
LANG_HOOKS_SET_YYDEBUG	langhooks-def.h	87;"	d
LANG_HOOKS_STATICP	c-lang.c	51;"	d	file:
LANG_HOOKS_STATICP	c-lang.c	52;"	d	file:
LANG_HOOKS_STATICP	langhooks-def.h	80;"	d
LANG_HOOKS_TREE_DUMP_DUMP_TREE_FN	langhooks-def.h	130;"	d
LANG_HOOKS_TREE_DUMP_INITIALIZER	langhooks-def.h	133;"	d
LANG_HOOKS_TREE_DUMP_TYPE_QUALS_FN	langhooks-def.h	131;"	d
LANG_HOOKS_TREE_INLINING_ADD_PENDING_FN_DECLS	langhooks-def.h	95;"	d
LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P	c-lang.c	64;"	d	file:
LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P	c-lang.c	65;"	d	file:
LANG_HOOKS_TREE_INLINING_ANON_AGGR_TYPE_P	langhooks-def.h	103;"	d
LANG_HOOKS_TREE_INLINING_AUTO_VAR_IN_FN_P	langhooks-def.h	99;"	d
LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN	c-lang.c	58;"	d	file:
LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN	c-lang.c	59;"	d	file:
LANG_HOOKS_TREE_INLINING_CANNOT_INLINE_TREE_FN	langhooks-def.h	91;"	d
LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING	c-lang.c	67;"	d	file:
LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING	c-lang.c	68;"	d	file:
LANG_HOOKS_TREE_INLINING_CONVERT_PARM_FOR_INLINING	langhooks-def.h	109;"	d
LANG_HOOKS_TREE_INLINING_COPY_RES_DECL_FOR_INLINING	langhooks-def.h	101;"	d
LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS	c-lang.c	61;"	d	file:
LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS	c-lang.c	62;"	d	file:
LANG_HOOKS_TREE_INLINING_DISREGARD_INLINE_LIMITS	langhooks-def.h	93;"	d
LANG_HOOKS_TREE_INLINING_END_INLINING	langhooks-def.h	107;"	d
LANG_HOOKS_TREE_INLINING_INITIALIZER	langhooks-def.h	112;"	d
LANG_HOOKS_TREE_INLINING_START_INLINING	langhooks-def.h	105;"	d
LANG_HOOKS_TREE_INLINING_TREE_CHAIN_MATTERS_P	langhooks-def.h	97;"	d
LANG_HOOKS_TREE_INLINING_WALK_SUBTREES	langhooks-def.h	90;"	d
LANG_JAVA	dwarf.h	/^    LANG_JAVA		= 0x0000000b$/;"	e	enum:dwarf_source_language
LANG_MODULA2	dwarf.h	/^    LANG_MODULA2	= 0x0000000a,$/;"	e	enum:dwarf_source_language
LANG_PASCAL83	dwarf.h	/^    LANG_PASCAL83	= 0x00000009,$/;"	e	enum:dwarf_source_language
LANG_TYPE_CHECK	tree-check.h	30;"	d
LANG_hi_user	dwarf.h	310;"	d
LANG_lo_user	dwarf.h	309;"	d
LAST_AND_UNUSED_RTX_CODE	rtl.h	/^  LAST_AND_UNUSED_RTX_CODE};	\/* A convenient way to get a value for$/;"	e	enum:rtx_code
LAST_AND_UNUSED_TREE_CODE	tree.h	/^  LAST_AND_UNUSED_TREE_CODE	\/* A convenient way to get a value for$/;"	e	enum:tree_code
LAST_C_TREE_CODE	c-common.h	/^  LAST_C_TREE_CODE$/;"	e	enum:c_tree_code
LAST_MMX_REG	i386.h	1108;"	d
LAST_PARAM	params.h	/^  LAST_PARAM$/;"	e	enum:compiler_param
LAST_REX_INT_REG	i386.h	1111;"	d
LAST_REX_SSE_REG	i386.h	1114;"	d
LAST_SOURCE_LINE	line-map.h	107;"	d
LAST_SSE_REG	i386.h	1105;"	d
LAST_STACK_REG	i386.h	1098;"	d
LAST_UNUSED_STAB_CODE	gstab.h	/^LAST_UNUSED_STAB_CODE$/;"	e	enum:__stab_debug_code
LAST_VIRTUAL_REGISTER	rtl.h	1714;"	d
LAUNCH_PRIORITY	haifa-sched.c	198;"	d	file:
LCT_ALWAYS_RETURN	rtl.h	/^  LCT_ALWAYS_RETURN = 7,$/;"	e	enum:libcall_type
LCT_CONST	rtl.h	/^  LCT_CONST = 1,$/;"	e	enum:libcall_type
LCT_CONST_MAKE_BLOCK	rtl.h	/^  LCT_CONST_MAKE_BLOCK = 3,$/;"	e	enum:libcall_type
LCT_NORETURN	rtl.h	/^  LCT_NORETURN = 5,$/;"	e	enum:libcall_type
LCT_NORMAL	rtl.h	/^  LCT_NORMAL = 0,$/;"	e	enum:libcall_type
LCT_PURE	rtl.h	/^  LCT_PURE = 2,$/;"	e	enum:libcall_type
LCT_PURE_MAKE_BLOCK	rtl.h	/^  LCT_PURE_MAKE_BLOCK = 4,$/;"	e	enum:libcall_type
LCT_RETURNS_TWICE	rtl.h	/^  LCT_RETURNS_TWICE = 8$/;"	e	enum:libcall_type
LCT_THROW	rtl.h	/^  LCT_THROW = 6,$/;"	e	enum:libcall_type
LC_ENTER	line-map.h	/^enum lc_reason {LC_ENTER = 0, LC_LEAVE, LC_RENAME};$/;"	e	enum:lc_reason
LC_LEAVE	line-map.h	/^enum lc_reason {LC_ENTER = 0, LC_LEAVE, LC_RENAME};$/;"	e	enum:lc_reason
LC_RENAME	line-map.h	/^enum lc_reason {LC_ENTER = 0, LC_LEAVE, LC_RENAME};$/;"	e	enum:lc_reason
LDFLAGS	Makefile	/^LDFLAGS := -static$/;"	m
LEGACY_REGS	i386.h	/^  LEGACY_REGS,			\/* %eax %ebx %ecx %edx %esi %edi %ebp %esp *\/$/;"	e	enum:reg_class
LEGITIMATE_CONSTANT_P	i386.h	1945;"	d
LEGITIMATE_PIC_OPERAND_P	i386.h	2008;"	d
LEGITIMIZE_ADDRESS	i386.h	1995;"	d
LESS_PRIO	cppexp.c	485;"	d	file:
LE_EXPR_CHECK	tree-check.h	104;"	d
LIBCALL_VALUE	i386.h	1649;"	d
LIBGCC2_LONG_DOUBLE_TYPE_SIZE	i386.h	681;"	d
LIBGCC2_LONG_DOUBLE_TYPE_SIZE	i386.h	683;"	d
LIBIBERTY_H	libiberty.h	36;"	d
LIB_SPEC	svr4.h	118;"	d
LIB_SPEC	svr4.h	119;"	d
LIMIT_RELOAD_CLASS	i386.h	1449;"	d
LIM_REG_CLASSES	i386.h	/^  ALL_REGS, LIM_REG_CLASSES$/;"	e	enum:reg_class
LINE_BEGIN_LABEL	dwarfout.c	1079;"	d	file:
LINE_CODE_LABEL	dwarf2out.c	3783;"	d	file:
LINE_CODE_LABEL	vmsdbgout.c	276;"	d	file:
LINE_CODE_LABEL_FMT	dwarfout.c	1181;"	d	file:
LINE_END_LABEL	dwarfout.c	1085;"	d	file:
LINE_ENTRY_LABEL_FMT	dwarfout.c	1187;"	d	file:
LINE_INFO_TABLE_INCREMENT	dwarf2out.c	3375;"	d	file:
LINE_INFO_TABLE_INCREMENT	vmsdbgout.c	127;"	d	file:
LINE_LAST_ENTRY_LABEL	dwarfout.c	1082;"	d	file:
LINE_NOTE	haifa-sched.c	202;"	d	file:
LINE_NUMBER	rtl.h	624;"	d
LINE_NUMBER_BEGIN_LABEL	dwarf2out.c	335;"	d	file:
LINE_NUMBER_END_LABEL	dwarf2out.c	336;"	d	file:
LINE_SECTION	dwarfout.c	982;"	d	file:
LINK_COST_FREE	rtl.h	984;"	d
LINK_COST_ZERO	rtl.h	983;"	d
LINK_ELIMINATE_DUPLICATE_LDIRECTORIES	defaults.h	203;"	d
LINK_SPEC	linux.h	116;"	d
LINK_SPEC	linux.h	119;"	d
LINK_SPEC	linux.h	127;"	d
LINK_SPEC	linux.h	136;"	d
LINK_SPEC	linux64.h	41;"	d
LINK_SPEC	linux64.h	42;"	d
LINK_SPEC	svr4.h	153;"	d
LINK_SPEC	svr4.h	155;"	d
LINK_SPEC	svr4.h	164;"	d
LINUX_DEFAULT_ELF	linux.h	24;"	d
LINUX_DEFAULT_ELF	linux64.h	22;"	d
LN_PROLOG_AS_LABEL	dwarf2out.c	337;"	d	file:
LN_PROLOG_END_LABEL	dwarf2out.c	338;"	d	file:
LOCALEDIR	intl.c	33;"	d	file:
LOCAL_ALIGNMENT	function.c	68;"	d	file:
LOCAL_ALIGNMENT	i386.h	833;"	d
LOCAL_ASM_OP	elfos.h	199;"	d
LOCAL_INCLUDE_DIR	cppdefault.h	38;"	d
LOCAL_LABEL_PREFIX	att.h	84;"	d
LOCAL_LABEL_PREFIX	att.h	85;"	d
LOCAL_REGNO	flow.c	165;"	d	file:
LOCAL_REGNO	reload1.c	85;"	d	file:
LOC_BEGIN_LABEL_FMT	dwarfout.c	1142;"	d	file:
LOC_END_LABEL_FMT	dwarfout.c	1145;"	d	file:
LOG_LINKS	rtl.h	414;"	d
LONG_DOUBLE	ansidecl.h	147;"	d
LONG_DOUBLE	ansidecl.h	187;"	d
LONG_DOUBLE_TYPE_SIZE	defaults.h	326;"	d
LONG_DOUBLE_TYPE_SIZE	i386.h	678;"	d
LONG_DOUBLE_TYPE_SIZE	real.h	73;"	d
LONG_LONG_TYPE_SIZE	defaults.h	306;"	d
LONG_LONG_TYPE_SIZE	i386.h	696;"	d
LONG_TYPE_SIZE	defaults.h	302;"	d
LONG_TYPE_SIZE	i386.h	693;"	d
LOOKUP_L1	ggc-page.c	148;"	d	file:
LOOKUP_L2	ggc-page.c	151;"	d	file:
LOOP_ALIGN	final.c	616;"	d	file:
LOOP_ALIGN_MAX_SKIP	final.c	620;"	d	file:
LOOP_ALL	basic-block.h	586;"	d
LOOP_BCT	loop.h	29;"	d
LOOP_BLOCK_NUM	loop.c	10592;"	d	file:
LOOP_BLOCK_NUM_1	loop.c	10588;"	d	file:
LOOP_EDGES	basic-block.h	584;"	d
LOOP_ENTRY_EDGES	basic-block.h	582;"	d
LOOP_EXITS_DOMS	basic-block.h	585;"	d
LOOP_EXIT_EDGES	basic-block.h	583;"	d
LOOP_EXPR_BODY	tree.h	861;"	d
LOOP_EXPR_CHECK	tree-check.h	147;"	d
LOOP_FIRST_PASS	loop.h	31;"	d
LOOP_INFO	loop.h	34;"	d
LOOP_INSN_UID	loop.c	10598;"	d	file:
LOOP_IVS	loop.h	43;"	d
LOOP_MOVABLES	loop.h	37;"	d
LOOP_PREFETCH	loop.h	30;"	d
LOOP_PRE_HEADER	basic-block.h	581;"	d
LOOP_REGNO_NREGS	loop.c	150;"	d	file:
LOOP_REGS	loop.h	40;"	d
LOOP_REG_GLOBAL_P	loop.c	146;"	d	file:
LOOP_REG_LIFETIME	loop.c	143;"	d	file:
LOOP_TREE	basic-block.h	580;"	d
LOOP_UNROLL	loop.h	28;"	d
LOWPART	fold-const.c	134;"	d	file:
LOW_PRIORITY_P	haifa-sched.c	200;"	d	file:
LPREFIX	att.h	29;"	d
LROTATE_EXPR_CHECK	tree-check.h	90;"	d
LSHIFT	c-parse.c	52;"	d	file:
LSHIFT_EXPR_CHECK	tree-check.h	88;"	d
LTI_MAX	libfuncs.h	/^  LTI_MAX$/;"	e	enum:libfunc_index
LTI_abort	libfuncs.h	/^  LTI_abort,$/;"	e	enum:libfunc_index
LTI_bcmp	libfuncs.h	/^  LTI_bcmp,$/;"	e	enum:libfunc_index
LTI_bcopy	libfuncs.h	/^  LTI_bcopy,$/;"	e	enum:libfunc_index
LTI_bzero	libfuncs.h	/^  LTI_bzero,$/;"	e	enum:libfunc_index
LTI_eh_personality	libfuncs.h	/^  LTI_eh_personality,$/;"	e	enum:libfunc_index
LTI_eqdf2	libfuncs.h	/^  LTI_eqdf2,$/;"	e	enum:libfunc_index
LTI_eqhf2	libfuncs.h	/^  LTI_eqhf2,$/;"	e	enum:libfunc_index
LTI_eqsf2	libfuncs.h	/^  LTI_eqsf2,$/;"	e	enum:libfunc_index
LTI_eqtf2	libfuncs.h	/^  LTI_eqtf2,$/;"	e	enum:libfunc_index
LTI_eqxf2	libfuncs.h	/^  LTI_eqxf2,$/;"	e	enum:libfunc_index
LTI_extenddftf2	libfuncs.h	/^  LTI_extenddftf2,$/;"	e	enum:libfunc_index
LTI_extenddfxf2	libfuncs.h	/^  LTI_extenddfxf2,$/;"	e	enum:libfunc_index
LTI_extendsfdf2	libfuncs.h	/^  LTI_extendsfdf2,$/;"	e	enum:libfunc_index
LTI_extendsftf2	libfuncs.h	/^  LTI_extendsftf2,$/;"	e	enum:libfunc_index
LTI_extendsfxf2	libfuncs.h	/^  LTI_extendsfxf2,$/;"	e	enum:libfunc_index
LTI_fixdfdi	libfuncs.h	/^  LTI_fixdfdi,$/;"	e	enum:libfunc_index
LTI_fixdfsi	libfuncs.h	/^  LTI_fixdfsi,$/;"	e	enum:libfunc_index
LTI_fixdfti	libfuncs.h	/^  LTI_fixdfti,$/;"	e	enum:libfunc_index
LTI_fixsfdi	libfuncs.h	/^  LTI_fixsfdi,$/;"	e	enum:libfunc_index
LTI_fixsfsi	libfuncs.h	/^  LTI_fixsfsi,$/;"	e	enum:libfunc_index
LTI_fixsfti	libfuncs.h	/^  LTI_fixsfti,$/;"	e	enum:libfunc_index
LTI_fixtfdi	libfuncs.h	/^  LTI_fixtfdi,$/;"	e	enum:libfunc_index
LTI_fixtfsi	libfuncs.h	/^  LTI_fixtfsi,$/;"	e	enum:libfunc_index
LTI_fixtfti	libfuncs.h	/^  LTI_fixtfti,$/;"	e	enum:libfunc_index
LTI_fixunsdfdi	libfuncs.h	/^  LTI_fixunsdfdi,$/;"	e	enum:libfunc_index
LTI_fixunsdfsi	libfuncs.h	/^  LTI_fixunsdfsi,$/;"	e	enum:libfunc_index
LTI_fixunsdfti	libfuncs.h	/^  LTI_fixunsdfti,$/;"	e	enum:libfunc_index
LTI_fixunssfdi	libfuncs.h	/^  LTI_fixunssfdi,$/;"	e	enum:libfunc_index
LTI_fixunssfsi	libfuncs.h	/^  LTI_fixunssfsi,$/;"	e	enum:libfunc_index
LTI_fixunssfti	libfuncs.h	/^  LTI_fixunssfti,$/;"	e	enum:libfunc_index
LTI_fixunstfdi	libfuncs.h	/^  LTI_fixunstfdi,$/;"	e	enum:libfunc_index
LTI_fixunstfsi	libfuncs.h	/^  LTI_fixunstfsi,$/;"	e	enum:libfunc_index
LTI_fixunstfti	libfuncs.h	/^  LTI_fixunstfti,$/;"	e	enum:libfunc_index
LTI_fixunsxfdi	libfuncs.h	/^  LTI_fixunsxfdi,$/;"	e	enum:libfunc_index
LTI_fixunsxfsi	libfuncs.h	/^  LTI_fixunsxfsi,$/;"	e	enum:libfunc_index
LTI_fixunsxfti	libfuncs.h	/^  LTI_fixunsxfti,$/;"	e	enum:libfunc_index
LTI_fixxfdi	libfuncs.h	/^  LTI_fixxfdi,$/;"	e	enum:libfunc_index
LTI_fixxfsi	libfuncs.h	/^  LTI_fixxfsi,$/;"	e	enum:libfunc_index
LTI_fixxfti	libfuncs.h	/^  LTI_fixxfti,$/;"	e	enum:libfunc_index
LTI_floatdidf	libfuncs.h	/^  LTI_floatdidf,$/;"	e	enum:libfunc_index
LTI_floatdisf	libfuncs.h	/^  LTI_floatdisf,$/;"	e	enum:libfunc_index
LTI_floatditf	libfuncs.h	/^  LTI_floatditf,$/;"	e	enum:libfunc_index
LTI_floatdixf	libfuncs.h	/^  LTI_floatdixf,$/;"	e	enum:libfunc_index
LTI_floatsidf	libfuncs.h	/^  LTI_floatsidf,$/;"	e	enum:libfunc_index
LTI_floatsisf	libfuncs.h	/^  LTI_floatsisf,$/;"	e	enum:libfunc_index
LTI_floatsitf	libfuncs.h	/^  LTI_floatsitf,$/;"	e	enum:libfunc_index
LTI_floatsixf	libfuncs.h	/^  LTI_floatsixf,$/;"	e	enum:libfunc_index
LTI_floattidf	libfuncs.h	/^  LTI_floattidf,$/;"	e	enum:libfunc_index
LTI_floattisf	libfuncs.h	/^  LTI_floattisf,$/;"	e	enum:libfunc_index
LTI_floattitf	libfuncs.h	/^  LTI_floattitf,$/;"	e	enum:libfunc_index
LTI_floattixf	libfuncs.h	/^  LTI_floattixf,$/;"	e	enum:libfunc_index
LTI_gedf2	libfuncs.h	/^  LTI_gedf2,$/;"	e	enum:libfunc_index
LTI_gehf2	libfuncs.h	/^  LTI_gehf2,$/;"	e	enum:libfunc_index
LTI_gesf2	libfuncs.h	/^  LTI_gesf2,$/;"	e	enum:libfunc_index
LTI_getf2	libfuncs.h	/^  LTI_getf2,$/;"	e	enum:libfunc_index
LTI_gexf2	libfuncs.h	/^  LTI_gexf2,$/;"	e	enum:libfunc_index
LTI_gtdf2	libfuncs.h	/^  LTI_gtdf2,$/;"	e	enum:libfunc_index
LTI_gthf2	libfuncs.h	/^  LTI_gthf2,$/;"	e	enum:libfunc_index
LTI_gtsf2	libfuncs.h	/^  LTI_gtsf2,$/;"	e	enum:libfunc_index
LTI_gttf2	libfuncs.h	/^  LTI_gttf2,$/;"	e	enum:libfunc_index
LTI_gtxf2	libfuncs.h	/^  LTI_gtxf2,$/;"	e	enum:libfunc_index
LTI_ledf2	libfuncs.h	/^  LTI_ledf2,$/;"	e	enum:libfunc_index
LTI_lehf2	libfuncs.h	/^  LTI_lehf2,$/;"	e	enum:libfunc_index
LTI_lesf2	libfuncs.h	/^  LTI_lesf2,$/;"	e	enum:libfunc_index
LTI_letf2	libfuncs.h	/^  LTI_letf2,$/;"	e	enum:libfunc_index
LTI_lexf2	libfuncs.h	/^  LTI_lexf2,$/;"	e	enum:libfunc_index
LTI_longjmp	libfuncs.h	/^  LTI_longjmp,$/;"	e	enum:libfunc_index
LTI_ltdf2	libfuncs.h	/^  LTI_ltdf2,$/;"	e	enum:libfunc_index
LTI_lthf2	libfuncs.h	/^  LTI_lthf2,$/;"	e	enum:libfunc_index
LTI_ltsf2	libfuncs.h	/^  LTI_ltsf2,$/;"	e	enum:libfunc_index
LTI_lttf2	libfuncs.h	/^  LTI_lttf2,$/;"	e	enum:libfunc_index
LTI_ltxf2	libfuncs.h	/^  LTI_ltxf2,$/;"	e	enum:libfunc_index
LTI_memcmp	libfuncs.h	/^  LTI_memcmp,$/;"	e	enum:libfunc_index
LTI_memcpy	libfuncs.h	/^  LTI_memcpy,$/;"	e	enum:libfunc_index
LTI_memmove	libfuncs.h	/^  LTI_memmove,$/;"	e	enum:libfunc_index
LTI_memset	libfuncs.h	/^  LTI_memset,$/;"	e	enum:libfunc_index
LTI_nedf2	libfuncs.h	/^  LTI_nedf2,$/;"	e	enum:libfunc_index
LTI_nehf2	libfuncs.h	/^  LTI_nehf2,$/;"	e	enum:libfunc_index
LTI_nesf2	libfuncs.h	/^  LTI_nesf2,$/;"	e	enum:libfunc_index
LTI_netf2	libfuncs.h	/^  LTI_netf2,$/;"	e	enum:libfunc_index
LTI_nexf2	libfuncs.h	/^  LTI_nexf2,$/;"	e	enum:libfunc_index
LTI_profile_function_entry	libfuncs.h	/^  LTI_profile_function_entry,$/;"	e	enum:libfunc_index
LTI_profile_function_exit	libfuncs.h	/^  LTI_profile_function_exit,$/;"	e	enum:libfunc_index
LTI_setjmp	libfuncs.h	/^  LTI_setjmp,$/;"	e	enum:libfunc_index
LTI_truncdfsf2	libfuncs.h	/^  LTI_truncdfsf2,$/;"	e	enum:libfunc_index
LTI_trunctfdf2	libfuncs.h	/^  LTI_trunctfdf2,$/;"	e	enum:libfunc_index
LTI_trunctfsf2	libfuncs.h	/^  LTI_trunctfsf2,$/;"	e	enum:libfunc_index
LTI_truncxfdf2	libfuncs.h	/^  LTI_truncxfdf2,$/;"	e	enum:libfunc_index
LTI_truncxfsf2	libfuncs.h	/^  LTI_truncxfsf2,$/;"	e	enum:libfunc_index
LTI_unorddf2	libfuncs.h	/^  LTI_unorddf2,$/;"	e	enum:libfunc_index
LTI_unordhf2	libfuncs.h	/^  LTI_unordhf2,$/;"	e	enum:libfunc_index
LTI_unordsf2	libfuncs.h	/^  LTI_unordsf2,$/;"	e	enum:libfunc_index
LTI_unordtf2	libfuncs.h	/^  LTI_unordtf2,$/;"	e	enum:libfunc_index
LTI_unordxf2	libfuncs.h	/^  LTI_unordxf2,$/;"	e	enum:libfunc_index
LTI_unwind_resume	libfuncs.h	/^  LTI_unwind_resume,$/;"	e	enum:libfunc_index
LTI_unwind_sjlj_register	libfuncs.h	/^  LTI_unwind_sjlj_register,$/;"	e	enum:libfunc_index
LTI_unwind_sjlj_unregister	libfuncs.h	/^  LTI_unwind_sjlj_unregister,$/;"	e	enum:libfunc_index
LT_EXPR_CHECK	tree-check.h	103;"	d
M	real.c	345;"	d	file:
M	safe-ctype.c	61;"	d	file:
MACINFO_BEGIN_LABEL	dwarfout.c	1098;"	d	file:
MACINFO_define	dwarf.h	/^    MACINFO_define	= 'd',$/;"	e	enum:dwarf_macinfo_record_type
MACINFO_resume	dwarf.h	/^    MACINFO_resume	= 'r',$/;"	e	enum:dwarf_macinfo_record_type
MACINFO_start	dwarf.h	/^    MACINFO_start	= 's',$/;"	e	enum:dwarf_macinfo_record_type
MACINFO_undef	dwarf.h	/^    MACINFO_undef	= 'u'$/;"	e	enum:dwarf_macinfo_record_type
MAIN_FILE_P	line-map.h	113;"	d
MAIN_NAME_P	tree.h	1999;"	d
MAKE_A	mbchar.c	/^typedef enum {COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP,$/;"	e	enum:__anon6	file:
MAKE_DECL_ONE_ONLY	elfos.h	281;"	d
MAKE_J	mbchar.c	/^typedef enum {COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP,$/;"	e	enum:__anon6	file:
MAKE_LINE_SAFE	sdbout.c	265;"	d	file:
MAP_ANONYMOUS	ggc-page.c	42;"	d	file:
MAP_FAILED	ggc-page.c	39;"	d	file:
MAP_FAILED	ggc-page.c	52;"	d	file:
MARK_DEST	resource.h	/^  MARK_DEST = 2$/;"	e	enum:mark_resource_type
MARK_SRC_DEST	resource.h	/^  MARK_SRC_DEST = 0,$/;"	e	enum:mark_resource_type
MARK_SRC_DEST_CALL	resource.h	/^  MARK_SRC_DEST_CALL = 1,$/;"	e	enum:mark_resource_type
MASK_128BIT_LONG_DOUBLE	i386.h	133;"	d
MASK_3DNOW	i386.h	129;"	d
MASK_3DNOW_A	i386.h	131;"	d
MASK_3DNOW_A_SET	i386.h	132;"	d
MASK_3DNOW_SET	i386.h	130;"	d
MASK_64BIT	i386.h	134;"	d
MASK_80387	i386.h	109;"	d
MASK_ACCUMULATE_OUTGOING_ARGS	i386.h	121;"	d
MASK_ACCUMULATE_OUTGOING_ARGS_SET	i386.h	122;"	d
MASK_ALIGN_DOUBLE	i386.h	111;"	d
MASK_FLOAT_RETURNS	i386.h	114;"	d
MASK_IEEE_FP	i386.h	113;"	d
MASK_INLINE_ALL_STROPS	i386.h	119;"	d
MASK_MMX	i386.h	123;"	d
MASK_MMX_SET	i386.h	124;"	d
MASK_NO_ALIGN_STROPS	i386.h	118;"	d
MASK_NO_FANCY_MATH_387	i386.h	115;"	d
MASK_NO_PUSH_ARGS	i386.h	120;"	d
MASK_NO_RED_ZONE	i386.h	136;"	d
MASK_OMIT_LEAF_FRAME_POINTER	i386.h	116;"	d
MASK_RTD	i386.h	110;"	d
MASK_SSE	i386.h	125;"	d
MASK_SSE2	i386.h	127;"	d
MASK_SSE2_SET	i386.h	128;"	d
MASK_SSE_SET	i386.h	126;"	d
MASK_STACK_PROBE	i386.h	117;"	d
MASK_SVR3_SHLIB	i386.h	112;"	d
MATCHES	reload.c	205;"	d	file:
MAX	system.h	243;"	d
MAX	system.h	245;"	d
MAXDECEXP	real.c	268;"	d	file:
MAXDECEXP	real.c	280;"	d	file:
MAXDECEXP	real.c	291;"	d	file:
MAXP	real.c	4643;"	d	file:
MAXPATHLEN	getpwd.c	108;"	d	file:
MAX_386_STACK_LOCALS	i386.c	539;"	d	file:
MAX_ALIAS_LOOP_PASSES	alias.c	127;"	d	file:
MAX_ALIGNMENT	ggc-page.c	198;"	d	file:
MAX_ARTIFICIAL_LABEL_BYTES	dwarf2out.c	202;"	d	file:
MAX_ARTIFICIAL_LABEL_BYTES	dwarfout.c	638;"	d	file:
MAX_ARTIFICIAL_LABEL_BYTES	vmsdbgout.c	76;"	d	file:
MAX_BITS_PER_WORD	expmed.c	72;"	d	file:
MAX_BITS_PER_WORD	i386.h	699;"	d
MAX_BITS_PER_WORD	i386.h	702;"	d
MAX_BLOCKAGE	insn-attr.h	106;"	d
MAX_BLOCKAGE_COST	sched-int.h	246;"	d
MAX_CHAR_TYPE_SIZE	cpplex.c	1814;"	d	file:
MAX_CLASSES	i386.c	756;"	d	file:
MAX_CODE_ALIGN	final.c	896;"	d	file:
MAX_CODE_ALIGN	i386.c	839;"	d	file:
MAX_CONDITIONAL_EXECUTE	ifcvt.c	60;"	d	file:
MAX_COST	rtl.h	1785;"	d
MAX_DELAY_HISTOGRAM	reorg.c	683;"	d	file:
MAX_DELAY_SLOT_INSN_SEARCH	params.h	89;"	d
MAX_DELAY_SLOT_LIVE_SEARCH	params.h	91;"	d
MAX_DUP_OPERANDS	insn-config.h	8;"	d
MAX_EXPR_CHECK	tree-check.h	85;"	d
MAX_FIXED_MODE_SIZE	stor-layout.c	196;"	d	file:
MAX_GCSE_MEMORY	params.h	95;"	d
MAX_GCSE_PASSES	params.h	97;"	d
MAX_HASH_TABLE	varasm.c	2407;"	d	file:
MAX_INIT_PRIORITY	tree.h	1576;"	d
MAX_INLINE_INSNS	params.h	87;"	d
MAX_INSNS_PER_PEEP2	insn-config.h	14;"	d
MAX_INSNS_PER_SPLIT	insn-config.h	10;"	d
MAX_ISSUE_DELAY	insn-attr.h	104;"	d
MAX_LINE	toplev.c	134;"	d	file:
MAX_LONG_DOUBLE_TYPE_SIZE	i386.h	679;"	d
MAX_LONG_DOUBLE_TYPE_SIZE	real.h	81;"	d
MAX_LONG_TYPE_SIZE	auto-host.h	345;"	d
MAX_LONG_TYPE_SIZE	i386.h	700;"	d
MAX_LONG_TYPE_SIZE	i386.h	703;"	d
MAX_MACHINE_MODE	machmode.h	/^MAX_MACHINE_MODE };$/;"	e	enum:machine_mode
MAX_MEM_SET_LIST_LEN	flow.c	284;"	d	file:
MAX_MODE_CLASS	machmode.h	/^		  MAX_MODE_CLASS};$/;"	e	enum:mode_class
MAX_MOVE_MAX	caller-save.c	38;"	d	file:
MAX_MULTIPLICITY	insn-attr.h	98;"	d
MAX_OFILE_ALIGNMENT	elfos.h	42;"	d
MAX_OFILE_ALIGNMENT	varasm.c	1567;"	d	file:
MAX_PENDING_LIST_LENGTH	params.h	93;"	d
MAX_POINTER_DEPTH	tree.h	1205;"	d
MAX_PREFETCHES	loop.c	75;"	d	file:
MAX_PRIORITY	haifa-sched.c	196;"	d	file:
MAX_READY_COST	insn-attr.h	102;"	d
MAX_RECOG_ALTERNATIVES	recog.h	23;"	d
MAX_RECOG_OPERANDS	insn-config.h	7;"	d
MAX_REGNO_REG_SET	basic-block.h	113;"	d
MAX_REGS_PER_ADDRESS	i386.h	1935;"	d
MAX_RELOADS	reload.h	50;"	d
MAX_REORG_PASSES	reorg.c	684;"	d	file:
MAX_RESERVED_INIT_PRIORITY	tree.h	1577;"	d
MAX_RGN_BLOCKS	sched-rgn.c	83;"	d	file:
MAX_RGN_INSNS	sched-rgn.c	84;"	d	file:
MAX_RTX_HASH_TABLE	varasm.c	76;"	d	file:
MAX_SAVED_CONST_INT	rtl.h	1552;"	d
MAX_SETS	cselib.c	1231;"	d	file:
MAX_SIMULTANEITY	insn-attr.h	100;"	d
MAX_SUBSCRIPTS	dependence.c	36;"	d	file:
MAX_TREE_CODES	tree.h	48;"	d
MAX_UNROLLED_INSNS	unroll.c	176;"	d	file:
MAX_USELESS_VALUES	cselib.c	99;"	d	file:
MAX_USES	gcse.c	3888;"	d	file:
MAX_VISUAL_LINES	sched-vis.c	84;"	d	file:
MAX_VISUAL_NO_UNIT	sched-vis.c	90;"	d	file:
MAX_WCHAR_TYPE_SIZE	cpplex.c	1818;"	d	file:
MAX_WCHAR_TYPE_SIZE	i386.h	694;"	d
MAYBE_BOUNDED_INDIRECT_TYPE_P	tree.h	453;"	d
MAYBE_BOUNDED_POINTER_TYPE_P	tree.h	458;"	d
MAYBE_BOUNDED_REFERENCE_TYPE_P	tree.h	464;"	d
MAYBE_EXTEND_CONST_EQUIV_VARRAY	integrate.h	177;"	d
MAYBE_FLOAT_CLASS_P	i386.h	1237;"	d
MAYBE_INTEGER_CLASS_P	i386.h	1235;"	d
MAYBE_MMX_CLASS_P	i386.h	1241;"	d
MAYBE_SSE_CLASS_P	i386.h	1239;"	d
MD_ASM_CLOBBERS	i386.h	1529;"	d
MD_EXEC_PREFIX	svr4.h	103;"	d
MD_EXEC_PREFIX	svr4.h	104;"	d
MD_FALLBACK_FRAME_STATE_FOR	linux.h	228;"	d
MD_FALLBACK_FRAME_STATE_FOR	linux64.h	140;"	d
MD_FALLBACK_FRAME_STATE_FOR	linux64.h	141;"	d
MD_FALLBACK_FRAME_STATE_FOR	linux64.h	82;"	d
MD_FALLBACK_FRAME_STATE_FOR	linux64.h	83;"	d
MD_STARTFILE_PREFIX	svr4.h	111;"	d
MD_STARTFILE_PREFIX	svr4.h	112;"	d
MEMORY_BOTH	insn-attr.h	/^enum attr_memory {MEMORY_NONE, MEMORY_LOAD, MEMORY_STORE, MEMORY_BOTH, MEMORY_UNKNOWN};$/;"	e	enum:attr_memory
MEMORY_LOAD	insn-attr.h	/^enum attr_memory {MEMORY_NONE, MEMORY_LOAD, MEMORY_STORE, MEMORY_BOTH, MEMORY_UNKNOWN};$/;"	e	enum:attr_memory
MEMORY_MOVE_COST	i386.h	2651;"	d
MEMORY_MOVE_COST	reload.h	41;"	d
MEMORY_MOVE_COST	reload.h	44;"	d
MEMORY_NONE	insn-attr.h	/^enum attr_memory {MEMORY_NONE, MEMORY_LOAD, MEMORY_STORE, MEMORY_BOTH, MEMORY_UNKNOWN};$/;"	e	enum:attr_memory
MEMORY_STORE	insn-attr.h	/^enum attr_memory {MEMORY_NONE, MEMORY_LOAD, MEMORY_STORE, MEMORY_BOTH, MEMORY_UNKNOWN};$/;"	e	enum:attr_memory
MEMORY_UNKNOWN	insn-attr.h	/^enum attr_memory {MEMORY_NONE, MEMORY_LOAD, MEMORY_STORE, MEMORY_BOTH, MEMORY_UNKNOWN};$/;"	e	enum:attr_memory
MEM_ALIAS_SET	rtl.h	925;"	d
MEM_ALIGN	rtl.h	944;"	d
MEM_ATTRS	rtl.h	914;"	d
MEM_COPY_ATTRIBUTES	rtl.h	950;"	d
MEM_DEPENDENCY	dependence.c	1418;"	d	file:
MEM_EXPR	rtl.h	929;"	d
MEM_IN_STRUCT_P	rtl.h	888;"	d
MEM_KEEP_ALIAS_SET_P	rtl.h	879;"	d
MEM_OFFSET	rtl.h	933;"	d
MEM_SCALAR_P	rtl.h	892;"	d
MEM_SET_IN_STRUCT_P	rtl.h	898;"	d
MEM_SIZE	rtl.h	937;"	d
MEM_VOLATILE_P	rtl.h	883;"	d
MERGABLE_RELOADS	reload.c	212;"	d	file:
MERGE_TO_OTHER	reload.c	222;"	d	file:
METHOD_CALL_EXPR_CHECK	tree-check.h	60;"	d
METHOD_TYPE_CHECK	tree-check.h	22;"	d
MIN	system.h	242;"	d
MIN	system.h	244;"	d
MINDECEXP	real.c	269;"	d	file:
MINDECEXP	real.c	281;"	d	file:
MINDECEXP	real.c	292;"	d	file:
MINMAX	cppexp.c	538;"	d	file:
MINMAX_PRIO	cppexp.c	483;"	d	file:
MINUSMINUS	c-parse.c	56;"	d	file:
MINUS_EXPR_CHECK	tree-check.h	66;"	d
MIN_BLOCKAGE	insn-attr.h	105;"	d
MIN_BLOCKAGE_COST	sched-int.h	245;"	d
MIN_BUFF_SIZE	cpplex.c	1935;"	d	file:
MIN_DIFF_PRIORITY	sched-rgn.c	279;"	d	file:
MIN_EXPR_CHECK	tree-check.h	84;"	d
MIN_ISSUE_DELAY	insn-attr.h	103;"	d
MIN_MULTIPLICITY	insn-attr.h	97;"	d
MIN_PROBABILITY	sched-rgn.c	280;"	d	file:
MIN_PROB_DIFF	sched-rgn.c	281;"	d	file:
MIN_READY_COST	insn-attr.h	101;"	d
MIN_SIMULTANEITY	insn-attr.h	99;"	d
MIN_UNITS_PER_WORD	caller-save.c	42;"	d	file:
MIN_UNITS_PER_WORD	i386.h	736;"	d
MMAP_THRESHOLD	cppfiles.c	34;"	d	file:
MMAP_THRESHOLD	cppfiles.c	58;"	d	file:
MMAP_THRESHOLD	cppfiles.c	59;"	d	file:
MMX_CLASS_P	i386.h	1233;"	d
MMX_REGNO_P	i386.h	1344;"	d
MMX_REGS	i386.h	/^  MMX_REGS,$/;"	e	enum:reg_class
MMX_REG_P	i386.h	1345;"	d
MODES_OK_FOR_MOVE2ADD	reload1.c	9126;"	d	file:
MODES_TIEABLE_P	i386.h	1053;"	d
MODE_BASE_REG_CLASS	defaults.h	462;"	d
MODE_CC	machmode.h	/^enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT, MODE_CC,$/;"	e	enum:mode_class
MODE_COMPLEX_FLOAT	machmode.h	/^		  MODE_COMPLEX_INT, MODE_COMPLEX_FLOAT,$/;"	e	enum:mode_class
MODE_COMPLEX_INT	machmode.h	/^		  MODE_COMPLEX_INT, MODE_COMPLEX_FLOAT,$/;"	e	enum:mode_class
MODE_DF	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_DI	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_FLOAT	machmode.h	/^enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT, MODE_CC,$/;"	e	enum:mode_class
MODE_HI	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_INT	machmode.h	/^enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT, MODE_CC,$/;"	e	enum:mode_class
MODE_NEEDED	i386.h	3172;"	d
MODE_NONE	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_PARTIAL_INT	machmode.h	/^enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT, MODE_CC,$/;"	e	enum:mode_class
MODE_PRIORITY_TO_MODE	i386.h	3184;"	d
MODE_QI	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_RANDOM	machmode.h	/^enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT, MODE_CC,$/;"	e	enum:mode_class
MODE_SF	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_SI	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_TI	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_UNKNOWN	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_UNKNOWNFP	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODE_VECTOR_FLOAT	machmode.h	/^		  MODE_VECTOR_INT, MODE_VECTOR_FLOAT,$/;"	e	enum:mode_class
MODE_VECTOR_INT	machmode.h	/^		  MODE_VECTOR_INT, MODE_VECTOR_FLOAT,$/;"	e	enum:mode_class
MODE_XF	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	e	enum:attr_mode
MODIFY_EXPR_CHECK	tree-check.h	54;"	d
MOD_const	dwarf.h	/^    MOD_const		= 0x03,$/;"	e	enum:dwarf_type_modifier
MOD_hi_user	dwarf.h	263;"	d
MOD_lo_user	dwarf.h	262;"	d
MOD_pointer_to	dwarf.h	/^    MOD_pointer_to	= 0x01,$/;"	e	enum:dwarf_type_modifier
MOD_reference_to	dwarf.h	/^    MOD_reference_to	= 0x02,$/;"	e	enum:dwarf_type_modifier
MOD_volatile	dwarf.h	/^    MOD_volatile	= 0x04$/;"	e	enum:dwarf_type_modifier
MOVE_BY_PIECES_P	expr.c	185;"	d	file:
MOVE_MAX	i386.h	2320;"	d
MOVE_MAX_PIECES	expr.c	1376;"	d	file:
MOVE_MAX_PIECES	i386.h	2325;"	d
MOVE_MAX_WORDS	caller-save.c	45;"	d	file:
MOVE_RATIO	expr.c	175;"	d	file:
MOVE_RATIO	expr.c	178;"	d	file:
MOVE_RATIO	i386.h	2334;"	d
MTHRESH	ucbqsort.c	14;"	d	file:
MT_BEGIN_LABEL_FMT	dwarfout.c	1136;"	d	file:
MT_END_LABEL_FMT	dwarfout.c	1139;"	d	file:
MULTIBYTE_CHARS	c-lex.c	46;"	d	file:
MULTIBYTE_CHARS	cpplex.c	32;"	d	file:
MULTILIB_DEFAULTS	linux64.h	69;"	d
MULT_EXPR_CHECK	tree-check.h	67;"	d
MUL_PRIO	cppexp.c	488;"	d	file:
MUST_ALIGN	explow.c	1216;"	d	file:
MUST_PASS_IN_STACK	expr.h	173;"	d
MUST_PASS_IN_STACK	i386.h	1603;"	d
MUST_USE_SJLJ_EXCEPTIONS	except.h	170;"	d
MUST_USE_SJLJ_EXCEPTIONS	except.h	172;"	d
NAME	c-parse.c	4817;"	d	file:
NAMED_OP	cpplib.h	167;"	d
NAMESPACE_DECL_CHECK	tree-check.h	44;"	d
NAME__MAIN	function.c	76;"	d	file:
NANS	real.c	176;"	d	file:
NBITS	real.c	348;"	d	file:
NDEC	real.c	353;"	d	file:
NE	real.c	267;"	d	file:
NE	real.c	279;"	d	file:
NE	real.c	290;"	d	file:
NEED_SEPARATE_AP	function.c	96;"	d	file:
NEGATE_EXPR_CHECK	tree-check.h	83;"	d
NEVER_REREAD	cppfiles.c	109;"	d	file:
NEVER_SET	gcse.c	1291;"	d	file:
NEW_FOR_SCOPE_P	c-common.h	731;"	d
NEXT_DIE_NUM	dwarfout.c	688;"	d	file:
NEXT_IN	sched-rgn.c	100;"	d	file:
NEXT_INSN	rtl.h	400;"	d
NEXT_OUT	sched-rgn.c	101;"	d	file:
NEXT_Q	haifa-sched.c	263;"	d	file:
NEXT_Q_AFTER	haifa-sched.c	264;"	d	file:
NE_EXPR_CHECK	tree-check.h	108;"	d
NI	real.c	339;"	d	file:
NODE_BUILTIN	cpplib.h	404;"	d
NODE_DIAGNOSTIC	cpplib.h	405;"	d
NODE_DISABLED	cpplib.h	407;"	d
NODE_LEN	cpplib.h	433;"	d
NODE_NAME	cpplib.h	434;"	d
NODE_OPERATOR	cpplib.h	402;"	d
NODE_POISONED	cpplib.h	403;"	d
NODE_WARN	cpplib.h	406;"	d
NOLENGTHS	c-format.c	423;"	d	file:
NONZERO_BASE_PLUS_P	cse.c	613;"	d	file:
NONZERO_BASE_PLUS_P	simplify-rtx.c	71;"	d	file:
NON_LVALUE_EXPR_CHECK	tree-check.h	122;"	d
NON_QI_REG_P	i386.h	1322;"	d
NON_Q_REGS	i386.h	/^  NON_Q_REGS,			\/* %esi %edi %ebp %esp *\/$/;"	e	enum:reg_class
NON_STACK_REG_P	i386.h	1352;"	d
NOOP	mbchar.c	/^typedef enum {COPYA, COPYJ, COPYJ2, MAKE_A, MAKE_J, NOOP,$/;"	e	enum:__anon6	file:
NOOP_MOVE_INSN_CODE	rtl.h	36;"	d
NOP_EXPR_CHECK	tree-check.h	121;"	d
NORMAL	c-decl.c	/^{ NORMAL,			\/* Ordinary declaration *\/$/;"	e	enum:decl_context	file:
NOTE_BASIC_BLOCK	rtl.h	638;"	d
NOTE_BLOCK	rtl.h	634;"	d
NOTE_EH_HANDLER	rtl.h	635;"	d
NOTE_EXPECTED_VALUE	rtl.h	639;"	d
NOTE_INSN_BASIC_BLOCK	rtl.h	/^  NOTE_INSN_BASIC_BLOCK,$/;"	e	enum:insn_note
NOTE_INSN_BASIC_BLOCK_P	rtl.h	646;"	d
NOTE_INSN_BIAS	rtl.h	/^  NOTE_INSN_BIAS = -100,$/;"	e	enum:insn_note
NOTE_INSN_BLOCK_BEG	rtl.h	/^  NOTE_INSN_BLOCK_BEG,$/;"	e	enum:insn_note
NOTE_INSN_BLOCK_END	rtl.h	/^  NOTE_INSN_BLOCK_END,$/;"	e	enum:insn_note
NOTE_INSN_DELETED	rtl.h	/^  NOTE_INSN_DELETED,$/;"	e	enum:insn_note
NOTE_INSN_DELETED_LABEL	rtl.h	/^  NOTE_INSN_DELETED_LABEL,$/;"	e	enum:insn_note
NOTE_INSN_EH_REGION_BEG	rtl.h	/^  NOTE_INSN_EH_REGION_BEG,$/;"	e	enum:insn_note
NOTE_INSN_EH_REGION_END	rtl.h	/^  NOTE_INSN_EH_REGION_END,$/;"	e	enum:insn_note
NOTE_INSN_EPILOGUE_BEG	rtl.h	/^  NOTE_INSN_EPILOGUE_BEG,$/;"	e	enum:insn_note
NOTE_INSN_EXPECTED_VALUE	rtl.h	/^  NOTE_INSN_EXPECTED_VALUE,$/;"	e	enum:insn_note
NOTE_INSN_FUNCTION_BEG	rtl.h	/^  NOTE_INSN_FUNCTION_BEG,$/;"	e	enum:insn_note
NOTE_INSN_FUNCTION_END	rtl.h	/^  NOTE_INSN_FUNCTION_END,$/;"	e	enum:insn_note
NOTE_INSN_LIVE	rtl.h	/^  NOTE_INSN_LIVE,$/;"	e	enum:insn_note
NOTE_INSN_LOOP_BEG	rtl.h	/^  NOTE_INSN_LOOP_BEG,$/;"	e	enum:insn_note
NOTE_INSN_LOOP_CONT	rtl.h	/^  NOTE_INSN_LOOP_CONT,$/;"	e	enum:insn_note
NOTE_INSN_LOOP_END	rtl.h	/^  NOTE_INSN_LOOP_END,$/;"	e	enum:insn_note
NOTE_INSN_LOOP_END_TOP_COND	rtl.h	/^  NOTE_INSN_LOOP_END_TOP_COND,$/;"	e	enum:insn_note
NOTE_INSN_LOOP_VTOP	rtl.h	/^  NOTE_INSN_LOOP_VTOP,$/;"	e	enum:insn_note
NOTE_INSN_MAX	rtl.h	/^  NOTE_INSN_MAX$/;"	e	enum:insn_note
NOTE_INSN_PROLOGUE_END	rtl.h	/^  NOTE_INSN_PROLOGUE_END,$/;"	e	enum:insn_note
NOTE_INSN_RANGE_BEG	rtl.h	/^  NOTE_INSN_RANGE_BEG,$/;"	e	enum:insn_note
NOTE_INSN_RANGE_END	rtl.h	/^  NOTE_INSN_RANGE_END,$/;"	e	enum:insn_note
NOTE_INSN_REPEATED_LINE_NUMBER	rtl.h	/^  NOTE_INSN_REPEATED_LINE_NUMBER,$/;"	e	enum:insn_note
NOTE_LINE_NUMBER	rtl.h	643;"	d
NOTE_LIVE_INFO	rtl.h	637;"	d
NOTE_P	rtl.h	242;"	d
NOTE_RANGE_INFO	rtl.h	636;"	d
NOTE_SOURCE_FILE	rtl.h	633;"	d
NOT_BASIC_INDUCT	loop.h	/^  NOT_BASIC_INDUCT,$/;"	e	enum:iv_mode
NOT_BUILT_IN	tree.h	/^  NOT_BUILT_IN = 0,$/;"	e	enum:built_in_class
NOT_TAKEN	cse.c	/^      enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	e	enum:cse_basic_block_data::branch_path::taken	file:
NOT_TAKEN	predict.h	/^   NOT_TAKEN,$/;"	e	enum:prediction
NO_BUILTIN_PTRDIFF_TYPE	i386.h	559;"	d
NO_BUILTIN_SIZE_TYPE	i386.h	558;"	d
NO_DEBUG	flags.h	/^  NO_DEBUG,	    \/* Write no debug info.  *\/$/;"	e	enum:debug_info_type
NO_DEFER_POP	expr.h	57;"	d
NO_DOLLAR_IN_LABEL	elfos.h	47;"	d
NO_EXPAND	cpplib.h	168;"	d
NO_FUNCTION_CSE	i386.h	2704;"	d
NO_INCLUDE_PATH	cppfiles.c	113;"	d	file:
NO_INSERT	hashtab.h	/^enum insert_option {NO_INSERT, INSERT};$/;"	e	enum:insert_option
NO_L_OPERAND	cppexp.c	466;"	d	file:
NO_PROFILE_COUNTERS	linux.h	55;"	d
NO_PROFILE_COUNTERS	x86-64.h	30;"	d
NO_RECURSIVE_FUNCTION_CSE	i386.h	2710;"	d
NO_REGS	i386.h	/^  NO_REGS,$/;"	e	enum:reg_class
NO_R_OPERAND	cppexp.c	467;"	d	file:
NTEN	real.c	4642;"	d	file:
NT_ASSERTION	cpplib.h	/^  NT_ASSERTION	   \/* Predicate for #assert.  *\/$/;"	e	enum:node_type
NT_MACRO	cpplib.h	/^  NT_MACRO,	   \/* A macro of some form.  *\/$/;"	e	enum:node_type
NT_VOID	cpplib.h	/^  NT_VOID = 0,	   \/* No definition yet.  *\/$/;"	e	enum:node_type
NUL	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
NULL	alloca.c	67;"	d	file:
NULL	system.h	54;"	d
NULLP	concat.c	215;"	d	file:
NULL_BINDING_LEVEL	c-decl.c	229;"	d	file:
NULL_BLOCK	ifcvt.c	64;"	d	file:
NULL_EDGE	ifcvt.c	63;"	d	file:
NULL_RTVEC	rtl.h	227;"	d
NULL_RTX	rtl.h	204;"	d
NULL_TREE	tree.h	2055;"	d
NUMBYTES	vmsdbgout.c	228;"	d	file:
NUMBYTES0	vmsdbgout.c	230;"	d	file:
NUM_EDGES	basic-block.h	519;"	d
NUM_ELIMINABLE_REGS	reload1.c	343;"	d	file:
NUM_EXTRA_ORDERS	ggc-page.c	164;"	d	file:
NUM_FACTORS	unroll.c	158;"	d	file:
NUM_MACHINE_MODES	machmode.h	36;"	d
NUM_MODES_FOR_MODE_SWITCHING	i386.h	3164;"	d
NUM_ORDERS	ggc-page.c	178;"	d	file:
NUM_REORG_FUNCTIONS	reorg.c	682;"	d	file:
NUM_RTX_CODE	rtl.h	51;"	d
NUM_TREE_CODES	tree.h	39;"	d
N_	intl.h	58;"	d
N_BTMASK	gsyms.h	/^  N_BTMASK = 0x1f,$/;"	e	enum:sdb_masks
N_BTSHFT	gsyms.h	/^  N_BTSHFT = 5,$/;"	e	enum:sdb_masks
N_DECL	xcoffout.h	128;"	d
N_DIRECTIVES	cpplib.c	/^  N_DIRECTIVES$/;"	e	enum:__anon48	file:
N_ENTITIES	lcm.c	1026;"	d	file:
N_OPTS	cppinit.c	/^  N_OPTS$/;"	e	enum:opt_code	file:
N_REG_CLASSES	i386.h	1225;"	d
N_REG_INTS	regclass.c	155;"	d	file:
N_RPSYM	xcoffout.h	134;"	d
N_TMASK	gsyms.h	/^  N_TMASK = 0x60,$/;"	e	enum:sdb_masks
N_TMASK1	gsyms.h	/^  N_TMASK1 = 0x300,$/;"	e	enum:sdb_masks
N_TMASK2	gsyms.h	/^  N_TMASK2 = 0x360,$/;"	e	enum:sdb_masks
N_TSHIFT	gsyms.h	/^  N_TSHIFT = 2$/;"	e	enum:sdb_masks
N_TTYPES	cpplib.h	/^  N_TTYPES$/;"	e	enum:cpp_ttype
N_reswords	c-parse.c	4644;"	d	file:
Nsuff	cppexp.c	86;"	d	file:
OBJC_IS_AT_KEYWORD	c-common.h	119;"	d
OBJC_IS_PQ_KEYWORD	c-common.h	123;"	d
OBJC_NEED_RAW_IDENTIFIER	c-parse.c	167;"	d	file:
OBJECTNAME	c-parse.c	70;"	d	file:
OBJECTS_PER_PAGE	ggc-page.c	156;"	d	file:
OBJECT_FORMAT_ELF	elfos.h	82;"	d
OBJECT_SIZE	ggc-page.c	159;"	d	file:
OBJS	Makefile	/^OBJS=alloca.o asprintf.o vasprintf.o c-parse.o c-lang.o attribs.o c-errors.o c-lex.o c-pragma.o c-decl.o c-typeck.o c-convert.o c-aux-info.o c-common.o c-format.o c-semantics.o c-objc-common.o main.o cpplib.o cpplex.o cppmacro.o cppexp.o cppfiles.o cpphash.o cpperror.o cppinit.o cppdefault.o line-map.o mkdeps.o prefix.o version.o mbchar.o alias.o bb-reorder.o bitmap.o builtins.o caller-save.o calls.o cfg.o cfganal.o cfgbuild.o cfgcleanup.o cfglayout.o cfgloop.o cfgrtl.o combine.o conflict.o convert.o cse.o cselib.o dbxout.o debug.o dependence.o df.o diagnostic.o doloop.o dominance.o dwarf2asm.o dwarf2out.o dwarfout.o emit-rtl.o except.o explow.o expmed.o expr.o final.o flow.o fold-const.o function.o gcse.o genrtl.o ggc-common.o global.o graph.o haifa-sched.o hash.o hashtable.o hooks.o ifcvt.o insn-attrtab.o insn-emit.o insn-extract.o insn-opinit.o insn-output.o insn-peep.o insn-recog.o integrate.o intl.o jump.o langhooks.o lcm.o lists.o local-alloc.o loop.o obstack.o optabs.o params.o predict.o print-rtl.o print-tree.o profile.o real.o recog.o reg-stack.o regclass.o regmove.o regrename.o reload.o reload1.o reorg.o resource.o rtl.o rtlanal.o rtl-error.o sbitmap.o sched-deps.o sched-ebb.o sched-rgn.o sched-vis.o sdbout.o sibcall.o simplify-rtx.o ssa.o ssa-ccp.o ssa-dce.o stmt.o stor-layout.o stringpool.o timevar.o toplev.o tree.o tree-dump.o tree-inline.o unroll.o varasm.o varray.o vmsdbgout.o xcoffout.o ggc-page.o i386.o xmalloc.o xexit.o hashtab.o safe-ctype.o splay-tree.o xstrdup.o md5.o fibheap.o xstrerror.o concat.o partition.o hex.o lbasename.o getpwd.o ucbqsort.o$/;"	m
OBSTACK_ALLOC_REG_SET	basic-block.h	99;"	d
OBSTACK_CHUNK_ALLOC	bitmap.c	113;"	d	file:
OBSTACK_CHUNK_ALLOC	hashtable.c	42;"	d	file:
OBSTACK_CHUNK_FREE	bitmap.c	116;"	d	file:
OBSTACK_CHUNK_FREE	hashtable.c	45;"	d	file:
OBSTACK_CHUNK_SIZE	bitmap.c	109;"	d	file:
OBSTACK_CHUNK_SIZE	hashtable.c	38;"	d	file:
OBSTACK_INTERFACE_VERSION	obstack.c	30;"	d	file:
OFFSET_TYPE_CHECK	tree-check.h	20;"	d
OK_DEFER_POP	expr.h	61;"	d
OP	cpplex.c	61;"	d	file:
OP	cpplex.c	64;"	d	file:
OP	cpplib.h	141;"	d
OP	cpplib.h	148;"	d
OP	md5.c	302;"	d	file:
OP	md5.c	343;"	d	file:
OP	md5.c	344;"	d	file:
OPEN_PAREN_PRIO	cppexp.c	474;"	d	file:
OPERATOR	cppinit.c	794;"	d	file:
OPTAB_DIRECT	expr.h	/^  OPTAB_DIRECT,$/;"	e	enum:optab_methods
OPTAB_LIB	expr.h	/^  OPTAB_LIB,$/;"	e	enum:optab_methods
OPTAB_LIB_WIDEN	expr.h	/^  OPTAB_LIB_WIDEN,$/;"	e	enum:optab_methods
OPTAB_MUST_WIDEN	expr.h	/^  OPTAB_MUST_WIDEN$/;"	e	enum:optab_methods
OPTAB_WIDEN	expr.h	/^  OPTAB_WIDEN,$/;"	e	enum:optab_methods
OPTIMIZATION_OPTIONS	i386.h	473;"	d
OPTIMIZE_MODE_SWITCHING	i386.h	3154;"	d
OP_ADD	dwarf.h	/^    OP_ADD	= 0x07,$/;"	e	enum:dwarf_location_atom
OP_ADDR	dwarf.h	/^    OP_ADDR	= 0x03,$/;"	e	enum:dwarf_location_atom
OP_BASEREG	dwarf.h	/^    OP_BASEREG	= 0x02,$/;"	e	enum:dwarf_location_atom
OP_CONST	dwarf.h	/^    OP_CONST	= 0x04,$/;"	e	enum:dwarf_location_atom
OP_DEREF2	dwarf.h	/^    OP_DEREF2	= 0x05,$/;"	e	enum:dwarf_location_atom
OP_DEREF4	dwarf.h	/^    OP_DEREF4	= 0x06,$/;"	e	enum:dwarf_location_atom
OP_HI_USER	dwarf.h	191;"	d
OP_IN	recog.h	/^  OP_IN,$/;"	e	enum:op_type
OP_INOUT	recog.h	/^  OP_INOUT$/;"	e	enum:op_type
OP_LO_USER	dwarf.h	190;"	d
OP_MULT	dwarf.h	/^    OP_MULT	= 0x80$/;"	e	enum:dwarf_location_atom
OP_OUT	recog.h	/^  OP_OUT,$/;"	e	enum:op_type
OP_REG	dwarf.h	/^    OP_REG	= 0x01,$/;"	e	enum:dwarf_location_atom
ORDERED_EXPR_CHECK	tree-check.h	110;"	d
ORDER_REGS_FOR_LOCAL_ALLOC	i386.h	951;"	d
ORD_col_major	dwarf.h	/^    ORD_col_major	= 1$/;"	e	enum:dwarf_array_dim_ordering
ORD_row_major	dwarf.h	/^    ORD_row_major	= 0,$/;"	e	enum:dwarf_array_dim_ordering
ORIGINAL_REGNO	rtl.h	791;"	d
ORIG_INDEX	ifcvt.c	119;"	d	file:
OROR	c-parse.c	48;"	d	file:
OROR_PRIO	cppexp.c	478;"	d	file:
OR_PRIO	cppexp.c	480;"	d	file:
OTHER	mbchar.c	/^typedef enum {ESCAPE, DOLLAR, BRACKET, AT, B, J, NUL, JIS_CHAR, OTHER,$/;"	e	enum:__anon4	file:
OTI_MAX	optabs.h	/^  OTI_MAX$/;"	e	enum:optab_index
OTI_abs	optabs.h	/^  OTI_abs,$/;"	e	enum:optab_index
OTI_absv	optabs.h	/^  OTI_absv,$/;"	e	enum:optab_index
OTI_add	optabs.h	/^  OTI_add,$/;"	e	enum:optab_index
OTI_addv	optabs.h	/^  OTI_addv,$/;"	e	enum:optab_index
OTI_and	optabs.h	/^  OTI_and,$/;"	e	enum:optab_index
OTI_ashl	optabs.h	/^  OTI_ashl,$/;"	e	enum:optab_index
OTI_ashr	optabs.h	/^  OTI_ashr,$/;"	e	enum:optab_index
OTI_cbranch	optabs.h	/^  OTI_cbranch,$/;"	e	enum:optab_index
OTI_cmov	optabs.h	/^  OTI_cmov,$/;"	e	enum:optab_index
OTI_cmp	optabs.h	/^  OTI_cmp,$/;"	e	enum:optab_index
OTI_cos	optabs.h	/^  OTI_cos,$/;"	e	enum:optab_index
OTI_cstore	optabs.h	/^  OTI_cstore,$/;"	e	enum:optab_index
OTI_ffs	optabs.h	/^  OTI_ffs,$/;"	e	enum:optab_index
OTI_ftrunc	optabs.h	/^  OTI_ftrunc,$/;"	e	enum:optab_index
OTI_ior	optabs.h	/^  OTI_ior,$/;"	e	enum:optab_index
OTI_lshr	optabs.h	/^  OTI_lshr,  $/;"	e	enum:optab_index
OTI_mov	optabs.h	/^  OTI_mov,$/;"	e	enum:optab_index
OTI_movstrict	optabs.h	/^  OTI_movstrict,$/;"	e	enum:optab_index
OTI_neg	optabs.h	/^  OTI_neg,$/;"	e	enum:optab_index
OTI_negv	optabs.h	/^  OTI_negv,$/;"	e	enum:optab_index
OTI_one_cmpl	optabs.h	/^  OTI_one_cmpl,$/;"	e	enum:optab_index
OTI_push	optabs.h	/^  OTI_push,$/;"	e	enum:optab_index
OTI_rotl	optabs.h	/^  OTI_rotl,$/;"	e	enum:optab_index
OTI_rotr	optabs.h	/^  OTI_rotr,$/;"	e	enum:optab_index
OTI_sdiv	optabs.h	/^  OTI_sdiv,$/;"	e	enum:optab_index
OTI_sdivmod	optabs.h	/^  OTI_sdivmod,$/;"	e	enum:optab_index
OTI_sdivv	optabs.h	/^  OTI_sdivv,$/;"	e	enum:optab_index
OTI_sin	optabs.h	/^  OTI_sin,$/;"	e	enum:optab_index
OTI_smax	optabs.h	/^  OTI_smax,$/;"	e	enum:optab_index
OTI_smin	optabs.h	/^  OTI_smin,$/;"	e	enum:optab_index
OTI_smod	optabs.h	/^  OTI_smod,$/;"	e	enum:optab_index
OTI_smul	optabs.h	/^  OTI_smul,$/;"	e	enum:optab_index
OTI_smul_highpart	optabs.h	/^  OTI_smul_highpart,$/;"	e	enum:optab_index
OTI_smul_widen	optabs.h	/^  OTI_smul_widen,$/;"	e	enum:optab_index
OTI_smulv	optabs.h	/^  OTI_smulv,$/;"	e	enum:optab_index
OTI_sqrt	optabs.h	/^  OTI_sqrt,$/;"	e	enum:optab_index
OTI_strlen	optabs.h	/^  OTI_strlen,$/;"	e	enum:optab_index
OTI_sub	optabs.h	/^  OTI_sub,$/;"	e	enum:optab_index
OTI_subv	optabs.h	/^  OTI_subv,$/;"	e	enum:optab_index
OTI_tst	optabs.h	/^  OTI_tst,$/;"	e	enum:optab_index
OTI_ucmp	optabs.h	/^  OTI_ucmp,$/;"	e	enum:optab_index
OTI_udiv	optabs.h	/^  OTI_udiv,$/;"	e	enum:optab_index
OTI_udivmod	optabs.h	/^  OTI_udivmod,$/;"	e	enum:optab_index
OTI_umax	optabs.h	/^  OTI_umax,$/;"	e	enum:optab_index
OTI_umin	optabs.h	/^  OTI_umin,$/;"	e	enum:optab_index
OTI_umod	optabs.h	/^  OTI_umod,$/;"	e	enum:optab_index
OTI_umul_highpart	optabs.h	/^  OTI_umul_highpart,$/;"	e	enum:optab_index
OTI_umul_widen	optabs.h	/^  OTI_umul_widen,$/;"	e	enum:optab_index
OTI_xor	optabs.h	/^  OTI_xor,$/;"	e	enum:optab_index
OUTGOING_REGNO	alias.c	2440;"	d	file:
OUTGOING_REGNO	builtins.c	53;"	d	file:
OUTGOING_REGNO	combine.c	821;"	d	file:
OUTGOING_REGNO	sibcall.c	178;"	d	file:
OUT_EDGES	sched-rgn.c	114;"	d	file:
OVERFLOW	real.c	1534;"	d	file:
OVERFLOW_SUM_SIGN	fold-const.c	127;"	d	file:
OVERRIDE_OPTIONS	i386.h	466;"	d
O_BINARY	cppfiles.c	63;"	d	file:
O_NOCTTY	system.h	432;"	d
O_NONBLOCK	system.h	427;"	d
O_RDONLY	system.h	232;"	d
O_WRONLY	system.h	235;"	d
P	safe-ctype.c	56;"	d	file:
PAD_VARARGS_DOWN	builtins.c	57;"	d	file:
PAGE_L1_BITS	ggc-page.c	143;"	d	file:
PAGE_L1_SIZE	ggc-page.c	145;"	d	file:
PAGE_L2_BITS	ggc-page.c	144;"	d	file:
PAGE_L2_SIZE	ggc-page.c	146;"	d	file:
PARAMS	ansidecl.h	149;"	d
PARAMS	ansidecl.h	189;"	d
PARAM_VALUE	params.h	83;"	d
PARM	c-decl.c	/^  PARM,				\/* Declaration of parm before function body *\/$/;"	e	enum:decl_context	file:
PARM_BOUNDARY	i386.h	743;"	d
PARM_DECL_CHECK	tree-check.h	41;"	d
PARM_PASSED_IN_MEMORY	dbxout.c	169;"	d	file:
PARM_PASSED_IN_MEMORY	sdbout.c	64;"	d	file:
PASTE_LEFT	cpplib.h	166;"	d
PATHLENGTH	cse.c	556;"	d	file:
PATH_SEPARATOR	system.h	464;"	d
PATTERN	rtl.h	403;"	d
PC	rtl.h	32;"	d
PCC_BITFIELD_TYPE_MATTERS	elfos.h	51;"	d
PCC_BITFIELD_TYPE_MATTERS	i386.h	849;"	d
PEDWARN	cpphash.h	/^enum error_type { WARNING = 0, WARNING_SYSHDR, PEDWARN, ERROR, FATAL, ICE };$/;"	e	enum:error_type
PEEP2_EOB	recog.c	2847;"	d	file:
PENDING_SIBLINGS_INCREMENT	dwarfout.c	709;"	d	file:
PENDING_TYPES_INCREMENT	dwarfout.c	735;"	d	file:
PENT_PAIR_NP	insn-attr.h	/^enum attr_pent_pair {PENT_PAIR_UV, PENT_PAIR_PU, PENT_PAIR_PV, PENT_PAIR_NP};$/;"	e	enum:attr_pent_pair
PENT_PAIR_PU	insn-attr.h	/^enum attr_pent_pair {PENT_PAIR_UV, PENT_PAIR_PU, PENT_PAIR_PV, PENT_PAIR_NP};$/;"	e	enum:attr_pent_pair
PENT_PAIR_PV	insn-attr.h	/^enum attr_pent_pair {PENT_PAIR_UV, PENT_PAIR_PU, PENT_PAIR_PV, PENT_PAIR_NP};$/;"	e	enum:attr_pent_pair
PENT_PAIR_UV	insn-attr.h	/^enum attr_pent_pair {PENT_PAIR_UV, PENT_PAIR_PU, PENT_PAIR_PV, PENT_PAIR_NP};$/;"	e	enum:attr_pent_pair
PENT_PREFIX_FALSE	insn-attr.h	/^enum attr_pent_prefix {PENT_PREFIX_FALSE, PENT_PREFIX_TRUE};$/;"	e	enum:attr_pent_prefix
PENT_PREFIX_TRUE	insn-attr.h	/^enum attr_pent_prefix {PENT_PREFIX_FALSE, PENT_PREFIX_TRUE};$/;"	e	enum:attr_pent_prefix
PEXECUTE_FIRST	libiberty.h	260;"	d
PEXECUTE_LAST	libiberty.h	261;"	d
PEXECUTE_ONE	libiberty.h	262;"	d
PEXECUTE_SEARCH	libiberty.h	263;"	d
PEXECUTE_VERBOSE	libiberty.h	264;"	d
PFREE_CANDIDATE	sched-rgn.c	/^  TRAP_FREE = 0, IFREE = 1, PFREE_CANDIDATE = 2,$/;"	e	enum:INSN_TRAP_CLASS	file:
PHI_NODE_P	rtl.h	1202;"	d
PHI_PARMS	ssa-ccp.c	123;"	d	file:
PIC_OFFSET_TABLE_REGNUM	defaults.h	334;"	d
PIC_OFFSET_TABLE_REGNUM	i386.h	1143;"	d
PLACEHOLDER_EXPR_CHECK	tree-check.h	63;"	d
PLOSS	real.c	1537;"	d	file:
PLUSPLUS	c-parse.c	55;"	d	file:
PLUS_EXPR_CHECK	tree-check.h	65;"	d
PLUS_PRIO	cppexp.c	487;"	d	file:
POINTER	obstack.c	54;"	d	file:
POINTER	obstack.c	56;"	d	file:
POINTER_SIZE	i386.h	740;"	d
POINTER_TYPE_CHECK	tree-check.h	19;"	d
POINTER_TYPE_P	tree.h	420;"	d
POINTSAT	c-parse.c	58;"	d	file:
POPSECTION_ASM_OP	dwarfout.c	966;"	d	file:
POPSTACK	stmt.c	266;"	d	file:
POP_DECLSPEC_STACK	c-parse.c	143;"	d	file:
POSIX	config.h	25;"	d
POSTDECREMENT_EXPR_CHECK	tree-check.h	137;"	d
POSTINCREMENT_EXPR_CHECK	tree-check.h	138;"	d
PPRO_UOPS_FEW	insn-attr.h	/^enum attr_ppro_uops {PPRO_UOPS_ONE, PPRO_UOPS_FEW, PPRO_UOPS_MANY};$/;"	e	enum:attr_ppro_uops
PPRO_UOPS_MANY	insn-attr.h	/^enum attr_ppro_uops {PPRO_UOPS_ONE, PPRO_UOPS_FEW, PPRO_UOPS_MANY};$/;"	e	enum:attr_ppro_uops
PPRO_UOPS_ONE	insn-attr.h	/^enum attr_ppro_uops {PPRO_UOPS_ONE, PPRO_UOPS_FEW, PPRO_UOPS_MANY};$/;"	e	enum:attr_ppro_uops
PREDECREMENT_EXPR_CHECK	tree-check.h	135;"	d
PREDICATE_CODES	i386.h	3015;"	d
PRED_FLAG_FIRST_MATCH	predict.c	79;"	d	file:
PREFERRED_DEBUGGING_TYPE	defaults.h	445;"	d
PREFERRED_DEBUGGING_TYPE	elfos.h	78;"	d
PREFERRED_DEBUGGING_TYPE	x86-64.h	96;"	d
PREFERRED_DEBUGGING_TYPE	x86-64.h	97;"	d
PREFERRED_RELOAD_CLASS	i386.h	1468;"	d
PREFERRED_STACK_BOUNDARY	defaults.h	370;"	d
PREFERRED_STACK_BOUNDARY	i386.h	750;"	d
PREFETCH	system.h	163;"	d
PREFETCH_BLOCK	i386.h	2313;"	d
PREFETCH_BLOCK	loop.c	64;"	d	file:
PREFETCH_BLOCKS_BEFORE_LOOP_MAX	loop.c	78;"	d	file:
PREFETCH_BLOCKS_BEFORE_LOOP_MIN	loop.c	81;"	d	file:
PREFETCH_BLOCKS_IN_LOOP_MIN	loop.c	84;"	d	file:
PREFETCH_DENSE_MEM	loop.c	98;"	d	file:
PREFETCH_EXTREME_STRIDE	loop.c	124;"	d	file:
PREFETCH_LIMIT_TO_SIMULTANEOUS	loop.c	140;"	d	file:
PREFETCH_LOW_LOOPCNT	loop.c	108;"	d	file:
PREFETCH_NOT_ALWAYS	loop.c	134;"	d	file:
PREFETCH_NO_CALL	loop.c	114;"	d	file:
PREFETCH_NO_EXTREME_STRIDE	loop.c	119;"	d	file:
PREFETCH_NO_LOW_LOOPCNT	loop.c	103;"	d	file:
PREFETCH_NO_REVERSE_ORDER	loop.c	129;"	d	file:
PREFETCH_ONLY_DENSE_MEM	loop.c	92;"	d	file:
PREFIX	prefix.c	75;"	d	file:
PREFIX_INCLUDE_DIR	auto-host.h	88;"	d
PREINCREMENT_EXPR_CHECK	tree-check.h	136;"	d
PRETEND_OUTGOING_VARARGS_NAMED	expr.h	148;"	d
PRETEND_OUTGOING_VARARGS_NAMED	expr.h	153;"	d
PREV_INSN	rtl.h	399;"	d
PREV_WHITE	cpplib.h	163;"	d
PRINT_OPERAND	i386.h	2936;"	d
PRINT_OPERAND_ADDRESS	i386.h	2939;"	d
PRINT_OPERAND_PUNCT_VALID_P	i386.h	2922;"	d
PRINT_REG	dwarfout.c	598;"	d	file:
PRINT_REG	i386.h	2933;"	d
PRIO_SHIFT	cppexp.c	460;"	d	file:
PRISKY_CANDIDATE	sched-rgn.c	/^  PRISKY_CANDIDATE = 3, IRISKY = 4, TRAP_RISKY = 5$/;"	e	enum:INSN_TRAP_CLASS	file:
PRIVATE	c-parse.c	67;"	d	file:
PROB_ALWAYS	predict.c	56;"	d	file:
PROB_EVEN	predict.c	53;"	d	file:
PROB_LIKELY	predict.c	54;"	d	file:
PROB_NEVER	predict.c	50;"	d	file:
PROB_UNLIKELY	predict.c	52;"	d	file:
PROB_VERY_LIKELY	predict.c	55;"	d	file:
PROB_VERY_UNLIKELY	predict.c	51;"	d	file:
PROCESSOR_ATHLON	i386.h	/^  PROCESSOR_ATHLON,$/;"	e	enum:processor_type
PROCESSOR_I386	i386.h	/^  PROCESSOR_I386,			\/* 80386 *\/$/;"	e	enum:processor_type
PROCESSOR_I486	i386.h	/^  PROCESSOR_I486,			\/* 80486DX, 80486SX, 80486DX[24] *\/$/;"	e	enum:processor_type
PROCESSOR_K6	i386.h	/^  PROCESSOR_K6,$/;"	e	enum:processor_type
PROCESSOR_PENTIUM	i386.h	/^  PROCESSOR_PENTIUM,$/;"	e	enum:processor_type
PROCESSOR_PENTIUM4	i386.h	/^  PROCESSOR_PENTIUM4,$/;"	e	enum:processor_type
PROCESSOR_PENTIUMPRO	i386.h	/^  PROCESSOR_PENTIUMPRO,$/;"	e	enum:processor_type
PROCESSOR_max	i386.h	/^  PROCESSOR_max$/;"	e	enum:processor_type
PROMOTE_MODE	i386.h	2365;"	d
PROMOTE_PROTOTYPES	defaults.h	263;"	d
PROMOTE_PROTOTYPES	i386.h	2355;"	d
PROP_ALLOW_CFG_CHANGES	basic-block.h	561;"	d
PROP_AUTOINC	basic-block.h	563;"	d
PROP_DEATH_NOTES	basic-block.h	556;"	d
PROP_EQUAL_NOTES	basic-block.h	564;"	d
PROP_FINAL	basic-block.h	565;"	d
PROP_KILL_DEAD_CODE	basic-block.h	559;"	d
PROP_LOG_LINKS	basic-block.h	557;"	d
PROP_REG_INFO	basic-block.h	558;"	d
PROP_SCAN_DEAD_CODE	basic-block.h	560;"	d
PROTECTED	c-parse.c	68;"	d	file:
PROTOCOL	c-parse.c	69;"	d	file:
PSEUDO_REGNO_BYTES	regs.h	122;"	d
PSEUDO_REGNO_MODE	regs.h	127;"	d
PSEUDO_REGNO_SIZE	regs.h	116;"	d
PTR	ansidecl.h	145;"	d
PTR	ansidecl.h	185;"	d
PTRCONST	ansidecl.h	146;"	d
PTRCONST	ansidecl.h	186;"	d
PTRDIFF_TYPE	c-common.c	60;"	d	file:
PTRDIFF_TYPE	cppdefault.h	60;"	d
PTRDIFF_TYPE	linux.h	78;"	d
PTRDIFF_TYPE	linux.h	79;"	d
PTRDIFF_TYPE	svr4.h	219;"	d
PTRDIFF_TYPE	svr4.h	220;"	d
PTRDIFF_TYPE	x86-64.h	46;"	d
PTRDIFF_TYPE	x86-64.h	47;"	d
PTR_BASE	c-parse.c	43;"	d	file:
PTR_EXTENT	c-parse.c	44;"	d	file:
PTR_INT_TYPE	obstack.h	136;"	d
PTR_INT_TYPE	obstack.h	140;"	d
PTR_INT_TYPE	obstack.h	142;"	d
PTR_SIZE	dwarf2out.c	114;"	d	file:
PTR_SIZE	vmsdbgout.c	86;"	d	file:
PTR_VALUE	c-parse.c	42;"	d	file:
PUBLIC	c-parse.c	66;"	d	file:
PUBNAME_TABLE_INCREMENT	dwarf2out.c	3389;"	d	file:
PUB_DIE_LABEL_FMT	dwarfout.c	1115;"	d	file:
PUSHSECTION_ASM_OP	dwarfout.c	963;"	d	file:
PUSHSECTION_FORMAT	dwarfout.c	975;"	d	file:
PUSH_ARGS	defaults.h	361;"	d
PUSH_ARGS	defaults.h	363;"	d
PUSH_ARGS	i386.h	1582;"	d
PUSH_ARGS_REVERSED	calls.c	50;"	d	file:
PUSH_ARGS_REVERSED	calls.c	56;"	d	file:
PUSH_ARGS_REVERSED	expr.c	58;"	d	file:
PUSH_DECLSPEC_STACK	c-parse.c	135;"	d	file:
PUSH_DERIVED_LEVEL	sdbout.c	383;"	d	file:
PUSH_ROUNDING	i386.h	1566;"	d
PUSH_SPELLING	c-typeck.c	4513;"	d	file:
PUT_CODE	rtl.h	209;"	d
PUT_MODE	rtl.h	212;"	d
PUT_NUM_ELEM	rtl.h	230;"	d
PUT_REAL	real.c	271;"	d	file:
PUT_REAL	real.c	283;"	d	file:
PUT_REAL	real.c	312;"	d	file:
PUT_REAL	real.c	331;"	d	file:
PUT_REG_NOTE_KIND	rtl.h	602;"	d
PUT_SDB_BLOCK_END	sdbout.c	221;"	d	file:
PUT_SDB_BLOCK_START	sdbout.c	214;"	d	file:
PUT_SDB_DEF	sdbout.c	167;"	d	file:
PUT_SDB_ENDEF	sdbout.c	178;"	d	file:
PUT_SDB_FUNCTION_END	sdbout.c	235;"	d	file:
PUT_SDB_FUNCTION_START	sdbout.c	228;"	d	file:
PUT_SDB_INT_VAL	sdbout.c	150;"	d	file:
PUT_SDB_LAST_DIM	sdbout.c	203;"	d	file:
PUT_SDB_NEXT_DIM	sdbout.c	199;"	d	file:
PUT_SDB_PLAIN_DEF	sdbout.c	174;"	d	file:
PUT_SDB_SCL	sdbout.c	146;"	d	file:
PUT_SDB_SIZE	sdbout.c	186;"	d	file:
PUT_SDB_SRC_FILE	sdbout.c	278;"	d	file:
PUT_SDB_START_DIM	sdbout.c	195;"	d	file:
PUT_SDB_TAG	sdbout.c	207;"	d	file:
PUT_SDB_TYPE	sdbout.c	182;"	d	file:
PUT_SDB_VAL	sdbout.c	160;"	d	file:
Pmode	i386.h	2375;"	d
QI_HIGH_REGISTER_NAMES	i386.h	2810;"	d
QI_REGISTER_NAMES	i386.h	2804;"	d
QI_REG_P	i386.h	1311;"	d
QTY_CMP_PRI	local-alloc.c	1700;"	d	file:
QTY_CMP_PRI	local-alloc.c	1704;"	d	file:
QTY_CMP_PRI	local-alloc.c	1777;"	d	file:
QTY_CMP_SUGG	local-alloc.c	1739;"	d	file:
QTY_CMP_SUGG	local-alloc.c	1776;"	d	file:
QUAL_UNION_TYPE_CHECK	tree-check.h	28;"	d
QUEUED_BODY	expr.h	42;"	d
QUEUED_COPY	expr.h	39;"	d
QUEUED_INSN	expr.h	36;"	d
QUEUED_NEXT	expr.h	44;"	d
QUEUED_VAR	expr.h	32;"	d
Q_CLASS_P	i386.h	1244;"	d
Q_REGS	i386.h	/^  Q_REGS,			\/* %eax %ebx %ecx %edx *\/$/;"	e	enum:reg_class
RANGES_TABLE_INCREMENT	dwarf2out.c	3415;"	d	file:
RANGE_EXPR_CHECK	tree-check.h	119;"	d
RANGE_INFO_BB_END	rtl.h	1134;"	d
RANGE_INFO_BB_START	rtl.h	1131;"	d
RANGE_INFO_LIVE_END	rtl.h	1145;"	d
RANGE_INFO_LIVE_START	rtl.h	1141;"	d
RANGE_INFO_LOOP_DEPTH	rtl.h	1137;"	d
RANGE_INFO_MARKER_END	rtl.h	1151;"	d
RANGE_INFO_MARKER_START	rtl.h	1148;"	d
RANGE_INFO_NCALLS	rtl.h	1122;"	d
RANGE_INFO_NINSNS	rtl.h	1125;"	d
RANGE_INFO_NOTE_END	rtl.h	1113;"	d
RANGE_INFO_NOTE_START	rtl.h	1110;"	d
RANGE_INFO_NUM_REGS	rtl.h	1119;"	d
RANGE_INFO_REGS	rtl.h	1117;"	d
RANGE_INFO_REGS_REG	rtl.h	1118;"	d
RANGE_INFO_UNIQUE	rtl.h	1128;"	d
RANGE_LIVE_BITMAP	rtl.h	1196;"	d
RANGE_LIVE_ORIG_BLOCK	rtl.h	1199;"	d
RANGE_REG_BLOCK_NODE	rtl.h	1184;"	d
RANGE_REG_COPY	rtl.h	1157;"	d
RANGE_REG_COPY_FLAGS	rtl.h	1170;"	d
RANGE_REG_DEATHS	rtl.h	1166;"	d
RANGE_REG_LIVE_LENGTH	rtl.h	1173;"	d
RANGE_REG_N_CALLS	rtl.h	1176;"	d
RANGE_REG_PSEUDO	rtl.h	1154;"	d
RANGE_REG_REFS	rtl.h	1160;"	d
RANGE_REG_SETS	rtl.h	1163;"	d
RANGE_REG_SYMBOL_NODE	rtl.h	1180;"	d
RANGE_VAR_BLOCK	rtl.h	1190;"	d
RANGE_VAR_LIST	rtl.h	1187;"	d
RANGE_VAR_NUM	rtl.h	1193;"	d
RBI	cfglayout.h	30;"	d
RDIV_EXPR_CHECK	tree-check.h	76;"	d
READ	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	e	enum:match::__anon84	file:
READONLY_DATA_SECTION	elfos.h	266;"	d
READWRITE	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	e	enum:match::__anon84	file:
REALPART	c-parse.c	37;"	d	file:
REALPART_EXPR_CHECK	tree-check.h	133;"	d
REAL_ARITHMETIC	real.h	106;"	d
REAL_ARITHMETIC	real.h	139;"	d
REAL_ARITHMETIC	real.h	140;"	d
REAL_ARITHMETIC	real.h	85;"	d
REAL_ARITHMETIC	real.h	95;"	d
REAL_CST_CHECK	tree-check.h	32;"	d
REAL_INFINITY	real.h	47;"	d
REAL_IS_NOT_DOUBLE	real.h	105;"	d
REAL_IS_NOT_DOUBLE	real.h	117;"	d
REAL_IS_NOT_DOUBLE	real.h	254;"	d
REAL_IS_NOT_DOUBLE	real.h	272;"	d
REAL_IS_NOT_DOUBLE	real.h	94;"	d
REAL_TYPE_CHECK	tree-check.h	13;"	d
REAL_VALUES_EQUAL	real.h	174;"	d
REAL_VALUES_EQUAL	real.h	331;"	d
REAL_VALUES_IDENTICAL	real.h	326;"	d
REAL_VALUES_LESS	real.h	176;"	d
REAL_VALUES_LESS	real.h	336;"	d
REAL_VALUE_ABS	simplify-rtx.c	357;"	d	file:
REAL_VALUE_ATOF	real.h	193;"	d
REAL_VALUE_ATOF	real.h	370;"	d
REAL_VALUE_ATOF	real.h	376;"	d
REAL_VALUE_FIX	real.h	186;"	d
REAL_VALUE_FIX	real.h	351;"	d
REAL_VALUE_FROM_CONST_DOUBLE	real.h	458;"	d
REAL_VALUE_FROM_INT	real.h	204;"	d
REAL_VALUE_FROM_TARGET_DOUBLE	real.h	229;"	d
REAL_VALUE_FROM_TARGET_SINGLE	real.h	232;"	d
REAL_VALUE_FROM_UNSIGNED_INT	real.h	207;"	d
REAL_VALUE_HTOF	real.h	194;"	d
REAL_VALUE_HTOF	real.h	393;"	d
REAL_VALUE_ISINF	real.h	417;"	d
REAL_VALUE_ISNAN	real.h	422;"	d
REAL_VALUE_LDEXP	real.h	177;"	d
REAL_VALUE_LDEXP	real.h	362;"	d
REAL_VALUE_MINUS_ZERO	real.h	198;"	d
REAL_VALUE_MINUS_ZERO	real.h	432;"	d
REAL_VALUE_NEGATE	real.h	196;"	d
REAL_VALUE_NEGATE	real.h	398;"	d
REAL_VALUE_NEGATIVE	real.h	427;"	d
REAL_VALUE_RNDZINT	real.h	180;"	d
REAL_VALUE_RNDZINT	real.h	341;"	d
REAL_VALUE_TO_DECIMAL	real.h	235;"	d
REAL_VALUE_TO_DECIMAL	real.h	474;"	d
REAL_VALUE_TO_INT	real.h	201;"	d
REAL_VALUE_TO_TARGET_DOUBLE	real.h	216;"	d
REAL_VALUE_TO_TARGET_DOUBLE	real.h	299;"	d
REAL_VALUE_TO_TARGET_LONG_DOUBLE	real.h	211;"	d
REAL_VALUE_TO_TARGET_LONG_DOUBLE	real.h	319;"	d
REAL_VALUE_TO_TARGET_SINGLE	real.h	219;"	d
REAL_VALUE_TO_TARGET_SINGLE	real.h	281;"	d
REAL_VALUE_TRUNCATE	real.h	182;"	d
REAL_VALUE_TRUNCATE	real.h	410;"	d
REAL_VALUE_TYPE	real.h	110;"	d
REAL_VALUE_TYPE	real.h	121;"	d
REAL_VALUE_TYPE	real.h	125;"	d
REAL_VALUE_TYPE	real.h	259;"	d
REAL_VALUE_TYPE	real.h	270;"	d
REAL_VALUE_TYPE	real.h	99;"	d
REAL_VALUE_UNSIGNED_FIX	real.h	189;"	d
REAL_VALUE_UNSIGNED_FIX	real.h	357;"	d
REAL_VALUE_UNSIGNED_RNDZINT	real.h	181;"	d
REAL_VALUE_UNSIGNED_RNDZINT	real.h	346;"	d
REAL_VALUE_UNTO_TARGET_DOUBLE	real.h	222;"	d
REAL_VALUE_UNTO_TARGET_SINGLE	real.h	225;"	d
REAL_WIDTH	rtl.c	43;"	d	file:
REAL_WIDTH	rtl.c	47;"	d	file:
REAL_WIDTH	rtl.c	51;"	d	file:
REAL_WIDTH	rtl.c	60;"	d	file:
REAL_WIDTH	rtl.c	63;"	d	file:
REAL_WIDTH	rtl.c	66;"	d	file:
REAL_WORDS_BIG_ENDIAN	real.c	143;"	d	file:
RECHAIN_STMTS	c-common.h	311;"	d
RECORD_TYPE_CHECK	tree-check.h	26;"	d
RED_ZONE_RESERVE	i386.h	3104;"	d
RED_ZONE_SIZE	i386.h	3102;"	d
REFERENCE_EXPR_CHECK	tree-check.h	128;"	d
REFERENCE_TYPE_CHECK	tree-check.h	21;"	d
REGBITP	global.c	237;"	d	file:
REGHASH_FN	cse.c	333;"	d	file:
REGHASH_MASK	cse.c	330;"	d	file:
REGHASH_SHIFT	cse.c	328;"	d	file:
REGHASH_SIZE	cse.c	329;"	d	file:
REGISTER_MOVE_COST	i386.h	2640;"	d
REGISTER_MOVE_COST	regclass.c	46;"	d	file:
REGISTER_MOVE_COST	reload.c	107;"	d	file:
REGISTER_MOVE_COST	reload1.c	81;"	d	file:
REGISTER_NAMES	i386.h	2785;"	d
REGISTER_PREFIX	cppdefault.h	84;"	d
REGMODE_NATURAL_SIZE	regs.h	33;"	d
REGNO	rtl.h	790;"	d
REGNO_DECL	function.h	117;"	d
REGNO_FIRST_LUID	loop.h	52;"	d
REGNO_FIRST_UID	regs.h	180;"	d
REGNO_LAST_LUID	loop.h	53;"	d
REGNO_LAST_NOTE_UID	regs.h	192;"	d
REGNO_LAST_UID	regs.h	188;"	d
REGNO_MODE_OK_FOR_BASE_P	regrename.c	43;"	d	file:
REGNO_MODE_OK_FOR_BASE_P	reload.c	111;"	d	file:
REGNO_OK_FOR_BASE_P	i386.h	1867;"	d
REGNO_OK_FOR_DIREG_P	i386.h	1879;"	d
REGNO_OK_FOR_INDEX_P	i386.h	1859;"	d
REGNO_OK_FOR_SIREG_P	i386.h	1877;"	d
REGNO_POINTER_ALIGN	function.h	116;"	d
REGNO_PTR_FRAME_P	rtl.h	1717;"	d
REGNO_QTY_VALID_P	cse.c	523;"	d	file:
REGNO_REG_CLASS	i386.h	1303;"	d
REGNO_REG_SET_P	basic-block.h	71;"	d
REGPARM_MAX	i386.h	2294;"	d
REG_ALLOC_ORDER	i386.h	941;"	d
REG_ALWAYS_RETURN	rtl.h	/^  REG_ALWAYS_RETURN,$/;"	e	enum:reg_note
REG_BASE_VALUE	alias.c	152;"	d	file:
REG_BASIC_BLOCK	basic-block.h	260;"	d
REG_BLOCK_GLOBAL	basic-block.h	258;"	d
REG_BLOCK_UNKNOWN	basic-block.h	257;"	d
REG_BR_PRED	rtl.h	/^  REG_BR_PRED,$/;"	e	enum:reg_note
REG_BR_PROB	rtl.h	/^  REG_BR_PROB,$/;"	e	enum:reg_note
REG_BR_PROB_BASE	rtl.h	598;"	d
REG_BYTES	regs.h	25;"	d
REG_CC_SETTER	rtl.h	/^  REG_CC_SETTER, REG_CC_USER,$/;"	e	enum:reg_note
REG_CC_USER	rtl.h	/^  REG_CC_SETTER, REG_CC_USER,$/;"	e	enum:reg_note
REG_CHANGES_MODE	regs.h	112;"	d
REG_CLASS_CONTENTS	i386.h	1274;"	d
REG_CLASS_FROM_LETTER	i386.h	1371;"	d
REG_CLASS_NAMES	i386.h	1249;"	d
REG_DEAD	rtl.h	/^  REG_DEAD = 1,$/;"	e	enum:reg_note
REG_DEP_ANTI	rtl.h	/^  REG_DEP_ANTI, REG_DEP_OUTPUT,$/;"	e	enum:reg_note
REG_DEP_OUTPUT	rtl.h	/^  REG_DEP_ANTI, REG_DEP_OUTPUT,$/;"	e	enum:reg_note
REG_EH_CONTEXT	rtl.h	/^  REG_EH_CONTEXT,$/;"	e	enum:reg_note
REG_EH_REGION	rtl.h	/^  REG_EH_REGION,$/;"	e	enum:reg_note
REG_EQUAL	rtl.h	/^  REG_EQUAL,$/;"	e	enum:reg_note
REG_EQUIV	rtl.h	/^  REG_EQUIV,$/;"	e	enum:reg_note
REG_EXEC_COUNT	rtl.h	/^  REG_EXEC_COUNT,$/;"	e	enum:reg_note
REG_FRAME_RELATED_EXPR	rtl.h	/^  REG_FRAME_RELATED_EXPR,$/;"	e	enum:reg_note
REG_FREQ	regs.h	73;"	d
REG_FREQ_FROM_BB	regs.h	85;"	d
REG_FREQ_MAX	regs.h	79;"	d
REG_FUNCTION_VALUE_P	rtl.h	796;"	d
REG_INC	rtl.h	/^  REG_INC,$/;"	e	enum:reg_note
REG_IN_TABLE	cse.c	514;"	d	file:
REG_IV_CLASS	loop.h	218;"	d
REG_IV_INFO	loop.h	217;"	d
REG_IV_TYPE	loop.h	216;"	d
REG_LABEL	rtl.h	/^  REG_LABEL,$/;"	e	enum:reg_note
REG_LIBCALL	rtl.h	/^  REG_LIBCALL,$/;"	e	enum:reg_note
REG_LIVE_LENGTH	regs.h	148;"	d
REG_LOOP_TEST_P	rtl.h	970;"	d
REG_MAYBE_DEAD	rtl.h	/^  REG_MAYBE_DEAD,$/;"	e	enum:reg_note
REG_MODE_OK_FOR_BASE_P	regrename.c	47;"	d	file:
REG_MODE_OK_FOR_BASE_P	reload.c	115;"	d	file:
REG_NOALIAS	rtl.h	/^  REG_NOALIAS,$/;"	e	enum:reg_note
REG_NONNEG	rtl.h	/^  REG_NONNEG,$/;"	e	enum:reg_note
REG_NON_LOCAL_GOTO	rtl.h	/^  REG_NON_LOCAL_GOTO,$/;"	e	enum:reg_note
REG_NORETURN	rtl.h	/^  REG_NORETURN,$/;"	e	enum:reg_note
REG_NOTES	rtl.h	448;"	d
REG_NOTE_KIND	rtl.h	601;"	d
REG_NO_CONFLICT	rtl.h	/^  REG_NO_CONFLICT,$/;"	e	enum:reg_note
REG_N_CALLS_CROSSED	regs.h	131;"	d
REG_N_DEATHS	regs.h	105;"	d
REG_N_REFS	regs.h	69;"	d
REG_N_SETS	regs.h	97;"	d
REG_OK_FOR_BASE_NONSTRICT_P	i386.h	1903;"	d
REG_OK_FOR_BASE_P	i386.h	1917;"	d
REG_OK_FOR_BASE_P	i386.h	1921;"	d
REG_OK_FOR_BASE_STRICT_P	i386.h	1913;"	d
REG_OK_FOR_INDEX_NONSTRICT_P	i386.h	1897;"	d
REG_OK_FOR_INDEX_P	i386.h	1916;"	d
REG_OK_FOR_INDEX_P	i386.h	1920;"	d
REG_OK_FOR_INDEX_STRICT_P	i386.h	1912;"	d
REG_OK_STRICT	regrename.c	21;"	d	file:
REG_OK_STRICT	reload.c	87;"	d	file:
REG_P	rtl.h	233;"	d
REG_PARM_STACK_SPACE	i386.h	1596;"	d
REG_POINTER	rtl.h	802;"	d
REG_QTY	cse.c	518;"	d	file:
REG_RETVAL	rtl.h	/^  REG_RETVAL,$/;"	e	enum:reg_note
REG_SAVE_AREA	rtl.h	/^  REG_SAVE_AREA,$/;"	e	enum:reg_note
REG_SAVE_NOTE	rtl.h	/^  REG_SAVE_NOTE,$/;"	e	enum:reg_note
REG_SETJMP	rtl.h	/^  REG_SETJMP,$/;"	e	enum:reg_note
REG_SET_EQUAL_P	basic-block.h	45;"	d
REG_SET_TABLE_SLOP	gcse.c	454;"	d	file:
REG_SET_TO_HARD_REG_SET	basic-block.h	75;"	d
REG_STACK_SIZE	reg-stack.c	173;"	d	file:
REG_TICK	cse.c	510;"	d	file:
REG_UNUSED	rtl.h	/^  REG_UNUSED,$/;"	e	enum:reg_note
REG_USERVAR_P	rtl.h	799;"	d
REG_VALUES	cselib.c	105;"	d	file:
REG_VTABLE_REF	rtl.h	/^  REG_VTABLE_REF$/;"	e	enum:reg_note
REG_WAS_0	rtl.h	/^  REG_WAS_0,$/;"	e	enum:reg_note
RELOAD_COMBINE_MAX_USES	reload1.c	8578;"	d	file:
RELOAD_FOR_INPADDR_ADDRESS	reload.h	/^  RELOAD_FOR_INPUT_ADDRESS, RELOAD_FOR_INPADDR_ADDRESS,$/;"	e	enum:reload_type
RELOAD_FOR_INPUT	reload.h	/^  RELOAD_FOR_INPUT, RELOAD_FOR_OUTPUT, RELOAD_FOR_INSN, $/;"	e	enum:reload_type
RELOAD_FOR_INPUT_ADDRESS	reload.h	/^  RELOAD_FOR_INPUT_ADDRESS, RELOAD_FOR_INPADDR_ADDRESS,$/;"	e	enum:reload_type
RELOAD_FOR_INSN	reload.h	/^  RELOAD_FOR_INPUT, RELOAD_FOR_OUTPUT, RELOAD_FOR_INSN, $/;"	e	enum:reload_type
RELOAD_FOR_OPADDR_ADDR	reload.h	/^  RELOAD_FOR_OPERAND_ADDRESS, RELOAD_FOR_OPADDR_ADDR,$/;"	e	enum:reload_type
RELOAD_FOR_OPERAND_ADDRESS	reload.h	/^  RELOAD_FOR_OPERAND_ADDRESS, RELOAD_FOR_OPADDR_ADDR,$/;"	e	enum:reload_type
RELOAD_FOR_OTHER_ADDRESS	reload.h	/^  RELOAD_OTHER, RELOAD_FOR_OTHER_ADDRESS$/;"	e	enum:reload_type
RELOAD_FOR_OUTADDR_ADDRESS	reload.h	/^  RELOAD_FOR_OUTPUT_ADDRESS, RELOAD_FOR_OUTADDR_ADDRESS,$/;"	e	enum:reload_type
RELOAD_FOR_OUTPUT	reload.h	/^  RELOAD_FOR_INPUT, RELOAD_FOR_OUTPUT, RELOAD_FOR_INSN, $/;"	e	enum:reload_type
RELOAD_FOR_OUTPUT_ADDRESS	reload.h	/^  RELOAD_FOR_OUTPUT_ADDRESS, RELOAD_FOR_OUTADDR_ADDRESS,$/;"	e	enum:reload_type
RELOAD_OTHER	reload.h	/^  RELOAD_OTHER, RELOAD_FOR_OTHER_ADDRESS$/;"	e	enum:reload_type
RENAME_NO_RTX	ssa.c	763;"	d	file:
RESET_BIT	sbitmap.h	54;"	d
RESTORE_SPELLING_DEPTH	c-typeck.c	4499;"	d	file:
RESTORE_WARN_FLAGS	c-parse.c	158;"	d	file:
RESULT_DECL_CHECK	tree-check.h	42;"	d
RESURRECT_INSN	ssa-dce.c	124;"	d	file:
RET	i386.h	3010;"	d
RETURN	c-parse.c	29;"	d	file:
RETURN_ADDR_RTX	i386.h	2827;"	d
RETURN_EXPR	c-common.h	594;"	d
RETURN_EXPR_CHECK	tree-check.h	145;"	d
RETURN_IN_MEMORY	expr.h	189;"	d
RETURN_IN_MEMORY	i386.h	1172;"	d
RETURN_POPS_ARGS	i386.h	1633;"	d
RETURN_STMT_CHECK	tree-check.h	164;"	d
REVERSE_CONDEXEC_PREDICATES_P	flow.c	176;"	d	file:
REVERSE_CONDITION	i386.h	2758;"	d
REVERSIBLE_CC_MODE	i386.h	2754;"	d
REWRITE_ADDRESS	i386.h	2002;"	d
REX_INT_REGNO_P	i386.h	1325;"	d
REX_INT_REG_P	i386.h	1326;"	d
RGN_BLOCKS	sched-rgn.c	149;"	d	file:
RGN_NR_BLOCKS	sched-rgn.c	148;"	d	file:
RID_ALIGNOF	c-common.h	/^  RID_ASM,       RID_TYPEOF,   RID_ALIGNOF,  RID_ATTRIBUTE,  RID_VA_ARG,$/;"	e	enum:rid
RID_AND	c-common.h	/^  RID_AND, RID_AND_EQ, RID_NOT, RID_NOT_EQ,$/;"	e	enum:rid
RID_AND_EQ	c-common.h	/^  RID_AND, RID_AND_EQ, RID_NOT, RID_NOT_EQ,$/;"	e	enum:rid
RID_ASM	c-common.h	/^  RID_ASM,       RID_TYPEOF,   RID_ALIGNOF,  RID_ATTRIBUTE,  RID_VA_ARG,$/;"	e	enum:rid
RID_ATTRIBUTE	c-common.h	/^  RID_ASM,       RID_TYPEOF,   RID_ALIGNOF,  RID_ATTRIBUTE,  RID_VA_ARG,$/;"	e	enum:rid
RID_AT_ALIAS	c-common.h	/^  RID_AT_CLASS,    RID_AT_ALIAS,     RID_AT_DEFS,$/;"	e	enum:rid
RID_AT_CLASS	c-common.h	/^  RID_AT_CLASS,    RID_AT_ALIAS,     RID_AT_DEFS,$/;"	e	enum:rid
RID_AT_DEFS	c-common.h	/^  RID_AT_CLASS,    RID_AT_ALIAS,     RID_AT_DEFS,$/;"	e	enum:rid
RID_AT_ENCODE	c-common.h	/^  RID_ID,          RID_AT_ENCODE,    RID_AT_END,$/;"	e	enum:rid
RID_AT_END	c-common.h	/^  RID_ID,          RID_AT_ENCODE,    RID_AT_END,$/;"	e	enum:rid
RID_AT_IMPLEMENTATION	c-common.h	/^  RID_AT_IMPLEMENTATION,$/;"	e	enum:rid
RID_AT_INTERFACE	c-common.h	/^  RID_AT_PROTOCOL, RID_AT_SELECTOR,  RID_AT_INTERFACE,$/;"	e	enum:rid
RID_AT_PRIVATE	c-common.h	/^  RID_AT_PRIVATE,  RID_AT_PROTECTED, RID_AT_PUBLIC,$/;"	e	enum:rid
RID_AT_PROTECTED	c-common.h	/^  RID_AT_PRIVATE,  RID_AT_PROTECTED, RID_AT_PUBLIC,$/;"	e	enum:rid
RID_AT_PROTOCOL	c-common.h	/^  RID_AT_PROTOCOL, RID_AT_SELECTOR,  RID_AT_INTERFACE,$/;"	e	enum:rid
RID_AT_PUBLIC	c-common.h	/^  RID_AT_PRIVATE,  RID_AT_PROTECTED, RID_AT_PUBLIC,$/;"	e	enum:rid
RID_AT_SELECTOR	c-common.h	/^  RID_AT_PROTOCOL, RID_AT_SELECTOR,  RID_AT_INTERFACE,$/;"	e	enum:rid
RID_AUTO	c-common.h	/^  RID_VOLATILE, RID_SIGNED,  RID_AUTO,  RID_RESTRICT,$/;"	e	enum:rid
RID_BITAND	c-common.h	/^  RID_BITAND, RID_BITOR, RID_COMPL,$/;"	e	enum:rid
RID_BITOR	c-common.h	/^  RID_BITAND, RID_BITOR, RID_COMPL,$/;"	e	enum:rid
RID_BOOL	c-common.h	/^  RID_BOOL,     RID_WCHAR,    RID_CLASS,$/;"	e	enum:rid
RID_BOUNDED	c-common.h	/^  RID_BOUNDED, RID_UNBOUNDED, RID_COMPLEX,$/;"	e	enum:rid
RID_BREAK	c-common.h	/^  RID_DEFAULT, RID_BREAK,  RID_CONTINUE, RID_RETURN, RID_GOTO,$/;"	e	enum:rid
RID_BYCOPY	c-common.h	/^  RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF, RID_ONEWAY,$/;"	e	enum:rid
RID_BYREF	c-common.h	/^  RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF, RID_ONEWAY,$/;"	e	enum:rid
RID_C99_FUNCTION_NAME	c-common.h	/^  RID_FUNCTION_NAME, RID_PRETTY_FUNCTION_NAME, RID_C99_FUNCTION_NAME,$/;"	e	enum:rid
RID_CASE	c-common.h	/^  RID_WHILE,   RID_DO,     RID_FOR,      RID_SWITCH, RID_CASE,$/;"	e	enum:rid
RID_CATCH	c-common.h	/^  RID_TEMPLATE, RID_NULL,     RID_CATCH,$/;"	e	enum:rid
RID_CHAR	c-common.h	/^  RID_INT,     RID_CHAR,   RID_FLOAT,    RID_DOUBLE, RID_VOID,$/;"	e	enum:rid
RID_CHOOSE_EXPR	c-common.h	/^  RID_PTREXTENT, RID_PTRVALUE, RID_CHOOSE_EXPR, RID_TYPES_COMPATIBLE_P,$/;"	e	enum:rid
RID_CLASS	c-common.h	/^  RID_BOOL,     RID_WCHAR,    RID_CLASS,$/;"	e	enum:rid
RID_COMPL	c-common.h	/^  RID_BITAND, RID_BITOR, RID_COMPL,$/;"	e	enum:rid
RID_COMPLEX	c-common.h	/^  RID_BOUNDED, RID_UNBOUNDED, RID_COMPLEX,$/;"	e	enum:rid
RID_CONST	c-common.h	/^  RID_UNSIGNED, RID_LONG,    RID_CONST, RID_EXTERN,$/;"	e	enum:rid
RID_CONSTCAST	c-common.h	/^  RID_CONSTCAST, RID_DYNCAST, RID_REINTCAST, RID_STATCAST,$/;"	e	enum:rid
RID_CONTINUE	c-common.h	/^  RID_DEFAULT, RID_BREAK,  RID_CONTINUE, RID_RETURN, RID_GOTO,$/;"	e	enum:rid
RID_DEFAULT	c-common.h	/^  RID_DEFAULT, RID_BREAK,  RID_CONTINUE, RID_RETURN, RID_GOTO,$/;"	e	enum:rid
RID_DELETE	c-common.h	/^  RID_DELETE,   RID_FALSE,    RID_NAMESPACE,$/;"	e	enum:rid
RID_DO	c-common.h	/^  RID_WHILE,   RID_DO,     RID_FOR,      RID_SWITCH, RID_CASE,$/;"	e	enum:rid
RID_DOUBLE	c-common.h	/^  RID_INT,     RID_CHAR,   RID_FLOAT,    RID_DOUBLE, RID_VOID,$/;"	e	enum:rid
RID_DYNCAST	c-common.h	/^  RID_CONSTCAST, RID_DYNCAST, RID_REINTCAST, RID_STATCAST,$/;"	e	enum:rid
RID_ELSE	c-common.h	/^  RID_ENUM,    RID_STRUCT, RID_UNION,    RID_IF,     RID_ELSE,$/;"	e	enum:rid
RID_ENUM	c-common.h	/^  RID_ENUM,    RID_STRUCT, RID_UNION,    RID_IF,     RID_ELSE,$/;"	e	enum:rid
RID_EXPLICIT	c-common.h	/^  RID_FRIEND, RID_VIRTUAL, RID_EXPLICIT, RID_EXPORT, RID_MUTABLE,$/;"	e	enum:rid
RID_EXPORT	c-common.h	/^  RID_FRIEND, RID_VIRTUAL, RID_EXPLICIT, RID_EXPORT, RID_MUTABLE,$/;"	e	enum:rid
RID_EXTENSION	c-common.h	/^  RID_EXTENSION, RID_IMAGPART, RID_REALPART, RID_LABEL,      RID_PTRBASE,$/;"	e	enum:rid
RID_EXTERN	c-common.h	/^  RID_UNSIGNED, RID_LONG,    RID_CONST, RID_EXTERN,$/;"	e	enum:rid
RID_FALSE	c-common.h	/^  RID_DELETE,   RID_FALSE,    RID_NAMESPACE,$/;"	e	enum:rid
RID_FIRST_AT	c-common.h	/^  RID_FIRST_AT = RID_AT_ENCODE,$/;"	e	enum:rid
RID_FIRST_MODIFIER	c-common.h	/^  RID_FIRST_MODIFIER = RID_STATIC,$/;"	e	enum:rid
RID_FIRST_PQ	c-common.h	/^  RID_FIRST_PQ = RID_IN,$/;"	e	enum:rid
RID_FLOAT	c-common.h	/^  RID_INT,     RID_CHAR,   RID_FLOAT,    RID_DOUBLE, RID_VOID,$/;"	e	enum:rid
RID_FOR	c-common.h	/^  RID_WHILE,   RID_DO,     RID_FOR,      RID_SWITCH, RID_CASE,$/;"	e	enum:rid
RID_FRIEND	c-common.h	/^  RID_FRIEND, RID_VIRTUAL, RID_EXPLICIT, RID_EXPORT, RID_MUTABLE,$/;"	e	enum:rid
RID_FUNCTION_NAME	c-common.h	/^  RID_FUNCTION_NAME, RID_PRETTY_FUNCTION_NAME, RID_C99_FUNCTION_NAME,$/;"	e	enum:rid
RID_GOTO	c-common.h	/^  RID_DEFAULT, RID_BREAK,  RID_CONTINUE, RID_RETURN, RID_GOTO,$/;"	e	enum:rid
RID_ID	c-common.h	/^  RID_ID,          RID_AT_ENCODE,    RID_AT_END,$/;"	e	enum:rid
RID_IF	c-common.h	/^  RID_ENUM,    RID_STRUCT, RID_UNION,    RID_IF,     RID_ELSE,$/;"	e	enum:rid
RID_IMAGPART	c-common.h	/^  RID_EXTENSION, RID_IMAGPART, RID_REALPART, RID_LABEL,      RID_PTRBASE,$/;"	e	enum:rid
RID_IN	c-common.h	/^  RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF, RID_ONEWAY,$/;"	e	enum:rid
RID_INLINE	c-common.h	/^  RID_REGISTER, RID_TYPEDEF, RID_SHORT, RID_INLINE,$/;"	e	enum:rid
RID_INOUT	c-common.h	/^  RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF, RID_ONEWAY,$/;"	e	enum:rid
RID_INT	c-common.h	/^  RID_INT,     RID_CHAR,   RID_FLOAT,    RID_DOUBLE, RID_VOID,$/;"	e	enum:rid
RID_LABEL	c-common.h	/^  RID_EXTENSION, RID_IMAGPART, RID_REALPART, RID_LABEL,      RID_PTRBASE,$/;"	e	enum:rid
RID_LAST_AT	c-common.h	/^  RID_LAST_AT = RID_AT_IMPLEMENTATION,$/;"	e	enum:rid
RID_LAST_MODIFIER	c-common.h	/^  RID_LAST_MODIFIER = RID_ONEWAY,$/;"	e	enum:rid
RID_LAST_PQ	c-common.h	/^  RID_LAST_PQ = RID_ONEWAY$/;"	e	enum:rid
RID_LONG	c-common.h	/^  RID_UNSIGNED, RID_LONG,    RID_CONST, RID_EXTERN,$/;"	e	enum:rid
RID_MAX	c-common.h	/^  RID_MAX,$/;"	e	enum:rid
RID_MUTABLE	c-common.h	/^  RID_FRIEND, RID_VIRTUAL, RID_EXPLICIT, RID_EXPORT, RID_MUTABLE,$/;"	e	enum:rid
RID_NAMESPACE	c-common.h	/^  RID_DELETE,   RID_FALSE,    RID_NAMESPACE,$/;"	e	enum:rid
RID_NEW	c-common.h	/^  RID_NEW,      RID_OPERATOR, RID_THIS,$/;"	e	enum:rid
RID_NOT	c-common.h	/^  RID_AND, RID_AND_EQ, RID_NOT, RID_NOT_EQ,$/;"	e	enum:rid
RID_NOT_EQ	c-common.h	/^  RID_AND, RID_AND_EQ, RID_NOT, RID_NOT_EQ,$/;"	e	enum:rid
RID_NULL	c-common.h	/^  RID_TEMPLATE, RID_NULL,     RID_CATCH,$/;"	e	enum:rid
RID_ONEWAY	c-common.h	/^  RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF, RID_ONEWAY,$/;"	e	enum:rid
RID_OPERATOR	c-common.h	/^  RID_NEW,      RID_OPERATOR, RID_THIS,$/;"	e	enum:rid
RID_OR	c-common.h	/^  RID_OR,  RID_OR_EQ,  RID_XOR, RID_XOR_EQ,$/;"	e	enum:rid
RID_OR_EQ	c-common.h	/^  RID_OR,  RID_OR_EQ,  RID_XOR, RID_XOR_EQ,$/;"	e	enum:rid
RID_OUT	c-common.h	/^  RID_IN, RID_OUT, RID_INOUT, RID_BYCOPY, RID_BYREF, RID_ONEWAY,$/;"	e	enum:rid
RID_PRETTY_FUNCTION_NAME	c-common.h	/^  RID_FUNCTION_NAME, RID_PRETTY_FUNCTION_NAME, RID_C99_FUNCTION_NAME,$/;"	e	enum:rid
RID_PRIVATE	c-common.h	/^  RID_PUBLIC,   RID_PRIVATE,  RID_PROTECTED,$/;"	e	enum:rid
RID_PROTECTED	c-common.h	/^  RID_PUBLIC,   RID_PRIVATE,  RID_PROTECTED,$/;"	e	enum:rid
RID_PTRBASE	c-common.h	/^  RID_EXTENSION, RID_IMAGPART, RID_REALPART, RID_LABEL,      RID_PTRBASE,$/;"	e	enum:rid
RID_PTREXTENT	c-common.h	/^  RID_PTREXTENT, RID_PTRVALUE, RID_CHOOSE_EXPR, RID_TYPES_COMPATIBLE_P,$/;"	e	enum:rid
RID_PTRVALUE	c-common.h	/^  RID_PTREXTENT, RID_PTRVALUE, RID_CHOOSE_EXPR, RID_TYPES_COMPATIBLE_P,$/;"	e	enum:rid
RID_PUBLIC	c-common.h	/^  RID_PUBLIC,   RID_PRIVATE,  RID_PROTECTED,$/;"	e	enum:rid
RID_REALPART	c-common.h	/^  RID_EXTENSION, RID_IMAGPART, RID_REALPART, RID_LABEL,      RID_PTRBASE,$/;"	e	enum:rid
RID_REGISTER	c-common.h	/^  RID_REGISTER, RID_TYPEDEF, RID_SHORT, RID_INLINE,$/;"	e	enum:rid
RID_REINTCAST	c-common.h	/^  RID_CONSTCAST, RID_DYNCAST, RID_REINTCAST, RID_STATCAST,$/;"	e	enum:rid
RID_RESTRICT	c-common.h	/^  RID_VOLATILE, RID_SIGNED,  RID_AUTO,  RID_RESTRICT,$/;"	e	enum:rid
RID_RETURN	c-common.h	/^  RID_DEFAULT, RID_BREAK,  RID_CONTINUE, RID_RETURN, RID_GOTO,$/;"	e	enum:rid
RID_SHORT	c-common.h	/^  RID_REGISTER, RID_TYPEDEF, RID_SHORT, RID_INLINE,$/;"	e	enum:rid
RID_SIGNED	c-common.h	/^  RID_VOLATILE, RID_SIGNED,  RID_AUTO,  RID_RESTRICT,$/;"	e	enum:rid
RID_SIZEOF	c-common.h	/^  RID_SIZEOF,$/;"	e	enum:rid
RID_STATCAST	c-common.h	/^  RID_CONSTCAST, RID_DYNCAST, RID_REINTCAST, RID_STATCAST,$/;"	e	enum:rid
RID_STATIC	c-common.h	/^  RID_STATIC = 0,$/;"	e	enum:rid
RID_STRUCT	c-common.h	/^  RID_ENUM,    RID_STRUCT, RID_UNION,    RID_IF,     RID_ELSE,$/;"	e	enum:rid
RID_SWITCH	c-common.h	/^  RID_WHILE,   RID_DO,     RID_FOR,      RID_SWITCH, RID_CASE,$/;"	e	enum:rid
RID_TEMPLATE	c-common.h	/^  RID_TEMPLATE, RID_NULL,     RID_CATCH,$/;"	e	enum:rid
RID_THIS	c-common.h	/^  RID_NEW,      RID_OPERATOR, RID_THIS,$/;"	e	enum:rid
RID_THROW	c-common.h	/^  RID_THROW,    RID_TRUE,     RID_TRY,$/;"	e	enum:rid
RID_TRUE	c-common.h	/^  RID_THROW,    RID_TRUE,     RID_TRY,$/;"	e	enum:rid
RID_TRY	c-common.h	/^  RID_THROW,    RID_TRUE,     RID_TRY,$/;"	e	enum:rid
RID_TYPEDEF	c-common.h	/^  RID_REGISTER, RID_TYPEDEF, RID_SHORT, RID_INLINE,$/;"	e	enum:rid
RID_TYPEID	c-common.h	/^  RID_TYPENAME, RID_TYPEID,   RID_USING,$/;"	e	enum:rid
RID_TYPENAME	c-common.h	/^  RID_TYPENAME, RID_TYPEID,   RID_USING,$/;"	e	enum:rid
RID_TYPEOF	c-common.h	/^  RID_ASM,       RID_TYPEOF,   RID_ALIGNOF,  RID_ATTRIBUTE,  RID_VA_ARG,$/;"	e	enum:rid
RID_TYPES_COMPATIBLE_P	c-common.h	/^  RID_PTREXTENT, RID_PTRVALUE, RID_CHOOSE_EXPR, RID_TYPES_COMPATIBLE_P,$/;"	e	enum:rid
RID_UNBOUNDED	c-common.h	/^  RID_BOUNDED, RID_UNBOUNDED, RID_COMPLEX,$/;"	e	enum:rid
RID_UNION	c-common.h	/^  RID_ENUM,    RID_STRUCT, RID_UNION,    RID_IF,     RID_ELSE,$/;"	e	enum:rid
RID_UNSIGNED	c-common.h	/^  RID_UNSIGNED, RID_LONG,    RID_CONST, RID_EXTERN,$/;"	e	enum:rid
RID_USING	c-common.h	/^  RID_TYPENAME, RID_TYPEID,   RID_USING,$/;"	e	enum:rid
RID_VA_ARG	c-common.h	/^  RID_ASM,       RID_TYPEOF,   RID_ALIGNOF,  RID_ATTRIBUTE,  RID_VA_ARG,$/;"	e	enum:rid
RID_VIRTUAL	c-common.h	/^  RID_FRIEND, RID_VIRTUAL, RID_EXPLICIT, RID_EXPORT, RID_MUTABLE,$/;"	e	enum:rid
RID_VOID	c-common.h	/^  RID_INT,     RID_CHAR,   RID_FLOAT,    RID_DOUBLE, RID_VOID,$/;"	e	enum:rid
RID_VOLATILE	c-common.h	/^  RID_VOLATILE, RID_SIGNED,  RID_AUTO,  RID_RESTRICT,$/;"	e	enum:rid
RID_WCHAR	c-common.h	/^  RID_BOOL,     RID_WCHAR,    RID_CLASS,$/;"	e	enum:rid
RID_WHILE	c-common.h	/^  RID_WHILE,   RID_DO,     RID_FOR,      RID_SWITCH, RID_CASE,$/;"	e	enum:rid
RID_XOR	c-common.h	/^  RID_OR,  RID_OR_EQ,  RID_XOR, RID_XOR_EQ,$/;"	e	enum:rid
RID_XOR_EQ	c-common.h	/^  RID_OR,  RID_OR_EQ,  RID_XOR, RID_XOR_EQ,$/;"	e	enum:rid
RIGHT_ASSOC	cppexp.c	471;"	d	file:
RNL_BLOCKED	except.c	/^  RNL_BLOCKED$/;"	e	enum:reachable_code	file:
RNL_CAUGHT	except.c	/^  RNL_CAUGHT,$/;"	e	enum:reachable_code	file:
RNL_MAYBE_CAUGHT	except.c	/^  RNL_MAYBE_CAUGHT,$/;"	e	enum:reachable_code	file:
RNL_NOT_CAUGHT	except.c	/^  RNL_NOT_CAUGHT,$/;"	e	enum:reachable_code	file:
RODATA1_BEGIN_LABEL	dwarfout.c	1065;"	d	file:
RODATA1_END_LABEL	dwarfout.c	1068;"	d	file:
RODATA1_SECTION_NAME	dwarfout.c	1012;"	d	file:
RODATA_BEGIN_LABEL	dwarfout.c	1058;"	d	file:
RODATA_END_LABEL	dwarfout.c	1061;"	d	file:
RODATA_SECTION_NAME	dwarfout.c	1009;"	d	file:
ROUND_DIV_EXPR_CHECK	tree-check.h	71;"	d
ROUND_MOD_EXPR_CHECK	tree-check.h	75;"	d
RROTATE_EXPR_CHECK	tree-check.h	91;"	d
RSHIFT	c-parse.c	53;"	d	file:
RSHIFT_EXPR_CHECK	tree-check.h	89;"	d
RTL_CHECK1	rtl.h	266;"	d
RTL_CHECK1	rtl.h	332;"	d
RTL_CHECK2	rtl.h	277;"	d
RTL_CHECK2	rtl.h	333;"	d
RTL_CHECKC1	rtl.h	289;"	d
RTL_CHECKC1	rtl.h	334;"	d
RTL_CHECKC2	rtl.h	296;"	d
RTL_CHECKC2	rtl.h	335;"	d
RTL_EXPR_CHECK	tree-check.h	126;"	d
RTL_EXPR_RTL	tree.h	836;"	d
RTL_EXPR_SEQUENCE	tree.h	834;"	d
RTVEC_ELT	rtl.h	304;"	d
RTVEC_ELT	rtl.h	336;"	d
RTX_CODE	rtl.h	40;"	d
RTX_COSTS	i386.h	2432;"	d
RTX_DOUBLE	varasm.c	/^enum kind { RTX_UNKNOWN, RTX_DOUBLE, RTX_INT, RTX_VECTOR, RTX_UNSPEC };$/;"	e	enum:kind	file:
RTX_FRAME_RELATED_P	rtl.h	216;"	d
RTX_INT	varasm.c	/^enum kind { RTX_UNKNOWN, RTX_DOUBLE, RTX_INT, RTX_VECTOR, RTX_UNSPEC };$/;"	e	enum:kind	file:
RTX_INTEGRATED_P	rtl.h	214;"	d
RTX_UNCHANGING_P	rtl.h	215;"	d
RTX_UNKNOWN	varasm.c	/^enum kind { RTX_UNKNOWN, RTX_DOUBLE, RTX_INT, RTX_VECTOR, RTX_UNSPEC };$/;"	e	enum:kind	file:
RTX_UNSPEC	varasm.c	/^enum kind { RTX_UNKNOWN, RTX_DOUBLE, RTX_INT, RTX_VECTOR, RTX_UNSPEC };$/;"	e	enum:kind	file:
RTX_VECTOR	varasm.c	/^enum kind { RTX_UNKNOWN, RTX_DOUBLE, RTX_INT, RTX_VECTOR, RTX_UNSPEC };$/;"	e	enum:kind	file:
RUSAGE_SELF	timevar.c	59;"	d	file:
R_OK	system.h	229;"	d
S	dwarf2asm.c	350;"	d	file:
S	safe-ctype.c	64;"	d	file:
SAFE_CTYPE_H	safe-ctype.h	36;"	d
SAVE_BLOCK	expr.h	/^enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};$/;"	e	enum:save_level
SAVE_EXPR_CHECK	tree-check.h	124;"	d
SAVE_EXPR_CONTEXT	tree.h	824;"	d
SAVE_EXPR_NOPLACEHOLDER	tree.h	826;"	d
SAVE_EXPR_PERSISTENT_P	tree.h	831;"	d
SAVE_EXPR_RTL	tree.h	825;"	d
SAVE_FUNCTION	expr.h	/^enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};$/;"	e	enum:save_level
SAVE_NONLOCAL	expr.h	/^enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};$/;"	e	enum:save_level
SAVE_SPELLING_DEPTH	c-typeck.c	4503;"	d	file:
SAVE_WARN_FLAGS	c-parse.c	153;"	d	file:
SBITMAP_ELT_BITS	sbitmap.h	28;"	d
SBITMAP_ELT_TYPE	sbitmap.h	29;"	d
SBITMAP_SET_SIZE	sbitmap.h	42;"	d
SBITSIZETYPE	tree.h	/^  SBITSIZETYPE,		\/* Signed representation of sizes in bits.  *\/$/;"	e	enum:size_type_kind
SCALE	ggc-common.c	673;"	d	file:
SCALE	ggc-page.c	1464;"	d	file:
SCALE	hashtable.c	250;"	d	file:
SCALE	hashtable.c	301;"	d	file:
SCCS_DIRECTIVE	svr4.h	200;"	d
SCCS_ENTRY	cpplib.c	165;"	d	file:
SCCS_ENTRY	cpplib.c	167;"	d	file:
SCHED_GROUP_P	rtl.h	974;"	d
SCHED_SORT	haifa-sched.c	758;"	d	file:
SCOPE_BEGIN_P	c-common.h	665;"	d
SCOPE_END_P	c-common.h	669;"	d
SCOPE_NO_CLEANUPS_P	c-common.h	683;"	d
SCOPE_NULLIFIED_P	c-common.h	677;"	d
SCOPE_PARTIAL_P	c-common.h	698;"	d
SCOPE_STMT_BLOCK	c-common.h	673;"	d
SCOPE_STMT_CHECK	tree-check.h	171;"	d
SCSPEC	c-parse.c	9;"	d	file:
SDB_DEBUG	flags.h	/^  SDB_DEBUG,	    \/* Write COFF for (old) SDB (using sdbout.c).  *\/$/;"	e	enum:debug_info_type
SDB_DELIM	sdbout.c	137;"	d	file:
SDB_GENERATE_FAKE	sdbout.c	242;"	d	file:
SDB_MAX_DIM	sdbout.c	142;"	d	file:
SECONDARY_INPUT_RELOAD_CLASS	reload.h	27;"	d
SECONDARY_MEMORY_NEEDED	i386.h	1473;"	d
SECONDARY_OUTPUT_RELOAD_CLASS	i386.h	1480;"	d
SECONDARY_OUTPUT_RELOAD_CLASS	reload.h	29;"	d
SECTION_ASM_OP	dwarf2out.c	312;"	d	file:
SECTION_ASM_OP	vmsdbgout.c	246;"	d	file:
SECTION_BSS	output.h	509;"	d
SECTION_CODE	output.h	504;"	d
SECTION_DEBUG	output.h	506;"	d
SECTION_ENTSIZE	output.h	503;"	d
SECTION_FORGET	output.h	510;"	d
SECTION_LINKONCE	output.h	507;"	d
SECTION_MACH_DEP	output.h	515;"	d
SECTION_MERGE	output.h	511;"	d
SECTION_OVERRIDE	output.h	514;"	d
SECTION_SMALL	output.h	508;"	d
SECTION_STRINGS	output.h	512;"	d
SECTION_WRITE	output.h	505;"	d
SEEK_CUR	system.h	222;"	d
SEEK_END	system.h	223;"	d
SEEK_SET	system.h	221;"	d
SEEN_EOL	cpplib.c	205;"	d	file:
SELECTOR	c-parse.c	62;"	d	file:
SELECT_CC_MODE	i386.h	2749;"	d
SELECT_RTX_SECTION	elfos.h	333;"	d
SELECT_RTX_SECTION	elfos.h	334;"	d
SELECT_SECTION	elfos.h	358;"	d
SELECT_SECTION	elfos.h	359;"	d
SEPARATE_LINE_CODE_LABEL	dwarf2out.c	3786;"	d	file:
SEQUENCE_RESULT_SIZE	emit-rtl.c	164;"	d	file:
SETUP_FRAME_ADDRESSES	i386.h	1129;"	d
SETUP_INCOMING_VARARGS	i386.h	1739;"	d
SET_ALLOCNO_LIVE	global.c	254;"	d	file:
SET_ASM_OP	dwarfout.c	951;"	d	file:
SET_ASM_OP	elfos.h	92;"	d
SET_ASM_OP	elfos.h	93;"	d
SET_BIT	sbitmap.h	45;"	d
SET_CONFLICT	global.c	174;"	d	file:
SET_CONST_EQUIV_DATA	integrate.h	189;"	d
SET_DECL_ASSEMBLER_NAME	tree.h	1371;"	d
SET_DECL_C_BIT_FIELD	c-common.h	778;"	d
SET_DECL_OFFSET_ALIGN	tree.h	1460;"	d
SET_DECL_RTL	tree.h	1482;"	d
SET_DEST	rtl.h	988;"	d
SET_GLOBAL_ALIGNMENT	c-pragma.c	160;"	d	file:
SET_GLOBAL_ALIGNMENT	c-pragma.c	60;"	d	file:
SET_HARD_REG_BIT	hard-reg-set.h	116;"	d
SET_HARD_REG_BIT	hard-reg-set.h	90;"	d
SET_HARD_REG_SET	hard-reg-set.h	134;"	d
SET_HARD_REG_SET	hard-reg-set.h	189;"	d
SET_HARD_REG_SET	hard-reg-set.h	254;"	d
SET_HARD_REG_SET	hard-reg-set.h	327;"	d
SET_HARD_REG_SET	hard-reg-set.h	98;"	d
SET_IS_RETURN_P	rtl.h	990;"	d
SET_KNOWN_TYPE_TAG	sdbout.c	253;"	d	file:
SET_LE_EXPR_CHECK	tree-check.h	117;"	d
SET_ORIG_INDEX	ifcvt.c	118;"	d	file:
SET_REGBIT	global.c	241;"	d	file:
SET_REGNO_REG_SET	basic-block.h	68;"	d
SET_SRC	rtl.h	989;"	d
SET_STATE	cfgbuild.c	679;"	d	file:
SET_TYPE_CHECK	tree-check.h	25;"	d
SET_UPDATE_LIFE	ifcvt.c	120;"	d	file:
SET_WORD_SIZE	stor-layout.c	1670;"	d	file:
SFNAMES_BEGIN_LABEL	dwarfout.c	1092;"	d	file:
SFNAMES_ENTRY_LABEL_FMT	dwarfout.c	1184;"	d	file:
SFbignan	real.c	/^static const UEMUSHORT SFbignan[2] = {0x7fff, 0xffff};$/;"	v	file:
SFlittlenan	real.c	/^static const UEMUSHORT SFlittlenan[2] = {0, 0xffc0};$/;"	v	file:
SHIFT	cppexp.c	545;"	d	file:
SHIFT_DOUBLE_OMITS_COUNT	unix.h	31;"	d
SHIFT_PRIO	cppexp.c	486;"	d	file:
SHORT_CIRCUIT	cppexp.c	468;"	d	file:
SHORT_TYPE_SIZE	defaults.h	294;"	d
SHORT_TYPE_SIZE	i386.h	690;"	d
SHOULD_MMAP	cppfiles.c	45;"	d	file:
SHOULD_MMAP	cppfiles.c	52;"	d	file:
SIBLING_CALL_P	rtl.h	423;"	d
SIMULTANEOUS_PREFETCHES	i386.h	2316;"	d
SIMULTANEOUS_PREFETCHES	loop.c	61;"	d	file:
SING	real.c	1533;"	d	file:
SIREG	i386.h	/^  AREG, DREG, CREG, BREG, SIREG, DIREG,$/;"	e	enum:reg_class
SIZEOF	c-parse.c	15;"	d	file:
SIZEOF_EXPR_CHECK	tree-check.h	154;"	d
SIZEOF_INT	auto-host.h	341;"	d
SIZEOF_LONG	auto-host.h	349;"	d
SIZEOF_LONG	auto-host.h	352;"	d
SIZEOF_LONG_LONG	auto-host.h	344;"	d
SIZEOF_SHORT	auto-host.h	338;"	d
SIZEOF___INT64	auto-host.h	359;"	d
SIZETYPE	tree.h	/^  SIZETYPE,		\/* Normal representation of sizes in bytes.  *\/$/;"	e	enum:size_type_kind
SIZE_ASM_OP	elfos.h	418;"	d
SIZE_FOR_MODE	alias.c	116;"	d	file:
SIZE_TYPE	c-common.c	52;"	d	file:
SIZE_TYPE	cppdefault.h	54;"	d
SIZE_TYPE	linux.h	75;"	d
SIZE_TYPE	linux.h	76;"	d
SIZE_TYPE	svr4.h	216;"	d
SIZE_TYPE	svr4.h	217;"	d
SIZE_TYPE	x86-64.h	43;"	d
SIZE_TYPE	x86-64.h	44;"	d
SKIP_ASM_OP	elfos.h	109;"	d
SLOW_BYTE_ACCESS	i386.h	2673;"	d
SLOW_SHORT_ACCESS	i386.h	2676;"	d
SLOW_UNALIGNED_ACCESS	expmed.c	64;"	d	file:
SLOW_UNALIGNED_ACCESS	expr.c	198;"	d	file:
SL_BEGIN_LABEL_FMT	dwarfout.c	1160;"	d	file:
SL_END_LABEL_FMT	dwarfout.c	1163;"	d	file:
SMALL_REGISTER_CLASSES	i386.h	1309;"	d
SMALL_REGISTER_CLASSES	regs.h	37;"	d
SOL_COLUMN	tree-dump.c	137;"	d	file:
SOURCE_LINE	line-map.h	103;"	d
SPECIAL_MODE_PREDICATES	i386.h	3077;"	d
SPELLING_BOUNDS	c-typeck.c	4489;"	d	file:
SPELLING_DEPTH	c-typeck.c	4498;"	d	file:
SPELLING_MEMBER	c-typeck.c	4488;"	d	file:
SPELLING_STRING	c-typeck.c	4487;"	d	file:
SPELL_CHAR	cpplex.c	/^  SPELL_CHAR,$/;"	e	enum:spell_type	file:
SPELL_IDENT	cpplex.c	/^  SPELL_IDENT,$/;"	e	enum:spell_type	file:
SPELL_NONE	cpplex.c	/^  SPELL_NONE$/;"	e	enum:spell_type	file:
SPELL_NUMBER	cpplex.c	/^  SPELL_NUMBER,$/;"	e	enum:spell_type	file:
SPELL_OPERATOR	cpplex.c	/^  SPELL_OPERATOR = 0,$/;"	e	enum:spell_type	file:
SPELL_STRING	cpplex.c	/^  SPELL_STRING,$/;"	e	enum:spell_type	file:
SRCINFO_BEGIN_LABEL	dwarfout.c	1095;"	d	file:
SRCLOC_CHECK	tree-check.h	153;"	d
SRC_PROB	sched-rgn.c	210;"	d	file:
SSA_NAME	ssa-ccp.c	122;"	d	file:
SSE_CLASS_P	i386.h	1231;"	d
SSE_FLOAT_MODE_P	i386.h	1341;"	d
SSE_REGNO	i386.h	1337;"	d
SSE_REGNO_P	i386.h	1333;"	d
SSE_REGPARM_MAX	i386.h	2296;"	d
SSE_REGS	i386.h	/^  SSE_REGS,$/;"	e	enum:reg_class
SSE_REG_P	i386.h	1339;"	d
SSIZETYPE	tree.h	/^  SSIZETYPE,		\/* Signed representation of sizes in bytes.  *\/$/;"	e	enum:size_type_kind
SS_BEGIN_LABEL_FMT	dwarfout.c	1124;"	d	file:
SS_END_LABEL_FMT	dwarfout.c	1127;"	d	file:
STABS_GCC_MARKER	dbxout.c	135;"	d	file:
STAB_CODE_TYPE	dbxout.c	165;"	d	file:
STACK_BOUNDARY	i386.h	746;"	d
STACK_BYTES	calls.c	64;"	d	file:
STACK_BYTES	function.c	5136;"	d	file:
STACK_CHECK_BUILTIN	expr.h	209;"	d
STACK_CHECK_FIXED_FRAME_SIZE	expr.h	236;"	d
STACK_CHECK_MAX_FRAME_SIZE	expr.h	230;"	d
STACK_CHECK_MAX_VAR_SIZE	expr.h	243;"	d
STACK_CHECK_PROBE_INTERVAL	expr.h	214;"	d
STACK_CHECK_PROBE_LOAD	expr.h	219;"	d
STACK_CHECK_PROTECT	expr.h	224;"	d
STACK_DIR	alloca.c	84;"	d	file:
STACK_DIR	alloca.c	89;"	d	file:
STACK_DIRECTION	alloca.c	79;"	d	file:
STACK_DYNAMIC_OFFSET	function.c	2897;"	d	file:
STACK_DYNAMIC_OFFSET	function.c	2903;"	d	file:
STACK_GROWS_DOWNWARD	i386.h	1543;"	d
STACK_GROWS_DOWNWARD	regmove.c	48;"	d	file:
STACK_GROWS_DOWNWARD	regmove.c	49;"	d	file:
STACK_GROWS_DOWNWARD	regmove.c	51;"	d	file:
STACK_GROW_OP	explow.c	1460;"	d	file:
STACK_GROW_OP	explow.c	1462;"	d	file:
STACK_POINTER_OFFSET	calls.c	60;"	d	file:
STACK_POINTER_OFFSET	function.c	2879;"	d	file:
STACK_POINTER_REGNUM	i386.h	1085;"	d
STACK_POP_CODE	recog.c	51;"	d	file:
STACK_POP_CODE	recog.c	53;"	d	file:
STACK_PUSH_CODE	expr.c	65;"	d	file:
STACK_PUSH_CODE	expr.c	67;"	d	file:
STACK_PUSH_CODE	recog.c	43;"	d	file:
STACK_PUSH_CODE	recog.c	45;"	d	file:
STACK_REGS	i386.h	856;"	d
STACK_REG_P	i386.h	1347;"	d
STACK_SAVEAREA_MODE	expr.h	196;"	d
STACK_SIZE_MODE	expr.h	203;"	d
STACK_TOP_P	i386.h	1354;"	d
STANDARD_INCLUDE_COMPONENT	cppdefault.h	34;"	d
STANDARD_INCLUDE_DIR	cppdefault.h	30;"	d
STANDARD_INCLUDE_DIR	cppdefault.h	40;"	d
STARTFILE_SPEC	linux64.h	51;"	d
STARTFILE_SPEC	linux64.h	52;"	d
STARTFILE_SPEC	svr4.h	187;"	d
STARTFILE_SPEC	svr4.h	188;"	d
STARTING_FRAME_OFFSET	i386.h	1555;"	d
STATE	cfgbuild.c	678;"	d	file:
STATIC_CHAIN_REGNUM	i386.h	1137;"	d
STAT_SIZE_TOO_BIG	cppfiles.c	100;"	d	file:
STAT_SIZE_TOO_BIG	cppfiles.c	102;"	d	file:
STDC89	cpplib.c	66;"	d	file:
STDC_HEADERS	auto-host.h	61;"	d
STDERR_FILENO	system.h	443;"	d
STDIN_FILENO	system.h	437;"	d
STDOUT_FILENO	system.h	440;"	d
STD_C89	c-format.c	/^  STD_C89,$/;"	e	enum:format_std_version	file:
STD_C94	c-format.c	/^  STD_C94,$/;"	e	enum:format_std_version	file:
STD_C99	c-format.c	/^  STD_C99,$/;"	e	enum:format_std_version	file:
STD_C9L	c-format.c	/^  STD_C9L, \/* C99, but treat as C89 if -Wno-long-long.  *\/$/;"	e	enum:format_std_version	file:
STD_EXT	c-format.c	/^  STD_EXT$/;"	e	enum:format_std_version	file:
STMT_EXPR_CHECK	tree-check.h	174;"	d
STMT_EXPR_NO_SCOPE	c-common.h	651;"	d
STMT_EXPR_STMT	c-common.h	648;"	d
STMT_IS_FULL_EXPR_P	c-common.h	572;"	d
STMT_LINENO	c-common.h	721;"	d
STMT_LINENO_FOR_FN_P	c-common.h	726;"	d
STORE_FLAG_VALUE	i386.h	2350;"	d
STORE_FLAG_VALUE	rtl.h	1736;"	d
STRHASH	varasm.c	2415;"	d	file:
STRICT_ALIGNMENT	i386.h	844;"	d
STRICT_ARGUMENT_NAMING	expr.h	142;"	d
STRING	c-parse.c	13;"	d	file:
STRINGIFY_ARG	cpplib.h	165;"	d
STRINGX	symcat.h	26;"	d
STRINGX	symcat.h	35;"	d
STRING_ASM_OP	elfos.h	594;"	d
STRING_CST_CHECK	tree-check.h	35;"	d
STRING_FUNC_NAME	c-parse.c	45;"	d	file:
STRING_LIMIT	elfos.h	592;"	d
STRING_POOL_ADDRESS_P	rtl.h	1006;"	d
STRIP_NAME_ENCODING	output.h	486;"	d
STRIP_NOPS	tree.h	362;"	d
STRIP_SIGN_NOPS	tree.h	373;"	d
STRIP_TYPE_NOPS	tree.h	386;"	d
STRUCT	c-parse.c	17;"	d	file:
STRUCT_VALUE	i386.h	1153;"	d
STRUCT_VALUE_INCOMING	i386.h	1149;"	d
SUBREG_BYTE	rtl.h	837;"	d
SUBREG_PROMOTED_UNSIGNED_P	rtl.h	856;"	d
SUBREG_PROMOTED_VAR_P	rtl.h	855;"	d
SUBREG_REG	rtl.h	836;"	d
SUBST	combine.c	467;"	d	file:
SUBST_INT	combine.c	497;"	d	file:
SUBTARGET_EXTRA_SPECS	i386.h	656;"	d
SUBTARGET_FRAME_POINTER_REQUIRED	i386.h	1125;"	d
SUBTARGET_OPTIONS	i386.h	470;"	d
SUBTARGET_SWITCHES	i386.h	469;"	d
SUB_PARM_SIZE	expr.h	90;"	d
SUCCESS_EXIT_CODE	system.h	142;"	d
SUCCESS_EXIT_CODE	system.h	144;"	d
SUPPORTS_INIT_PRIORITY	defaults.h	196;"	d
SUPPORTS_ONE_ONLY	defaults.h	171;"	d
SUPPORTS_ONE_ONLY	defaults.h	173;"	d
SUPPORTS_WEAK	defaults.h	162;"	d
SUPPORTS_WEAK	defaults.h	164;"	d
SWAP	md5.c	48;"	d	file:
SWAP	md5.c	51;"	d	file:
SWITCH	c-parse.c	24;"	d	file:
SWITCH_BODY	c-common.h	612;"	d
SWITCH_COND	c-common.h	611;"	d
SWITCH_EXPR_CHECK	tree-check.h	151;"	d
SWITCH_STMT_CHECK	tree-check.h	167;"	d
SWITCH_TAKES_ARG	svr4.h	48;"	d
SWITCH_TYPE	c-common.h	613;"	d
SYMBOLIC_CONST	i386.h	2012;"	d
SYMBOL_REF_FLAG	rtl.h	1009;"	d
SYMBOL_REF_USED	rtl.h	1012;"	d
SYMBOL_REF_WEAK	rtl.h	1015;"	d
SYMBOL__MAIN	function.c	77;"	d	file:
SYMHASH	varasm.c	3451;"	d	file:
SYM_CAT_H	symcat.h	20;"	d
SYNTAX_ERROR	cppexp.c	59;"	d	file:
SYNTAX_ERROR2	cppexp.c	61;"	d	file:
SYSTEM	cppinit.c	/^enum { BRACKET = 0, SYSTEM, AFTER };$/;"	e	enum:__anon80	file:
SYSTEM_INCLUDE_DIR	cppdefault.h	39;"	d
SYSV386_COMPAT	i386.c	6315;"	d	file:
S_IFBLK	system.h	402;"	d
S_ISBLK	system.h	404;"	d
S_ISCHR	system.h	396;"	d
S_ISDIR	system.h	391;"	d
S_ISFIFO	system.h	419;"	d
S_ISFIFO	system.h	421;"	d
S_ISREG	system.h	386;"	d
S_ISSOCK	system.h	410;"	d
S_ISSOCK	system.h	412;"	d
T	safe-ctype.c	63;"	d	file:
T89_C	c-format.c	740;"	d	file:
T89_D	c-format.c	734;"	d	file:
T89_F	c-format.c	731;"	d	file:
T89_I	c-format.c	711;"	d	file:
T89_L	c-format.c	714;"	d	file:
T89_LD	c-format.c	737;"	d	file:
T89_S	c-format.c	719;"	d	file:
T89_UI	c-format.c	721;"	d	file:
T89_UL	c-format.c	724;"	d	file:
T89_US	c-format.c	729;"	d	file:
T89_V	c-format.c	746;"	d	file:
T94_W	c-format.c	748;"	d	file:
T94_WI	c-format.c	751;"	d	file:
T99_D	c-format.c	735;"	d	file:
T99_F	c-format.c	732;"	d	file:
T99_I	c-format.c	712;"	d	file:
T99_IM	c-format.c	762;"	d	file:
T99_LD	c-format.c	738;"	d	file:
T99_PD	c-format.c	758;"	d	file:
T99_SC	c-format.c	742;"	d	file:
T99_SST	c-format.c	756;"	d	file:
T99_ST	c-format.c	754;"	d	file:
T99_UC	c-format.c	744;"	d	file:
T99_UI	c-format.c	722;"	d	file:
T99_UIM	c-format.c	764;"	d	file:
T99_UPD	c-format.c	760;"	d	file:
T9L_LL	c-format.c	716;"	d	file:
T9L_ULL	c-format.c	726;"	d	file:
TAG_NAME	sdbout.c	259;"	d	file:
TAG_array_type	dwarf.h	/^    TAG_array_type		= 0x0001,$/;"	e	enum:dwarf_tag
TAG_class_template	dwarf.h	/^    TAG_class_template		= 0x8003   \/* for C++ *\/$/;"	e	enum:dwarf_tag
TAG_class_type	dwarf.h	/^    TAG_class_type		= 0x0002,$/;"	e	enum:dwarf_tag
TAG_common_block	dwarf.h	/^    TAG_common_block		= 0x001a,$/;"	e	enum:dwarf_tag
TAG_common_inclusion	dwarf.h	/^    TAG_common_inclusion	= 0x001b,$/;"	e	enum:dwarf_tag
TAG_compile_unit	dwarf.h	/^    TAG_compile_unit		= 0x0011,$/;"	e	enum:dwarf_tag
TAG_entry_point	dwarf.h	/^    TAG_entry_point		= 0x0003,$/;"	e	enum:dwarf_tag
TAG_enumeration_type	dwarf.h	/^    TAG_enumeration_type	= 0x0004,$/;"	e	enum:dwarf_tag
TAG_formal_parameter	dwarf.h	/^    TAG_formal_parameter	= 0x0005,$/;"	e	enum:dwarf_tag
TAG_format_label	dwarf.h	/^    TAG_format_label		= 0x8000,  \/* for FORTRAN 77 and Fortran 90 *\/$/;"	e	enum:dwarf_tag
TAG_function_template	dwarf.h	/^    TAG_function_template	= 0x8002,  \/* for C++ *\/$/;"	e	enum:dwarf_tag
TAG_global_subroutine	dwarf.h	/^    TAG_global_subroutine	= 0x0006,$/;"	e	enum:dwarf_tag
TAG_global_variable	dwarf.h	/^    TAG_global_variable		= 0x0007,$/;"	e	enum:dwarf_tag
TAG_hi_user	dwarf.h	80;"	d
TAG_inheritance	dwarf.h	/^    TAG_inheritance		= 0x001c,$/;"	e	enum:dwarf_tag
TAG_inlined_subroutine	dwarf.h	/^    TAG_inlined_subroutine	= 0x001d,$/;"	e	enum:dwarf_tag
TAG_label	dwarf.h	/^    TAG_label			= 0x000a,$/;"	e	enum:dwarf_tag
TAG_lexical_block	dwarf.h	/^    TAG_lexical_block		= 0x000b,$/;"	e	enum:dwarf_tag
TAG_lo_user	dwarf.h	79;"	d
TAG_local_variable	dwarf.h	/^    TAG_local_variable		= 0x000c,$/;"	e	enum:dwarf_tag
TAG_member	dwarf.h	/^    TAG_member			= 0x000d,$/;"	e	enum:dwarf_tag
TAG_module	dwarf.h	/^    TAG_module			= 0x001e,$/;"	e	enum:dwarf_tag
TAG_namelist	dwarf.h	/^    TAG_namelist		= 0x8001,  \/* For Fortran 90 *\/$/;"	e	enum:dwarf_tag
TAG_padding	dwarf.h	/^    TAG_padding			= 0x0000,$/;"	e	enum:dwarf_tag
TAG_pointer_type	dwarf.h	/^    TAG_pointer_type		= 0x000f,$/;"	e	enum:dwarf_tag
TAG_ptr_to_member_type	dwarf.h	/^    TAG_ptr_to_member_type	= 0x001f,$/;"	e	enum:dwarf_tag
TAG_reference_type	dwarf.h	/^    TAG_reference_type		= 0x0010,$/;"	e	enum:dwarf_tag
TAG_set_type	dwarf.h	/^    TAG_set_type		= 0x0020,$/;"	e	enum:dwarf_tag
TAG_source_file	dwarf.h	81;"	d
TAG_string_type	dwarf.h	/^    TAG_string_type		= 0x0012,$/;"	e	enum:dwarf_tag
TAG_structure_type	dwarf.h	/^    TAG_structure_type		= 0x0013,$/;"	e	enum:dwarf_tag
TAG_subrange_type	dwarf.h	/^    TAG_subrange_type		= 0x0021,$/;"	e	enum:dwarf_tag
TAG_subroutine	dwarf.h	/^    TAG_subroutine		= 0x0014,$/;"	e	enum:dwarf_tag
TAG_subroutine_type	dwarf.h	/^    TAG_subroutine_type		= 0x0015,$/;"	e	enum:dwarf_tag
TAG_typedef	dwarf.h	/^    TAG_typedef			= 0x0016,$/;"	e	enum:dwarf_tag
TAG_union_type	dwarf.h	/^    TAG_union_type		= 0x0017,$/;"	e	enum:dwarf_tag
TAG_unspecified_parameters	dwarf.h	/^    TAG_unspecified_parameters	= 0x0018,$/;"	e	enum:dwarf_tag
TAG_variant	dwarf.h	/^    TAG_variant			= 0x0019,$/;"	e	enum:dwarf_tag
TAG_with_stmt	dwarf.h	/^    TAG_with_stmt		= 0x0022,$/;"	e	enum:dwarf_tag
TAIL_PRIORITY	haifa-sched.c	197;"	d	file:
TAKEN	cse.c	/^      enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	e	enum:cse_basic_block_data::branch_path::taken	file:
TAKEN	predict.h	/^   TAKEN$/;"	e	enum:prediction
TARGET_128BIT_LONG_DOUBLE	i386.h	175;"	d
TARGET_386	i386.h	202;"	d
TARGET_3DNOW	i386.h	280;"	d
TARGET_3DNOW_A	i386.h	281;"	d
TARGET_486	i386.h	203;"	d
TARGET_64BIT	i386.h	193;"	d
TARGET_64BIT	i386.h	196;"	d
TARGET_64BIT	i386.h	198;"	d
TARGET_64BIT_DEFAULT	biarch64.h	24;"	d
TARGET_80387	i386.h	139;"	d
TARGET_ACCUMULATE_OUTGOING_ARGS	i386.h	155;"	d
TARGET_ADD_ESP_4	i386.h	255;"	d
TARGET_ADD_ESP_8	i386.h	256;"	d
TARGET_ALIGN_DOUBLE	i386.h	149;"	d
TARGET_ALIGN_STRINGOPS	i386.h	269;"	d
TARGET_ALLOWS_PROFILING_WITHOUT_FRAME_POINTER	defaults.h	405;"	d
TARGET_ALLOWS_PROFILING_WITHOUT_FRAME_POINTER	linux.h	72;"	d
TARGET_ALLOWS_PROFILING_WITHOUT_FRAME_POINTER	linux.h	73;"	d
TARGET_ASM_ALIGNED_DI_OP	i386.c	801;"	d	file:
TARGET_ASM_ALIGNED_DI_OP	i386.c	802;"	d	file:
TARGET_ASM_ALIGNED_DI_OP	target-def.h	39;"	d
TARGET_ASM_ALIGNED_HI_OP	i386.c	796;"	d	file:
TARGET_ASM_ALIGNED_HI_OP	i386.c	797;"	d	file:
TARGET_ASM_ALIGNED_HI_OP	target-def.h	37;"	d
TARGET_ASM_ALIGNED_INT_OP	target-def.h	109;"	d
TARGET_ASM_ALIGNED_SI_OP	i386.c	798;"	d	file:
TARGET_ASM_ALIGNED_SI_OP	i386.c	799;"	d	file:
TARGET_ASM_ALIGNED_SI_OP	target-def.h	38;"	d
TARGET_ASM_ALIGNED_TI_OP	target-def.h	40;"	d
TARGET_ASM_BYTE_OP	target-def.h	35;"	d
TARGET_ASM_CLOSE_PAREN	i386.c	793;"	d	file:
TARGET_ASM_CLOSE_PAREN	i386.c	794;"	d	file:
TARGET_ASM_CLOSE_PAREN	target-def.h	34;"	d
TARGET_ASM_CONSTRUCTOR	target-def.h	64;"	d
TARGET_ASM_CONSTRUCTOR	target-def.h	67;"	d
TARGET_ASM_CONSTRUCTOR	target-def.h	69;"	d
TARGET_ASM_CONSTRUCTOR	target-def.h	90;"	d
TARGET_ASM_DESTRUCTOR	target-def.h	76;"	d
TARGET_ASM_DESTRUCTOR	target-def.h	79;"	d
TARGET_ASM_DESTRUCTOR	target-def.h	81;"	d
TARGET_ASM_DESTRUCTOR	target-def.h	91;"	d
TARGET_ASM_EH_FRAME_SECTION	target-def.h	106;"	d
TARGET_ASM_EXCEPTION_SECTION	target-def.h	102;"	d
TARGET_ASM_FUNCTION_BEGIN_EPILOGUE	target-def.h	60;"	d
TARGET_ASM_FUNCTION_END_PROLOGUE	target-def.h	59;"	d
TARGET_ASM_FUNCTION_EPILOGUE	target-def.h	58;"	d
TARGET_ASM_FUNCTION_PROLOGUE	i386.c	787;"	d	file:
TARGET_ASM_FUNCTION_PROLOGUE	i386.c	788;"	d	file:
TARGET_ASM_FUNCTION_PROLOGUE	target-def.h	57;"	d
TARGET_ASM_INTEGER	target-def.h	55;"	d
TARGET_ASM_NAMED_SECTION	elfos.h	323;"	d
TARGET_ASM_NAMED_SECTION	target-def.h	97;"	d
TARGET_ASM_OPEN_PAREN	i386.c	791;"	d	file:
TARGET_ASM_OPEN_PAREN	i386.c	792;"	d	file:
TARGET_ASM_OPEN_PAREN	target-def.h	33;"	d
TARGET_ASM_OUT	target-def.h	121;"	d
TARGET_ASM_UNALIGNED_DI_OP	i386.c	809;"	d	file:
TARGET_ASM_UNALIGNED_DI_OP	i386.c	810;"	d	file:
TARGET_ASM_UNALIGNED_DI_OP	target-def.h	46;"	d
TARGET_ASM_UNALIGNED_DI_OP	target-def.h	51;"	d
TARGET_ASM_UNALIGNED_HI_OP	i386.c	805;"	d	file:
TARGET_ASM_UNALIGNED_HI_OP	i386.c	806;"	d	file:
TARGET_ASM_UNALIGNED_HI_OP	target-def.h	44;"	d
TARGET_ASM_UNALIGNED_HI_OP	target-def.h	49;"	d
TARGET_ASM_UNALIGNED_INT_OP	target-def.h	115;"	d
TARGET_ASM_UNALIGNED_SI_OP	i386.c	807;"	d	file:
TARGET_ASM_UNALIGNED_SI_OP	i386.c	808;"	d	file:
TARGET_ASM_UNALIGNED_SI_OP	target-def.h	45;"	d
TARGET_ASM_UNALIGNED_SI_OP	target-def.h	50;"	d
TARGET_ASM_UNALIGNED_TI_OP	target-def.h	47;"	d
TARGET_ASM_UNALIGNED_TI_OP	target-def.h	52;"	d
TARGET_ATHLON	i386.h	207;"	d
TARGET_ATTRIBUTE_TABLE	i386.c	768;"	d	file:
TARGET_ATTRIBUTE_TABLE	i386.c	769;"	d	file:
TARGET_ATTRIBUTE_TABLE	target-def.h	162;"	d
TARGET_ATTRIBUTE_WEAK	defaults.h	187;"	d
TARGET_ATTRIBUTE_WEAK	defaults.h	189;"	d
TARGET_BELL	defaults.h	28;"	d
TARGET_BI_ARCH	biarch64.h	25;"	d
TARGET_BRANCH_PREDICTION_HINTS	i386.h	237;"	d
TARGET_BS	defaults.h	29;"	d
TARGET_CANNOT_MODIFY_JUMPS_P	target-def.h	179;"	d
TARGET_CMOVE	i386.h	235;"	d
TARGET_COMP_TYPE_ATTRIBUTES	i386.c	775;"	d	file:
TARGET_COMP_TYPE_ATTRIBUTES	i386.c	776;"	d	file:
TARGET_COMP_TYPE_ATTRIBUTES	target-def.h	163;"	d
TARGET_CPU_DEFAULT	config.h	1;"	d
TARGET_CPU_DEFAULT	i386.h	105;"	d
TARGET_CPU_DEFAULT_NAMES	i386.h	509;"	d
TARGET_CPU_DEFAULT_athlon	i386.h	506;"	d
TARGET_CPU_DEFAULT_athlon_sse	i386.h	507;"	d
TARGET_CPU_DEFAULT_i386	i386.h	495;"	d
TARGET_CPU_DEFAULT_i486	i386.h	496;"	d
TARGET_CPU_DEFAULT_k6	i386.h	503;"	d
TARGET_CPU_DEFAULT_k6_2	i386.h	504;"	d
TARGET_CPU_DEFAULT_k6_3	i386.h	505;"	d
TARGET_CPU_DEFAULT_pentium	i386.h	497;"	d
TARGET_CPU_DEFAULT_pentium2	i386.h	500;"	d
TARGET_CPU_DEFAULT_pentium3	i386.h	501;"	d
TARGET_CPU_DEFAULT_pentium4	i386.h	502;"	d
TARGET_CPU_DEFAULT_pentium_mmx	i386.h	498;"	d
TARGET_CPU_DEFAULT_pentiumpro	i386.h	499;"	d
TARGET_CR	defaults.h	34;"	d
TARGET_DEBUG_ADDR	i386.h	186;"	d
TARGET_DEBUG_ARG	i386.h	189;"	d
TARGET_DECOMPOSE_LEA	i386.h	264;"	d
TARGET_DEEP_BRANCH_PREDICTION	i386.h	236;"	d
TARGET_DEFAULT	i386.h	387;"	d
TARGET_DEFAULT	i386.h	389;"	d
TARGET_DOUBLE_WITH_ADD	i386.h	238;"	d
TARGET_EPILOGUE_USING_MOVE	i386.h	263;"	d
TARGET_ESC	defaults.h	35;"	d
TARGET_EXPAND_BUILTIN	i386.c	781;"	d	file:
TARGET_EXPAND_BUILTIN	i386.c	782;"	d	file:
TARGET_EXPAND_BUILTIN	target-def.h	171;"	d
TARGET_EXPR_CHECK	tree-check.h	56;"	d
TARGET_FF	defaults.h	33;"	d
TARGET_FLOAT_FORMAT	real.h	35;"	d
TARGET_FLOAT_RETURNS_IN_80387	i386.h	170;"	d
TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P	target-def.h	166;"	d
TARGET_HASH_PRIME	resource.c	51;"	d	file:
TARGET_HAS_F_SETLKW	svr4.h	232;"	d
TARGET_HAVE_CTORS_DTORS	target-def.h	87;"	d
TARGET_HAVE_CTORS_DTORS	target-def.h	89;"	d
TARGET_HAVE_NAMED_SECTIONS	target-def.h	95;"	d
TARGET_HAVE_NAMED_SECTIONS	target-def.h	98;"	d
TARGET_HIMODE_MATH	i386.h	252;"	d
TARGET_IEEE_FP	i386.h	165;"	d
TARGET_INITIALIZER	target-def.h	182;"	d
TARGET_INIT_BUILTINS	i386.c	778;"	d	file:
TARGET_INIT_BUILTINS	i386.c	779;"	d	file:
TARGET_INIT_BUILTINS	target-def.h	170;"	d
TARGET_INLINE_ALL_STRINGOPS	i386.h	270;"	d
TARGET_INSERT_ATTRIBUTES	target-def.h	165;"	d
TARGET_INTEGER_DFMODE_MOVES	i386.h	259;"	d
TARGET_K6	i386.h	206;"	d
TARGET_MEMORY_MISMATCH_STALL	i386.h	261;"	d
TARGET_MEM_FUNCTIONS	elfos.h	55;"	d
TARGET_MERGE_DECL_ATTRIBUTES	i386.c	771;"	d	file:
TARGET_MERGE_DECL_ATTRIBUTES	i386.c	772;"	d	file:
TARGET_MERGE_DECL_ATTRIBUTES	target-def.h	160;"	d
TARGET_MERGE_TYPE_ATTRIBUTES	target-def.h	161;"	d
TARGET_MIX_SSE_I387	i386.h	277;"	d
TARGET_MMX	i386.h	279;"	d
TARGET_MOVX	i386.h	240;"	d
TARGET_MS_BITFIELD_LAYOUT_P	target-def.h	167;"	d
TARGET_NAME	toplev.c	4408;"	d	file:
TARGET_NEWLINE	defaults.h	31;"	d
TARGET_NO_FANCY_MATH_387	i386.h	179;"	d
TARGET_OBJECT_SUFFIX	mkdeps.c	192;"	d	file:
TARGET_OMIT_LEAF_FRAME_POINTER	i386.h	182;"	d
TARGET_OPTIONS	i386.h	426;"	d
TARGET_PARTIAL_REG_DEPENDENCY	i386.h	260;"	d
TARGET_PARTIAL_REG_STALL	i386.h	241;"	d
TARGET_PENTIUM	i386.h	204;"	d
TARGET_PENTIUM4	i386.h	208;"	d
TARGET_PENTIUMPRO	i386.h	205;"	d
TARGET_PREFETCH_SSE	i386.h	265;"	d
TARGET_PROLOGUE_USING_MOVE	i386.h	262;"	d
TARGET_PROMOTE_HI_REGS	i386.h	254;"	d
TARGET_PROMOTE_QI_REGS	i386.h	253;"	d
TARGET_PROMOTE_QImode	i386.h	249;"	d
TARGET_PTRMEMFUNC_VBIT_LOCATION	defaults.h	396;"	d
TARGET_PUSH_ARGS	i386.h	152;"	d
TARGET_PUSH_MEMORY	i386.h	229;"	d
TARGET_QIMODE_MATH	i386.h	251;"	d
TARGET_READ_MODIFY	i386.h	248;"	d
TARGET_READ_MODIFY_WRITE	i386.h	247;"	d
TARGET_RED_ZONE	i386.h	283;"	d
TARGET_RTD	i386.h	144;"	d
TARGET_SCHED	target-def.h	149;"	d
TARGET_SCHED_ADJUST_COST	i386.c	812;"	d	file:
TARGET_SCHED_ADJUST_COST	i386.c	813;"	d	file:
TARGET_SCHED_ADJUST_COST	target-def.h	139;"	d
TARGET_SCHED_ADJUST_PRIORITY	target-def.h	140;"	d
TARGET_SCHED_CYCLE_DISPLAY	target-def.h	147;"	d
TARGET_SCHED_FINISH	target-def.h	144;"	d
TARGET_SCHED_INIT	i386.c	818;"	d	file:
TARGET_SCHED_INIT	i386.c	819;"	d	file:
TARGET_SCHED_INIT	target-def.h	143;"	d
TARGET_SCHED_ISSUE_RATE	i386.c	814;"	d	file:
TARGET_SCHED_ISSUE_RATE	i386.c	815;"	d	file:
TARGET_SCHED_ISSUE_RATE	target-def.h	141;"	d
TARGET_SCHED_REORDER	i386.c	820;"	d	file:
TARGET_SCHED_REORDER	i386.c	821;"	d	file:
TARGET_SCHED_REORDER	target-def.h	145;"	d
TARGET_SCHED_REORDER2	target-def.h	146;"	d
TARGET_SCHED_VARIABLE_ISSUE	i386.c	816;"	d	file:
TARGET_SCHED_VARIABLE_ISSUE	i386.c	817;"	d	file:
TARGET_SCHED_VARIABLE_ISSUE	target-def.h	142;"	d
TARGET_SECTION_TYPE_FLAGS	target-def.h	175;"	d
TARGET_SET_DEFAULT_TYPE_ATTRIBUTES	target-def.h	164;"	d
TARGET_SINGLE_STRINGOP	i386.h	250;"	d
TARGET_SPLIT_LONG_MOVES	i386.h	246;"	d
TARGET_SSE	i386.h	274;"	d
TARGET_SSE2	i386.h	275;"	d
TARGET_SSE_MATH	i386.h	276;"	d
TARGET_STACK_PROBE	i386.h	267;"	d
TARGET_SUBTARGET_DEFAULT	unix.h	70;"	d
TARGET_SUB_ESP_4	i386.h	257;"	d
TARGET_SUB_ESP_8	i386.h	258;"	d
TARGET_SVR3_SHLIB	i386.h	160;"	d
TARGET_SWITCHES	i386.h	290;"	d
TARGET_TAB	defaults.h	30;"	d
TARGET_UNROLL_STRLEN	i386.h	232;"	d
TARGET_USE_BIT_TEST	i386.h	231;"	d
TARGET_USE_CLTD	i386.h	245;"	d
TARGET_USE_FIOP	i386.h	243;"	d
TARGET_USE_LEAVE	i386.h	228;"	d
TARGET_USE_LOOP	i386.h	242;"	d
TARGET_USE_MOV0	i386.h	244;"	d
TARGET_USE_SAHF	i386.h	239;"	d
TARGET_VERSION	att.h	24;"	d
TARGET_VERSION	linux.h	36;"	d
TARGET_VERSION	linux.h	37;"	d
TARGET_VERSION	linux64.h	24;"	d
TARGET_VERSION	linux64.h	25;"	d
TARGET_VT	defaults.h	32;"	d
TARGET_VTABLE_USES_DESCRIPTORS	defaults.h	380;"	d
TARGET_ZERO_EXTEND_WITH_AND	i386.h	230;"	d
TBB	dominance.c	/^typedef unsigned int TBB;$/;"	t	file:
TDF_ADDRESS	tree.h	3160;"	d
TDF_SLIM	tree.h	3161;"	d
TDI_all	tree.h	/^  TDI_all,			\/* dump the whole translation unit *\/$/;"	e	enum:tree_dump_index
TDI_class	tree.h	/^  TDI_class,			\/* dump class hierarchy *\/$/;"	e	enum:tree_dump_index
TDI_end	tree.h	/^  TDI_end$/;"	e	enum:tree_dump_index
TDI_inlined	tree.h	/^  TDI_inlined,			\/* dump each function after inlining$/;"	e	enum:tree_dump_index
TDI_optimized	tree.h	/^  TDI_optimized,		\/* dump each function after optimizing it *\/$/;"	e	enum:tree_dump_index
TDI_original	tree.h	/^  TDI_original,			\/* dump each function before optimizing it *\/$/;"	e	enum:tree_dump_index
TEST_BIT	sbitmap.h	50;"	d
TEST_HARD_REG_BIT	hard-reg-set.h	124;"	d
TEST_HARD_REG_BIT	hard-reg-set.h	94;"	d
TEST_THRESHOLD	cppfiles.c	37;"	d	file:
TEXT_BEGIN_LABEL	dwarfout.c	1037;"	d	file:
TEXT_END_LABEL	dwarf2out.c	3762;"	d	file:
TEXT_END_LABEL	dwarfout.c	1040;"	d	file:
TEXT_END_LABEL	vmsdbgout.c	258;"	d	file:
TEXT_SECTION_ASM_OP	unix.h	51;"	d
TEXT_SECTION_LABEL	dwarf2out.c	3725;"	d	file:
TEXT_SECTION_NAME	dwarf2out.c	3710;"	d	file:
TEXT_SECTION_NAME	dwarfout.c	1000;"	d	file:
TEX_LL	c-format.c	717;"	d	file:
TEX_ULL	c-format.c	727;"	d	file:
TEX_W	c-format.c	749;"	d	file:
TEX_WI	c-format.c	752;"	d	file:
TFbignan	real.c	/^static const UEMUSHORT TFbignan[8] =$/;"	v	file:
TFlittlenan	real.c	/^static const UEMUSHORT TFlittlenan[8] = {0, 0, 0, 0, 0, 0, 0x8000, 0xffff};$/;"	v	file:
THEN_CLAUSE	c-common.h	578;"	d
THRESH	ucbqsort.c	13;"	d	file:
TICKS_PER_SECOND	timevar.c	65;"	d	file:
TICKS_PER_SECOND	timevar.c	68;"	d	file:
TICKS_PER_SECOND	timevar.c	71;"	d	file:
TICKS_PER_SECOND	timevar.c	73;"	d	file:
TICKS_TO_MSEC	timevar.c	104;"	d	file:
TIMEVAR_ENABLE	timevar.c	118;"	d	file:
TIMEVAR_LAST	timevar.h	/^  TIMEVAR_LAST$/;"	e	enum:__anon66
TI_BITSIZE_ONE	tree.h	/^  TI_BITSIZE_ONE,$/;"	e	enum:tree_index
TI_BITSIZE_UNIT	tree.h	/^  TI_BITSIZE_UNIT,$/;"	e	enum:tree_index
TI_BITSIZE_ZERO	tree.h	/^  TI_BITSIZE_ZERO,$/;"	e	enum:tree_index
TI_COMPLEX_DOUBLE_TYPE	tree.h	/^  TI_COMPLEX_DOUBLE_TYPE,$/;"	e	enum:tree_index
TI_COMPLEX_FLOAT_TYPE	tree.h	/^  TI_COMPLEX_FLOAT_TYPE,$/;"	e	enum:tree_index
TI_COMPLEX_INTEGER_TYPE	tree.h	/^  TI_COMPLEX_INTEGER_TYPE,$/;"	e	enum:tree_index
TI_COMPLEX_LONG_DOUBLE_TYPE	tree.h	/^  TI_COMPLEX_LONG_DOUBLE_TYPE,$/;"	e	enum:tree_index
TI_CONST_PTR_TYPE	tree.h	/^  TI_CONST_PTR_TYPE,$/;"	e	enum:tree_index
TI_DOUBLE_TYPE	tree.h	/^  TI_DOUBLE_TYPE,$/;"	e	enum:tree_index
TI_ERROR_MARK	tree.h	/^  TI_ERROR_MARK,$/;"	e	enum:tree_index
TI_FLOAT_TYPE	tree.h	/^  TI_FLOAT_TYPE,$/;"	e	enum:tree_index
TI_INTDI_TYPE	tree.h	/^  TI_INTDI_TYPE,$/;"	e	enum:tree_index
TI_INTEGER_MINUS_ONE	tree.h	/^  TI_INTEGER_MINUS_ONE,$/;"	e	enum:tree_index
TI_INTEGER_ONE	tree.h	/^  TI_INTEGER_ONE,$/;"	e	enum:tree_index
TI_INTEGER_ZERO	tree.h	/^  TI_INTEGER_ZERO,$/;"	e	enum:tree_index
TI_INTHI_TYPE	tree.h	/^  TI_INTHI_TYPE,$/;"	e	enum:tree_index
TI_INTQI_TYPE	tree.h	/^  TI_INTQI_TYPE,$/;"	e	enum:tree_index
TI_INTSI_TYPE	tree.h	/^  TI_INTSI_TYPE,$/;"	e	enum:tree_index
TI_INTTI_TYPE	tree.h	/^  TI_INTTI_TYPE,$/;"	e	enum:tree_index
TI_LONG_DOUBLE_TYPE	tree.h	/^  TI_LONG_DOUBLE_TYPE,$/;"	e	enum:tree_index
TI_MAIN_IDENTIFIER	tree.h	/^  TI_MAIN_IDENTIFIER,$/;"	e	enum:tree_index
TI_MAX	tree.h	/^  TI_MAX$/;"	e	enum:tree_index
TI_NULL_POINTER	tree.h	/^  TI_NULL_POINTER,$/;"	e	enum:tree_index
TI_PTRDIFF_TYPE	tree.h	/^  TI_PTRDIFF_TYPE,$/;"	e	enum:tree_index
TI_PTR_TYPE	tree.h	/^  TI_PTR_TYPE,$/;"	e	enum:tree_index
TI_SIZE_ONE	tree.h	/^  TI_SIZE_ONE,$/;"	e	enum:tree_index
TI_SIZE_ZERO	tree.h	/^  TI_SIZE_ZERO,$/;"	e	enum:tree_index
TI_UINTDI_TYPE	tree.h	/^  TI_UINTDI_TYPE,$/;"	e	enum:tree_index
TI_UINTHI_TYPE	tree.h	/^  TI_UINTHI_TYPE,$/;"	e	enum:tree_index
TI_UINTQI_TYPE	tree.h	/^  TI_UINTQI_TYPE,$/;"	e	enum:tree_index
TI_UINTSI_TYPE	tree.h	/^  TI_UINTSI_TYPE,$/;"	e	enum:tree_index
TI_UINTTI_TYPE	tree.h	/^  TI_UINTTI_TYPE,$/;"	e	enum:tree_index
TI_UV16QI_TYPE	tree.h	/^  TI_UV16QI_TYPE,$/;"	e	enum:tree_index
TI_UV2SF_TYPE	tree.h	/^  TI_UV2SF_TYPE,$/;"	e	enum:tree_index
TI_UV2SI_TYPE	tree.h	/^  TI_UV2SI_TYPE,$/;"	e	enum:tree_index
TI_UV4HI_TYPE	tree.h	/^  TI_UV4HI_TYPE,$/;"	e	enum:tree_index
TI_UV4SF_TYPE	tree.h	/^  TI_UV4SF_TYPE,$/;"	e	enum:tree_index
TI_UV4SI_TYPE	tree.h	/^  TI_UV4SI_TYPE,$/;"	e	enum:tree_index
TI_UV8HI_TYPE	tree.h	/^  TI_UV8HI_TYPE,$/;"	e	enum:tree_index
TI_UV8QI_TYPE	tree.h	/^  TI_UV8QI_TYPE,$/;"	e	enum:tree_index
TI_V16QI_TYPE	tree.h	/^  TI_V16QI_TYPE,$/;"	e	enum:tree_index
TI_V16SF_TYPE	tree.h	/^  TI_V16SF_TYPE,$/;"	e	enum:tree_index
TI_V2SF_TYPE	tree.h	/^  TI_V2SF_TYPE,$/;"	e	enum:tree_index
TI_V2SI_TYPE	tree.h	/^  TI_V2SI_TYPE,$/;"	e	enum:tree_index
TI_V4HI_TYPE	tree.h	/^  TI_V4HI_TYPE,$/;"	e	enum:tree_index
TI_V4SF_TYPE	tree.h	/^  TI_V4SF_TYPE,$/;"	e	enum:tree_index
TI_V4SI_TYPE	tree.h	/^  TI_V4SI_TYPE,$/;"	e	enum:tree_index
TI_V8HI_TYPE	tree.h	/^  TI_V8HI_TYPE,$/;"	e	enum:tree_index
TI_V8QI_TYPE	tree.h	/^  TI_V8QI_TYPE,$/;"	e	enum:tree_index
TI_VA_LIST_TYPE	tree.h	/^  TI_VA_LIST_TYPE,$/;"	e	enum:tree_index
TI_VOID_LIST_NODE	tree.h	/^  TI_VOID_LIST_NODE,$/;"	e	enum:tree_index
TI_VOID_TYPE	tree.h	/^  TI_VOID_TYPE,$/;"	e	enum:tree_index
TK	cpplex.c	62;"	d	file:
TK	cpplex.c	65;"	d	file:
TK	cpplib.h	142;"	d
TK	cpplib.h	149;"	d
TLOSS	real.c	1536;"	d	file:
TOKEN_NAME	cpplex.c	68;"	d	file:
TOKEN_SPELL	cpplex.c	67;"	d	file:
TOLOWER	safe-ctype.h	100;"	d
TOPLEVEL_COSTS_N_INSNS	i386.h	2419;"	d
TOTAL_PARTS	c-lex.c	855;"	d	file:
TOUPPER	safe-ctype.h	99;"	d
TO_BLOCK	sched-rgn.c	103;"	d	file:
TRAMPOLINE_ALIGNMENT	function.c	64;"	d	file:
TRAMPOLINE_ALIGNMENT	varasm.c	57;"	d	file:
TRAMPOLINE_SIZE	i386.h	1801;"	d
TRAP_CODE	rtl.h	994;"	d
TRAP_CONDITION	rtl.h	993;"	d
TRAP_FREE	sched-rgn.c	/^  TRAP_FREE = 0, IFREE = 1, PFREE_CANDIDATE = 2,$/;"	e	enum:INSN_TRAP_CLASS	file:
TRAP_RISKY	sched-rgn.c	/^  PRISKY_CANDIDATE = 3, IRISKY = 4, TRAP_RISKY = 5$/;"	e	enum:INSN_TRAP_CLASS	file:
TREE_ADDRESSABLE	tree.h	502;"	d
TREE_ASM_WRITTEN	tree.h	610;"	d
TREE_BOUNDED	tree.h	668;"	d
TREE_CHAIN	tree.h	357;"	d
TREE_CHECK	tree.h	287;"	d
TREE_CHECK	tree.h	325;"	d
TREE_CLASS_CHECK	tree.h	292;"	d
TREE_CLASS_CHECK	tree.h	326;"	d
TREE_CODE	tree.h	279;"	d
TREE_CODE_CLASS	tree.h	50;"	d
TREE_CODE_LENGTH	tree.h	61;"	d
TREE_COMPLEXITY	tree.h	847;"	d
TREE_CONSTANT	tree.h	593;"	d
TREE_CONSTANT_OVERFLOW	tree.h	526;"	d
TREE_CST_RTL	tree.h	723;"	d
TREE_DEPRECATED	tree.h	672;"	d
TREE_EXPR_QUALS	tree.h	1096;"	d
TREE_FUNC_QUALS	tree.h	1102;"	d
TREE_IMAGPART	tree.h	755;"	d
TREE_INT_CST	tree.h	689;"	d
TREE_INT_CST_HIGH	tree.h	691;"	d
TREE_INT_CST_LOW	tree.h	690;"	d
TREE_LANG_FLAG_0	tree.h	675;"	d
TREE_LANG_FLAG_1	tree.h	676;"	d
TREE_LANG_FLAG_2	tree.h	677;"	d
TREE_LANG_FLAG_3	tree.h	678;"	d
TREE_LANG_FLAG_4	tree.h	679;"	d
TREE_LANG_FLAG_5	tree.h	680;"	d
TREE_LANG_FLAG_6	tree.h	681;"	d
TREE_LIST_CHECK	tree-check.h	8;"	d
TREE_NOTHROW	tree.h	620;"	d
TREE_NO_UNUSED_WARNING	tree.h	516;"	d
TREE_OPERAND	tree.h	846;"	d
TREE_OVERFLOW	tree.h	537;"	d
TREE_PRIVATE	tree.h	631;"	d
TREE_PROTECTED	tree.h	634;"	d
TREE_PUBLIC	tree.h	544;"	d
TREE_PURPOSE	tree.h	798;"	d
TREE_READONLY	tree.h	584;"	d
TREE_READONLY_DECL_P	tree.h	587;"	d
TREE_REALPART	tree.h	754;"	d
TREE_REAL_CST	tree.h	730;"	d
TREE_SET_CODE	tree.h	280;"	d
TREE_SIDE_EFFECTS	tree.h	565;"	d
TREE_STATIC	tree.h	507;"	d
TREE_STRING_LENGTH	tree.h	742;"	d
TREE_STRING_POINTER	tree.h	743;"	d
TREE_SYMBOL_REFERENCED	tree.h	530;"	d
TREE_THIS_VOLATILE	tree.h	577;"	d
TREE_TYPE	tree.h	342;"	d
TREE_UNSIGNED	tree.h	598;"	d
TREE_USED	tree.h	616;"	d
TREE_VALUE	tree.h	799;"	d
TREE_VECTOR_CST_ELTS	tree.h	766;"	d
TREE_VEC_CHECK	tree-check.h	9;"	d
TREE_VEC_ELT	tree.h	810;"	d
TREE_VEC_END	tree.h	811;"	d
TREE_VEC_LENGTH	tree.h	809;"	d
TREE_VIA_PRIVATE	tree.h	552;"	d
TREE_VIA_PROTECTED	tree.h	558;"	d
TREE_VIA_PUBLIC	tree.h	549;"	d
TREE_VIA_VIRTUAL	tree.h	520;"	d
TRIGRAPH_MAP	cppinit.c	133;"	d	file:
TRIGRAPH_MAP	cppinit.c	141;"	d	file:
TRIGRAPH_MAP	cppinit.c	158;"	d	file:
TRUE	system.h	551;"	d
TRUE	system.h	565;"	d
TRULY_NOOP_TRUNCATION	i386.h	2345;"	d
TRUNC_DIV_EXPR_CHECK	tree-check.h	68;"	d
TRUNC_MOD_EXPR_CHECK	tree-check.h	72;"	d
TRUTH_ANDIF_EXPR_CHECK	tree-check.h	97;"	d
TRUTH_AND_EXPR_CHECK	tree-check.h	99;"	d
TRUTH_NOT_EXPR_CHECK	tree-check.h	102;"	d
TRUTH_ORIF_EXPR_CHECK	tree-check.h	98;"	d
TRUTH_OR_EXPR_CHECK	tree-check.h	100;"	d
TRUTH_XOR_EXPR_CHECK	tree-check.h	101;"	d
TRY_CATCH_EXPR_CHECK	tree-check.h	140;"	d
TRY_FINALLY_EXPR_CHECK	tree-check.h	141;"	d
TTYPE_TABLE	cpplib.h	/^  TTYPE_TABLE$/;"	e	enum:cpp_ttype
TTYPE_TABLE	cpplib.h	62;"	d
TYPENAME	c-decl.c	/^  TYPENAME};			\/* Typename (inside cast or sizeof)  *\/$/;"	e	enum:decl_context	file:
TYPENAME	c-parse.c	8;"	d	file:
TYPEOF	c-parse.c	32;"	d	file:
TYPESPEC	c-parse.c	10;"	d	file:
TYPES_COMPATIBLE_P	c-parse.c	41;"	d	file:
TYPE_ACTUAL_ARG_TYPES	c-tree.h	147;"	d
TYPE_ALIAS_SET	tree.h	1012;"	d
TYPE_ALIAS_SET_KNOWN_P	tree.h	1016;"	d
TYPE_ALIGN	tree.h	1024;"	d
TYPE_ALIGN_OK	tree.h	628;"	d
TYPE_ALIGN_UNIT	tree.h	1031;"	d
TYPE_ALU	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_ALU1	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_AMBIENT_BOUNDEDNESS	tree.h	1202;"	d
TYPE_ARG_TYPES	tree.h	961;"	d
TYPE_ARRAY_MAX_SIZE	tree.h	1123;"	d
TYPE_ASM_OP	elfos.h	417;"	d
TYPE_ATTRIBUTES	tree.h	1020;"	d
TYPE_BINFO	tree.h	1005;"	d
TYPE_BINFO_BASETYPE	tree.h	1314;"	d
TYPE_BINFO_BASETYPES	tree.h	1306;"	d
TYPE_BINFO_OFFSET	tree.h	1278;"	d
TYPE_BINFO_SIZE	tree.h	1330;"	d
TYPE_BINFO_SIZE_UNIT	tree.h	1331;"	d
TYPE_BINFO_VIRTUALS	tree.h	1292;"	d
TYPE_BINFO_VTABLE	tree.h	1286;"	d
TYPE_BOUNDED	tree.h	1076;"	d
TYPE_BOUNDED_BASE	tree.h	1162;"	d
TYPE_BOUNDED_EXTENT	tree.h	1163;"	d
TYPE_BOUNDED_SUBTYPE	tree.h	1166;"	d
TYPE_BOUNDED_VALUE	tree.h	1161;"	d
TYPE_CALL	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_CALLV	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_CHECK	tree.h	334;"	d
TYPE_CLD	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_CONTEXT	tree.h	974;"	d
TYPE_DEBUG_REPRESENTATION_TYPE	tree.h	980;"	d
TYPE_DECL_CHECK	tree-check.h	39;"	d
TYPE_DECL_IS_STUB	dwarf2out.c	3225;"	d	file:
TYPE_DECL_IS_STUB	dwarfout.c	628;"	d	file:
TYPE_DECL_SUPPRESS_DEBUG	tree.h	1583;"	d
TYPE_DEFINED	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	e	enum:typestatus	file:
TYPE_DOMAIN	tree.h	957;"	d
TYPE_FCMOV	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FCMP	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FDIV	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FIELDS	tree.h	958;"	d
TYPE_FISTP	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FMOV	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FMUL	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FOP	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FOP1	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FPSPC	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FSGN	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_FXCH	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_HASH	tree.h	346;"	d
TYPE_HASH_INITIAL_SIZE	tree.c	147;"	d	file:
TYPE_IBR	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_ICMOV	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_ICMP	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_IDIV	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_IMOV	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_IMOVX	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_IMUL	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_INCDEC	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_ISHIFT	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_IS_SIZETYPE	tree.h	1055;"	d
TYPE_KIND_LAST	tree.h	/^  TYPE_KIND_LAST};$/;"	e	enum:size_type_kind
TYPE_LANG_FLAG_0	tree.h	1107;"	d
TYPE_LANG_FLAG_1	tree.h	1108;"	d
TYPE_LANG_FLAG_2	tree.h	1109;"	d
TYPE_LANG_FLAG_3	tree.h	1110;"	d
TYPE_LANG_FLAG_4	tree.h	1111;"	d
TYPE_LANG_FLAG_5	tree.h	1112;"	d
TYPE_LANG_FLAG_6	tree.h	1113;"	d
TYPE_LANG_SPECIFIC	tree.h	975;"	d
TYPE_LEA	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_MAIN_PHYSICAL_VARIANT	tree.h	997;"	d
TYPE_MAIN_VARIANT	tree.h	973;"	d
TYPE_MAIN_VARIANTS_PHYSICALLY_EQUAL_P	tree.h	991;"	d
TYPE_MAX_VALUE	tree.h	967;"	d
TYPE_METHODS	tree.h	959;"	d
TYPE_METHOD_BASETYPE	tree.h	962;"	d
TYPE_MIN_VALUE	tree.h	966;"	d
TYPE_MMX	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_MODE	tree.h	955;"	d
TYPE_MULTI	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_NAME	tree.h	971;"	d
TYPE_NAME_FMT	dwarfout.c	1175;"	d	file:
TYPE_NEEDS_CONSTRUCTING	tree.h	1132;"	d
TYPE_NEGNOT	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_NEXT_VARIANT	tree.h	972;"	d
TYPE_NONALIASED_COMPONENT	tree.h	1142;"	d
TYPE_NO_FORCE_BLK	tree.h	1045;"	d
TYPE_OFFSET_BASETYPE	tree.h	963;"	d
TYPE_OPERAND_FMT	elfos.h	437;"	d
TYPE_OTHER	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_P	tree.h	483;"	d
TYPE_PACKED	tree.h	1147;"	d
TYPE_POINTER_DEPTH	tree.h	1196;"	d
TYPE_POINTER_TO	tree.h	964;"	d
TYPE_POP	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_PRECISION	tree.h	968;"	d
TYPE_PUSH	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_QUAL	c-parse.c	11;"	d	file:
TYPE_QUALS	tree.h	1089;"	d
TYPE_QUAL_BOUNDED	tree.h	1086;"	d
TYPE_QUAL_CONST	tree.h	1083;"	d
TYPE_QUAL_RESTRICT	tree.h	1085;"	d
TYPE_QUAL_VOLATILE	tree.h	1084;"	d
TYPE_READONLY	tree.h	1067;"	d
TYPE_REFERENCE_TO	tree.h	965;"	d
TYPE_RESTRICT	tree.h	1071;"	d
TYPE_RETURNS_STACK_DEPRESSED	tree.h	1060;"	d
TYPE_SETCC	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_SIZE	tree.h	953;"	d
TYPE_SIZE_UNIT	tree.h	954;"	d
TYPE_SSE	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_STR	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_STRING_FLAG	tree.h	1118;"	d
TYPE_STUB_DECL	tree.h	1040;"	d
TYPE_SYMTAB_ADDRESS	tree.h	969;"	d
TYPE_SYMTAB_POINTER	tree.h	970;"	d
TYPE_TEST	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	e	enum:attr_type
TYPE_TRANSPARENT_UNION	tree.h	1137;"	d
TYPE_TRAP_SIGNED	tree.h	600;"	d
TYPE_UID	tree.h	952;"	d
TYPE_UNBOUNDED_VARIANT	tree.h	1170;"	d
TYPE_UNQUALIFIED	tree.h	1082;"	d
TYPE_UNSEEN	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	e	enum:typestatus	file:
TYPE_USED_FOR_FUNCTION	dwarfout.c	617;"	d	file:
TYPE_USER_ALIGN	tree.h	1028;"	d
TYPE_VALUES	tree.h	956;"	d
TYPE_VECTOR_SUBPARTS	tree.h	1127;"	d
TYPE_VFIELD	tree.h	960;"	d
TYPE_VOLATILE	tree.h	1064;"	d
TYPE_XREF	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	e	enum:typestatus	file:
T_ARG	gsyms.h	/^  T_ARG = 1,$/;"	e	enum:sdb_type
T_C	c-format.c	739;"	d	file:
T_CHAR	gsyms.h	/^  T_CHAR = 2,$/;"	e	enum:sdb_type
T_D	c-format.c	733;"	d	file:
T_DOUBLE	gsyms.h	/^  T_DOUBLE = 7,$/;"	e	enum:sdb_type
T_ENUM	gsyms.h	/^  T_ENUM = 10,$/;"	e	enum:sdb_type
T_F	c-format.c	730;"	d	file:
T_FLOAT	gsyms.h	/^  T_FLOAT = 6,$/;"	e	enum:sdb_type
T_I	c-format.c	710;"	d	file:
T_IM	c-format.c	761;"	d	file:
T_INT	gsyms.h	/^  T_INT = 4,$/;"	e	enum:sdb_type
T_L	c-format.c	713;"	d	file:
T_LD	c-format.c	736;"	d	file:
T_LL	c-format.c	715;"	d	file:
T_LNGDBL	gsyms.h	/^  , T_LNGDBL = 16$/;"	e	enum:sdb_type
T_LONG	gsyms.h	/^  T_LONG = 5,$/;"	e	enum:sdb_type
T_MOE	gsyms.h	/^  T_MOE = 11,$/;"	e	enum:sdb_type
T_NULL	gsyms.h	/^  T_NULL = 0,$/;"	e	enum:sdb_type
T_PD	c-format.c	757;"	d	file:
T_S	c-format.c	718;"	d	file:
T_SC	c-format.c	741;"	d	file:
T_SHORT	gsyms.h	/^  T_SHORT = 3,$/;"	e	enum:sdb_type
T_SST	c-format.c	755;"	d	file:
T_ST	c-format.c	753;"	d	file:
T_STRUCT	gsyms.h	/^  T_STRUCT = 8,$/;"	e	enum:sdb_type
T_UC	c-format.c	743;"	d	file:
T_UCHAR	gsyms.h	/^  T_UCHAR = 12,$/;"	e	enum:sdb_type
T_UI	c-format.c	720;"	d	file:
T_UIM	c-format.c	763;"	d	file:
T_UINT	gsyms.h	/^  T_UINT = 14,$/;"	e	enum:sdb_type
T_UL	c-format.c	723;"	d	file:
T_ULL	c-format.c	725;"	d	file:
T_ULONG	gsyms.h	/^  T_ULONG = 15$/;"	e	enum:sdb_type
T_UNION	gsyms.h	/^  T_UNION = 9,$/;"	e	enum:sdb_type
T_UPD	c-format.c	759;"	d	file:
T_US	c-format.c	728;"	d	file:
T_USHORT	gsyms.h	/^  T_USHORT = 13,$/;"	e	enum:sdb_type
T_V	c-format.c	745;"	d	file:
T_VOID	gsyms.h	/^  T_VOID = 1,$/;"	e	enum:sdb_type
T_W	c-format.c	747;"	d	file:
T_WI	c-format.c	750;"	d	file:
U	cpphash.h	430;"	d
U	safe-ctype.c	53;"	d	file:
UBITSIZETYPE	tree.h	/^  UBITSIZETYPE,	        \/* Unsifgned representation of sizes in bits.  *\/$/;"	e	enum:size_type_kind
UCHAR_MAX	system.h	196;"	d
UEMUSHORT	real.c	224;"	d	file:
UHItype	real.c	/^typedef unsigned int UHItype __attribute__ ((mode (HI)));$/;"	t	file:
UHOST_BITS_PER_WIDE_INT	hard-reg-set.h	114;"	d
UINTMAX_TYPE	c-common.c	76;"	d	file:
ULP	cppinit.c	633;"	d	file:
ULP	cppinit.c	796;"	d	file:
UNALIGNED_DOUBLE_INT_ASM_OP	vmsdbgout.c	219;"	d	file:
UNALIGNED_DOUBLE_INT_ASM_OP	vmsdbgout.c	221;"	d	file:
UNALIGNED_INT_ASM_OP	vmsdbgout.c	209;"	d	file:
UNALIGNED_INT_ASM_OP	vmsdbgout.c	211;"	d	file:
UNALIGNED_LONG_ASM_OP	vmsdbgout.c	214;"	d	file:
UNALIGNED_LONG_ASM_OP	vmsdbgout.c	216;"	d	file:
UNALIGNED_OFFSET_ASM_OP	vmsdbgout.c	238;"	d	file:
UNALIGNED_PTR_ASM_OP	vmsdbgout.c	233;"	d	file:
UNALIGNED_SHORT_ASM_OP	vmsdbgout.c	204;"	d	file:
UNALIGNED_SHORT_ASM_OP	vmsdbgout.c	206;"	d	file:
UNARY	c-parse.c	54;"	d	file:
UNARY	cppexp.c	541;"	d	file:
UNARY_PRIO	cppexp.c	489;"	d	file:
UNDEFINED	ssa-ccp.c	/^  UNDEFINED,$/;"	e	enum:__anon74	file:
UNDERFLOW	real.c	1535;"	d	file:
UNEQ_EXPR_CHECK	tree-check.h	115;"	d
UNGE_EXPR_CHECK	tree-check.h	114;"	d
UNGT_EXPR_CHECK	tree-check.h	113;"	d
UNION	c-parse.c	18;"	d	file:
UNION	df.h	/^    UNION,$/;"	e	enum:df_confluence_op
UNION_INIT_ZERO	system.h	526;"	d
UNION_INIT_ZERO	system.h	528;"	d
UNION_TYPE_CHECK	tree-check.h	27;"	d
UNIQUE_SECTION	defaults.h	233;"	d
UNIQUE_SECTION	elfos.h	283;"	d
UNITS_PER_WORD	i386.h	735;"	d
UNIT_BITS	sched-int.h	233;"	d
UNIT_BLOCKED	sched-int.h	239;"	d
UNK	real.c	137;"	d	file:
UNKNOWN_FLOAT_FORMAT	real.h	26;"	d
UNKNOWN_INDUCT	loop.h	/^  UNKNOWN_INDUCT,$/;"	e	enum:iv_mode
UNKNOWN_STAB	xcoffout.c	173;"	d	file:
UNLE_EXPR_CHECK	tree-check.h	112;"	d
UNLT_EXPR_CHECK	tree-check.h	111;"	d
UNNECESSARY_P	ssa-dce.c	126;"	d	file:
UNORDERED_EXPR_CHECK	tree-check.h	109;"	d
UNROLL_COMPLETELY	unroll.c	/^  UNROLL_COMPLETELY,$/;"	e	enum:unroll_types	file:
UNROLL_MODULO	unroll.c	/^  UNROLL_MODULO,$/;"	e	enum:unroll_types	file:
UNROLL_NAIVE	unroll.c	/^  UNROLL_NAIVE$/;"	e	enum:unroll_types	file:
UNSAVE_EXPR_CHECK	tree-check.h	125;"	d
UPDATE_LIFE	ifcvt.c	121;"	d	file:
UPDATE_LIFE_GLOBAL	basic-block.h	/^  UPDATE_LIFE_GLOBAL = 1,$/;"	e	enum:update_life_extent
UPDATE_LIFE_GLOBAL_RM_NOTES	basic-block.h	/^  UPDATE_LIFE_GLOBAL_RM_NOTES = 2$/;"	e	enum:update_life_extent
UPDATE_LIFE_LOCAL	basic-block.h	/^  UPDATE_LIFE_LOCAL = 0,$/;"	e	enum:update_life_extent
UPDATE_LOOP_RELATIONS	sched-rgn.c	579;"	d	file:
USER_LABEL_PREFIX	att.h	105;"	d
USER_LABEL_PREFIX	att.h	106;"	d
USER_LABEL_PREFIX	cppdefault.h	78;"	d
USER_LABEL_PREFIX	elfos.h	34;"	d
USER_LABEL_PREFIX	elfos.h	35;"	d
USER_LABEL_PREFIX	toplev.c	951;"	d	file:
USE_CLOCK	timevar.c	92;"	d	file:
USE_CONST_SECTION	elfos.h	227;"	d
USE_C_ALLOCA	libiberty.h	299;"	d
USE_C_ALLOCA	libiberty.h	304;"	d
USE_GETRUSAGE	timevar.c	87;"	d	file:
USE_LINKONCE_INDIRECT	dwarf2asm.c	695;"	d	file:
USE_LINKONCE_INDIRECT	dwarf2asm.c	697;"	d	file:
USE_LOAD_POST_DECREMENT	rtl.h	1080;"	d
USE_LOAD_POST_INCREMENT	rtl.h	1076;"	d
USE_LOAD_PRE_DECREMENT	rtl.h	1088;"	d
USE_LOAD_PRE_INCREMENT	rtl.h	1084;"	d
USE_STORE_POST_DECREMENT	rtl.h	1096;"	d
USE_STORE_POST_INCREMENT	rtl.h	1092;"	d
USE_STORE_PRE_DECREMENT	rtl.h	1104;"	d
USE_STORE_PRE_INCREMENT	rtl.h	1100;"	d
USE_TIMES	timevar.c	81;"	d	file:
USING_ELFOS_H	elfos.h	27;"	d
USING_MALLOC_PAGE_GROUPS	ggc-page.c	59;"	d	file:
USING_MMAP	ggc-page.c	44;"	d	file:
USING_MMAP	ggc-page.c	54;"	d	file:
USING_SJLJ_EXCEPTIONS	except.h	177;"	d
USING_SJLJ_EXCEPTIONS	except.h	180;"	d
USING_SJLJ_EXCEPTIONS	except.h	195;"	d
USING_SVR4_H	svr4.h	39;"	d
USIZETYPE	tree.h	/^  USIZETYPE,		\/* Unsigned representation of sizes in bytes.  *\/$/;"	e	enum:size_type_kind
UWIDE_SHIFT_LEFT_BY_BITS_PER_WORD	combine.c	137;"	d	file:
U_CHAR	cpphash.h	/^typedef unsigned char U_CHAR;$/;"	t
V	safe-ctype.c	62;"	d	file:
V16QI_type_node	tree.h	2008;"	d
V16SF_type_node	tree.h	2016;"	d
V2SF_type_node	tree.h	2015;"	d
V2SI_type_node	tree.h	2014;"	d
V4HI_type_node	tree.h	2013;"	d
V4SF_type_node	tree.h	2009;"	d
V4SI_type_node	tree.h	2010;"	d
V8HI_type_node	tree.h	2012;"	d
V8QI_type_node	tree.h	2011;"	d
VALID_FP_MODE_P	i386.h	1030;"	d
VALID_INT_MODE_P	i386.h	1036;"	d
VALID_MMX_REG_MODE	i386.h	1021;"	d
VALID_MMX_REG_MODE_3DNOW	i386.h	1018;"	d
VALID_SIGN	cpphash.h	31;"	d
VALID_SSE_REG_MODE	i386.h	1013;"	d
VALUE_REGNO	unix.h	74;"	d
VARRAY_ACTIVE_SIZE	varray.h	171;"	d
VARRAY_BB	varray.h	227;"	d
VARRAY_BB_INIT	varray.h	153;"	d
VARRAY_BITMAP	varray.h	223;"	d
VARRAY_BITMAP_INIT	varray.h	141;"	d
VARRAY_CHAR	varray.h	208;"	d
VARRAY_CHAR_INIT	varray.h	96;"	d
VARRAY_CHAR_PTR	varray.h	219;"	d
VARRAY_CHAR_PTR_INIT	varray.h	129;"	d
VARRAY_CHECK	varray.h	179;"	d
VARRAY_CHECK	varray.h	186;"	d
VARRAY_CONST_EQUIV	varray.h	226;"	d
VARRAY_CONST_EQUIV_INIT	varray.h	150;"	d
VARRAY_ELT_LIST	varray.h	228;"	d
VARRAY_ELT_LIST_INIT	varray.h	156;"	d
VARRAY_FREE	varray.h	161;"	d
VARRAY_GENERIC_PTR	varray.h	218;"	d
VARRAY_GENERIC_PTR_INIT	varray.h	126;"	d
VARRAY_GROW	varray.h	167;"	d
VARRAY_HDR_SIZE	varray.c	30;"	d	file:
VARRAY_INT	varray.h	212;"	d
VARRAY_INT_INIT	varray.h	108;"	d
VARRAY_LONG	varray.h	214;"	d
VARRAY_LONG_INIT	varray.h	114;"	d
VARRAY_POP	varray.h	201;"	d
VARRAY_POP_ALL	varray.h	172;"	d
VARRAY_PUSH	varray.h	191;"	d
VARRAY_PUSH_BB	varray.h	250;"	d
VARRAY_PUSH_BITMAP	varray.h	246;"	d
VARRAY_PUSH_CHAR	varray.h	231;"	d
VARRAY_PUSH_CHAR_PTR	varray.h	242;"	d
VARRAY_PUSH_CONST_EQUIV	varray.h	249;"	d
VARRAY_PUSH_GENERIC_PTR	varray.h	241;"	d
VARRAY_PUSH_INT	varray.h	235;"	d
VARRAY_PUSH_LONG	varray.h	237;"	d
VARRAY_PUSH_REG	varray.h	248;"	d
VARRAY_PUSH_RTVEC	varray.h	244;"	d
VARRAY_PUSH_RTX	varray.h	243;"	d
VARRAY_PUSH_SCHED	varray.h	247;"	d
VARRAY_PUSH_SHORT	varray.h	233;"	d
VARRAY_PUSH_TREE	varray.h	245;"	d
VARRAY_PUSH_UCHAR	varray.h	232;"	d
VARRAY_PUSH_UINT	varray.h	236;"	d
VARRAY_PUSH_ULONG	varray.h	238;"	d
VARRAY_PUSH_USHORT	varray.h	234;"	d
VARRAY_PUSH_UWIDE_INT	varray.h	240;"	d
VARRAY_PUSH_WIDE_INT	varray.h	239;"	d
VARRAY_REG	varray.h	225;"	d
VARRAY_REG_INIT	varray.h	147;"	d
VARRAY_RTVEC	varray.h	221;"	d
VARRAY_RTVEC_INIT	varray.h	135;"	d
VARRAY_RTX	varray.h	220;"	d
VARRAY_RTX_INIT	varray.h	132;"	d
VARRAY_SCHED	varray.h	224;"	d
VARRAY_SCHED_INIT	varray.h	144;"	d
VARRAY_SHORT	varray.h	210;"	d
VARRAY_SHORT_INIT	varray.h	102;"	d
VARRAY_SIZE	varray.h	169;"	d
VARRAY_TOP	varray.h	205;"	d
VARRAY_TOP_BB	varray.h	272;"	d
VARRAY_TOP_BITMAP	varray.h	268;"	d
VARRAY_TOP_CHAR	varray.h	253;"	d
VARRAY_TOP_CHAR_PTR	varray.h	264;"	d
VARRAY_TOP_CONST_EQUIV	varray.h	271;"	d
VARRAY_TOP_GENERIC_PTR	varray.h	263;"	d
VARRAY_TOP_INT	varray.h	257;"	d
VARRAY_TOP_LONG	varray.h	259;"	d
VARRAY_TOP_REG	varray.h	270;"	d
VARRAY_TOP_RTVEC	varray.h	266;"	d
VARRAY_TOP_RTX	varray.h	265;"	d
VARRAY_TOP_SCHED	varray.h	269;"	d
VARRAY_TOP_SHORT	varray.h	255;"	d
VARRAY_TOP_TREE	varray.h	267;"	d
VARRAY_TOP_UCHAR	varray.h	254;"	d
VARRAY_TOP_UINT	varray.h	258;"	d
VARRAY_TOP_ULONG	varray.h	260;"	d
VARRAY_TOP_USHORT	varray.h	256;"	d
VARRAY_TOP_UWIDE_INT	varray.h	262;"	d
VARRAY_TOP_WIDE_INT	varray.h	261;"	d
VARRAY_TREE	varray.h	222;"	d
VARRAY_TREE_INIT	varray.h	138;"	d
VARRAY_UCHAR	varray.h	209;"	d
VARRAY_UCHAR_INIT	varray.h	99;"	d
VARRAY_UINT	varray.h	213;"	d
VARRAY_UINT_INIT	varray.h	111;"	d
VARRAY_ULONG	varray.h	215;"	d
VARRAY_ULONG_INIT	varray.h	117;"	d
VARRAY_USHORT	varray.h	211;"	d
VARRAY_USHORT_INIT	varray.h	105;"	d
VARRAY_UWIDE_INT	varray.h	217;"	d
VARRAY_UWIDE_INT_INIT	varray.h	123;"	d
VARRAY_WIDE_INT	varray.h	216;"	d
VARRAY_WIDE_INT_INIT	varray.h	120;"	d
VARYING	ssa-ccp.c	/^  VARYING$/;"	e	enum:__anon74	file:
VAR_DECL_CHECK	tree-check.h	40;"	d
VAR_FUNC_NAME	c-parse.c	46;"	d	file:
VAX_FLOAT_FORMAT	real.h	28;"	d
VA_ARG	c-parse.c	39;"	d	file:
VA_ARG_EXPR_CHECK	tree-check.h	139;"	d
VA_CLOSE	ansidecl.h	158;"	d
VA_CLOSE	ansidecl.h	194;"	d
VA_FIXEDARG	ansidecl.h	159;"	d
VA_FIXEDARG	ansidecl.h	195;"	d
VA_LIST_POINTER_DEPTH	tree.h	1206;"	d
VA_OPEN	ansidecl.h	157;"	d
VA_OPEN	ansidecl.h	193;"	d
VA_START	ansidecl.h	151;"	d
VA_START	ansidecl.h	191;"	d
VECTOR_CST_CHECK	tree-check.h	34;"	d
VECTOR_MODE_P	machmode.h	74;"	d
VECTOR_MODE_SUPPORTED_P	i386.h	1025;"	d
VECTOR_TYPE_CHECK	tree-check.h	15;"	d
VERS	cppinit.c	632;"	d	file:
VERS	cppinit.c	795;"	d	file:
VERSION_ASM_OP	dwarfout.c	948;"	d	file:
VIEW_CONVERT_EXPR_CHECK	tree-check.h	123;"	d
VIRTUAL_CFA_REGNUM	rtl.h	1712;"	d
VIRTUAL_INCOMING_ARGS_REGNUM	rtl.h	1678;"	d
VIRTUAL_OUTGOING_ARGS_REGNUM	rtl.h	1702;"	d
VIRTUAL_STACK_DYNAMIC_REGNUM	rtl.h	1694;"	d
VIRTUAL_STACK_VARS_REGNUM	rtl.h	1686;"	d
VMS_AND_DWARF2_DEBUG	flags.h	/^  VMS_AND_DWARF2_DEBUG \/* Write VMS debug info (using vmsdbgout.c).$/;"	e	enum:debug_info_type
VMS_DEBUG	flags.h	/^  VMS_DEBUG,        \/* Write VMS debug info (using vmsdbgout.c).  *\/$/;"	e	enum:debug_info_type
VOID_TYPE_CHECK	tree-check.h	11;"	d
VOID_TYPE_P	tree.h	471;"	d
VPARAMS	ansidecl.h	150;"	d
VPARAMS	ansidecl.h	190;"	d
VTABLE_REF_CHECK	tree-check.h	51;"	d
WALK_SUBTREE	c-common.c	3254;"	d	file:
WALK_SUBTREE	c-common.c	3303;"	d	file:
WALK_SUBTREE	tree-inline.c	1116;"	d	file:
WALK_SUBTREE	tree-inline.c	1321;"	d	file:
WALK_SUBTREE_TAIL	tree-inline.c	1125;"	d	file:
WARNING	cpphash.h	/^enum error_type { WARNING = 0, WARNING_SYSHDR, PEDWARN, ERROR, FATAL, ICE };$/;"	e	enum:error_type
WARNING_SYSHDR	cpphash.h	/^enum error_type { WARNING = 0, WARNING_SYSHDR, PEDWARN, ERROR, FATAL, ICE };$/;"	e	enum:error_type
WCHAR_BYTES	c-lex.c	77;"	d	file:
WCHAR_TYPE	c-common.c	56;"	d	file:
WCHAR_TYPE	cppdefault.h	66;"	d
WCHAR_TYPE	linux.h	81;"	d
WCHAR_TYPE	linux.h	82;"	d
WCHAR_TYPE	svr4.h	222;"	d
WCHAR_TYPE	svr4.h	223;"	d
WCHAR_TYPE	x86-64.h	49;"	d
WCHAR_TYPE	x86-64.h	50;"	d
WCHAR_TYPE_SIZE	c-common.c	42;"	d	file:
WCHAR_TYPE_SIZE	c-common.c	43;"	d	file:
WCHAR_TYPE_SIZE	c-lex.c	73;"	d	file:
WCHAR_TYPE_SIZE	c-lex.c	74;"	d	file:
WCHAR_TYPE_SIZE	defaults.h	310;"	d
WCHAR_TYPE_SIZE	linux.h	84;"	d
WCHAR_TYPE_SIZE	linux.h	85;"	d
WCHAR_TYPE_SIZE	svr4.h	225;"	d
WCHAR_TYPE_SIZE	svr4.h	226;"	d
WCHAR_TYPE_SIZE	x86-64.h	52;"	d
WCHAR_TYPE_SIZE	x86-64.h	53;"	d
WCHAR_UNSIGNED	defaults.h	314;"	d
WEXITSTATUS	system.h	264;"	d
WHILE	c-parse.c	21;"	d	file:
WHILE_BODY	c-common.h	584;"	d
WHILE_COND	c-common.h	583;"	d
WHILE_STMT_CHECK	tree-check.h	162;"	d
WIFEXITED	system.h	261;"	d
WIFSIGNALED	system.h	255;"	d
WIN32_LEAN_AND_MEAN	cppfiles.c	47;"	d	file:
WINT_TYPE	c-common.c	64;"	d	file:
WINT_TYPE	cppdefault.h	72;"	d
WITH_CLEANUP_EXPR_CHECK	tree-check.h	61;"	d
WITH_CLEANUP_EXPR_RTL	tree.h	839;"	d
WITH_RECORD_EXPR_CHECK	tree-check.h	64;"	d
WORDS_BIGENDIAN	md5.c	43;"	d	file:
WORDS_BIG_ENDIAN	i386.h	723;"	d
WORD_SWITCH_TAKES_ARG	svr4.h	57;"	d
WORST_CLASS	sched-rgn.c	1559;"	d	file:
WRITE	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	e	enum:match::__anon84	file:
WSTOPSIG	system.h	267;"	d
WTERMSIG	system.h	258;"	d
W_OK	system.h	228;"	d
W_options	toplev.c	/^static const lang_independent_options W_options[] =$/;"	v	file:
X	cppinit.c	638;"	d	file:
X	cppinit.c	677;"	d	file:
X0ADVFLAGS	rtl.h	367;"	d
X0BBDEF	rtl.h	366;"	d
X0BITMAP	rtl.h	364;"	d
X0CSELIB	rtl.h	368;"	d
X0EXP	rtl.h	361;"	d
X0INT	rtl.h	358;"	d
X0MEMATTR	rtl.h	369;"	d
X0MODE	rtl.h	363;"	d
X0STR	rtl.h	360;"	d
X0TREE	rtl.h	365;"	d
X0UINT	rtl.h	359;"	d
X0VEC	rtl.h	362;"	d
X0WINT	rtl.h	357;"	d
X86_64_INTEGERSI_CLASS	i386.c	/^    X86_64_INTEGERSI_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_INTEGER_CLASS	i386.c	/^    X86_64_INTEGER_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_MEMORY_CLASS	i386.c	/^    X86_64_MEMORY_CLASS$/;"	e	enum:x86_64_reg_class	file:
X86_64_NO_CLASS	i386.c	/^    X86_64_NO_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSEDF_CLASS	i386.c	/^    X86_64_SSEDF_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSESF_CLASS	i386.c	/^    X86_64_SSESF_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSEUP_CLASS	i386.c	/^    X86_64_SSEUP_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_SSE_CLASS	i386.c	/^    X86_64_SSE_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_VARARGS_SIZE	i386.c	541;"	d	file:
X86_64_X87UP_CLASS	i386.c	/^    X86_64_X87UP_CLASS,$/;"	e	enum:x86_64_reg_class	file:
X86_64_X87_CLASS	i386.c	/^    X86_64_X87_CLASS,$/;"	e	enum:x86_64_reg_class	file:
XBBDEF	rtl.h	348;"	d
XBITMAP	rtl.h	346;"	d
XC2EXP	rtl.h	387;"	d
XCADVFLAGS	rtl.h	381;"	d
XCBBDEF	rtl.h	380;"	d
XCBITMAP	rtl.h	378;"	d
XCCSELIB	rtl.h	382;"	d
XCEXP	rtl.h	375;"	d
XCINT	rtl.h	372;"	d
XCMODE	rtl.h	377;"	d
XCOFF_DEBUG	flags.h	/^  XCOFF_DEBUG,	    \/* Write IBM\/Xcoff debug info (using dbxout.c).  *\/$/;"	e	enum:debug_info_type
XCONCAT2	symcat.h	38;"	d
XCONCAT3	symcat.h	39;"	d
XCONCAT4	symcat.h	40;"	d
XCSTR	rtl.h	374;"	d
XCTREE	rtl.h	379;"	d
XCUINT	rtl.h	373;"	d
XCVEC	rtl.h	376;"	d
XCVECEXP	rtl.h	384;"	d
XCVECLEN	rtl.h	385;"	d
XCWINT	rtl.h	371;"	d
XEXP	rtl.h	343;"	d
XFbignan	real.c	/^static const UEMUSHORT XFbignan[6] =$/;"	v	file:
XFlittlenan	real.c	/^static const UEMUSHORT XFlittlenan[6] = {0, 0, 0, 0xc000, 0xffff, 0};$/;"	v	file:
XINT	rtl.h	341;"	d
XL	safe-ctype.c	52;"	d	file:
XMODE	rtl.h	345;"	d
XOR_PRIO	cppexp.c	481;"	d	file:
XOR_REG_SET	basic-block.h	58;"	d
XSTR	rtl.h	342;"	d
XSTRING	symcat.h	47;"	d
XTMPL	rtl.h	349;"	d
XTREE	rtl.h	347;"	d
XU	safe-ctype.c	54;"	d	file:
XVEC	rtl.h	344;"	d
XVECEXP	rtl.h	351;"	d
XVECLEN	rtl.h	352;"	d
XWINT	rtl.h	340;"	d
X_OK	system.h	227;"	d
YYABORT	c-parse.c	1687;"	d	file:
YYACCEPT	c-parse.c	1686;"	d	file:
YYBACKUP	c-parse.c	1695;"	d	file:
YYBISON	c-parse.c	5;"	d	file:
YYDEBUG	c-lex.c	68;"	d	file:
YYDEBUG	c-parse.c	100;"	d	file:
YYEMPTY	c-parse.c	1684;"	d	file:
YYEOF	c-parse.c	1685;"	d	file:
YYERRCODE	c-parse.c	1708;"	d	file:
YYERROR	c-parse.c	1688;"	d	file:
YYERROR1	c-parse.c	97;"	d	file:
YYFAIL	c-parse.c	1693;"	d	file:
YYFINAL	c-parse.c	202;"	d	file:
YYFLAG	c-parse.c	203;"	d	file:
YYINITDEPTH	c-parse.c	1755;"	d	file:
YYLAST	c-parse.c	948;"	d	file:
YYLEX	c-parse.c	1711;"	d	file:
YYLEX	c-parse.c	1717;"	d	file:
YYLEX	c-parse.c	1719;"	d	file:
YYLEX	c-parse.c	1723;"	d	file:
YYLEX	c-parse.c	1725;"	d	file:
YYMAXDEPTH	c-parse.c	1762;"	d	file:
YYMAXDEPTH	c-parse.c	1766;"	d	file:
YYNTBASE	c-parse.c	204;"	d	file:
YYPARSE_PARAM_ARG	c-parse.c	1786;"	d	file:
YYPARSE_PARAM_ARG	c-parse.c	1789;"	d	file:
YYPARSE_PARAM_ARG	c-parse.c	1793;"	d	file:
YYPARSE_PARAM_DECL	c-parse.c	1787;"	d	file:
YYPARSE_PARAM_DECL	c-parse.c	1790;"	d	file:
YYPARSE_PARAM_DECL	c-parse.c	1794;"	d	file:
YYPOPSTACK	c-parse.c	1828;"	d	file:
YYPRINT	c-parse.c	171;"	d	file:
YYRECOVERING	c-parse.c	1694;"	d	file:
YYSTACK_ALLOC	c-parse.c	1673;"	d	file:
YYSTACK_ALLOC	c-parse.c	1675;"	d	file:
YYSTACK_USE_ALLOCA	c-parse.c	1632;"	d	file:
YYSTACK_USE_ALLOCA	c-parse.c	1635;"	d	file:
YYSTACK_USE_ALLOCA	c-parse.c	1639;"	d	file:
YYSTACK_USE_ALLOCA	c-parse.c	1656;"	d	file:
YYSTYPE	c-parse.c	/^	const char *filename; int lineno; } YYSTYPE;$/;"	t	typeref:union:__anon52	file:
YYTERROR	c-parse.c	1707;"	d	file:
YYTRANSLATE	c-parse.c	206;"	d	file:
Z	safe-ctype.c	60;"	d	file:
_	intl.h	54;"	d
_	obstack.c	455;"	d	file:
_	obstack.c	458;"	d	file:
_	safe-ctype.c	57;"	d	file:
_ANSIDECL_H	ansidecl.h	115;"	d
_Bool	system.h	/^typedef char _Bool;$/;"	t
_DST_BLOCK_BEGIN	vmsdbg.h	/^typedef struct _DST_BLOCK_BEGIN$/;"	s
_DST_BLOCK_END	vmsdbg.h	/^typedef struct _DST_BLOCK_END$/;"	s
_DST_HEADER	vmsdbg.h	/^typedef struct _DST_HEADER$/;"	s
_DST_LANGUAGE	vmsdbg.h	/^typedef enum _DST_LANGUAGE {DST_K_FORTRAN = 1, DST_K_C = 7, DST_K_ADA = 9,$/;"	g
_DST_LINE_NUM_HEADER	vmsdbg.h	/^typedef struct _DST_LINE_NUM_HEADER$/;"	s
_DST_MB_TRLR	vmsdbg.h	/^typedef struct _DST_MB_TRLR$/;"	s
_DST_MODULE_BEGIN	vmsdbg.h	/^typedef struct _DST_MODULE_BEGIN$/;"	s
_DST_MODULE_END	vmsdbg.h	/^typedef struct _DST_MODULE_END$/;"	s
_DST_PCLINE_COMMANDS	vmsdbg.h	/^typedef struct _DST_PCLINE_COMMANDS$/;"	s
_DST_PROLOG	vmsdbg.h	/^typedef struct _DST_PROLOG$/;"	s
_DST_ROUTINE_BEGIN	vmsdbg.h	/^typedef struct _DST_ROUTINE_BEGIN$/;"	s
_DST_ROUTINE_END	vmsdbg.h	/^typedef struct _DST_ROUTINE_END$/;"	s
_DST_SOURCE_CORR	vmsdbg.h	/^typedef struct _DST_SOURCE_CORR$/;"	s
_DST_SRC_CMDTRLR	vmsdbg.h	/^typedef struct _DST_SRC_CMDTRLR$/;"	s
_DST_SRC_COMMAND	vmsdbg.h	/^typedef struct _DST_SRC_COMMAND$/;"	s
_DST_TYPE	vmsdbg.h	/^typedef enum _DST_TYPE {DST_K_SOURCE = 155, DST_K_PROLOG = 162,$/;"	g
_FIBHEAP_H_	fibheap.h	41;"	d
_GNU_SOURCE	auto-host.h	367;"	d
_MD5_H	md5.h	22;"	d
_OBSTACK_H	obstack.h	111;"	d
_PARTITION_H	partition.h	37;"	d
_SPLAY_TREE_H	splay-tree.h	31;"	d
__FUNCTION__	system.h	534;"	d
__GNU_SYMS__	gsyms.h	4;"	d
__HASHTAB_H__	hashtab.h	33;"	d
__INT_TO_PTR	obstack.h	126;"	d
__P	md5.h	69;"	d
__P	md5.h	71;"	d
__P	md5.h	73;"	d
__PTR_TO_INT	obstack.h	122;"	d
__VERSION__	toplev.c	4410;"	d	file:
__alignof__	bitmap.c	120;"	d	file:
__attribute__	ansidecl.h	214;"	d
__builtin_expect	system.h	542;"	d
__define_stab	gstab.h	12;"	d
__define_stab	gstab.h	4;"	d
__extension__	ansidecl.h	256;"	d
__extension__	obstack.h	357;"	d
__inline	sched-int.h	253;"	d
__inline	sched-int.h	257;"	d
__stab_debug_code	gstab.h	/^enum __stab_debug_code$/;"	g
_cpp_aligned_alloc	cpplex.c	/^_cpp_aligned_alloc (pfile, len)$/;"	f
_cpp_append_extend_buff	cpplex.c	/^_cpp_append_extend_buff (pfile, buff, min_extra)$/;"	f
_cpp_backup_tokens	cppmacro.c	/^_cpp_backup_tokens (pfile, count)$/;"	f
_cpp_begin_message	cpperror.c	/^_cpp_begin_message (pfile, code, line, column)$/;"	f
_cpp_buff	cpphash.h	/^struct _cpp_buff$/;"	s
_cpp_buff	cpphash.h	/^typedef struct _cpp_buff _cpp_buff;$/;"	t	typeref:struct:_cpp_buff
_cpp_cleanup_includes	cppfiles.c	/^_cpp_cleanup_includes (pfile)$/;"	f
_cpp_compare_file_date	cppfiles.c	/^_cpp_compare_file_date (pfile, header)$/;"	f
_cpp_create_definition	cppmacro.c	/^_cpp_create_definition (pfile, node)$/;"	f
_cpp_define_builtin	cpplib.c	/^_cpp_define_builtin (pfile, str)$/;"	f
_cpp_destroy_hashtable	cpphash.c	/^_cpp_destroy_hashtable (pfile)$/;"	f
_cpp_do__Pragma	cpplib.c	/^_cpp_do__Pragma (pfile)$/;"	f
_cpp_do_file_change	cpplib.c	/^_cpp_do_file_change (pfile, reason, to_file, file_line, sysp)$/;"	f
_cpp_equiv_tokens	cpplex.c	/^_cpp_equiv_tokens (a, b)$/;"	f
_cpp_execute_include	cppfiles.c	/^_cpp_execute_include (pfile, header, type)$/;"	f
_cpp_extend_buff	cpplex.c	/^_cpp_extend_buff (pfile, pbuff, min_extra)$/;"	f
_cpp_fake_include	cppfiles.c	/^_cpp_fake_include (pfile, fname)$/;"	f
_cpp_free_buff	cpplex.c	/^_cpp_free_buff (buff)$/;"	f
_cpp_free_definition	cppmacro.c	/^_cpp_free_definition (h)$/;"	f
_cpp_get_buff	cpplex.c	/^_cpp_get_buff (pfile, min_size)$/;"	f
_cpp_handle_directive	cpplib.c	/^_cpp_handle_directive (pfile, indented)$/;"	f
_cpp_init_directives	cpplib.c	/^_cpp_init_directives (pfile)$/;"	f
_cpp_init_hashtable	cpphash.c	/^_cpp_init_hashtable (pfile, table)$/;"	f
_cpp_init_includes	cppfiles.c	/^_cpp_init_includes (pfile)$/;"	f
_cpp_init_internal_pragmas	cpplib.c	/^_cpp_init_internal_pragmas (pfile)$/;"	f
_cpp_init_tokenrun	cpplex.c	/^_cpp_init_tokenrun (run, count)$/;"	f
_cpp_lex_direct	cpplex.c	/^_cpp_lex_direct (pfile)$/;"	f
_cpp_lex_token	cpplex.c	/^_cpp_lex_token (pfile)$/;"	f
_cpp_never_reread	cppfiles.c	/^_cpp_never_reread (file)$/;"	f
_cpp_parse_expr	cppexp.c	/^_cpp_parse_expr (pfile)$/;"	f
_cpp_pop_buffer	cpplib.c	/^_cpp_pop_buffer (pfile)$/;"	f
_cpp_pop_context	cppmacro.c	/^_cpp_pop_context (pfile)$/;"	f
_cpp_pop_file_buffer	cppfiles.c	/^_cpp_pop_file_buffer (pfile, inc)$/;"	f
_cpp_push_next_buffer	cppinit.c	/^_cpp_push_next_buffer (pfile)$/;"	f
_cpp_read_file	cppfiles.c	/^_cpp_read_file (pfile, fname)$/;"	f
_cpp_release_buff	cpplex.c	/^_cpp_release_buff (pfile, buff)$/;"	f
_cpp_report_missing_guards	cppfiles.c	/^_cpp_report_missing_guards (pfile)$/;"	f
_cpp_simplify_pathname	cppfiles.c	/^_cpp_simplify_pathname (path)$/;"	f
_cpp_temp_token	cpplex.c	/^_cpp_temp_token (pfile)$/;"	f
_cpp_test_assertion	cpplib.c	/^_cpp_test_assertion (pfile, value)$/;"	f
_cpp_unaligned_alloc	cpplex.c	/^_cpp_unaligned_alloc (pfile, len)$/;"	f
_dollar_ok	cpphash.h	336;"	d
_factor	unroll.c	/^static struct _factor { const int factor; int count; }$/;"	s	file:
_fatal_insn	rtl-error.c	/^_fatal_insn (msgid, insn, file, line, function)$/;"	f
_fatal_insn_not_found	rtl-error.c	/^_fatal_insn_not_found (insn, file, line, function)$/;"	f
_hex_array_size	libiberty.h	249;"	d
_hex_bad	libiberty.h	250;"	d
_hex_value	hex.c	/^const char _hex_value[_hex_array_size] =$/;"	v
_obstack	obstack.c	/^struct obstack *_obstack;$/;"	v	typeref:struct:obstack
_obstack_allocated_p	obstack.c	/^_obstack_allocated_p (h, obj)$/;"	f
_obstack_begin	obstack.c	/^_obstack_begin (h, size, alignment, chunkfun, freefun)$/;"	f
_obstack_begin_1	obstack.c	/^_obstack_begin_1 (h, size, alignment, chunkfun, freefun, arg)$/;"	f
_obstack_chunk	obstack.h	/^struct _obstack_chunk		\/* Lives at front of each chunk. *\/$/;"	s
_obstack_free	obstack.c	/^_obstack_free (h, obj)$/;"	f
_obstack_memcpy	obstack.h	149;"	d
_obstack_memcpy	obstack.h	151;"	d
_obstack_memcpy	obstack.h	155;"	d
_obstack_memcpy	obstack.h	157;"	d
_obstack_memory_used	obstack.c	/^_obstack_memory_used (h)$/;"	f
_obstack_newchunk	obstack.c	/^_obstack_newchunk (h, length)$/;"	f
_sch_isalnum	safe-ctype.h	/^  _sch_isalnum  = _sch_isalpha|_sch_isdigit,	\/* A-Za-z0-9 *\/$/;"	e	enum:__anon32
_sch_isalpha	safe-ctype.h	/^  _sch_isalpha  = _sch_isupper|_sch_islower,	\/* A-Za-z *\/$/;"	e	enum:__anon32
_sch_isbasic	safe-ctype.h	/^  _sch_isbasic  = _sch_isprint|_sch_iscppsp     \/* basic charset of ISO C$/;"	e	enum:__anon32
_sch_isblank	safe-ctype.h	/^  _sch_isblank  = 0x0001,	\/* space \\t *\/$/;"	e	enum:__anon32
_sch_iscntrl	safe-ctype.h	/^  _sch_iscntrl  = 0x0002,	\/* nonprinting characters *\/$/;"	e	enum:__anon32
_sch_iscppsp	safe-ctype.h	/^  _sch_iscppsp  = _sch_isvsp|_sch_isnvsp,	\/* isspace + \\0 *\/$/;"	e	enum:__anon32
_sch_isdigit	safe-ctype.h	/^  _sch_isdigit  = 0x0004,	\/* 0-9 *\/$/;"	e	enum:__anon32
_sch_isgraph	safe-ctype.h	/^  _sch_isgraph  = _sch_isalnum|_sch_ispunct,	\/* isprint and not space *\/$/;"	e	enum:__anon32
_sch_isidnum	safe-ctype.h	/^  _sch_isidnum  = _sch_isidst|_sch_isdigit,	\/* A-Za-z0-9_ *\/$/;"	e	enum:__anon32
_sch_isidst	safe-ctype.h	/^  _sch_isidst	= 0x0200,	\/* A-Za-z_ *\/$/;"	e	enum:__anon32
_sch_islower	safe-ctype.h	/^  _sch_islower  = 0x0008,	\/* a-z *\/$/;"	e	enum:__anon32
_sch_isnvsp	safe-ctype.h	/^  _sch_isnvsp   = 0x0800,	\/* space \\t \\f \\v \\0 *\/$/;"	e	enum:__anon32
_sch_isprint	safe-ctype.h	/^  _sch_isprint  = 0x0010,	\/* any printing character including ' ' *\/$/;"	e	enum:__anon32
_sch_ispunct	safe-ctype.h	/^  _sch_ispunct  = 0x0020,	\/* all punctuation *\/$/;"	e	enum:__anon32
_sch_isspace	safe-ctype.h	/^  _sch_isspace  = 0x0040,	\/* space \\t \\n \\r \\f \\v *\/$/;"	e	enum:__anon32
_sch_istable	safe-ctype.c	/^const unsigned short _sch_istable[256] =$/;"	v
_sch_isupper	safe-ctype.h	/^  _sch_isupper  = 0x0080,	\/* A-Z *\/$/;"	e	enum:__anon32
_sch_isvsp	safe-ctype.h	/^  _sch_isvsp    = 0x0400,	\/* \\n \\r *\/$/;"	e	enum:__anon32
_sch_isxdigit	safe-ctype.h	/^  _sch_isxdigit = 0x0100,	\/* 0-9A-Fa-f *\/$/;"	e	enum:__anon32
_sch_test	safe-ctype.h	74;"	d
_sch_tolower	safe-ctype.c	/^const unsigned char _sch_tolower[256] =$/;"	v
_sch_toupper	safe-ctype.c	/^const unsigned char _sch_toupper[256] =$/;"	v
_xexit_cleanup	xexit.c	/^void (*_xexit_cleanup) PARAMS ((void));$/;"	v
_yylex	c-parse.c	/^_yylex ()$/;"	f	file:
a	ifcvt.c	/^  rtx x, a, b;$/;"	m	struct:noce_if_info	file:
a	tree.h	/^    struct {unsigned int align : 24; unsigned int off_align : 8;} a;$/;"	m	union:tree_decl::__anon18	typeref:struct:tree_decl::__anon18::__anon19
a	tree.h	/^  tree a[1];$/;"	m	struct:tree_vec
a_buff	cpphash.h	/^  _cpp_buff *a_buff;		\/* Aligned permanent storage.  *\/$/;"	m	struct:cpp_reader
abbrev_die_table	dwarf2out.c	/^static dw_die_ref *abbrev_die_table;$/;"	v	file:
abbrev_die_table_allocated	dwarf2out.c	/^static unsigned abbrev_die_table_allocated;$/;"	v	file:
abbrev_die_table_in_use	dwarf2out.c	/^static unsigned abbrev_die_table_in_use;$/;"	v	file:
abbrev_section_label	dwarf2out.c	/^static char abbrev_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
abort	rtl.h	2086;"	d
abort	tree.h	3182;"	d
abort_libfunc	libfuncs.h	166;"	d
abs	dependence.c	1146;"	d	file:
abs_optab	optabs.h	193;"	d
abstract_flag	tree.h	/^  unsigned abstract_flag : 1;$/;"	m	struct:tree_block
abstract_flag	tree.h	/^  unsigned abstract_flag : 1;$/;"	m	struct:tree_decl
abstract_origin	tree.h	/^  tree abstract_origin;$/;"	m	struct:tree_block
abstract_origin	tree.h	/^  tree abstract_origin;$/;"	m	struct:tree_decl
abstract_origin_attribute	dwarfout.c	/^abstract_origin_attribute (origin)$/;"	f	file:
absv_optab	optabs.h	194;"	d
accesses_prev_frame	i386.c	/^  int accesses_prev_frame;$/;"	m	struct:machine_function	file:
action	except.c	/^    int action;$/;"	m	struct:eh_status::call_site_record	file:
action_index	except.c	/^  int action_index;$/;"	m	struct:sjlj_lp_info	file:
action_record	except.c	/^struct action_record$/;"	s	file:
action_record_data	except.c	/^  varray_type action_record_data;$/;"	m	struct:eh_status	file:
action_record_eq	except.c	/^action_record_eq (pentry, pdata)$/;"	f	file:
action_record_hash	except.c	/^action_record_hash (pentry)$/;"	f	file:
active_insn_p	emit-rtl.c	/^active_insn_p (insn)$/;"	f
actual_hazard	haifa-sched.c	/^actual_hazard (unit, insn, clock, cost)$/;"	f	file:
actual_hazard_this_instance	haifa-sched.c	/^actual_hazard_this_instance (unit, instance, insn, clock, cost)$/;"	f
add	i386.h	/^  const int add;		\/* cost of an add instruction *\/$/;"	m	struct:processor_costs
add_AT_addr	dwarf2out.c	/^add_AT_addr (die, attr_kind, addr)$/;"	f	file:
add_AT_die_ref	dwarf2out.c	/^add_AT_die_ref (die, attr_kind, targ_die)$/;"	f	file:
add_AT_fde_ref	dwarf2out.c	/^add_AT_fde_ref (die, attr_kind, targ_fde)$/;"	f	file:
add_AT_flag	dwarf2out.c	/^add_AT_flag (die, attr_kind, flag)$/;"	f	file:
add_AT_float	dwarf2out.c	/^add_AT_float (die, attr_kind, length, array)$/;"	f	file:
add_AT_int	dwarf2out.c	/^add_AT_int (die, attr_kind, int_val)$/;"	f	file:
add_AT_lbl_id	dwarf2out.c	/^add_AT_lbl_id (die, attr_kind, lbl_id)$/;"	f	file:
add_AT_lbl_offset	dwarf2out.c	/^add_AT_lbl_offset (die, attr_kind, label)$/;"	f	file:
add_AT_loc	dwarf2out.c	/^add_AT_loc (die, attr_kind, loc)$/;"	f	file:
add_AT_loc_list	dwarf2out.c	/^add_AT_loc_list (die, attr_kind, loc_list)$/;"	f	file:
add_AT_location_description	dwarf2out.c	/^add_AT_location_description (die, attr_kind, rtl)$/;"	f	file:
add_AT_long_long	dwarf2out.c	/^add_AT_long_long (die, attr_kind, val_hi, val_low)$/;"	f	file:
add_AT_offset	dwarf2out.c	/^add_AT_offset (die, attr_kind, offset)$/;"	f	file:
add_AT_range_list	dwarf2out.c	/^add_AT_range_list (die, attr_kind, offset)$/;"	f	file:
add_AT_string	dwarf2out.c	/^add_AT_string (die, attr_kind, str)$/;"	f	file:
add_AT_unsigned	dwarf2out.c	/^add_AT_unsigned (die, attr_kind, unsigned_val)$/;"	f	file:
add_abstract_origin_attribute	dwarf2out.c	/^add_abstract_origin_attribute (die, origin)$/;"	f	file:
add_action_record	except.c	/^add_action_record (ar_hash, filter, next)$/;"	f	file:
add_arange	dwarf2out.c	/^add_arange (decl, die)$/;"	f	file:
add_auto_inc_notes	reload1.c	/^add_auto_inc_notes (insn, x)$/;"	f	file:
add_bit_offset_attribute	dwarf2out.c	/^add_bit_offset_attribute (die, decl)$/;"	f	file:
add_bit_size_attribute	dwarf2out.c	/^add_bit_size_attribute (die, decl)$/;"	f	file:
add_bound_info	dwarf2out.c	/^add_bound_info (subrange_die, bound_attr, bound)$/;"	f	file:
add_branch_dependences	sched-rgn.c	/^add_branch_dependences (head, tail)$/;"	f	file:
add_byte_size_attribute	dwarf2out.c	/^add_byte_size_attribute (die, tree_node)$/;"	f	file:
add_c_tree_codes	c-common.c	/^add_c_tree_codes ()$/;"	f
add_call_site	except.c	/^add_call_site (landing_pad, action)$/;"	f	file:
add_case_node	stmt.c	/^add_case_node (low, high, label, duplicate)$/;"	f
add_cfi	dwarf2out.c	/^add_cfi (list_head, cfi)$/;"	f	file:
add_child_die	dwarf2out.c	/^add_child_die (die, child_die)$/;"	f	file:
add_clobbers	insn-emit.c	/^add_clobbers (pattern, insn_code_number)$/;"	f
add_const_value_attribute	dwarf2out.c	/^add_const_value_attribute (die, rtl)$/;"	f	file:
add_cost	expmed.c	/^static int add_cost, negate_cost, zero_cost;$/;"	v	file:
add_data_member_location_attribute	dwarf2out.c	/^add_data_member_location_attribute (die, decl)$/;"	f	file:
add_decl_stmt	c-semantics.c	/^add_decl_stmt (decl)$/;"	f
add_dependence	sched-deps.c	/^add_dependence (insn, elem, dep_type)$/;"	f
add_dependence_list	sched-deps.c	/^add_dependence_list (insn, list, dep_type)$/;"	f	file:
add_dependence_list_and_free	sched-deps.c	/^add_dependence_list_and_free (insn, listp, dep_type)$/;"	f	file:
add_double	fold-const.c	/^add_double (l1, h1, l2, h2, lv, hv)$/;"	f
add_dwarf_attr	dwarf2out.c	/^add_dwarf_attr (die, attr)$/;"	f	file:
add_ehl_entry	except.c	/^add_ehl_entry (label, region)$/;"	f	file:
add_ehspec_entry	except.c	/^add_ehspec_entry (ehspec_hash, ttypes_hash, list)$/;"	f	file:
add_equal_note	optabs.c	/^add_equal_note (seq, target, code, op0, op1)$/;"	f	file:
add_fde_cfi	dwarf2out.c	/^add_fde_cfi (label, cfi)$/;"	f	file:
add_incomplete_type	dwarfout.c	/^add_incomplete_type (type)$/;"	f	file:
add_insn	emit-rtl.c	/^add_insn (insn)$/;"	f
add_insn_after	emit-rtl.c	/^add_insn_after (insn, after)$/;"	f
add_insn_before	emit-rtl.c	/^add_insn_before (insn, before)$/;"	f
add_insn_mem_dependence	sched-deps.c	/^add_insn_mem_dependence (deps, insn_list, mem_list, insn, mem)$/;"	f
add_label_notes	gcse.c	/^add_label_notes (x, insn)$/;"	f	file:
add_label_notes	loop.c	/^add_label_notes (x, insns)$/;"	f	file:
add_line_map	line-map.c	/^add_line_map (set, reason, sysp, from_line, to_file, to_line)$/;"	f
add_loc_descr	dwarf2out.c	/^add_loc_descr (list_head, descr)$/;"	f	file:
add_loc_descr_to_loc_list	dwarf2out.c	/^add_loc_descr_to_loc_list (list_head, descr, begin, end, section)$/;"	f	file:
add_location_or_const_value_attribute	dwarf2out.c	/^add_location_or_const_value_attribute (die, decl)$/;"	f	file:
add_loop	dependence.c	/^add_loop (loop_node, outer_loop, nloop)$/;"	f	file:
add_mem_for_addr	cselib.c	/^add_mem_for_addr (addr_elt, mem_elt, x)$/;"	f	file:
add_name_and_src_coords_attributes	dwarf2out.c	/^add_name_and_src_coords_attributes (die, decl)$/;"	f	file:
add_name_attribute	dwarf2out.c	/^add_name_attribute (die, name_string)$/;"	f	file:
add_noreturn_fake_exit_edges	cfganal.c	/^add_noreturn_fake_exit_edges ()$/;"	f
add_optab	optabs.h	157;"	d
add_params	params.c	/^add_params (params, n)$/;"	f
add_partial_entry	except.c	/^add_partial_entry (handler)$/;"	f
add_pending_fn_decls	langhooks.h	/^  union tree_node *(*add_pending_fn_decls) PARAMS ((void *,$/;"	m	struct:lang_hooks_for_tree_inlining	typeref:union:lang_hooks_for_tree_inlining::add_pending_fn_decls
add_pending_init	c-typeck.c	/^add_pending_init (purpose, value)$/;"	f	file:
add_prototyped_attribute	dwarf2out.c	/^add_prototyped_attribute (die, func_type)$/;"	f	file:
add_pubname	dwarf2out.c	/^add_pubname (decl, die)$/;"	f	file:
add_pure_or_virtual_attribute	dwarf2out.c	/^add_pure_or_virtual_attribute (die, func_decl)$/;"	f	file:
add_ranges	dwarf2out.c	/^add_ranges (block)$/;"	f	file:
add_reachable_handler	except.c	/^add_reachable_handler (info, lp_region, region)$/;"	f	file:
add_scope_stmt	c-semantics.c	/^add_scope_stmt (begin_p, partial_p)$/;"	f
add_seginfo	lcm.c	/^add_seginfo (head, info)$/;"	f	file:
add_sibling_attributes	dwarf2out.c	/^add_sibling_attributes (die)$/;"	f	file:
add_src_coords_attributes	dwarf2out.c	/^add_src_coords_attributes (die, decl)$/;"	f	file:
add_stmt	c-semantics.c	/^add_stmt (t)$/;"	f
add_stored_regs	caller-save.c	/^add_stored_regs (reg, setter, data)$/;"	f	file:
add_subscript_info	dwarf2out.c	/^add_subscript_info (type_die, type)$/;"	f	file:
add_tlist	c-common.c	/^add_tlist (to, add, exclude_writer, copy)$/;"	f	file:
add_to_delay_list	reorg.c	/^add_to_delay_list (insn, delay_list)$/;"	f	file:
add_to_mem_set_list	flow.c	/^add_to_mem_set_list (pbi, mem)$/;"	f	file:
add_ttypes_entry	except.c	/^add_ttypes_entry (ttypes_hash, type)$/;"	f	file:
add_type_attribute	dwarf2out.c	/^add_type_attribute (object_die, type, decl_const, decl_volatile, context_die)$/;"	f	file:
add_type_for_runtime	except.c	/^add_type_for_runtime (type)$/;"	f	file:
add_val	loop.h	/^  rtx add_val;			\/* Additive constant for that product.  *\/$/;"	m	struct:induction
added_clobbers_hard_reg_p	insn-emit.c	/^added_clobbers_hard_reg_p (insn_code_number)$/;"	f
added_links_insn	combine.c	/^static rtx added_links_insn;$/;"	v	file:
addr	varasm.c	/^    struct addr_const addr;$/;"	m	union:rtx_const::__anon81	typeref:struct:rtx_const::__anon81::addr_const	file:
addr_affects_sp_p	cse.c	/^addr_affects_sp_p (addr)$/;"	f	file:
addr_combined_regs	unroll.c	/^static struct induction **addr_combined_regs;$/;"	v	typeref:struct:induction	file:
addr_const	varasm.c	/^struct addr_const$/;"	s	file:
addr_const_to_string	vmsdbgout.c	/^addr_const_to_string (str, x)$/;"	f	file:
addr_diff_vec_flags	rtl.h	/^} addr_diff_vec_flags;$/;"	t	typeref:struct:__anon7
addr_list	cselib.h	/^  struct elt_list *addr_list;$/;"	m	struct:cselib_val_struct	typeref:struct:cselib_val_struct::elt_list
addr_placeholder	loop.c	/^static rtx addr_placeholder;$/;"	v	file:
addr_side_effect_eval	alias.c	/^addr_side_effect_eval (addr, size, n_refs)$/;"	f
addr_taken	function.c	/^  char addr_taken;$/;"	m	struct:temp_slot	file:
address	function.c	/^  rtx address;$/;"	m	struct:temp_slot	file:
address	tree.h	/^  union {int address; char *pointer; } symtab;$/;"	m	union:tree_type::__anon17
address_cost	cse.c	/^address_cost (x, mode)$/;"	f
address_operand	recog.c	/^address_operand (op, mode)$/;"	f
addressable_flag	tree.h	/^  unsigned addressable_flag : 1;$/;"	m	struct:tree_common
addv_optab	optabs.h	160;"	d
adjust_address	expr.h	619;"	d
adjust_address_1	emit-rtl.c	/^adjust_address_1 (memref, mode, offset, validate, adjust)$/;"	f
adjust_address_nv	expr.h	623;"	d
adjust_automodify_address	expr.h	629;"	d
adjust_automodify_address_1	emit-rtl.c	/^adjust_automodify_address_1 (memref, mode, addr, offset, validate)$/;"	f
adjust_automodify_address_nv	expr.h	633;"	d
adjust_column	cpplex.c	/^adjust_column (pfile)$/;"	f	file:
adjust_cost	target.h	/^    int (* adjust_cost) PARAMS ((rtx insn, rtx link, rtx def_insn, int cost));$/;"	m	struct:gcc_target::sched
adjust_offset_for_component_ref	alias.c	/^adjust_offset_for_component_ref (x, offset)$/;"	f	file:
adjust_priority	haifa-sched.c	/^adjust_priority (prev)$/;"	f	file:
adjust_priority	target.h	/^    int (* adjust_priority) PARAMS ((rtx, int));$/;"	m	struct:gcc_target::sched
adjust_stack	explow.c	/^adjust_stack (adjust)$/;"	f
adjust_trampoline_addr	function.c	/^adjust_trampoline_addr (tramp)$/;"	f	file:
ae_gen	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
ae_in	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
ae_kill	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
ae_out	gcse.c	/^static sbitmap *ae_kill, *ae_gen, *ae_in, *ae_out;$/;"	v	file:
affix_data_type	c-aux-info.c	/^affix_data_type (param)$/;"	f	file:
after_function_constants	varasm.c	/^static struct deferred_constant *after_function_constants;$/;"	v	typeref:struct:deferred_constant	file:
after_head	cppinit.c	/^  struct search_path *after_head, *after_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::search_path	file:
after_tail	cppinit.c	/^  struct search_path *after_head, *after_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::	file:
age	varray.h	/^  unsigned age;$/;"	m	struct:const_equiv_data
aggregate_value_p	function.c	/^aggregate_value_p (exp)$/;"	f
aka	except.c	/^  bitmap aka;$/;"	m	struct:eh_region	file:
alg_add	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	enum:alg_code	file:
alg_add_factor	expmed.c	/^		  alg_add_factor, alg_sub_factor,$/;"	e	enum:alg_code	file:
alg_add_t2_m	expmed.c	/^		  alg_add_t2_m, alg_sub_t2_m,$/;"	e	enum:alg_code	file:
alg_add_t_m2	expmed.c	/^		  alg_add_t_m2, alg_sub_t_m2,$/;"	e	enum:alg_code	file:
alg_code	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	g	file:
alg_factor	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	enum:alg_code	file:
alg_m	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	e	enum:alg_code	file:
alg_shift	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	e	enum:alg_code	file:
alg_shiftop	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	enum:alg_code	file:
alg_sub_factor	expmed.c	/^		  alg_add_factor, alg_sub_factor,$/;"	e	enum:alg_code	file:
alg_sub_t2_m	expmed.c	/^		  alg_add_t2_m, alg_sub_t2_m,$/;"	e	enum:alg_code	file:
alg_sub_t_m2	expmed.c	/^		  alg_add_t_m2, alg_sub_t_m2,$/;"	e	enum:alg_code	file:
alg_subtract	expmed.c	/^		  alg_add, alg_subtract, alg_factor, alg_shiftop };$/;"	e	enum:alg_code	file:
alg_zero	expmed.c	/^enum alg_code { alg_zero, alg_m, alg_shift,$/;"	e	enum:alg_code	file:
algorithm	expmed.c	/^struct algorithm$/;"	s	file:
alias	rtl.h	/^  HOST_WIDE_INT alias;		\/* Memory alias set.  *\/$/;"	m	struct:__anon8
alias_invariant	alias.c	/^static rtx *alias_invariant;$/;"	v	file:
alias_set	alias.c	/^  HOST_WIDE_INT alias_set;$/;"	m	struct:alias_set_entry	file:
alias_set	tree.h	/^  HOST_WIDE_INT alias_set;$/;"	m	struct:tree_type
alias_set_entry	alias.c	/^typedef struct alias_set_entry$/;"	s	file:
alias_set_entry	alias.c	/^} *alias_set_entry;$/;"	t	typeref:struct:alias_set_entry	file:
alias_sets	alias.c	/^static splay_tree alias_sets;$/;"	v	file:
alias_sets_conflict_p	alias.c	/^alias_sets_conflict_p (set1, set2)$/;"	f
aliases_everything_p	alias.c	/^aliases_everything_p (mem)$/;"	f	file:
align	alloca.c	/^  char align[ALIGN_SIZE];	\/* To force sizeof(header).  *\/$/;"	m	union:hdr	file:
align	function.c	/^  unsigned int align;$/;"	m	struct:temp_slot	file:
align	rtl.h	/^  unsigned int align;		\/* Alignment of MEM in bits.  *\/$/;"	m	struct:__anon8
align	tree.h	/^    struct {unsigned int align : 24; unsigned int off_align : 8;} a;$/;"	m	struct:tree_decl::__anon18::__anon19
align	tree.h	/^  unsigned int align;$/;"	m	struct:tree_type
align	varasm.c	/^  unsigned int align;$/;"	m	struct:pool_constant	file:
align_functions	toplev.c	/^int align_functions;$/;"	v
align_functions_log	toplev.c	/^int align_functions_log;$/;"	v
align_fuzz	final.c	/^align_fuzz (start, end, known_align_log, growth)$/;"	f	file:
align_jumps	toplev.c	/^int align_jumps;$/;"	v
align_jumps_log	toplev.c	/^int align_jumps_log;$/;"	v
align_jumps_max_skip	toplev.c	/^int align_jumps_max_skip;$/;"	v
align_labels	toplev.c	/^int align_labels;$/;"	v
align_labels_log	toplev.c	/^int align_labels_log;$/;"	v
align_labels_max_skip	toplev.c	/^int align_labels_max_skip;$/;"	v
align_loops	toplev.c	/^int align_loops;$/;"	v
align_loops_log	toplev.c	/^int align_loops_log;$/;"	v
align_loops_max_skip	toplev.c	/^int align_loops_max_skip;$/;"	v
align_stack	c-pragma.c	/^typedef struct align_stack$/;"	s	file:
align_stack	c-pragma.c	/^} align_stack;$/;"	t	typeref:struct:align_stack	file:
aligned_op	target.h	/^    } aligned_op, unaligned_op;$/;"	m	struct:gcc_target::asm_out	typeref:struct:gcc_target::asm_out::asm_int_op
aligned_operand	i386.c	/^aligned_operand (op, mode)$/;"	f
aligned_regs	calls.c	/^  rtx *aligned_regs;$/;"	m	struct:arg_data	file:
alignment	c-pragma.c	/^  int                  alignment;$/;"	m	struct:align_stack	file:
alignment	final.c	/^  short alignment;$/;"	m	struct:label_alignment	file:
alignment_mask	obstack.h	/^  int   alignment_mask;		\/* Mask of alignment for each object. *\/$/;"	m	struct:obstack
alignment_pad	calls.c	/^  struct args_size alignment_pad;$/;"	m	struct:arg_data	typeref:struct:arg_data::args_size	file:
alignment_stack	c-pragma.c	/^static struct align_stack * alignment_stack = NULL;$/;"	v	typeref:struct:align_stack	file:
all	stmt.c	/^  struct nesting *all;$/;"	m	struct:nesting	typeref:struct:nesting::nesting	file:
all_blocks	df.h	/^  bitmap all_blocks;		\/* All blocks in CFG.  *\/$/;"	m	struct:df
all_blocks	function.c	/^all_blocks (block, vector)$/;"	f	file:
all_cases_count	stmt.c	/^all_cases_count (type, sparseness)$/;"	f
all_include_files	cpphash.h	/^  struct splay_tree_s *all_include_files;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::splay_tree_s
all_kinds	tree.c	/^  all_kinds$/;"	e	enum:__anon88	file:
all_ones_mask_p	fold-const.c	/^all_ones_mask_p (mask, size)$/;"	f	file:
all_prefix_attributes	c-parse.c	/^static tree all_prefix_attributes = NULL_TREE;$/;"	v	file:
all_reduced	loop.h	/^  unsigned all_reduced : 1;	\/* 1 if all givs using this biv have$/;"	m	struct:iv_class
alloc_EXPR_LIST	lists.c	/^alloc_EXPR_LIST (kind, val, next)$/;"	f
alloc_INSN_LIST	lists.c	/^alloc_INSN_LIST (val, next)$/;"	f
alloc_anon	ggc-page.c	/^alloc_anon (pref, size)$/;"	f	file:
alloc_aux_for_block	cfg.c	/^alloc_aux_for_block (bb, size)$/;"	f
alloc_aux_for_blocks	cfg.c	/^alloc_aux_for_blocks (size)$/;"	f
alloc_aux_for_edge	cfg.c	/^alloc_aux_for_edge (e, size)$/;"	f
alloc_aux_for_edges	cfg.c	/^alloc_aux_for_edges (size)$/;"	f
alloc_avail_expr_mem	gcse.c	/^alloc_avail_expr_mem (n_blocks, n_exprs)$/;"	f	file:
alloc_block	cfg.c	/^alloc_block ()$/;"	f
alloc_code_hoist_mem	gcse.c	/^alloc_code_hoist_mem (n_blocks, n_exprs)$/;"	f	file:
alloc_cprop_mem	gcse.c	/^alloc_cprop_mem (n_blocks, n_sets)$/;"	f	file:
alloc_expansion_token	cppmacro.c	/^alloc_expansion_token (pfile, macro)$/;"	f	file:
alloc_expr_hash_table	gcse.c	/^alloc_expr_hash_table (n_insns)$/;"	f	file:
alloc_failed	obstack.h	/^  unsigned alloc_failed:1;	\/* No longer used, as we now call the failed$/;"	m	struct:obstack
alloc_gcse_mem	gcse.c	/^alloc_gcse_mem (f)$/;"	f	file:
alloc_node	cpphash.c	/^alloc_node (table)$/;"	f	file:
alloc_node	hashtable.h	/^  hashnode (*alloc_node) PARAMS ((hash_table *));$/;"	m	struct:ht
alloc_node	stringpool.c	/^alloc_node (table)$/;"	f	file:
alloc_page	ggc-page.c	/^alloc_page (order)$/;"	f	file:
alloc_pre_mem	gcse.c	/^alloc_pre_mem (n_blocks, n_exprs)$/;"	f	file:
alloc_qty	local-alloc.c	/^alloc_qty (regno, mode, size, birth)$/;"	f	file:
alloc_rd_mem	gcse.c	/^alloc_rd_mem (n_blocks, n_insns)$/;"	f	file:
alloc_reg_set_mem	gcse.c	/^alloc_reg_set_mem (n_regs)$/;"	f	file:
alloc_set_hash_table	gcse.c	/^alloc_set_hash_table (n_insns)$/;"	f	file:
alloc_size	ggc-page.c	/^  size_t alloc_size;$/;"	m	struct:page_group	file:
alloca	c-parse.c	1636;"	d	file:
alloca	libiberty.h	297;"	d
alloca	libiberty.h	301;"	d
alloca	libiberty.h	303;"	d
allocate	splay-tree.h	/^  splay_tree_allocate_fn allocate;$/;"	m	struct:splay_tree_s
allocate_bb_life_data	flow.c	/^allocate_bb_life_data ()$/;"	f
allocate_data	splay-tree.h	/^  void *allocate_data;$/;"	m	struct:splay_tree_s
allocate_dynamic_stack_space	explow.c	/^allocate_dynamic_stack_space (size, target, known_align)$/;"	f
allocate_initial_values	integrate.c	/^allocate_initial_values (reg_equiv_memory_loc)$/;"	f
allocate_reg_info	regclass.c	/^allocate_reg_info (num_regs, new_p, renumber_p)$/;"	f
allocate_reg_life_data	flow.c	/^allocate_reg_life_data ()$/;"	f
allocate_reload_reg	reload1.c	/^allocate_reload_reg (chain, r, last_reload)$/;"	f	file:
allocated	dwarf2out.c	/^  unsigned allocated;$/;"	m	struct:file_table	file:
allocated	ggc-page.c	/^  size_t allocated;$/;"	m	struct:globals	file:
allocated	line-map.h	/^  unsigned int allocated;$/;"	m	struct:line_maps
allocated_last_gc	ggc-page.c	/^  size_t allocated_last_gc;$/;"	m	struct:globals	file:
allocation	ggc-page.c	/^  char *allocation;$/;"	m	struct:page_group	file:
allocno	global.c	/^static struct allocno *allocno;$/;"	v	typeref:struct:allocno	file:
allocno	global.c	/^struct allocno$/;"	s	file:
allocno_compare	global.c	/^allocno_compare (v1p, v2p)$/;"	f	file:
allocno_order	global.c	/^static int *allocno_order;$/;"	v	file:
allocno_row_words	global.c	/^static int allocno_row_words;$/;"	v	file:
allocnos_live	global.c	/^static INT_TYPE *allocnos_live;$/;"	v	file:
allowed	except.c	/^    } allowed;$/;"	m	union:eh_region::__anon21	typeref:struct:eh_region::__anon21::__anon24	file:
alt_end_label	stmt.c	/^	  rtx alt_end_label;$/;"	m	struct:nesting::__anon67::__anon69	file:
altclass	regclass.c	/^  char altclass;$/;"	m	struct:reg_pref	file:
alter_cond	final.c	/^alter_cond (cond)$/;"	f	file:
alter_reg	reload1.c	/^alter_reg (i, from_reg)$/;"	f	file:
alter_subreg	final.c	/^alter_subreg (xp)$/;"	f
alternate_class	local-alloc.c	/^  enum reg_class alternate_class;$/;"	m	struct:qty	typeref:enum:qty::reg_class	file:
alternative_allows_memconst	reload.c	/^alternative_allows_memconst (constraint, altnum)$/;"	f	file:
always_computable	loop.h	/^  unsigned always_computable : 1;\/* 1 if this value is computable every$/;"	m	struct:induction
always_executed	loop.h	/^  unsigned always_executed : 1; \/* 1 if this set occurs each iteration.  *\/$/;"	m	struct:induction
ancestor_edges	sched-rgn.c	/^static edgeset *ancestor_edges;$/;"	v	file:
and_optab	optabs.h	175;"	d
and_reg_cond	flow.c	/^and_reg_cond (old, x, add)$/;"	f	file:
angled_headers	cpphash.h	/^  unsigned char angled_headers;$/;"	m	struct:lexer_state
announce_function	diagnostic.c	/^announce_function (decl)$/;"	f
anon_aggr_type_p	c-decl.c	/^anon_aggr_type_p (node)$/;"	f
anon_aggr_type_p	langhooks.h	/^  int (*anon_aggr_type_p) PARAMS ((union tree_node *));$/;"	m	struct:lang_hooks_for_tree_inlining
anonymous_types	sdbout.c	/^static tree anonymous_types;$/;"	v	file:
ansi	c-aux-info.c	/^  ansi,$/;"	e	enum:formals_style_enum	file:
answer	cpplib.c	/^struct answer$/;"	s	file:
answers	cpplib.h	/^    struct answer *answers;		\/* Answers to an assertion.  *\/$/;"	m	union:cpp_hashnode::__anon87	typeref:struct:cpp_hashnode::__anon87::answer
anti_adjust_stack	explow.c	/^anti_adjust_stack (adjust)$/;"	f
anti_dependence	alias.c	/^anti_dependence (mem, x)$/;"	f
anti_dependency_cache	sched-deps.c	/^static sbitmap *anti_dependency_cache;$/;"	v	file:
antic	lcm.c	/^static sbitmap *antic;$/;"	v	file:
antic_occr	gcse.c	/^  struct occr *antic_occr;$/;"	m	struct:expr	typeref:struct:expr::occr	file:
antloc	gcse.c	/^static sbitmap *antloc;$/;"	v	file:
any_condjump_p	jump.c	/^any_condjump_p (insn)$/;"	f
any_pending_cleanups	stmt.c	/^any_pending_cleanups (this_contour)$/;"	f
any_uncondjump_p	jump.c	/^any_uncondjump_p (insn)$/;"	f
anything_ok	recog.h	/^  unsigned int anything_ok:1;$/;"	m	struct:operand_alternative
app_disable	final.c	/^app_disable ()$/;"	f
app_enable	final.c	/^app_enable ()$/;"	f
app_on	final.c	/^static int app_on;$/;"	v	file:
append_include_chain	cppinit.c	/^append_include_chain (pfile, dir, path, cxx_aware)$/;"	f	file:
append_random_chars	tree.c	/^append_random_chars (template)$/;"	f	file:
apply_args_mode	builtins.c	/^static enum machine_mode apply_args_mode[FIRST_PSEUDO_REGISTER];$/;"	v	typeref:enum:machine_mode	file:
apply_args_reg_offset	builtins.c	/^static int apply_args_reg_offset[FIRST_PSEUDO_REGISTER];$/;"	v	file:
apply_args_register_offset	builtins.c	/^apply_args_register_offset (regno)$/;"	f
apply_args_size	builtins.c	/^apply_args_size ()$/;"	f	file:
apply_args_value	function.h	166;"	d
apply_change_group	recog.c	/^apply_change_group ()$/;"	f
apply_delayed_renames	ssa.c	/^apply_delayed_renames (c)$/;"	f	file:
apply_distributive_law	combine.c	/^apply_distributive_law (x)$/;"	f	file:
apply_pragma_weak	c-pragma.c	/^apply_pragma_weak (decl, value)$/;"	f	file:
apply_result_mode	builtins.c	/^static enum machine_mode apply_result_mode[FIRST_PSEUDO_REGISTER];$/;"	v	typeref:enum:machine_mode	file:
apply_result_size	builtins.c	/^apply_result_size ()$/;"	f	file:
approx_reg_cost	cse.c	/^approx_reg_cost (x)$/;"	f	file:
approx_reg_cost_1	cse.c	/^approx_reg_cost_1 (xp, data)$/;"	f	file:
approx_sqrt	hashtable.c	/^approx_sqrt (x)$/;"	f
arange_table	dwarf2out.c	/^static dw_die_ref *arange_table;$/;"	v	file:
arange_table_allocated	dwarf2out.c	/^static unsigned arange_table_allocated;$/;"	v	file:
arange_table_in_use	dwarf2out.c	/^static unsigned arange_table_in_use;$/;"	v	file:
arc_eq	conflict.c	/^arc_eq (arcp1, arcp2)$/;"	f	file:
arc_hash	conflict.c	/^arc_hash (arcp)$/;"	f	file:
arc_hash_table	conflict.c	/^  htab_t arc_hash_table;$/;"	m	struct:conflict_graph_def	file:
arc_obstack	conflict.c	/^  struct obstack arc_obstack;$/;"	m	struct:conflict_graph_def	typeref:struct:conflict_graph_def::obstack	file:
arg	cppinit.c	/^  const char *arg;$/;"	m	struct:pending_option	file:
arg	toplev.c	/^  const char *const arg;$/;"	m	struct:__anon60	file:
arg1	fold-const.c	/^  tree arg1;			\/* Input: value to convert.  *\/$/;"	m	struct:fc_args	file:
arg_data	calls.c	/^struct arg_data$/;"	s	file:
arg_index	cpplib.h	/^  unsigned short arg_index;		\/* Macro argument index.  *\/$/;"	m	struct:cpp_hashnode
arg_no	cpplib.h	/^    unsigned int arg_no;	\/* Argument no. for a CPP_MACRO_ARG.  *\/$/;"	m	union:cpp_token::__anon85
arg_num	c-format.c	/^  int arg_num;$/;"	m	struct:format_wanted_type	file:
arg_offset_rtx	function.h	/^  rtx arg_offset_rtx;$/;"	m	struct:function
arg_pointer_rtx	rtl.h	1630;"	d
arg_pointer_save_area	function.h	533;"	d
arg_pointer_save_area_init	function.h	/^  unsigned int arg_pointer_save_area_init : 1;$/;"	m	struct:function
args_info	function.h	/^  CUMULATIVE_ARGS args_info;$/;"	m	struct:function
args_ptr	diagnostic.h	/^  va_list *args_ptr;$/;"	m	struct:diagnostic_context
args_size	dwarf2out.c	/^static long args_size;$/;"	v	file:
args_size	expr.h	/^struct args_size$/;"	s
args_size	function.h	/^  int args_size;$/;"	m	struct:function
argument_registers	alias.c	/^static HARD_REG_SET argument_registers;$/;"	v	file:
arguments	tree.h	/^  tree arguments;	\/* Also used for DECL_FIELD_OFFSET *\/$/;"	m	struct:tree_decl
arith_or_logical_operator	i386.c	/^arith_or_logical_operator (op, mode)$/;"	f
array	basic-block.h	/^  struct loop *array;$/;"	m	struct:loops	typeref:struct:loops::loop
array	dwarf2out.c	/^  long *array;$/;"	m	struct:dw_fp_struct	file:
array	loop.h	/^  struct loop_reg *array;	\/* Register usage info. array.  *\/$/;"	m	struct:loop_regs	typeref:struct:loop_regs::loop_reg
array_size_for_constructor	varasm.c	/^array_size_for_constructor (val)$/;"	f	file:
array_type_class	typeclass.h	/^  array_type_class, string_type_class, set_type_class, file_type_class,$/;"	e	enum:type_class
array_type_nelts	tree.c	/^array_type_nelts (type)$/;"	f
artificial_flag	tree.h	/^  unsigned artificial_flag : 1;$/;"	m	struct:tree_decl
asctoe	real.c	/^asctoe (s, y)$/;"	f	file:
asctoe113	real.c	/^asctoe113 (s, y)$/;"	f	file:
asctoe24	real.c	/^asctoe24 (s, y)$/;"	f	file:
asctoe53	real.c	/^asctoe53 (s, y)$/;"	f	file:
asctoe64	real.c	/^asctoe64 (s, y)$/;"	f	file:
asctoeg	real.c	/^asctoeg (ss, y, oprec)$/;"	f	file:
ashl_optab	optabs.h	178;"	d
ashr_optab	optabs.h	180;"	d
asm_dialect	i386.h	/^enum asm_dialect {$/;"	g
asm_emit_uninitialised	varasm.c	/^asm_emit_uninitialised (decl, name, size, rounded)$/;"	f	file:
asm_file_name	toplev.c	/^char *asm_file_name;$/;"	v
asm_fprintf	final.c	/^asm_fprintf VPARAMS ((FILE *file, const char *p, ...))$/;"	f
asm_insn_count	final.c	/^asm_insn_count (body)$/;"	f	file:
asm_int_op	target.h	/^    struct asm_int_op$/;"	s	struct:gcc_target::asm_out
asm_noperands	recog.c	/^asm_noperands (body)$/;"	f
asm_operand_ok	recog.c	/^asm_operand_ok (op, constraint)$/;"	f
asm_out	target.h	/^  struct asm_out$/;"	s	struct:gcc_target
asm_out	target.h	/^  } asm_out;$/;"	m	struct:gcc_target	typeref:struct:gcc_target::asm_out
asm_out_file	toplev.c	/^FILE *asm_out_file;$/;"	v
asm_output_aligned_bss	varasm.c	/^asm_output_aligned_bss (file, decl, name, size, align)$/;"	f	file:
asm_output_bss	varasm.c	/^asm_output_bss (file, decl, name, size, rounded)$/;"	f	file:
asm_written_flag	tree.h	/^  unsigned asm_written_flag: 1;$/;"	m	struct:tree_common
asmfile	dbxout.c	/^static FILE *asmfile;$/;"	v	file:
asmspec	c-typeck.c	/^  const char *asmspec;$/;"	m	struct:initializer_stack	file:
asprintf	asprintf.c	/^asprintf VPARAMS ((char **buf, const char *fmt, ...))$/;"	f
assemble_alias	varasm.c	/^assemble_alias (decl, target)$/;"	f
assemble_align	varasm.c	/^assemble_align (align)$/;"	f
assemble_aligned_integer	output.h	346;"	d
assemble_asm	varasm.c	/^assemble_asm (string)$/;"	f
assemble_constant_align	varasm.c	/^assemble_constant_align (exp)$/;"	f
assemble_end_function	varasm.c	/^assemble_end_function (decl, fnname)$/;"	f
assemble_external	varasm.c	/^assemble_external (decl)$/;"	f
assemble_external_libcall	varasm.c	/^assemble_external_libcall (fun)$/;"	f
assemble_global	varasm.c	/^assemble_global (name)$/;"	f
assemble_integer	varasm.c	/^assemble_integer (x, size, align, force)$/;"	f
assemble_integer_with_op	varasm.c	/^assemble_integer_with_op (op, x)$/;"	f
assemble_label	varasm.c	/^assemble_label (name)$/;"	f
assemble_name	varasm.c	/^assemble_name (file, name)$/;"	f
assemble_real	varasm.c	/^assemble_real (d, mode, align)$/;"	f
assemble_start_function	varasm.c	/^assemble_start_function (decl, fnname)$/;"	f
assemble_static_space	varasm.c	/^assemble_static_space (size)$/;"	f
assemble_string	varasm.c	/^assemble_string (p, size)$/;"	f
assemble_trampoline_template	varasm.c	/^assemble_trampoline_template ()$/;"	f
assemble_variable	varasm.c	/^assemble_variable (decl, top_level, at_end, dont_output_data)$/;"	f
assemble_vtable_entry	varasm.c	/^assemble_vtable_entry (symbol, offset)$/;"	f
assemble_vtable_inherit	varasm.c	/^assemble_vtable_inherit (child, parent)$/;"	f
assemble_zeros	varasm.c	/^assemble_zeros (size)$/;"	f
assembler_name	tree.h	/^  tree assembler_name;$/;"	m	struct:tree_decl
assign_386_stack_local	i386.c	/^assign_386_stack_local (mode, n)$/;"	f
assign_filter_values	except.c	/^assign_filter_values ()$/;"	f	file:
assign_parms	function.c	/^assign_parms (fndecl)$/;"	f
assign_stack_local	function.c	/^assign_stack_local (mode, size, align)$/;"	f
assign_stack_local_1	function.c	/^assign_stack_local_1 (mode, size, align, function)$/;"	f	file:
assign_stack_temp	function.c	/^assign_stack_temp (mode, size, keep)$/;"	f
assign_stack_temp_for_type	function.c	/^assign_stack_temp_for_type (mode, size, keep, type)$/;"	f
assign_symbol_names	dwarf2out.c	/^assign_symbol_names (die)$/;"	f	file:
assign_temp	function.c	/^assign_temp (type_or_decl, keep, memory_required, dont_promote)$/;"	f
assign_type_number	xcoffout.c	/^assign_type_number (syms, name, number)$/;"	f	file:
associate_trees	fold-const.c	/^associate_trees (t1, t2, code, type)$/;"	f	file:
athlon_cost	i386.c	/^struct processor_costs athlon_cost = {$/;"	v	typeref:struct:processor_costs	file:
athlon_directdec_unit_ready_cost	insn-attrtab.c	/^athlon_directdec_unit_ready_cost (insn)$/;"	f
athlon_fp_add_unit_ready_cost	insn-attrtab.c	/^athlon_fp_add_unit_ready_cost (insn)$/;"	f
athlon_fp_mul_unit_ready_cost	insn-attrtab.c	/^athlon_fp_mul_unit_ready_cost (insn)$/;"	f
athlon_fp_muladd_unit_ready_cost	insn-attrtab.c	/^athlon_fp_muladd_unit_ready_cost (insn)$/;"	f
athlon_fp_store_unit_ready_cost	insn-attrtab.c	/^athlon_fp_store_unit_ready_cost (insn)$/;"	f
athlon_fp_unit_ready_cost	insn-attrtab.c	/^athlon_fp_unit_ready_cost (insn)$/;"	f
athlon_ieu_unit_blockage	insn-attrtab.c	/^athlon_ieu_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
athlon_ieu_unit_blockage_range	insn-attrtab.c	/^athlon_ieu_unit_blockage_range (insn)$/;"	f
athlon_ieu_unit_conflict_cost	insn-attrtab.c	/^athlon_ieu_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
athlon_ieu_unit_ready_cost	insn-attrtab.c	/^athlon_ieu_unit_ready_cost (insn)$/;"	f
athlon_load_unit_ready_cost	insn-attrtab.c	/^athlon_load_unit_ready_cost (insn)$/;"	f
athlon_muldiv_unit_blockage	insn-attrtab.c	/^athlon_muldiv_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
athlon_muldiv_unit_blockage_range	insn-attrtab.c	/^athlon_muldiv_unit_blockage_range (insn)$/;"	f
athlon_muldiv_unit_conflict_cost	insn-attrtab.c	/^athlon_muldiv_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
athlon_muldiv_unit_ready_cost	insn-attrtab.c	/^athlon_muldiv_unit_ready_cost (insn)$/;"	f
athlon_vectordec_unit_blockage	insn-attrtab.c	/^athlon_vectordec_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
athlon_vectordec_unit_blockage_range	insn-attrtab.c	/^athlon_vectordec_unit_blockage_range (insn)$/;"	f
athlon_vectordec_unit_ready_cost	insn-attrtab.c	/^athlon_vectordec_unit_ready_cost (insn)$/;"	f
attempt_auto_inc	flow.c	/^attempt_auto_inc (pbi, inc, insn, mem, incr, incr_reg)$/;"	f	file:
attr_athlon_decode	insn-attr.h	/^enum attr_athlon_decode {ATHLON_DECODE_DIRECT, ATHLON_DECODE_VECTOR};$/;"	g
attr_athlon_fpunits	insn-attr.h	/^enum attr_athlon_fpunits {ATHLON_FPUNITS_NONE, ATHLON_FPUNITS_STORE, ATHLON_FPUNITS_MUL, ATHLON_FPUNITS_ADD, ATHLON_FPUNITS_MULADD, ATHLON_FPUNITS_ANY};$/;"	g
attr_checksum	dwarf2out.c	/^attr_checksum (at, ctx)$/;"	f	file:
attr_cpu	insn-attr.h	/^enum attr_cpu {CPU_I386, CPU_I486, CPU_PENTIUM, CPU_PENTIUMPRO, CPU_K6, CPU_ATHLON, CPU_PENTIUM4};$/;"	g
attr_fp_int_src	insn-attr.h	/^enum attr_fp_int_src {FP_INT_SRC_FALSE, FP_INT_SRC_TRUE};$/;"	g
attr_imm_disp	insn-attr.h	/^enum attr_imm_disp {IMM_DISP_FALSE, IMM_DISP_TRUE, IMM_DISP_UNKNOWN};$/;"	g
attr_memory	insn-attr.h	/^enum attr_memory {MEMORY_NONE, MEMORY_LOAD, MEMORY_STORE, MEMORY_BOTH, MEMORY_UNKNOWN};$/;"	g
attr_mode	insn-attr.h	/^enum attr_mode {MODE_UNKNOWN, MODE_NONE, MODE_QI, MODE_HI, MODE_SI, MODE_DI, MODE_UNKNOWNFP, MODE_SF, MODE_DF, MODE_XF, MODE_TI};$/;"	g
attr_pent_pair	insn-attr.h	/^enum attr_pent_pair {PENT_PAIR_UV, PENT_PAIR_PU, PENT_PAIR_PV, PENT_PAIR_NP};$/;"	g
attr_pent_prefix	insn-attr.h	/^enum attr_pent_prefix {PENT_PREFIX_FALSE, PENT_PREFIX_TRUE};$/;"	g
attr_ppro_uops	insn-attr.h	/^enum attr_ppro_uops {PPRO_UOPS_ONE, PPRO_UOPS_FEW, PPRO_UOPS_MANY};$/;"	g
attr_type	insn-attr.h	/^enum attr_type {TYPE_OTHER, TYPE_MULTI, TYPE_ALU1, TYPE_NEGNOT, TYPE_ALU, TYPE_ICMP, TYPE_TEST, TYPE_IMOV, TYPE_IMOVX, TYPE_LEA, TYPE_INCDEC, TYPE_ISHIFT, TYPE_IMUL, TYPE_IDIV, TYPE_IBR, TYPE_SETCC, TYPE_PUSH, TYPE_POP, TYPE_CALL, TYPE_CALLV, TYPE_ICMOV, TYPE_FMOV, TYPE_FOP, TYPE_FOP1, TYPE_FSGN, TYPE_FMUL, TYPE_FDIV, TYPE_FPSPC, TYPE_FCMOV, TYPE_FCMP, TYPE_FXCH, TYPE_STR, TYPE_CLD, TYPE_SSE, TYPE_MMX, TYPE_FISTP};$/;"	g
attribute_flags	tree.h	/^enum attribute_flags$/;"	g
attribute_hash_list	tree.c	/^attribute_hash_list (list)$/;"	f
attribute_list_contained	tree.c	/^attribute_list_contained (l1, l2)$/;"	f
attribute_list_equal	tree.c	/^attribute_list_equal (l1, l2)$/;"	f
attribute_spec	tree.h	/^struct attribute_spec$/;"	s
attribute_table	target.h	/^  const struct attribute_spec *attribute_table;$/;"	m	struct:gcc_target	typeref:struct:gcc_target::attribute_spec
attribute_tables	attribs.c	/^static const struct attribute_spec *attribute_tables[4];$/;"	v	typeref:struct:attribute_spec	file:
attributes	tree.h	/^  tree attributes;$/;"	m	struct:tree_decl
attributes	tree.h	/^  tree attributes;$/;"	m	struct:tree_type
attributes_initialized	attribs.c	/^static bool attributes_initialized = false;$/;"	v	file:
autinc_from	expr.c	/^  int autinc_from;$/;"	m	struct:move_by_pieces	file:
autinc_to	expr.c	/^  int autinc_to;$/;"	m	struct:move_by_pieces	file:
autinc_to	expr.c	/^  int autinc_to;$/;"	m	struct:store_by_pieces	file:
auto_inc_dec_reg_p	regclass.c	/^auto_inc_dec_reg_p (reg, mode)$/;"	f	file:
auto_inc_opt	loop.h	/^  unsigned auto_inc_opt : 1;	\/* 1 if this giv had its increment output next$/;"	m	struct:induction
auto_inc_p	rtlanal.c	/^auto_inc_p (x)$/;"	f
auto_var_in_fn_p	langhooks.h	/^  int (*auto_var_in_fn_p) PARAMS ((union tree_node *, union tree_node *));$/;"	m	struct:lang_hooks_for_tree_inlining
aux	basic-block.h	/^  void *aux;$/;"	m	struct:basic_block_def
aux	basic-block.h	/^  void *aux;$/;"	m	struct:edge_def
aux	basic-block.h	/^  void *aux;$/;"	m	struct:loop
aux_info_file	toplev.c	/^FILE *aux_info_file;$/;"	v
aux_info_file_name	toplev.c	/^static char *aux_info_file_name;$/;"	v	file:
avail_occr	gcse.c	/^  struct occr *avail_occr;$/;"	m	struct:expr	typeref:struct:expr::occr	file:
avoid_constant_pool_reference	simplify-rtx.c	/^avoid_constant_pool_reference (x)$/;"	f
avoid_paste	cpphash.h	/^  cpp_token avoid_paste;$/;"	m	struct:cpp_reader
b	ifcvt.c	/^  rtx x, a, b;$/;"	m	struct:noce_if_info	file:
b_kind	tree.c	/^  b_kind,$/;"	e	enum:__anon88	file:
back_branch_in_range_p	unroll.c	/^back_branch_in_range_p (loop, insn)$/;"	f
back_edge	predict.c	/^  int back_edge:1;$/;"	m	struct:edge_info_def	file:
back_edge_of_syntactic_loop_p	cfgrtl.c	/^back_edge_of_syntactic_loop_p (bb1, bb2)$/;"	f	file:
back_edge_prob	predict.c	/^  volatile double back_edge_prob;$/;"	m	struct:edge_info_def	file:
backup_to	cpphash.h	/^  const unsigned char *backup_to; \/* if peeked character is not wanted *\/$/;"	m	struct:cpp_buffer
bad_flag_pairs	c-format.c	/^  const format_flag_pair *const bad_flag_pairs;$/;"	m	struct:__anon43	file:
bad_spill_regs	reload1.c	/^static HARD_REG_SET bad_spill_regs;$/;"	v	file:
bad_spill_regs_global	reload1.c	/^static HARD_REG_SET bad_spill_regs_global;$/;"	v	file:
balance	c-typeck.c	/^  int balance;$/;"	m	struct:init_node	file:
balance	stmt.c	/^  int			balance;$/;"	m	struct:case_node	file:
balance_case_nodes	stmt.c	/^balance_case_nodes (head, parent)$/;"	f	file:
base	c-decl.c	/^  struct language_function base;$/;"	m	struct:c_language_function	typeref:struct:c_language_function::language_function	file:
base	c-lex.c	/^  int base;$/;"	m	struct:pf_args	file:
base	c-tree.h	/^  struct c_lang_decl base;$/;"	m	struct:lang_decl	typeref:struct:lang_decl::c_lang_decl
base	cpphash.h	/^  cpp_token *base, *limit;$/;"	m	struct:tokenrun
base	cpphash.h	/^  unsigned char *base, *cur, *limit;$/;"	m	struct:_cpp_buff
base	ggc-common.c	/^  void *base;$/;"	m	struct:ggc_root	file:
base	i386.c	/^  rtx base, index, disp;$/;"	m	struct:ix86_address	file:
base	reload.c	/^  rtx base;		\/* Base address for MEM.  *\/$/;"	m	struct:decomposition	file:
base	varasm.c	/^  rtx base;$/;"	m	struct:addr_const	file:
base_address	loop.c	/^  rtx base_address;		\/* Start prefetching from this address plus$/;"	m	struct:prefetch_info	file:
base_after_vec	rtl.h	/^  unsigned base_after_vec: 1; \/* BASE is after the ADDR_DIFF_VEC.  *\/$/;"	m	struct:__anon7
base_alias_check	alias.c	/^base_alias_check (x, y, x_mode, y_mode)$/;"	f	file:
base_context	cpphash.h	/^  struct cpp_context base_context;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::cpp_context
base_label_num	emit-rtl.c	/^static int base_label_num;$/;"	v	file:
base_offset	dwarf2out.c	/^  long base_offset;$/;"	m	struct:cfa_loc	file:
base_offset	function.c	/^  HOST_WIDE_INT base_offset;$/;"	m	struct:temp_slot	file:
base_run	cpphash.h	/^  tokenrun base_run, *cur_run;$/;"	m	struct:cpp_reader
base_type_die	dwarf2out.c	/^base_type_die (type)$/;"	f	file:
based_loc_descr	dwarf2out.c	/^based_loc_descr (reg, offset)$/;"	f	file:
basic_block	basic-block.h	/^} *basic_block;$/;"	t	typeref:struct:basic_block_def
basic_block	regs.h	/^  int basic_block;		\/* # of basic blocks (REG n) is used in *\/$/;"	m	struct:reg_info_def
basic_block_def	basic-block.h	/^typedef struct basic_block_def {$/;"	s
basic_block_for_insn	cfgrtl.c	/^varray_type basic_block_for_insn;$/;"	v
basic_block_info	cfg.c	/^varray_type basic_block_info;$/;"	v
basic_induction_var	loop.c	/^basic_induction_var (loop, x, mode, dest_reg, p, inc_val, mult_val, location)$/;"	f	file:
bb	flow.c	/^  basic_block bb;$/;"	m	struct:propagate_block_info	file:
bb	rtl.h	/^  struct basic_block_def *bb;$/;"	m	union:rtunion_def	typeref:struct:rtunion_def::basic_block_def
bb	varray.h	/^  struct basic_block_def *bb[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::basic_block_def
bb_deps	sched-rgn.c	/^static struct deps *bb_deps;$/;"	v	typeref:struct:deps	file:
bb_file	profile.c	/^static FILE *bb_file;$/;"	v	file:
bb_flags	cfgcleanup.c	/^enum bb_flags$/;"	g	file:
bb_info	df.h	/^struct bb_info$/;"	s
bb_info	lcm.c	/^struct bb_info$/;"	s	file:
bb_info	profile.c	/^struct bb_info$/;"	s	file:
bb_tick	resource.c	/^  int bb_tick;			\/* Generation count of basic block info.  *\/$/;"	m	struct:target_info	file:
bb_ticks	resource.c	/^static int *bb_ticks;$/;"	v	file:
bbg_file	profile.c	/^static FILE *bbg_file;$/;"	v	file:
bblst	sched-rgn.c	/^typedef bitlst bblst;$/;"	t	file:
bblst_last	sched-rgn.c	/^static int *bblst_table, bblst_size, bblst_last;$/;"	v	file:
bblst_size	sched-rgn.c	/^static int *bblst_table, bblst_size, bblst_last;$/;"	v	file:
bblst_table	sched-rgn.c	/^static int *bblst_table, bblst_size, bblst_last;$/;"	v	file:
bbnum	lcm.c	/^  int bbnum;$/;"	m	struct:seginfo	file:
bbs	df.h	/^  struct bb_info *bbs;		\/* Basic block table.  *\/$/;"	m	struct:df	typeref:struct:df::bb_info
bbs_modified	df.h	/^  bitmap bbs_modified;		\/* Blocks that (may) have changed.  *\/$/;"	m	struct:df
bcc_gen_fctn	optabs.c	/^rtxfun bcc_gen_fctn[NUM_RTX_CODE];$/;"	v
bcmp	system.h	627;"	d
bcmp_libfunc	libfuncs.h	171;"	d
bcopy	system.h	625;"	d
bcopy_libfunc	libfuncs.h	169;"	d
bdesc_1arg	i386.c	/^static const struct builtin_description bdesc_1arg[] =$/;"	v	typeref:struct:builtin_description	file:
bdesc_2arg	i386.c	/^static const struct builtin_description bdesc_2arg[] =$/;"	v	typeref:struct:builtin_description	file:
bdesc_comi	i386.c	/^static const struct builtin_description bdesc_comi[] =$/;"	v	typeref:struct:builtin_description	file:
before_jump	stmt.c	/^  rtx before_jump;$/;"	m	struct:goto_fixup	file:
begin	dwarf2out.c	/^  const char *begin; \/* Label for begin address of range *\/$/;"	m	struct:dw_loc_list_struct	file:
begin_block	debug.h	/^  void (* begin_block) PARAMS ((unsigned int line, unsigned int n));$/;"	m	struct:gcc_debug_hooks
begin_diagnostic	diagnostic.h	/^  void (*begin_diagnostic) PARAMS ((output_buffer *, diagnostic_context *));$/;"	m	struct:diagnostic_context
begin_function	debug.h	/^  void (* begin_function) PARAMS ((tree decl));$/;"	m	struct:gcc_debug_hooks
begin_prologue	debug.h	/^  void (* begin_prologue) PARAMS ((unsigned int line, const char *file));$/;"	m	struct:gcc_debug_hooks
begin_protect_partials	except.c	/^begin_protect_partials ()$/;"	f
begin_stmt_tree	c-semantics.c	/^begin_stmt_tree (t)$/;"	f
benefit	loop.h	/^  int benefit;			\/* Gain from eliminating this insn.  *\/$/;"	m	struct:induction
binary_fp_operator	i386.c	/^binary_fp_operator (op, mode)$/;"	f
binary_op_error	c-common.c	/^binary_op_error (code)$/;"	f
binding_level	c-decl.c	/^  struct binding_level *binding_level;$/;"	m	struct:c_language_function	typeref:struct:c_language_function::binding_level	file:
binding_level	c-decl.c	/^struct binding_level$/;"	s	file:
bindtextdomain	intl.h	46;"	d
bindtextdomain	intl.h	47;"	d
binfo	tree.h	/^  tree binfo;$/;"	m	struct:tree_type
binfo_member	tree.c	/^binfo_member (elem, list)$/;"	f
binfo_p	tree-dump.h	/^  unsigned int binfo_p : 1;$/;"	m	struct:dump_node_info
birth	local-alloc.c	/^  int birth;$/;"	m	struct:qty	file:
bit_field_flag	tree.h	/^  unsigned bit_field_flag : 1;$/;"	m	struct:tree_decl
bit_from_pos	stor-layout.c	/^bit_from_pos (offset, bitpos)$/;"	f
bit_index	c-typeck.c	/^  tree bit_index;$/;"	m	struct:constructor_stack	file:
bit_offset_attribute	dwarfout.c	/^bit_offset_attribute (decl)$/;"	f	file:
bit_position	tree.c	/^bit_position (field)$/;"	f
bit_size_attribute	dwarfout.c	/^bit_size_attribute (decl)$/;"	f	file:
bitlst	sched-rgn.c	/^bitlst;$/;"	t	typeref:struct:__anon30	file:
bitlst_table	sched-rgn.c	/^static int *bitlst_table;$/;"	v	file:
bitlst_table_last	sched-rgn.c	/^static int bitlst_table_last;$/;"	v	file:
bitlst_table_size	sched-rgn.c	/^static int bitlst_table_size;$/;"	v	file:
bitmap	bitmap.h	/^} bitmap_head, *bitmap;$/;"	t	typeref:struct:bitmap_head_def
bitmap	varray.h	/^  struct bitmap_head_def *bitmap[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::bitmap_head_def
bitmap_a_and_b	bitmap.h	113;"	d
bitmap_a_or_b	bitmap.h	112;"	d
bitmap_bit_p	bitmap.c	/^bitmap_bit_p (head, bit)$/;"	f
bitmap_bits	bitmap.h	/^enum bitmap_bits {$/;"	g
bitmap_clear	bitmap.c	/^bitmap_clear (head)$/;"	f
bitmap_clear_bit	bitmap.c	/^bitmap_clear_bit (head, bit)$/;"	f
bitmap_copy	bitmap.c	/^bitmap_copy (to, from)$/;"	f
bitmap_element	bitmap.h	/^} bitmap_element;$/;"	t	typeref:struct:bitmap_element_def
bitmap_element_allocate	bitmap.c	/^bitmap_element_allocate ()$/;"	f	file:
bitmap_element_def	bitmap.h	/^typedef struct bitmap_element_def$/;"	s
bitmap_element_free	bitmap.c	/^bitmap_element_free (head, elt)$/;"	f	file:
bitmap_element_link	bitmap.c	/^bitmap_element_link (head, element)$/;"	f	file:
bitmap_element_zerop	bitmap.c	/^bitmap_element_zerop (element)$/;"	f	file:
bitmap_equal_p	bitmap.c	/^bitmap_equal_p (a, b)$/;"	f
bitmap_find_bit	bitmap.c	/^bitmap_find_bit (head, bit)$/;"	f	file:
bitmap_first_set_bit	bitmap.c	/^bitmap_first_set_bit (a)$/;"	f
bitmap_free	bitmap.c	/^static bitmap_element *bitmap_free;	\/* Freelist of bitmap elements.  *\/$/;"	v	file:
bitmap_head	bitmap.h	/^} bitmap_head, *bitmap;$/;"	t	typeref:struct:bitmap_head_def
bitmap_head_def	bitmap.h	/^typedef struct bitmap_head_def {$/;"	s
bitmap_index	gcse.c	/^  int bitmap_index;$/;"	m	struct:expr	file:
bitmap_initialize	bitmap.c	/^bitmap_initialize (head)$/;"	f
bitmap_ior_and_compl	bitmap.c	/^bitmap_ior_and_compl (to, from1, from2)$/;"	f
bitmap_last_set_bit	bitmap.c	/^bitmap_last_set_bit (a)$/;"	f
bitmap_obstack	bitmap.c	/^static struct obstack bitmap_obstack;$/;"	v	typeref:struct:obstack	file:
bitmap_obstack_init	bitmap.c	/^static int bitmap_obstack_init = FALSE;$/;"	v	file:
bitmap_operation	bitmap.c	/^bitmap_operation (to, from1, from2, operation)$/;"	f
bitmap_print	bitmap.c	/^bitmap_print (file, head, prefix, suffix)$/;"	f
bitmap_release_memory	bitmap.c	/^bitmap_release_memory ()$/;"	f
bitmap_set_bit	bitmap.c	/^bitmap_set_bit (head, bit)$/;"	f
bitmap_union_of_diff	bitmap.c	/^bitmap_union_of_diff (dst, a, b, c)$/;"	f
bitmap_zero	bitmap.h	111;"	d
bitmap_zero_bits	bitmap.c	/^bitmap_element bitmap_zero_bits;	\/* An element of all zero bits.  *\/$/;"	v
bitmask	insn-attr.h	/^  const int bitmask;$/;"	m	struct:function_unit_desc
bitpos	tree.h	/^  tree bitpos;$/;"	m	struct:record_layout_info_s
bits	bitmap.h	/^  unsigned HOST_WIDE_INT bits[BITMAP_ELEMENT_WORDS]; \/* Bits that are set.  *\/$/;"	m	struct:bitmap_element_def
bitsize_int	tree.h	2446;"	d
bitsize_one_node	tree.h	1969;"	d
bitsize_unit_node	tree.h	1970;"	d
bitsize_zero_node	tree.h	1968;"	d
bitsizetype	tree.h	2431;"	d
biv	loop.h	/^  struct induction *biv;	\/* List of all insns that set this reg.  *\/$/;"	m	struct:iv_class	typeref:struct:iv_class::induction
biv_count	loop.h	/^  int biv_count;		\/* Number of insns setting this reg.  *\/$/;"	m	struct:iv_class
biv_elimination_giv_has_0_offset	loop.c	/^biv_elimination_giv_has_0_offset (biv, giv, insn)$/;"	f	file:
biv_total_increment	unroll.c	/^biv_total_increment (bl)$/;"	f
bl	safe-ctype.c	37;"	d	file:
block	reload.h	/^  int block;$/;"	m	struct:insn_chain
block	resource.c	/^  int block;			\/* Basic block number containing target.  *\/$/;"	m	struct:target_info	file:
block	stmt.c	/^	} block;$/;"	m	union:nesting::__anon67	typeref:struct:nesting::__anon67::__anon70	file:
block	tree.h	/^  struct tree_block block;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_block
block_alloc	local-alloc.c	/^block_alloc (b)$/;"	f	file:
block_aux_obstack	cfg.c	/^static struct obstack block_aux_obstack;$/;"	v	typeref:struct:obstack	file:
block_depth	final.c	/^static int block_depth;$/;"	v	file:
block_has_only_trap	ifcvt.c	/^block_has_only_trap (bb)$/;"	f	file:
block_info	predict.c	/^} *block_info;$/;"	t	typeref:struct:block_info_def	file:
block_info	reg-stack.c	/^} *block_info;$/;"	t	typeref:struct:block_info_def	file:
block_info_def	predict.c	/^typedef struct block_info_def$/;"	s	file:
block_info_def	reg-stack.c	/^typedef struct block_info_def$/;"	s	file:
block_label	cfgrtl.c	/^block_label (block)$/;"	f
block_map	integrate.h	/^  varray_type block_map;$/;"	m	struct:inline_remap
block_num	dwarf2out.c	/^  int block_num;$/;"	m	struct:dw_ranges_struct	file:
block_num	tree.h	/^  unsigned block_num : 30;$/;"	m	struct:tree_block
block_stack	stmt.c	381;"	d	file:
block_start_count	stmt.c	/^	  int block_start_count;$/;"	m	struct:nesting::__anon67::__anon70	file:
block_start_count	stmt.c	/^  int block_start_count;$/;"	m	struct:goto_fixup	file:
block_target_temp_slot_level	stmt.c	/^	  int block_target_temp_slot_level;$/;"	m	struct:nesting::__anon67::__anon70	file:
block_to_bb	sched-rgn.c	/^static int *block_to_bb;$/;"	v	file:
block_ultimate_origin	dwarf2out.c	/^block_ultimate_origin (block)$/;"	f	file:
block_ultimate_origin	dwarfout.c	/^block_ultimate_origin (block)$/;"	f	file:
blockage	sched-int.h	/^  unsigned int blockage;$/;"	m	struct:haifa_insn_data
blockage_function	insn-attr.h	/^  int (*const blockage_function) PARAMS ((rtx, rtx));$/;"	m	struct:function_unit_desc
blockage_range	haifa-sched.c	/^blockage_range (unit, insn)$/;"	f	file:
blockage_range_function	insn-attr.h	/^  unsigned int (*const blockage_range_function) PARAMS ((rtx));$/;"	m	struct:function_unit_desc
blocks	c-decl.c	/^    tree blocks;$/;"	m	struct:binding_level	file:
blocks_nreverse	function.c	/^blocks_nreverse (t)$/;"	f	file:
bmask	real.c	/^static const UEMUSHORT bmask[] =$/;"	v	file:
body_begin_attribute	dwarfout.c	/^body_begin_attribute (asm_begin_label)$/;"	f	file:
body_end_attribute	dwarfout.c	/^body_end_attribute (asm_end_label)$/;"	f	file:
body_time	c-lex.c	/^static int header_time, body_time;$/;"	v	file:
bool	system.h	548;"	d
bool	system.h	560;"	d
boolean_false_node	c-common.h	206;"	d
boolean_increment	c-common.c	/^boolean_increment (code, arg)$/;"	f
boolean_true_node	c-common.h	205;"	d
boolean_type_class	typeclass.h	/^  enumeral_type_class, boolean_type_class,$/;"	e	enum:type_class
boolean_type_node	c-common.h	204;"	d
botch	toplev.c	/^botch (s)$/;"	f
bounded_flag	tree.h	/^  unsigned bounded_flag : 1;$/;"	m	struct:tree_common
br_predictor	predict.h	/^enum br_predictor$/;"	g
brack_head	cppinit.c	/^  struct search_path *brack_head, *brack_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::search_path	file:
brack_tail	cppinit.c	/^  struct search_path *brack_head, *brack_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::	file:
bracket_include	cpplib.h	/^  struct search_path *bracket_include;  \/* <> *\/$/;"	m	struct:cpp_options	typeref:struct:cpp_options::search_path
branch	cse.c	/^      rtx branch;$/;"	m	struct:cse_basic_block_data::branch_path	file:
branch_path	cse.c	/^  struct branch_path$/;"	s	struct:cse_basic_block_data	file:
branch_prob	profile.c	/^branch_prob ()$/;"	f
break_out_includes	dwarf2out.c	/^break_out_includes (die)$/;"	f	file:
break_out_memory_refs	explow.c	/^break_out_memory_refs (x)$/;"	f	file:
brfic_args	tree.c	/^struct brfic_args$/;"	s	file:
bss_section	varasm.c	/^bss_section ()$/;"	f
bucket	dominance.c	/^  TBB *bucket;$/;"	m	struct:dom_info	file:
bucket	print-tree.c	/^struct bucket$/;"	s	file:
buf	cpphash.h	/^  const unsigned char *buf;	 \/* Entire character buffer.  *\/$/;"	m	struct:cpp_buffer
buff	cpphash.h	/^  _cpp_buff *buff;$/;"	m	struct:cpp_context
buffer	cppfiles.c	/^  const unsigned char *buffer;	\/* pointer to cached file contents *\/$/;"	m	struct:include_file	file:
buffer	cpphash.h	/^  cpp_buffer *buffer;$/;"	m	struct:cpp_reader
buffer	diagnostic.h	/^  output_buffer buffer;$/;"	m	struct:diagnostic_context
buffer	md5.h	/^  char buffer[128];$/;"	m	struct:md5_ctx
buffer_ob	cpphash.h	/^  struct obstack buffer_ob;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::obstack
buflen	md5.h	/^  md5_uint32 buflen;$/;"	m	struct:md5_ctx
build	tree.c	/^build VPARAMS ((enum tree_code code, tree tt, ...))$/;"	f
build1	tree.c	/^build1 (code, type, node)$/;"	f
build_abbrev_table	dwarf2out.c	/^build_abbrev_table (die)$/;"	f	file:
build_array_declarator	c-decl.c	/^build_array_declarator (expr, quals, static_p, vla_unspec_p)$/;"	f
build_array_ref	c-typeck.c	/^build_array_ref (array, index)$/;"	f
build_array_type	tree.c	/^build_array_type (elt_type, index_type)$/;"	f
build_asm_stmt	c-typeck.c	/^build_asm_stmt (cv_qualifier, string, outputs, inputs, clobbers)$/;"	f
build_binary_op	c-typeck.c	/^build_binary_op (code, orig_op0, orig_op1, convert_p)$/;"	f
build_block	tree.c	/^build_block (vars, tags, subblocks, supercontext, chain)$/;"	f
build_break_stmt	c-semantics.c	/^build_break_stmt ()$/;"	f
build_c_cast	c-typeck.c	/^build_c_cast (type, expr)$/;"	f
build_case_label	c-semantics.c	/^build_case_label (low_value, high_value, label_decl)$/;"	f
build_cfa_loc	dwarf2out.c	/^build_cfa_loc (cfa)$/;"	f	file:
build_common_tree_nodes	tree.c	/^build_common_tree_nodes (signed_char)$/;"	f
build_common_tree_nodes_2	tree.c	/^build_common_tree_nodes_2 (short_double)$/;"	f
build_complex	tree.c	/^build_complex (type, real, imag)$/;"	f
build_complex_type	tree.c	/^build_complex_type (component_type)$/;"	f
build_component_ref	c-typeck.c	/^build_component_ref (datum, component)$/;"	f
build_compound_expr	c-typeck.c	/^build_compound_expr (list)$/;"	f
build_compound_literal	c-decl.c	/^build_compound_literal (type, init)$/;"	f
build_conditional_expr	c-typeck.c	/^build_conditional_expr (ifexp, op1, op2)$/;"	f
build_continue_stmt	c-semantics.c	/^build_continue_stmt ()$/;"	f
build_control_flow	sched-rgn.c	/^build_control_flow (edge_list)$/;"	f	file:
build_decl	tree.c	/^build_decl (code, name, type)$/;"	f
build_decl_attribute_variant	tree.c	/^build_decl_attribute_variant (ddecl, attribute)$/;"	f
build_def_use	dependence.c	/^build_def_use (exp, du_type)$/;"	f	file:
build_def_use	regrename.c	/^build_def_use (bb)$/;"	f	file:
build_enumerator	c-decl.c	/^build_enumerator (name, value)$/;"	f
build_expr_wfl	tree.c	/^build_expr_wfl (node, file, line, col)$/;"	f
build_external_ref	c-typeck.c	/^build_external_ref (id, fun)$/;"	f
build_function_call	c-typeck.c	/^build_function_call (function, params)$/;"	f
build_function_call_expr	builtins.c	/^build_function_call_expr (fn, arglist)$/;"	f	file:
build_function_type	tree.c	/^build_function_type (value_type, arg_types)$/;"	f
build_index_2_type	tree.c	/^build_index_2_type (lowval, highval)$/;"	f
build_index_type	tree.c	/^build_index_type (maxval)$/;"	f
build_indirect_ref	c-typeck.c	/^build_indirect_ref (ptr, errorstring)$/;"	f
build_insn_chain	global.c	/^build_insn_chain (first)$/;"	f
build_int_2	tree.h	2109;"	d
build_int_2_wide	tree.c	/^build_int_2_wide (low, hi)$/;"	f
build_message_string	diagnostic.c	/^build_message_string VPARAMS ((const char *msg, ...))$/;"	f	file:
build_method_type	tree.c	/^build_method_type (basetype, type)$/;"	f
build_modify_expr	c-typeck.c	/^build_modify_expr (lhs, modifycode, rhs)$/;"	f
build_nt	tree.c	/^build_nt VPARAMS ((enum tree_code code, ...))$/;"	f
build_offset_type	tree.c	/^build_offset_type (basetype, type)$/;"	f
build_pointer_type	tree.c	/^build_pointer_type (to_type)$/;"	f
build_post_landing_pads	except.c	/^build_post_landing_pads ()$/;"	f	file:
build_qualified_type	tree.c	/^build_qualified_type (type, type_quals)$/;"	f
build_range_check	fold-const.c	/^build_range_check (type, exp, in_p, low, high)$/;"	f	file:
build_range_type	tree.c	/^build_range_type (type, lowval, highval)$/;"	f
build_real	tree.c	/^build_real (type, d)$/;"	f
build_real_from_int_cst	tree.c	/^build_real_from_int_cst (type, i)$/;"	f
build_real_from_int_cst_1	tree.c	/^build_real_from_int_cst_1 (data)$/;"	f	file:
build_reference_type	tree.c	/^build_reference_type (to_type)$/;"	f
build_return_stmt	c-semantics.c	/^build_return_stmt (expr)$/;"	f
build_stmt	c-semantics.c	/^build_stmt VPARAMS ((enum tree_code code, ...))$/;"	f
build_store_vectors	gcse.c	/^build_store_vectors () $/;"	f	file:
build_string	tree.c	/^build_string (len, str)$/;"	f
build_tree_list	tree.c	/^build_tree_list (parm, value)$/;"	f
build_type_attribute_variant	tree.c	/^build_type_attribute_variant (ttype, attribute)$/;"	f
build_type_copy	tree.c	/^build_type_copy (type)$/;"	f
build_type_no_quals	tree.c	/^build_type_no_quals (t)$/;"	f
build_type_variant	tree.h	2310;"	d
build_unary_op	c-typeck.c	/^build_unary_op (code, xarg, flag)$/;"	f
build_va_arg	c-common.c	/^build_va_arg (expr, type)$/;"	f
build_vector	tree.c	/^build_vector (type, vals)$/;"	f
build_void_list_node	c-decl.c	/^build_void_list_node ()$/;"	f
built_in_attribute	c-common.c	/^enum built_in_attribute$/;"	g	file:
built_in_attributes	c-common.c	/^static tree built_in_attributes[(int) ATTR_LAST];$/;"	v	file:
built_in_class	tree.h	/^  ENUM_BITFIELD(built_in_class) built_in_class : 2;$/;"	m	struct:tree_decl
built_in_class	tree.h	/^enum built_in_class$/;"	g
built_in_class_names	builtins.c	/^const char *const built_in_class_names[4]$/;"	v
built_in_decls	builtins.c	/^tree built_in_decls[(int) END_BUILTINS];$/;"	v
built_in_function	tree.h	/^enum built_in_function$/;"	g
built_in_names	builtins.c	/^const char *const built_in_names[(int) END_BUILTINS] =$/;"	v
built_landing_pads	except.c	/^  int built_landing_pads;$/;"	m	struct:eh_status	file:
builtin	cppinit.c	/^  unsigned char builtin;$/;"	m	struct:builtin	file:
builtin	cppinit.c	/^struct builtin$/;"	s	file:
builtin	cpplib.h	/^    enum builtin_type builtin;		\/* Code for a builtin macro.  *\/$/;"	m	union:cpp_hashnode::__anon87	typeref:enum:cpp_hashnode::__anon87::builtin_type
builtin_array	cppinit.c	/^static const struct builtin builtin_array[] =$/;"	v	typeref:struct:builtin	file:
builtin_array_end	cppinit.c	678;"	d	file:
builtin_array_end	cppinit.c	797;"	d	file:
builtin_description	i386.c	/^struct builtin_description$/;"	s	file:
builtin_function	c-decl.c	/^builtin_function (name, type, function_code, class, library_name)$/;"	f
builtin_function_2	c-common.c	/^builtin_function_2 (builtin_name, name, builtin_type, type, function_code,$/;"	f	file:
builtin_function_disabled_p	c-common.c	/^builtin_function_disabled_p (name)$/;"	f	file:
builtin_macro	cppmacro.c	/^builtin_macro (pfile, node)$/;"	f	file:
builtin_memcpy_read_str	builtins.c	/^builtin_memcpy_read_str (data, offset, mode)$/;"	f	file:
builtin_memset_read_str	builtins.c	/^builtin_memset_read_str (data, offset, mode)$/;"	f	file:
builtin_strncpy_read_str	builtins.c	/^builtin_strncpy_read_str (data, offset, mode)$/;"	f	file:
builtin_type	cpplib.h	/^enum builtin_type$/;"	g
byte_from_pos	stor-layout.c	/^byte_from_pos (offset, bitpos)$/;"	f
byte_mode	emit-rtl.c	/^enum machine_mode byte_mode;	\/* Mode whose width is BITS_PER_UNIT.  *\/$/;"	v	typeref:enum:machine_mode
byte_op	target.h	/^    const char *byte_op;$/;"	m	struct:gcc_target::asm_out
byte_position	tree.c	/^byte_position (field)$/;"	f
byte_size_attribute	dwarfout.c	/^byte_size_attribute (tree_node)$/;"	f	file:
bytes	gcov-io.h	/^     size_t bytes;$/;"	v
bytes	ggc-page.c	/^  size_t bytes;$/;"	m	struct:page_entry	file:
bytes	sbitmap.h	/^  unsigned int bytes;		\/* Size in bytes.  *\/$/;"	m	struct:simple_bitmap_def
bytes_accesed	loop.c	/^  unsigned int bytes_accesed;	\/* Sum of sizes of all acceses to this$/;"	m	struct:prefetch_info	file:
bytes_mapped	ggc-page.c	/^  size_t bytes_mapped;$/;"	m	struct:globals	file:
bytes_used	gcse.c	/^static int bytes_used;$/;"	v	file:
bzero	system.h	626;"	d
bzero_libfunc	libfuncs.h	173;"	d
c	cpphash.h	/^     int c;$/;"	v
c	cpplex.c	/^  char c;$/;"	m	struct:dummy	file:
c	cpplib.h	/^    unsigned char c;		\/* Character represented by CPP_OTHER.  *\/$/;"	m	union:cpp_token::__anon85
c	ggc-page.c	/^  char c;$/;"	m	struct:max_alignment	file:
c	varray.h	/^  char			 c[1];$/;"	m	union:varray_data_tag
c4xtoe	real.c	/^c4xtoe (d, e, mode)$/;"	f	file:
c99	cppinit.c	/^  char c99;$/;"	m	struct:lang_flags	file:
c99	cpplib.h	/^  unsigned char c99;$/;"	m	struct:cpp_options
c99_function_name_decl_node	c-common.h	228;"	d
c_add_case_label	c-common.c	/^c_add_case_label (cases, cond, low_value, high_value)$/;"	f
c_alignof	c-common.c	/^c_alignof (type)$/;"	f
c_alignof_expr	c-common.c	/^c_alignof_expr (expr)$/;"	f
c_apply_type_quals_to_decl	c-common.c	/^c_apply_type_quals_to_decl (type_quals, decl)$/;"	f
c_attrs_initialized	c-common.c	/^static bool c_attrs_initialized = false;$/;"	v	file:
c_begin_compound_stmt	c-decl.c	/^c_begin_compound_stmt ()$/;"	f
c_begin_if_stmt	c-common.c	/^c_begin_if_stmt ()$/;"	f
c_begin_while_stmt	c-common.c	/^c_begin_while_stmt ()$/;"	f
c_bool_false_node	c-common.h	210;"	d
c_bool_true_node	c-common.h	209;"	d
c_bool_type_node	c-common.h	208;"	d
c_build_qualified_type	c-common.c	/^c_build_qualified_type (type, type_quals)$/;"	f
c_build_type_variant	c-tree.h	231;"	d
c_cannot_inline_tree_fn	c-objc-common.c	/^c_cannot_inline_tree_fn (fnp)$/;"	f
c_cast_expr	c-typeck.c	/^c_cast_expr (type, expr)$/;"	f
c_common_attribute_table	attribs.c	/^static const struct attribute_spec c_common_attribute_table[] =$/;"	v	typeref:struct:attribute_spec	file:
c_common_finish	c-common.c	/^c_common_finish ()$/;"	f
c_common_get_alias_set	c-common.c	/^c_common_get_alias_set (t)$/;"	f
c_common_identifier	c-common.h	/^struct c_common_identifier$/;"	s
c_common_init	c-common.c	/^c_common_init (filename)$/;"	f
c_common_init_options	c-common.c	/^c_common_init_options (lang)$/;"	f
c_common_insert_default_attributes	c-common.c	/^c_common_insert_default_attributes (decl)$/;"	f
c_common_nodes_and_builtins	c-common.c	/^c_common_nodes_and_builtins ()$/;"	f
c_common_post_options	c-common.c	/^c_common_post_options ()$/;"	f
c_convert_parm_for_inlining	c-typeck.c	/^c_convert_parm_for_inlining (parm, value, fn)$/;"	f
c_decode_option	c-decl.c	/^c_decode_option (argc, argv)$/;"	f
c_disregard_inline_limits	c-objc-common.c	/^c_disregard_inline_limits (fn)$/;"	f
c_expand_asm_operands	c-typeck.c	/^c_expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)$/;"	f
c_expand_body	c-decl.c	/^c_expand_body (fndecl, nested_p, can_defer_p)$/;"	f	file:
c_expand_builtin	c-common.c	/^c_expand_builtin (exp, target, tmode, modifier)$/;"	f	file:
c_expand_builtin_fprintf	c-common.c	/^c_expand_builtin_fprintf (arglist, target, tmode, modifier, ignore, unlocked)$/;"	f	file:
c_expand_builtin_printf	c-common.c	/^c_expand_builtin_printf (arglist, target, tmode, modifier, ignore, unlocked)$/;"	f	file:
c_expand_decl_stmt	c-decl.c	/^c_expand_decl_stmt (t)$/;"	f
c_expand_deferred_function	c-decl.c	/^c_expand_deferred_function (fndecl)$/;"	f
c_expand_end_cond	c-common.c	/^c_expand_end_cond ()$/;"	f
c_expand_expr	c-common.c	/^c_expand_expr (exp, target, tmode, modifier)$/;"	f
c_expand_expr_stmt	c-common.c	/^c_expand_expr_stmt (expr)$/;"	f
c_expand_return	c-typeck.c	/^c_expand_return (retval)$/;"	f
c_expand_start_cond	c-common.c	/^c_expand_start_cond (cond, compstmt_count, if_stmt)$/;"	f
c_expand_start_else	c-common.c	/^c_expand_start_else ()$/;"	f
c_fileinfo	c-common.h	/^struct c_fileinfo$/;"	s
c_finish_case	c-typeck.c	/^c_finish_case ()$/;"	f
c_finish_else	c-common.c	/^c_finish_else ()$/;"	f
c_finish_then	c-common.c	/^c_finish_then ()$/;"	f
c_finish_while_stmt_cond	c-common.c	/^c_finish_while_stmt_cond (cond, while_stmt)$/;"	f
c_format_attribute_table	c-common.c	/^static const struct attribute_spec c_format_attribute_table[] =$/;"	v	typeref:struct:attribute_spec	file:
c_function_varargs	c-decl.c	/^static int c_function_varargs;$/;"	v	file:
c_getstr	builtins.c	/^c_getstr (src)$/;"	f	file:
c_global_trees	c-common.c	/^tree c_global_trees[CTI_MAX];$/;"	v
c_header_level	c-lex.c	/^int c_header_level;	 \/* depth in C headers - C++ only *\/$/;"	v
c_init	c-lang.c	/^c_init (filename)$/;"	f	file:
c_init_attributes	c-common.c	/^c_init_attributes ()$/;"	f	file:
c_init_decl_processing	c-decl.c	/^c_init_decl_processing ()$/;"	f
c_init_options	c-lang.c	/^c_init_options ()$/;"	f	file:
c_kind	tree.c	/^  c_kind,$/;"	e	enum:__anon88	file:
c_lang	cpplib.h	/^enum c_lang {CLK_GNUC89 = 0, CLK_GNUC99, CLK_STDC89, CLK_STDC94, CLK_STDC99,$/;"	g
c_lang_decl	c-common.h	/^struct c_lang_decl {$/;"	s
c_language	c-common.c	/^enum c_language_kind c_language;$/;"	v	typeref:enum:c_language_kind
c_language_function	c-decl.c	/^struct c_language_function$/;"	s	file:
c_language_kind	c-common.h	/^c_language_kind;$/;"	t	typeref:enum:c_language_kind
c_language_kind	c-common.h	/^typedef enum c_language_kind$/;"	g
c_lex	c-lex.c	/^c_lex (value)$/;"	f
c_make_fname_decl	c-decl.c	/^c_make_fname_decl (id, type_dep)$/;"	f	file:
c_mark_lang_decl	c-common.c	/^c_mark_lang_decl (c)$/;"	f
c_mark_varargs	c-decl.c	/^c_mark_varargs ()$/;"	f
c_missing_noreturn_ok_p	c-objc-common.c	/^c_missing_noreturn_ok_p (decl)$/;"	f
c_objc_common_finish_file	c-objc-common.c	/^c_objc_common_finish_file ()$/;"	f
c_objc_common_init	c-objc-common.c	/^c_objc_common_init (filename)$/;"	f
c_parse_init	c-parse.c	/^c_parse_init ()$/;"	f
c_print_identifier	c-decl.c	/^c_print_identifier (file, node, indent)$/;"	f
c_promoting_integer_type_p	c-common.c	/^c_promoting_integer_type_p (t)$/;"	f
c_readstr	builtins.c	/^c_readstr (str, mode)$/;"	f	file:
c_safe_from_p	c-common.c	/^c_safe_from_p (target, exp)$/;"	f
c_scope_stmt_stack	c-decl.c	/^static tree c_scope_stmt_stack;$/;"	v	file:
c_set_yydebug	c-parse.c	/^c_set_yydebug (value)$/;"	f
c_size_in_bytes	c-typeck.c	/^c_size_in_bytes (type)$/;"	f
c_size_type_node	c-common.h	196;"	d
c_sizeof	c-typeck.c	/^c_sizeof (type)$/;"	f
c_sizeof_nowarn	c-typeck.c	/^c_sizeof_nowarn (type)$/;"	f
c_start_case	c-typeck.c	/^c_start_case (exp)$/;"	f
c_staticp	c-common.c	/^c_staticp (exp)$/;"	f
c_stmt_tree	c-decl.c	/^static struct stmt_tree_s c_stmt_tree;$/;"	v	typeref:struct:stmt_tree_s	file:
c_strlen	builtins.c	/^c_strlen (src)$/;"	f	file:
c_switch	c-typeck.c	/^struct c_switch {$/;"	s	file:
c_tree_code	c-common.h	/^enum c_tree_code {$/;"	g
c_tree_code_length	c-common.c	/^static const int c_tree_code_length[] = {$/;"	v	file:
c_tree_code_name	c-common.c	/^static const char *const c_tree_code_name[] = {$/;"	v	file:
c_tree_code_type	c-common.c	/^static const char c_tree_code_type[] = {$/;"	v	file:
c_tree_index	c-common.h	/^enum c_tree_index$/;"	g
c_tree_printer	c-objc-common.c	/^c_tree_printer (buffer)$/;"	f	file:
c_unsafe_for_reeval	c-common.c	/^c_unsafe_for_reeval (exp)$/;"	f
cache_after_sp	c-common.c	/^  struct tlist *cache_after_sp;$/;"	m	struct:tlist_cache	typeref:struct:tlist_cache::tlist	file:
cache_before_sp	c-common.c	/^  struct tlist *cache_before_sp;$/;"	m	struct:tlist_cache	typeref:struct:tlist_cache::tlist	file:
cached_cse_reg_info	cse.c	/^static struct cse_reg_info *cached_cse_reg_info;$/;"	v	typeref:struct:cse_reg_info	file:
cached_make_edge	cfg.c	/^cached_make_edge (edge_cache, src, dst, flags)$/;"	f
cached_regno	cse.c	/^static unsigned int cached_regno;$/;"	v	file:
calc_dfs_tree	dominance.c	/^calc_dfs_tree (di, reverse)$/;"	f	file:
calc_dfs_tree_nonrec	dominance.c	/^calc_dfs_tree_nonrec (di, bb, reverse)$/;"	f	file:
calc_die_sizes	dwarf2out.c	/^calc_die_sizes (die)$/;"	f	file:
calc_hash	hashtable.c	/^calc_hash (str, len)$/;"	f	file:
calc_idoms	dominance.c	/^calc_idoms (di, reverse)$/;"	f	file:
calculate_dominance_info	dominance.c	/^calculate_dominance_info (idom, doms, reverse)$/;"	f
calculate_giv_inc	unroll.c	/^calculate_giv_inc (pattern, src_insn, regno)$/;"	f	file:
calculate_global_regs_live	flow.c	/^calculate_global_regs_live (blocks_in, blocks_out, flags)$/;"	f	file:
calculate_needs_all_insns	reload1.c	/^calculate_needs_all_insns (global)$/;"	f	file:
call	rtl.h	/^  unsigned int call : 1;$/;"	m	struct:rtx_def
call_ends_block_p	sibcall.c	/^call_ends_block_p (insn, end)$/;"	f	file:
call_fixed_reg_set	regclass.c	/^HARD_REG_SET call_fixed_reg_set;$/;"	v
call_fixed_regs	regclass.c	/^char call_fixed_regs[FIRST_PSEUDO_REGISTER];$/;"	v
call_insn_operand	i386.c	/^call_insn_operand (op, mode)$/;"	f
call_really_used_regs	regclass.c	/^char call_really_used_regs[] = CALL_REALLY_USED_REGISTERS;$/;"	v
call_site_base	except.c	/^static int call_site_base;$/;"	v	file:
call_site_data	except.c	/^  } *call_site_data;$/;"	m	struct:eh_status	typeref:struct:eh_status::call_site_record	file:
call_site_data_size	except.c	/^  int call_site_data_size;$/;"	m	struct:eh_status	file:
call_site_data_used	except.c	/^  int call_site_data_used;$/;"	m	struct:eh_status	file:
call_site_index	except.c	/^  int call_site_index;$/;"	m	struct:sjlj_lp_info	file:
call_site_record	except.c	/^  struct call_site_record$/;"	s	struct:eh_status	file:
call_used_reg_set	regclass.c	/^HARD_REG_SET call_used_reg_set;$/;"	v
call_used_regs	regclass.c	/^char call_used_regs[FIRST_PSEUDO_REGISTER];$/;"	v
caller_save_needed	reload1.c	/^int caller_save_needed;$/;"	v
callmem	cselib.c	/^static rtx callmem;$/;"	v	file:
calloc	system.h	592;"	d
calls_alloca	function.h	/^  unsigned int calls_alloca : 1;$/;"	m	struct:function
calls_crossed	global.c	/^  int calls_crossed;$/;"	m	struct:allocno	file:
calls_crossed	regs.h	/^  int calls_crossed;		\/* # of calls (REG n) is live across *\/$/;"	m	struct:reg_info_def
calls_eh_return	function.h	/^  unsigned int calls_eh_return : 1;$/;"	m	struct:function
calls_function	calls.c	/^calls_function (exp, which)$/;"	f	file:
calls_function_1	calls.c	/^calls_function_1 (exp, which)$/;"	f	file:
calls_function_save_exprs	calls.c	/^static tree calls_function_save_exprs;$/;"	v	file:
calls_longjmp	function.h	/^  unsigned int calls_longjmp : 1;$/;"	m	struct:function
calls_setjmp	function.h	/^  unsigned int calls_setjmp : 1;$/;"	m	struct:function
can_address_p	alias.c	/^can_address_p (t)$/;"	f
can_combine_p	combine.c	/^can_combine_p (insn, i3, pred, succ, pdest, psrc)$/;"	f	file:
can_compare_p	optabs.c	/^can_compare_p (code, mode, purpose)$/;"	f
can_compare_purpose	optabs.h	/^enum can_compare_purpose$/;"	g
can_conditionally_move_p	optabs.c	/^can_conditionally_move_p (mode)$/;"	f
can_copy_init_p	gcse.c	/^static int can_copy_init_p;$/;"	v	file:
can_copy_p	gcse.c	/^static char can_copy_p[(int) NUM_MACHINE_MODES];$/;"	v	file:
can_delete_label_p	cfgrtl.c	/^can_delete_label_p (label)$/;"	f	file:
can_delete_note_p	cfgrtl.c	/^can_delete_note_p (note)$/;"	f	file:
can_disregard_other_sets	gcse.c	/^can_disregard_other_sets (addr_this_reg, insn, for_combine)$/;"	f	file:
can_eliminate	reload1.c	/^  int can_eliminate;		\/* Non-zero if this elimination can be done.  *\/$/;"	m	struct:elim_table	file:
can_eliminate_previous	reload1.c	/^  int can_eliminate_previous;	\/* Value of CAN_ELIMINATE in previous scan over$/;"	m	struct:elim_table	file:
can_extend_p	optabs.c	/^can_extend_p (to_mode, from_mode, unsignedp)$/;"	f
can_fallthru	cfganal.c	/^can_fallthru (src, target)$/;"	f
can_fix_p	optabs.c	/^can_fix_p (fixmode, fltmode, unsignedp, truncp_ptr)$/;"	f	file:
can_float_p	optabs.c	/^can_float_p (fltmode, fixmode, unsignedp)$/;"	f	file:
can_schedule_ready_p	sched-ebb.c	/^can_schedule_ready_p (insn)$/;"	f	file:
can_schedule_ready_p	sched-int.h	/^  int (*can_schedule_ready_p) PARAMS ((rtx));$/;"	m	struct:sched_info
can_schedule_ready_p	sched-rgn.c	/^can_schedule_ready_p (insn)$/;"	f	file:
can_store_by_pieces	expr.c	/^can_store_by_pieces (len, constfun, constfundata, align)$/;"	f
can_throw_external	except.c	/^can_throw_external (insn)$/;"	f
can_throw_internal	except.c	/^can_throw_internal (insn)$/;"	f
cancel_changes	recog.c	/^cancel_changes (num)$/;"	f
candidate	sched-rgn.c	/^candidate;$/;"	t	typeref:struct:__anon31	file:
candidate_table	sched-rgn.c	/^static candidate *candidate_table;$/;"	v	file:
cannot_inline	function.h	/^  const char *cannot_inline;$/;"	m	struct:function
cannot_inline_tree_fn	langhooks.h	/^  int (*cannot_inline_tree_fn) PARAMS ((union tree_node **));$/;"	m	struct:lang_hooks_for_tree_inlining
cannot_modify_jumps_p	target.h	/^  bool (* cannot_modify_jumps_p) PARAMS ((void));$/;"	m	struct:gcc_target
canon_exp	cse.c	/^  rtx canon_exp;$/;"	m	struct:table_elt	file:
canon_hash	cse.c	/^canon_hash (x, mode)$/;"	f	file:
canon_hash_string	cse.c	/^canon_hash_string (ps)$/;"	f	file:
canon_list_insert	gcse.c	/^canon_list_insert (dest, unused1, v_insn)$/;"	f	file:
canon_modify_mem_list	gcse.c	/^static rtx * canon_modify_mem_list;$/;"	v	file:
canon_modify_mem_list_set	gcse.c	/^bitmap canon_modify_mem_list_set;$/;"	v
canon_reg	cse.c	/^canon_reg (x, insn)$/;"	f	file:
canon_rtx	alias.c	/^canon_rtx (x)$/;"	f
canon_true_dependence	alias.c	/^canon_true_dependence (mem, mem_mode, mem_addr, x, varies)$/;"	f
canonical_elements	ssa.c	/^  sbitmap canonical_elements;$/;"	m	struct:ssa_rename_from_hash_table_data	file:
canonicalize_condition	loop.c	/^canonicalize_condition (insn, cond, reverse, earliest, want_reg)$/;"	f
cant_combine_insn_p	combine.c	/^cant_combine_insn_p (insn)$/;"	f	file:
cant_derive	loop.h	/^  unsigned cant_derive : 1;	\/* For giv's, 1 if this giv cannot derive$/;"	m	struct:induction
cant_move	sched-int.h	/^  unsigned int cant_move : 1;$/;"	m	struct:haifa_insn_data
case_compare	c-common.c	/^case_compare (k1, k2)$/;"	f
case_index_expr_type	stmt.c	/^case_index_expr_type ()$/;"	f
case_list	stmt.c	/^	  struct case_node *case_list;$/;"	m	struct:nesting::__anon67::__anon71	typeref:struct:nesting::__anon67::__anon71::case_node	file:
case_node	stmt.c	/^struct case_node$/;"	s	file:
case_node	stmt.c	/^typedef struct case_node case_node;$/;"	t	typeref:struct:case_node	file:
case_node_ptr	stmt.c	/^typedef struct case_node *case_node_ptr;$/;"	t	typeref:struct:case_node	file:
case_stack	stmt.c	385;"	d	file:
case_stmt	stmt.c	/^	} case_stmt;$/;"	m	union:nesting::__anon67	typeref:struct:nesting::__anon67::__anon71	file:
case_tree2list	stmt.c	/^case_tree2list (node, right)$/;"	f	file:
case_values_threshold	expr.c	/^case_values_threshold ()$/;"	f
cases	c-typeck.c	/^  splay_tree cases;$/;"	m	struct:c_switch	file:
catch	except.c	/^      struct eh_region *catch;$/;"	m	struct:eh_region::__anon21::__anon22	typeref:struct:eh_region::__anon21::__anon22::eh_region	file:
catch	except.c	/^    } catch;$/;"	m	union:eh_region::__anon21	typeref:struct:eh_region::__anon21::__anon23	file:
category	cpplex.c	/^  enum spell_type category;$/;"	m	struct:token_spelling	typeref:enum:token_spelling::spell_type	file:
cb	cpphash.h	/^  struct cpp_callbacks cb;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::cpp_callbacks
cb	ggc-common.c	/^  void (*cb) PARAMS ((void *));$/;"	m	struct:ggc_root	file:
cb_args	fold-const.c	/^struct cb_args$/;"	s	file:
cb_def_pragma	c-lex.c	/^cb_def_pragma (pfile, line)$/;"	f	file:
cb_define	c-lex.c	/^cb_define (pfile, line, node)$/;"	f	file:
cb_file_change	c-lex.c	/^cb_file_change (pfile, new_map)$/;"	f	file:
cb_ident	c-lex.c	/^cb_ident (pfile, line, str)$/;"	f	file:
cb_line_change	c-lex.c	/^cb_line_change (pfile, token, parsing_args)$/;"	f	file:
cb_undef	c-lex.c	/^cb_undef (pfile, line, node)$/;"	f	file:
cbranch_optab	optabs.h	207;"	d
cc	resource.h	/^  char cc;		\/* Insn sets or needs the condition codes.  *\/$/;"	m	struct:resources
cc0_live	flow.c	/^  int cc0_live;$/;"	m	struct:propagate_block_info	file:
cc0_rtx	rtl.h	1622;"	d
cc_prev_status	final.c	/^CC_STATUS cc_prev_status;$/;"	v
cc_status	final.c	/^CC_STATUS cc_status;$/;"	v
ccp_cmov	optabs.h	/^  ccp_cmov,$/;"	e	enum:can_compare_purpose
ccp_jump	optabs.h	/^  ccp_jump,$/;"	e	enum:can_compare_purpose
ccp_store_flag	optabs.h	/^  ccp_store_flag$/;"	e	enum:can_compare_purpose
cdi_direction	basic-block.h	/^enum cdi_direction$/;"	g
cdt	vmsdbgout.c	/^  long long cdt;$/;"	m	struct:dst_file_info_struct	file:
ceil_log2	expmed.c	/^ceil_log2 (x)$/;"	f
ceiling	dwarf2out.c	/^ceiling (value, boundary)$/;"	f	file:
ceiling	dwarfout.c	/^ceiling (value, boundary)$/;"	f	file:
cfa	dwarf2out.c	/^static dw_cfa_location cfa;$/;"	v	file:
cfa_loc	dwarf2out.c	/^typedef struct cfa_loc$/;"	s	file:
cfa_offset	dwarf2out.c	/^  long cfa_offset;$/;"	m	struct:queued_reg_save	file:
cfa_offset	function.c	/^static int cfa_offset;$/;"	v	file:
cfa_store	dwarf2out.c	/^static dw_cfa_location cfa_store;$/;"	v	file:
cfa_temp	dwarf2out.c	/^static dw_cfa_location cfa_temp;$/;"	v	file:
cfc_args	simplify-rtx.c	/^struct cfc_args$/;"	s	file:
cfg	basic-block.h	/^  struct cfg$/;"	s	struct:loops
cfg	basic-block.h	/^  } cfg;$/;"	m	struct:loops	typeref:struct:loops::cfg
cfg_layout_finalize	cfglayout.c	/^cfg_layout_finalize ()$/;"	f
cfg_layout_initialize	cfglayout.c	/^cfg_layout_initialize ()$/;"	f
cfun	function.c	/^struct function *cfun = 0;$/;"	v	typeref:struct:function
chain	df.h	/^  struct df_link *chain;	\/* Head of def-use or use-def chain.  *\/$/;"	m	struct:ref	typeref:struct:ref::df_link
chain	tree.h	/^  tree chain;$/;"	m	struct:tree_common
chain_member	tree.c	/^chain_member (elem, chain)$/;"	f
chain_member_purpose	tree.c	/^chain_member_purpose (elem, chain)$/;"	f
chain_member_value	tree.c	/^chain_member_value (elem, chain)$/;"	f
chainon	tree.c	/^chainon (op1, op2)$/;"	f
change_address	emit-rtl.c	/^change_address (memref, mode, addr)$/;"	f
change_address_1	emit-rtl.c	/^change_address_1 (memref, mode, addr, validate)$/;"	f	file:
change_scope	cfglayout.c	/^change_scope (orig_insn, s1, s2)$/;"	f	file:
change_stack	reg-stack.c	/^change_stack (insn, old, new, where)$/;"	f	file:
change_t	recog.c	/^typedef struct change_t$/;"	s	file:
change_t	recog.c	/^} change_t;$/;"	t	typeref:struct:change_t	file:
changed	ssa.c	/^  int changed;$/;"	m	struct:phi_coalesce_context	file:
changes	recog.c	/^static change_t *changes;$/;"	v	file:
changes_allocated	recog.c	/^static int changes_allocated;$/;"	v	file:
changes_mode	local-alloc.c	/^  char changes_mode;$/;"	m	struct:qty	file:
changes_mode	regs.h	/^  char changes_mode;		\/* whether (SUBREG (REG n)) exists and $/;"	m	struct:reg_info_def
char_array_type_node	c-common.h	212;"	d
char_lenient_flag	c-format.c	/^  int char_lenient_flag;$/;"	m	struct:format_wanted_type	file:
char_type_class	typeclass.h	/^  void_type_class, integer_type_class, char_type_class,$/;"	e	enum:type_class
char_type_node	tree.h	2042;"	d
check_annul_list_true_false	reorg.c	/^check_annul_list_true_false (annul_true_p, delay_list)$/;"	f	file:
check_asm_operands	recog.c	/^check_asm_operands (x)$/;"	f
check_asm_stack_operands	reg-stack.c	/^check_asm_stack_operands (insn)$/;"	f	file:
check_case_value	c-common.c	/^check_case_value (value)$/;"	f
check_dbra_loop	loop.c	/^check_dbra_loop (loop, insn_count)$/;"	f	file:
check_dependence	cse.c	/^check_dependence (x, data)$/;"	f	file:
check_dependence_data	cse.c	/^struct check_dependence_data$/;"	s	file:
check_eliminable_occurrences	reload1.c	/^check_eliminable_occurrences (x)$/;"	f	file:
check_eol	cpplib.c	/^check_eol (pfile)$/;"	f	file:
check_ext_dependent_givs	loop.c	/^check_ext_dependent_givs (bl, loop_info)$/;"	f	file:
check_final_value	loop.c	/^check_final_value (loop, v)$/;"	f	file:
check_fold_consts	simplify-rtx.c	/^check_fold_consts (data)$/;"	f	file:
check_for_full_enumeration_handling	stmt.c	/^check_for_full_enumeration_handling (type)$/;"	f
check_for_label_ref	cse.c	/^check_for_label_ref (rtl, data)$/;"	f	file:
check_for_loop_decls	c-decl.c	/^check_for_loop_decls ()$/;"	f
check_format_info	c-format.c	/^check_format_info (status, info, params)$/;"	f	file:
check_format_info_main	c-format.c	/^check_format_info_main (status, res, info, format_chars, format_length,$/;"	f	file:
check_format_info_recurse	c-format.c	/^check_format_info_recurse (status, res, info, format_tree, params, arg_num)$/;"	f	file:
check_format_types	c-format.c	/^check_format_types (status, types)$/;"	f	file:
check_function_format	c-format.c	/^check_function_format (status, attrs, params)$/;"	f
check_function_return_warnings	flow.c	/^check_function_return_warnings ()$/;"	f
check_global_declarations	toplev.c	/^check_global_declarations (vec, len)$/;"	f
check_handled	except.c	/^check_handled (handled, type)$/;"	f	file:
check_hard_regs_in_partition	ssa.c	/^check_hard_regs_in_partition (reg_partition)$/;"	f	file:
check_insn_for_bivs	loop.c	/^check_insn_for_bivs (loop, p, not_every_iteration, maybe_multiple)$/;"	f	file:
check_insn_for_givs	loop.c	/^check_insn_for_givs (loop, p, not_every_iteration, maybe_multiple)$/;"	f	file:
check_live	sched-rgn.c	/^check_live (insn, src)$/;"	f	file:
check_live_1	sched-rgn.c	/^check_live_1 (src, x)$/;"	f	file:
check_max_integer_computation_mode	expr.c	/^check_max_integer_computation_mode (exp)$/;"	f
check_node_dependence	dependence.c	/^check_node_dependence (du)$/;"	f	file:
check_operand_nalternatives	stmt.c	/^check_operand_nalternatives (outputs, inputs)$/;"	f	file:
check_promoted_subreg	combine.c	/^check_promoted_subreg (insn, x)$/;"	f	file:
check_seenlabel	stmt.c	/^check_seenlabel ()$/;"	f	file:
check_sibcall_argument_overlap	calls.c	/^check_sibcall_argument_overlap (insn, arg)$/;"	f	file:
check_sibcall_argument_overlap_1	calls.c	/^check_sibcall_argument_overlap_1 (x)$/;"	f	file:
check_store	loop.c	/^check_store (x, pat, data)$/;"	f	file:
check_store_data	loop.c	/^struct check_store_data$/;"	s	file:
check_subscript_induction	dependence.c	/^check_subscript_induction (icoefficient, ocoefficient, loop_ptr)$/;"	f	file:
check_trad_stringification	cppmacro.c	/^check_trad_stringification (pfile, macro, string)$/;"	f	file:
check_unique_operand_names	stmt.c	/^check_unique_operand_names (outputs, inputs)$/;"	f	file:
checkit	vasprintf.c	/^checkit VPARAMS ((const char *format, ...))$/;"	f	file:
child	fibheap.h	/^  struct fibnode *child;$/;"	m	struct:fibnode	typeref:struct:fibnode::fibnode
children	alias.c	/^  splay_tree children;$/;"	m	struct:alias_set_entry	file:
choose_hard_reg_mode	regclass.c	/^choose_hard_reg_mode (regno, nregs)$/;"	f
choose_multiplier	expmed.c	/^choose_multiplier (d, n, precision, multiplier_ptr, post_shift_ptr, lgup_ptr)$/;"	f	file:
choose_reload_regs	reload1.c	/^choose_reload_regs (chain)$/;"	f	file:
choose_reload_regs_init	reload1.c	/^choose_reload_regs_init (chain, save_reload_reg_rtx)$/;"	f	file:
chunk	obstack.h	/^  struct _obstack_chunk *chunk;	\/* address of current struct obstack_chunk *\/$/;"	m	struct:obstack	typeref:struct:obstack::_obstack_chunk
chunk_limit	obstack.h	/^  char	*chunk_limit;		\/* address of char after current chunk *\/$/;"	m	struct:obstack
chunk_size	obstack.h	/^  long	chunk_size;		\/* preferred size to allocate chunks in *\/$/;"	m	struct:obstack
chunkfun	obstack.h	/^  struct _obstack_chunk *(*chunkfun) (); \/* User's fcn to allocate a chunk.  *\/$/;"	m	struct:obstack	typeref:struct:obstack::chunkfun
chunkfun	obstack.h	/^  struct _obstack_chunk *(*chunkfun) (void *, long);$/;"	m	struct:obstack	typeref:struct:obstack::chunkfun
cie_cfi_head	dwarf2out.c	/^static dw_cfi_ref cie_cfi_head;$/;"	v	file:
cl_directive_handler	cppinit.c	/^typedef void (* cl_directive_handler) PARAMS ((cpp_reader *, const char *));$/;"	t	file:
cl_option	cppinit.c	/^struct cl_option$/;"	s	file:
cl_options	cppinit.c	/^static struct cl_option cl_options[] =$/;"	v	typeref:struct:cl_option	file:
class	loop.c	/^  struct iv_class *class;	\/* Class this prefetch is based on.  *\/$/;"	m	struct:prefetch_info	typeref:struct:prefetch_info::iv_class	file:
class	regrename.c	/^  enum reg_class class;$/;"	m	struct:du_chain	typeref:enum:du_chain::reg_class	file:
class_can_change_mode	regclass.c	/^static int class_can_change_mode[N_REG_CLASSES];$/;"	v	file:
class_count	partition.h	/^  unsigned class_count;$/;"	m	struct:partition_elem
class_element	partition.h	/^  int class_element;$/;"	m	struct:partition_elem
class_narrowest_mode	rtl.c	/^const enum machine_mode class_narrowest_mode[(int) MAX_MODE_CLASS] = {$/;"	v	typeref:enum:machine_mode
class_scope_p	dwarf2out.c	/^class_scope_p (context_die)$/;"	f	file:
classic_gcse	gcse.c	/^classic_gcse ()$/;"	f	file:
classify_argument	i386.c	/^classify_argument (mode, type, classes, bit_offset)$/;"	f	file:
classify_dependence	dependence.c	/^classify_dependence (icoefficients, ocoefficients, complexity, separability,$/;"	f	file:
classify_insn	emit-rtl.c	/^classify_insn (x)$/;"	f
clean_graph_dump_file	graph.c	/^clean_graph_dump_file (base, suffix)$/;"	f
clean_symbol_name	tree.c	/^clean_symbol_name (p)$/;"	f
cleanup	except.c	/^    } cleanup;$/;"	m	union:eh_region::__anon21	typeref:struct:eh_region::__anon21::__anon26	file:
cleanup_barriers	jump.c	/^cleanup_barriers ()$/;"	f
cleanup_cfg	cfgcleanup.c	/^cleanup_cfg (mode)$/;"	f
cleanup_exp	except.c	/^      tree cleanup_exp;$/;"	m	struct:eh_region::__anon21::__anon27	file:
cleanup_label	function.h	525;"	d
cleanup_list_list	stmt.c	/^  tree cleanup_list_list;$/;"	m	struct:goto_fixup	file:
cleanup_ptr	stmt.c	/^	  tree *cleanup_ptr;$/;"	m	struct:nesting::__anon67::__anon70	file:
cleanup_subreg_operands	final.c	/^cleanup_subreg_operands (insn)$/;"	f
cleanups	stmt.c	/^	  tree cleanups;$/;"	m	struct:nesting::__anon67::__anon70	file:
clear_aux_for_blocks	cfg.c	/^clear_aux_for_blocks ()$/;"	f
clear_aux_for_edges	cfg.c	/^clear_aux_for_edges ()$/;"	f
clear_binding_level	c-decl.c	/^static struct binding_level clear_binding_level$/;"	v	typeref:struct:binding_level	file:
clear_binding_stack	langhooks.h	/^  void (*clear_binding_stack) PARAMS ((void));$/;"	m	struct:lang_hooks
clear_by_pieces	expr.c	/^clear_by_pieces (to, len, align)$/;"	f	file:
clear_by_pieces_1	expr.c	/^clear_by_pieces_1 (data, offset, mode)$/;"	f	file:
clear_const_double_mem	varasm.c	/^clear_const_double_mem ()$/;"	f
clear_dead_regs	regrename.c	/^clear_dead_regs (pset, kind, notes)$/;"	f	file:
clear_diagnostic_info	diagnostic.c	/^clear_diagnostic_info (buffer)$/;"	f	file:
clear_edges	cfg.c	/^clear_edges ()$/;"	f
clear_emit_caches	emit-rtl.c	/^clear_emit_caches ()$/;"	f
clear_hashed_info_for_insn	resource.c	/^clear_hashed_info_for_insn (insn)$/;"	f
clear_last_expr	stmt.c	/^clear_last_expr ()$/;"	f
clear_limbo_values	c-decl.c	/^clear_limbo_values (block)$/;"	f	file:
clear_log_links	flow.c	/^clear_log_links (blocks)$/;"	f	file:
clear_marks	ggc-page.c	/^clear_marks ()$/;"	f	file:
clear_modify_mem_tables	gcse.c	/^clear_modify_mem_tables ()$/;"	f	file:
clear_page_group_in_use	ggc-page.c	/^clear_page_group_in_use (group, page)$/;"	f	file:
clear_parm_order	c-decl.c	/^clear_parm_order ()$/;"	f
clear_pending_stack_adjust	expr.c	/^clear_pending_stack_adjust ()$/;"	f
clear_reg_alias_info	alias.c	/^clear_reg_alias_info (reg)$/;"	f
clear_reload_reg_in_use	reload1.c	/^clear_reload_reg_in_use (regno, opnum, type, mode)$/;"	f	file:
clear_secondary_mem	reload.c	/^clear_secondary_mem ()$/;"	f
clear_storage	expr.c	/^clear_storage (object, size)$/;"	f
clear_table	cselib.c	/^clear_table (clear_all)$/;"	f	file:
clear_units	haifa-sched.c	/^clear_units ()$/;"	f	file:
clk_c	c-common.h	/^  clk_c,           \/* A dialect of C: K&R C, ANSI\/ISO C89, C2000,$/;"	e	enum:c_language_kind
clk_cplusplus	c-common.h	/^  clk_cplusplus,   \/* ANSI\/ISO C++ *\/$/;"	e	enum:c_language_kind
clk_objective_c	c-common.h	/^  clk_objective_c  \/* Objective C *\/$/;"	e	enum:c_language_kind
clobber_return_register	function.c	/^clobber_return_register ()$/;"	f
clobbers	sched-int.h	/^      rtx clobbers;$/;"	m	struct:deps::deps_reg
clobbers_length	sched-int.h	/^      int clobbers_length;$/;"	m	struct:deps::deps_reg
clobbers_queued_reg_save	dwarf2out.c	/^clobbers_queued_reg_save (insn)$/;"	f	file:
clock_t	timevar.c	/^typedef int clock_t;$/;"	t	file:
clock_var	haifa-sched.c	/^static int clock_var;$/;"	v	file:
clocks_to_msec	timevar.c	/^static float clocks_to_msec;$/;"	v	file:
clone_body	tree-inline.c	/^clone_body (clone, fn, arg_map)$/;"	f
cloning_p	tree-inline.c	/^  bool cloning_p;$/;"	m	struct:inline_data	file:
close_dump_file	toplev.c	/^close_dump_file (index, func, insns)$/;"	f	file:
close_paren	target.h	/^    const char *open_paren, *close_paren;$/;"	m	struct:gcc_target::asm_out
closed_chains	regrename.c	/^static struct du_chain *closed_chains;$/;"	v	typeref:struct:du_chain	file:
clrstr_optab	expr.c	/^enum insn_code clrstr_optab[NUM_MACHINE_MODES];$/;"	v	typeref:enum:insn_code
cmacro	cppfiles.c	/^  const cpp_hashnode *cmacro;	\/* macro, if any, preventing reinclusion.  *\/$/;"	m	struct:include_file	file:
cmodel	i386.h	/^enum cmodel {$/;"	g
cmov_optab	optabs.h	208;"	d
cmp_combine_givs_stats	loop.c	/^cmp_combine_givs_stats (xp, yp)$/;"	f	file:
cmp_fp_expander_operand	i386.c	/^cmp_fp_expander_operand (op, mode)$/;"	f
cmp_optab	optabs.h	201;"	d
cmpsi_operand	i386.c	/^cmpsi_operand (op, mode)$/;"	f
cn	safe-ctype.c	38;"	d	file:
coalesce_if_unconflicting	ssa.c	/^coalesce_if_unconflicting (p, conflicts, reg1, reg2)$/;"	f	file:
coalesce_reg_in_phi	ssa.c	/^coalesce_reg_in_phi (insn, dest_regno, src_regno, data)$/;"	f	file:
coalesce_regs_in_copies	ssa.c	/^coalesce_regs_in_copies (bb, p, conflicts)$/;"	f	file:
coalesce_regs_in_successor_phi_nodes	ssa.c	/^coalesce_regs_in_successor_phi_nodes (bb, p, conflicts)$/;"	f	file:
code	c-parse.c	/^typedef union {long itype; tree ttype; enum tree_code code;$/;"	m	union:__anon52	typeref:enum:__anon52::tree_code	file:
code	fold-const.c	/^  enum tree_code code;		\/* Input: tree code for operation.  *\/$/;"	m	struct:cb_args	typeref:enum:cb_args::tree_code	file:
code	i386.c	/^  const enum ix86_builtins code;$/;"	m	struct:builtin_description	typeref:enum:builtin_description::ix86_builtins	file:
code	optabs.h	/^  enum rtx_code code;$/;"	m	struct:optab	typeref:enum:optab::rtx_code
code	rtl.h	/^  ENUM_BITFIELD(rtx_code) code: 16;$/;"	m	struct:rtx_def
code	simplify-rtx.c	/^  enum rtx_code code;$/;"	m	struct:simplify_binary_real_args	typeref:enum:simplify_binary_real_args::rtx_code	file:
code	simplify-rtx.c	/^  enum rtx_code code;$/;"	m	struct:simplify_unary_real_args	typeref:enum:simplify_unary_real_args::rtx_code	file:
code	tree.h	/^  ENUM_BITFIELD(tree_code) code : 8;$/;"	m	struct:tree_common
code_label	stmt.c	/^  tree			code_label; \/* Label to jump to when node matches *\/$/;"	m	struct:case_node	file:
code_to_optab	optabs.c	/^optab code_to_optab[NUM_RTX_CODE + 1];$/;"	v
coefficient	dependence.c	/^  int coefficient;$/;"	m	struct:subscript	file:
col	cpplib.h	/^  unsigned short col;		\/* Column of first char of token.  *\/$/;"	m	struct:cpp_token
col_adjust	cpphash.h	/^  unsigned int col_adjust;$/;"	m	struct:cpp_buffer
collect_args	cppmacro.c	/^collect_args (pfile, node)$/;"	f	file:
collect_eh_region_array	except.c	/^collect_eh_region_array ()$/;"	f	file:
collect_one_action_chain	except.c	/^collect_one_action_chain (ar_hash, region)$/;"	f	file:
collisions	hashtab.h	/^  unsigned int collisions;$/;"	m	struct:htab
collisions	hashtable.h	/^  unsigned int collisions;$/;"	m	struct:ht
column	tree-dump.h	/^  unsigned int column;$/;"	m	struct:dump_info
combinable_i3pat	combine.c	/^combinable_i3pat (i3, loc, i2dest, i1dest, i1_not_in_src, pi3dest_killed)$/;"	f	file:
combine_attempts	combine.c	/^static int combine_attempts;$/;"	v	file:
combine_extras	combine.c	/^static int combine_extras;$/;"	v	file:
combine_givs	loop.c	/^combine_givs (regs, bl)$/;"	f	file:
combine_givs_p	loop.c	/^combine_givs_p (g1, g2)$/;"	f	file:
combine_givs_stats	loop.c	/^struct combine_givs_stats$/;"	s	file:
combine_instructions	combine.c	/^combine_instructions (f, nregs)$/;"	f
combine_max_regno	combine.c	/^static unsigned int combine_max_regno;$/;"	v	file:
combine_merges	combine.c	/^static int combine_merges;$/;"	v	file:
combine_movables	loop.c	/^combine_movables (movables, regs)$/;"	f	file:
combine_pending_stack_adjustment_and_call	calls.c	/^combine_pending_stack_adjustment_and_call (unadjusted_args_size,$/;"	f	file:
combine_predictions_for_insn	predict.c	/^combine_predictions_for_insn (insn, bb)$/;"	f	file:
combine_regs	local-alloc.c	/^combine_regs (usedreg, setreg, may_save_copy, insn_number, insn, already_dead)$/;"	f	file:
combine_reloads	reload.c	/^combine_reloads ()$/;"	f	file:
combine_reversed_comparison_code	combine.c	/^combine_reversed_comparison_code (exp)$/;"	f	file:
combine_simplify_rtx	combine.c	/^combine_simplify_rtx (x, op0_mode, last, in_dest)$/;"	f	file:
combine_stack_adjustments	regmove.c	/^combine_stack_adjustments ()$/;"	f
combine_stack_adjustments_for_block	regmove.c	/^combine_stack_adjustments_for_block (bb)$/;"	f	file:
combine_strings	c-common.c	/^combine_strings (strings)$/;"	f
combine_successes	combine.c	/^static int combine_successes;$/;"	v	file:
combine_temp_slots	function.c	/^combine_temp_slots ()$/;"	f
combined_with	loop.h	/^  unsigned combined_with;	\/* The number of givs this giv has been$/;"	m	struct:induction
comdat_flag	tree.h	/^  unsigned comdat_flag : 1;$/;"	m	struct:tree_decl
comdat_symbol_id	dwarf2out.c	/^static char *comdat_symbol_id;$/;"	v	file:
comdat_symbol_number	dwarf2out.c	/^static unsigned int comdat_symbol_number;$/;"	v	file:
commit_edge_insertions	cfgrtl.c	/^commit_edge_insertions ()$/;"	f
commit_one_edge_insertion	cfgrtl.c	/^commit_one_edge_insertion (e)$/;"	f	file:
common	c-common.h	/^  struct tree_common common;$/;"	m	struct:c_common_identifier	typeref:struct:c_common_identifier::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_block	typeref:struct:tree_block::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_complex	typeref:struct:tree_complex::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_decl	typeref:struct:tree_decl::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_exp	typeref:struct:tree_exp::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_identifier	typeref:struct:tree_identifier::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_int_cst	typeref:struct:tree_int_cst::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_list	typeref:struct:tree_list::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_real_cst	typeref:struct:tree_real_cst::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_string	typeref:struct:tree_string::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_type	typeref:struct:tree_type::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_vec	typeref:struct:tree_vec::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	struct:tree_vector	typeref:struct:tree_vector::tree_common
common	tree.h	/^  struct tree_common common;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_common
common_flag	tree.h	/^  unsigned common_flag : 1;$/;"	m	struct:tree_decl
common_type	c-typeck.c	/^common_type (t1, t2)$/;"	f
commutative	regmove.c	/^  int commutative[MAX_RECOG_OPERANDS];$/;"	m	struct:match	file:
commutative_operand_precedence	rtlanal.c	/^commutative_operand_precedence (op)$/;"	f
comp	gcse.c	/^static sbitmap *comp;$/;"	v	file:
comp	hash.h	/^  bool (*comp) PARAMS ((hash_table_key, hash_table_key));$/;"	m	struct:hash_table
comp	lcm.c	/^static sbitmap *comp;$/;"	v	file:
comp	splay-tree.h	/^  splay_tree_compare_fn comp;$/;"	m	struct:splay_tree_s
comp_dir_attribute	dwarfout.c	/^comp_dir_attribute (dirname)$/;"	f	file:
comp_target_types	c-typeck.c	/^comp_target_types (ttl, ttr)$/;"	f	file:
comp_type_attributes	target.h	/^  int (* comp_type_attributes) PARAMS ((tree type1, tree type2));$/;"	m	struct:gcc_target
comp_unit_die	dwarf2out.c	/^static dw_die_ref comp_unit_die;$/;"	v	file:
compare_blocks	integrate.c	/^compare_blocks (v1, v2)$/;"	f	file:
compare_constant	varasm.c	/^compare_constant (exp, desc)$/;"	f	file:
compare_constant_1	varasm.c	/^compare_constant_1 (exp, p)$/;"	f	file:
compare_constant_rtx	varasm.c	/^compare_constant_rtx (mode, x, desc)$/;"	f	file:
compare_for_stack_reg	reg-stack.c	/^compare_for_stack_reg (insn, regstack, pat_src)$/;"	f	file:
compare_from_rtx	expr.c	/^compare_from_rtx (op0, op1, code, unsignedp, mode, size)$/;"	f
compare_mode	integrate.h	/^  enum machine_mode compare_mode;$/;"	m	struct:inline_remap	typeref:enum:inline_remap::machine_mode
compare_src	integrate.h	/^  rtx compare_src;$/;"	m	struct:inline_remap
compare_tree_int	tree.c	/^compare_tree_int (t, u)$/;"	f
comparison	i386.c	/^  const enum rtx_code comparison;$/;"	m	struct:builtin_description	typeref:enum:builtin_description::rtx_code	file:
comparison_code	cse.c	/^  enum rtx_code comparison_code;$/;"	m	struct:qty_table_elem	typeref:enum:qty_table_elem::rtx_code	file:
comparison_code	loop.h	/^  enum rtx_code comparison_code;$/;"	m	struct:loop_info	typeref:enum:loop_info::rtx_code
comparison_const	cse.c	/^  rtx comparison_const;$/;"	m	struct:qty_table_elem	file:
comparison_dominates_p	jump.c	/^comparison_dominates_p (code1, code2)$/;"	f
comparison_operator	recog.c	/^comparison_operator (op, mode)$/;"	f
comparison_qty	cse.c	/^  int comparison_qty;$/;"	m	struct:qty_table_elem	file:
comparison_value	loop.h	/^  rtx comparison_value;$/;"	m	struct:loop_info
compensate_edge	reg-stack.c	/^compensate_edge (e, file)$/;"	f	file:
compile_file	toplev.c	/^compile_file ()$/;"	f	file:
compiler_param	params.h	/^typedef enum compiler_param$/;"	g
compiler_param	params.h	/^} compiler_param;$/;"	t	typeref:enum:compiler_param
compiler_params	params.c	/^param_info *compiler_params;$/;"	v
complete_array_type	c-decl.c	/^complete_array_type (type, initial_value, do_default)$/;"	f
complex	tree.h	/^  struct tree_complex complex;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_complex
complex_double_type_node	tree.h	1980;"	d
complex_float_type_node	tree.h	1979;"	d
complex_integer_type_node	tree.h	1978;"	d
complex_long_double_type_node	tree.h	1981;"	d
complex_type_class	typeclass.h	/^  real_type_class, complex_type_class,$/;"	e	enum:type_class
complexity	tree.h	/^  int complexity;$/;"	m	struct:tree_exp
complexity_type	dependence.c	/^enum complexity_type {ziv, strong_siv, weak_siv, weak_zero_siv,$/;"	g	file:
component	cppdefault.h	/^  const char *const component;	\/* The component containing the directory$/;"	m	struct:default_include
component_ref_for_mem_expr	emit-rtl.c	/^component_ref_for_mem_expr (ref)$/;"	f	file:
compress	dominance.c	/^compress (di, v)$/;"	f	file:
compstmt_count	c-common.c	/^  int compstmt_count;$/;"	m	struct:__anon72	file:
compstmt_count	c-parse.c	/^static int compstmt_count;$/;"	v	file:
comptypes	c-typeck.c	/^comptypes (type1, type2)$/;"	f
compute_ae_gen	gcse.c	/^compute_ae_gen ()$/;"	f	file:
compute_ae_kill	gcse.c	/^compute_ae_kill (ae_gen, ae_kill)$/;"	f	file:
compute_alignments	final.c	/^compute_alignments ()$/;"	f
compute_antinout_edge	lcm.c	/^compute_antinout_edge (antloc, transp, antin, antout)$/;"	f	file:
compute_argument_addresses	calls.c	/^compute_argument_addresses (args, argblock, num_actuals)$/;"	f	file:
compute_argument_block_size	calls.c	/^compute_argument_block_size (reg_parm_stack_space, args_size,$/;"	f	file:
compute_available	lcm.c	/^compute_available (avloc, kill, avout, avin)$/;"	f
compute_bb_for_insn	cfgrtl.c	/^compute_bb_for_insn (max)$/;"	f
compute_block_backward_dependences	sched-rgn.c	/^compute_block_backward_dependences (bb)$/;"	f	file:
compute_branch_probabilities	profile.c	/^compute_branch_probabilities ()$/;"	f	file:
compute_can_copy	gcse.c	/^compute_can_copy ()$/;"	f	file:
compute_coalesced_reg_partition	ssa.c	/^compute_coalesced_reg_partition ()$/;"	f	file:
compute_code_hoist_data	gcse.c	/^compute_code_hoist_data ()$/;"	f	file:
compute_code_hoist_vbeinout	gcse.c	/^compute_code_hoist_vbeinout ()$/;"	f	file:
compute_conservative_reg_partition	ssa.c	/^compute_conservative_reg_partition ()$/;"	f	file:
compute_cprop_data	gcse.c	/^compute_cprop_data ()$/;"	f	file:
compute_dom_prob_ps	sched-rgn.c	/^compute_dom_prob_ps (bb)$/;"	f	file:
compute_dominance_frontiers	ssa.c	/^compute_dominance_frontiers (frontiers, idom)$/;"	f
compute_dominance_frontiers_1	ssa.c	/^compute_dominance_frontiers_1 (frontiers, idom, bb, done)$/;"	f	file:
compute_earliest	lcm.c	/^compute_earliest (edge_list, n_exprs, antin, antout, avout, kill, earliest)$/;"	f	file:
compute_expr_hash_table	gcse.c	/^compute_expr_hash_table ()$/;"	f	file:
compute_farthest	lcm.c	/^compute_farthest (edge_list, n_exprs, st_avout, st_avin, st_antin,$/;"	f	file:
compute_forward_dependences	sched-deps.c	/^compute_forward_dependences (head, tail)$/;"	f
compute_hash_table	gcse.c	/^compute_hash_table (set_p)$/;"	f	file:
compute_insert_delete	lcm.c	/^compute_insert_delete (edge_list, antloc, later, laterin,$/;"	f	file:
compute_insns_for_mem	function.c	/^compute_insns_for_mem (insns, last_insn, ht)$/;"	f	file:
compute_iterated_dominance_frontiers	ssa.c	/^compute_iterated_dominance_frontiers (idfs, frontiers, evals, nregs)$/;"	f	file:
compute_jump_reg_dependencies	sched-ebb.c	/^compute_jump_reg_dependencies (insn, set)$/;"	f	file:
compute_jump_reg_dependencies	sched-int.h	/^  void (*compute_jump_reg_dependencies) PARAMS ((rtx, regset));$/;"	m	struct:sched_info
compute_jump_reg_dependencies	sched-rgn.c	/^compute_jump_reg_dependencies (insn, set)$/;"	f	file:
compute_kill_rd	gcse.c	/^compute_kill_rd ()$/;"	f	file:
compute_laterin	lcm.c	/^compute_laterin (edge_list, earliest, antloc, later, laterin)$/;"	f	file:
compute_ld_motion_mems	gcse.c	/^compute_ld_motion_mems ()$/;"	f	file:
compute_local_properties	gcse.c	/^compute_local_properties (transp, comp, antloc, setp)$/;"	f	file:
compute_luids	loop.c	/^compute_luids (start, end, prev_luid)$/;"	f	file:
compute_nearerout	lcm.c	/^compute_nearerout (edge_list, farthest, st_avloc, nearer, nearerout)$/;"	f	file:
compute_outgoing_frequencies	cfgbuild.c	/^compute_outgoing_frequencies (b)$/;"	f	file:
compute_pre_data	gcse.c	/^compute_pre_data ()$/;"	f	file:
compute_rd	gcse.c	/^compute_rd ()$/;"	f	file:
compute_record_mode	stor-layout.c	/^compute_record_mode (type)$/;"	f
compute_rev_insert_delete	lcm.c	/^compute_rev_insert_delete (edge_list, st_avloc, nearer, nearerout,$/;"	f	file:
compute_section_prefix	dwarf2out.c	/^compute_section_prefix (unit_die)$/;"	f	file:
compute_set_hash_table	gcse.c	/^compute_set_hash_table ()$/;"	f	file:
compute_sets	gcse.c	/^compute_sets (f)$/;"	f	file:
compute_store_table	gcse.c	/^compute_store_table ()$/;"	f	file:
compute_transp	gcse.c	/^compute_transp (x, indx, bmap, set_p)$/;"	f	file:
compute_transpout	gcse.c	/^compute_transpout ()$/;"	f	file:
compute_trg_info	sched-rgn.c	/^compute_trg_info (trg)$/;"	f	file:
compute_use_by_pseudos	reload1.c	/^compute_use_by_pseudos (to, from)$/;"	f
computed_jump_p	rtlanal.c	/^computed_jump_p (insn)$/;"	f
computed_jump_p_1	rtlanal.c	/^computed_jump_p_1 (x)$/;"	f	file:
computing	lcm.c	/^  int computing;$/;"	m	struct:bb_info	file:
computing_insn	gcse.c	/^computing_insn (expr, insn)$/;"	f	file:
concat	concat.c	/^concat VPARAMS ((const char *first, ...))$/;"	f
concat_INSN_LIST	sched-rgn.c	/^concat_INSN_LIST (copy, old)$/;"	f	file:
concat_copy	concat.c	/^concat_copy VPARAMS ((char *dst, const char *first, ...))$/;"	f
concat_copy2	concat.c	/^concat_copy2 VPARAMS ((const char *first, ...))$/;"	f
concat_insn_mem_list	sched-rgn.c	/^concat_insn_mem_list (copy_insns, copy_mems, old_insns_p, old_mems_p)$/;"	f	file:
concat_length	concat.c	/^concat_length VPARAMS ((const char *first, ...))$/;"	f
concat_loc_descriptor	dwarf2out.c	/^concat_loc_descriptor (x0, x1)$/;"	f	file:
cond	ifcvt.c	/^  rtx jump, cond, cond_earliest;$/;"	m	struct:noce_if_info	file:
cond	loop.c	/^  unsigned int cond : 1;	\/* 1 if only conditionally movable *\/$/;"	m	struct:movable	file:
cond	stmt.c	/^	} cond;$/;"	m	union:nesting::__anon67	typeref:struct:nesting::__anon67::__anon68	file:
cond_earliest	ifcvt.c	/^  rtx jump, cond, cond_earliest;$/;"	m	struct:noce_if_info	file:
cond_exec_get_condition	ifcvt.c	/^cond_exec_get_condition (jump)$/;"	f	file:
cond_exec_process_if_block	ifcvt.c	/^cond_exec_process_if_block (test_bb, then_bb, else_bb, join_bb)$/;"	f	file:
cond_exec_process_insns	ifcvt.c	/^cond_exec_process_insns (start, end, test, prob_val, mod_ok)$/;"	f	file:
cond_local_set	basic-block.h	/^  regset cond_local_set;$/;"	m	struct:basic_block_def
cond_local_set	flow.c	/^  regset cond_local_set;$/;"	m	struct:propagate_block_info	file:
cond_stack	stmt.c	383;"	d	file:
condition	flow.c	/^  rtx condition;$/;"	m	struct:reg_cond_life_info	file:
condition_dominates_p	reorg.c	/^condition_dominates_p (condition, insn)$/;"	f	file:
conditional_code	stmt.c	/^	  int conditional_code;$/;"	m	struct:nesting::__anon67::__anon70	file:
conditional_context	stmt.c	/^conditional_context ()$/;"	f
conditions_mutex_p	sched-deps.c	/^conditions_mutex_p (cond1, cond2)$/;"	f	file:
condjump_in_parallel_p	jump.c	/^condjump_in_parallel_p (insn)$/;"	f
condjump_label	jump.c	/^condjump_label (insn)$/;"	f
condjump_p	jump.c	/^condjump_p (insn)$/;"	f
conflict_cost_function	insn-attr.h	/^  int (*const conflict_cost_function) PARAMS ((rtx, rtx));$/;"	m	struct:function_unit_desc
conflict_graph	basic-block.h	/^typedef struct conflict_graph_def *conflict_graph;$/;"	t	typeref:struct:conflict_graph_def
conflict_graph_add	conflict.c	/^conflict_graph_add (graph, reg1, reg2)$/;"	f
conflict_graph_arc	conflict.c	/^typedef struct conflict_graph_arc_def *conflict_graph_arc;$/;"	t	typeref:struct:conflict_graph_arc_def	file:
conflict_graph_arc_def	conflict.c	/^struct conflict_graph_arc_def$/;"	s	file:
conflict_graph_compute	conflict.c	/^conflict_graph_compute (regs, p)$/;"	f
conflict_graph_conflict_p	conflict.c	/^conflict_graph_conflict_p (graph, reg1, reg2)$/;"	f
conflict_graph_def	conflict.c	/^struct conflict_graph_def$/;"	s	file:
conflict_graph_delete	conflict.c	/^conflict_graph_delete (graph)$/;"	f
conflict_graph_enum	conflict.c	/^conflict_graph_enum (graph, reg, enum_fn, extra)$/;"	f
conflict_graph_enum_fn	basic-block.h	/^typedef int (*conflict_graph_enum_fn) PARAMS ((int, int, void *));$/;"	t
conflict_graph_merge_regs	conflict.c	/^conflict_graph_merge_regs (graph, target, src)$/;"	f
conflict_graph_new	conflict.c	/^conflict_graph_new (num_regs)$/;"	f
conflict_graph_print	conflict.c	/^conflict_graph_print (graph, fp)$/;"	f
conflicting_hard_regs_p	ssa.c	/^conflicting_hard_regs_p (reg1, reg2)$/;"	f	file:
conflicts	global.c	/^static INT_TYPE *conflicts;$/;"	v	file:
conflicts	ssa.c	/^  conflict_graph conflicts;$/;"	m	struct:phi_coalesce_context	file:
conflicts_with_override	reload1.c	/^conflicts_with_override (x)$/;"	f	file:
connect_infinite_loops_to_exit	cfganal.c	/^connect_infinite_loops_to_exit ()$/;"	f
connect_post_landing_pads	except.c	/^connect_post_landing_pads ()$/;"	f	file:
consec	loop.c	/^  int consec;			\/* Number of consecutive following insns$/;"	m	struct:movable	file:
consec_sets_giv	loop.c	/^consec_sets_giv (loop, first_benefit, p, src_reg, dest_reg,$/;"	f	file:
consec_sets_invariant_p	loop.c	/^consec_sets_invariant_p (loop, reg, n_sets, insn)$/;"	f	file:
conservative_reg_partition	ssa.c	/^static int conservative_reg_partition;$/;"	v	file:
const	ansidecl.h	161;"	d
const	ansidecl.h	198;"	d
const	ansidecl.h	202;"	d
const	auto-host.h	598;"	d
const	c-parse.c	196;"	d	file:
const0_operand	i386.c	/^const0_operand (op, mode)$/;"	f
const0_rtx	rtl.h	1555;"	d
const1_operand	i386.c	/^const1_operand (op, mode)$/;"	f
const1_rtx	rtl.h	1556;"	d
const248_operand	i386.c	/^const248_operand (op, mode)$/;"	f
const2_rtx	rtl.h	1557;"	d
const_adjust	loop.h	/^  HOST_WIDE_INT const_adjust;	\/* Used by loop unrolling, when an address giv$/;"	m	struct:induction
const_age	integrate.h	/^  unsigned int const_age;$/;"	m	struct:inline_remap
const_alias_set	varasm.c	/^static HOST_WIDE_INT const_alias_set;$/;"	v	file:
const_binop	fold-const.c	/^const_binop (code, arg1, arg2, notrunc)$/;"	f	file:
const_binop_1	fold-const.c	/^const_binop_1 (data)$/;"	f	file:
const_conflict_graph_arc	conflict.c	/^typedef const struct conflict_graph_arc_def *const_conflict_graph_arc;$/;"	t	typeref:struct:conflict_graph_arc_def	file:
const_double_chain	varasm.c	108;"	d	file:
const_double_operand	recog.c	/^const_double_operand (op, mode)$/;"	f
const_equiv	varray.h	/^  struct const_equiv_data const_equiv[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::const_equiv_data
const_equiv_data	varray.h	/^struct const_equiv_data {$/;"	s
const_equiv_varray	integrate.h	/^  varray_type const_equiv_varray;$/;"	m	struct:inline_remap
const_hash	varasm.c	/^const_hash (exp)$/;"	f	file:
const_hash_rtx	varasm.c	/^const_hash_rtx (mode, x)$/;"	f	file:
const_hash_table	varasm.c	/^static struct constant_descriptor *const_hash_table[MAX_HASH_TABLE];$/;"	v	typeref:struct:constant_descriptor	file:
const_insn	cse.c	/^  rtx const_insn;$/;"	m	struct:qty_table_elem	file:
const_int_1_31_operand	i386.c	/^const_int_1_31_operand (op, mode)$/;"	f
const_int_1_operand	i386.c	/^const_int_1_operand (op, mode)$/;"	f
const_int_htab	emit-rtl.c	/^static htab_t const_int_htab;$/;"	v	file:
const_int_htab_eq	emit-rtl.c	/^const_int_htab_eq (x, y)$/;"	f	file:
const_int_htab_hash	emit-rtl.c	/^const_int_htab_hash (x)$/;"	f	file:
const_int_operand	recog.c	/^const_int_operand (op, mode)$/;"	f
const_int_rtx	emit-rtl.c	/^rtx const_int_rtx[MAX_SAVED_CONST_INT * 2 + 1];$/;"	v
const_labelno	varasm.c	/^int const_labelno;$/;"	v
const_prop_count	gcse.c	/^static int const_prop_count;$/;"	v	file:
const_ptr_type_node	tree.h	1987;"	d
const_rtx	cse.c	/^  rtx const_rtx;$/;"	m	struct:qty_table_elem	file:
const_rtx_hash_table	varasm.c	103;"	d	file:
const_rtx_sym_hash_table	varasm.c	104;"	d	file:
const_str_htab	varasm.c	/^static htab_t const_str_htab;$/;"	v	file:
const_str_htab_del	varasm.c	/^const_str_htab_del (dfsp)$/;"	f	file:
const_str_htab_eq	varasm.c	/^const_str_htab_eq (x, y)$/;"	f	file:
const_str_htab_hash	varasm.c	/^const_str_htab_hash (x)$/;"	f	file:
const_string_type_node	c-common.h	216;"	d
const_tiny_rtx	emit-rtl.c	/^rtx const_tiny_rtx[3][(int) MAX_MACHINE_MODE];$/;"	v
const_true_rtx	emit-rtl.c	/^rtx const_true_rtx;$/;"	v
const_value	ssa-ccp.c	/^  rtx const_value;$/;"	m	struct:__anon75	file:
const_value_attribute	dwarfout.c	/^const_value_attribute (rtl)$/;"	f	file:
constant	c-typeck.c	/^  char constant;$/;"	m	struct:constructor_stack	file:
constant	expr.h	/^  HOST_WIDE_INT constant;$/;"	m	struct:args_size
constant	varasm.c	/^  rtx constant;$/;"	m	struct:pool_constant	file:
constant_boolean_node	fold-const.c	/^constant_boolean_node (value, type)$/;"	f	file:
constant_call_address_operand	i386.c	/^constant_call_address_operand (op, mode)$/;"	f
constant_descriptor	varasm.c	/^struct constant_descriptor$/;"	s	file:
constant_expression_warning	c-common.c	/^constant_expression_warning (value)$/;"	f
constant_fits_type_p	c-common.c	/^constant_fits_type_p (c, type)$/;"	f	file:
constant_flag	tree.h	/^  unsigned constant_flag : 1;$/;"	m	struct:tree_common
constant_pool_entries_cost	cse.c	/^static int constant_pool_entries_cost;$/;"	v	file:
constant_size	dwarf2out.c	/^constant_size (value)$/;"	f	file:
constant_subword	emit-rtl.c	/^constant_subword (op, offset, mode)$/;"	f
constfun	expr.c	/^  rtx (*constfun) PARAMS ((PTR, HOST_WIDE_INT, enum machine_mode));$/;"	m	struct:store_by_pieces	file:
constfundata	expr.c	/^  PTR constfundata;$/;"	m	struct:store_by_pieces	file:
constm1_rtx	rtl.h	1558;"	d
constrain_operands	recog.c	/^constrain_operands (strict)$/;"	f
constrain_operands_cached	recog.c	/^constrain_operands_cached (strict)$/;"	f
constraint	recog.h	/^  const char *const constraint;$/;"	m	struct:insn_operand_data
constraint	recog.h	/^  const char *constraint;$/;"	m	struct:operand_alternative
constraint_accepts_reg_p	reload1.c	/^constraint_accepts_reg_p (string, reg)$/;"	f	file:
constraints	recog.h	/^  const char *constraints[MAX_RECOG_OPERANDS];$/;"	m	struct:recog_data
construct_container	i386.c	/^construct_container (mode, type, in_return, nintregs, nsseregs, intreg, sse_regno)$/;"	f	file:
constructor	target.h	/^    void (* constructor) PARAMS ((rtx, int));$/;"	m	struct:gcc_target::asm_out
constructor_asmspec	c-typeck.c	/^static const char *constructor_asmspec;$/;"	v	file:
constructor_bit_index	c-typeck.c	/^static tree constructor_bit_index;$/;"	v	file:
constructor_constant	c-typeck.c	/^static int constructor_constant;$/;"	v	file:
constructor_decl	c-typeck.c	/^static tree constructor_decl;$/;"	v	file:
constructor_depth	c-typeck.c	/^static int constructor_depth;$/;"	v	file:
constructor_designated	c-typeck.c	/^static int constructor_designated;$/;"	v	file:
constructor_elements	c-typeck.c	/^static tree constructor_elements;$/;"	v	file:
constructor_erroneous	c-typeck.c	/^static int constructor_erroneous;$/;"	v	file:
constructor_fields	c-typeck.c	/^static tree constructor_fields;$/;"	v	file:
constructor_incremental	c-typeck.c	/^static int constructor_incremental;$/;"	v	file:
constructor_index	c-typeck.c	/^static tree constructor_index;$/;"	v	file:
constructor_max_index	c-typeck.c	/^static tree constructor_max_index;$/;"	v	file:
constructor_no_implicit	c-typeck.c	/^int constructor_no_implicit = 0; \/* 0 for C; 1 for some other languages.  *\/$/;"	v
constructor_pending_elts	c-typeck.c	/^static struct init_node *constructor_pending_elts;$/;"	v	typeref:struct:init_node	file:
constructor_range_stack	c-typeck.c	/^  struct constructor_range_stack *constructor_range_stack;$/;"	m	struct:initializer_stack	typeref:struct:initializer_stack::constructor_range_stack	file:
constructor_range_stack	c-typeck.c	/^struct constructor_range_stack *constructor_range_stack;$/;"	v	typeref:struct:constructor_range_stack
constructor_range_stack	c-typeck.c	/^struct constructor_range_stack$/;"	s	file:
constructor_simple	c-typeck.c	/^static int constructor_simple;$/;"	v	file:
constructor_stack	c-typeck.c	/^  struct constructor_stack *constructor_stack;$/;"	m	struct:initializer_stack	typeref:struct:initializer_stack::constructor_stack	file:
constructor_stack	c-typeck.c	/^struct constructor_stack *constructor_stack;$/;"	v	typeref:struct:constructor_stack
constructor_stack	c-typeck.c	/^struct constructor_stack$/;"	s	file:
constructor_subconstants_deferred	c-typeck.c	/^static int constructor_subconstants_deferred;$/;"	v	file:
constructor_top_level	c-typeck.c	/^static int constructor_top_level;$/;"	v	file:
constructor_type	c-typeck.c	/^static tree constructor_type;$/;"	v	file:
constructor_unfilled_fields	c-typeck.c	/^static tree constructor_unfilled_fields;$/;"	v	file:
constructor_unfilled_index	c-typeck.c	/^static tree constructor_unfilled_index;$/;"	v	file:
cont	basic-block.h	/^  rtx cont;$/;"	m	struct:loop
cont_dominator	basic-block.h	/^  rtx cont_dominator;$/;"	m	struct:loop
containing_loop	dependence.c	/^  tree containing_loop;$/;"	m	struct:def_use	file:
containing_loop	dependence.c	/^  tree containing_loop;$/;"	m	struct:loop	file:
containing_rgn	sched-rgn.c	/^static int *containing_rgn;$/;"	v	file:
containing_type_attribute	dwarfout.c	/^containing_type_attribute (containing_type)$/;"	f	file:
contains	function.c	/^contains (insn, vec)$/;"	f	file:
contains_functions	function.h	/^  unsigned int contains_functions : 1;$/;"	m	struct:function
contains_muldiv	combine.c	/^contains_muldiv (x)$/;"	f	file:
contains_placeholder_p	tree.c	/^contains_placeholder_p (exp)$/;"	f
contains_pointers_p	varasm.c	/^contains_pointers_p (type)$/;"	f	file:
contains_reg_of_mode	regclass.c	/^static char contains_reg_of_mode [N_REG_CLASSES] [MAX_MACHINE_MODE];$/;"	v	file:
contains_replace_regs	local-alloc.c	/^contains_replace_regs (x)$/;"	f	file:
contents	obstack.h	/^  char	contents[4];		\/* objects begin here *\/$/;"	m	struct:_obstack_chunk
contents	varasm.c	/^    unsigned char contents[1];$/;"	m	union:constant_descriptor::__anon83	file:
context	cpphash.h	/^  struct cpp_context *context;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::cpp_context
context	stmt.c	/^  tree context;$/;"	m	struct:goto_fixup	file:
context	tree.h	/^  tree context;$/;"	m	struct:tree_decl
context	tree.h	/^  tree context;$/;"	m	struct:tree_type
context_as_prefix	diagnostic.c	/^context_as_prefix (file, line, warn)$/;"	f
context_depth	ggc-page.c	/^  unsigned short context_depth;$/;"	m	struct:globals	file:
context_depth	ggc-page.c	/^  unsigned short context_depth;$/;"	m	struct:page_entry	file:
context_display	function.h	536;"	d
continue_label	except.c	/^      rtx continue_label;$/;"	m	struct:eh_region::__anon21::__anon22	file:
continue_label	stmt.c	/^	  rtx continue_label;$/;"	m	struct:nesting::__anon67::__anon69	file:
contributes_to_priority	sched-ebb.c	/^contributes_to_priority (next, insn)$/;"	f	file:
contributes_to_priority	sched-int.h	/^  int (*contributes_to_priority) PARAMS ((rtx, rtx));$/;"	m	struct:sched_info
contributes_to_priority	sched-rgn.c	/^contributes_to_priority (next, insn)$/;"	f	file:
control_dependent_block_to_edge_map	ssa-dce.c	/^} control_dependent_block_to_edge_map_s, *control_dependent_block_to_edge_map;$/;"	t	typeref:struct:__anon15	file:
control_dependent_block_to_edge_map_create	ssa-dce.c	/^control_dependent_block_to_edge_map_create (num_basic_blocks)$/;"	f	file:
control_dependent_block_to_edge_map_free	ssa-dce.c	/^control_dependent_block_to_edge_map_free (c)$/;"	f	file:
control_dependent_block_to_edge_map_s	ssa-dce.c	/^} control_dependent_block_to_edge_map_s, *control_dependent_block_to_edge_map;$/;"	t	typeref:struct:__anon15	file:
control_flow_insn_p	cfgbuild.c	/^control_flow_insn_p (insn)$/;"	f	file:
conversion_errno	c-lex.c	/^  int conversion_errno;$/;"	m	struct:pf_args	file:
conversion_specs	c-format.c	/^  const format_char_info *const conversion_specs;$/;"	m	struct:__anon43	file:
convert	c-convert.c	/^convert (type, expr)$/;"	f
convert_and_check	c-common.c	/^convert_and_check (type, expr)$/;"	f
convert_arguments	c-typeck.c	/^convert_arguments (typelist, values, name, fundecl)$/;"	f	file:
convert_for_assignment	c-typeck.c	/^convert_for_assignment (type, rhs, errtype, fundecl, funname, parmnum)$/;"	f	file:
convert_from_eh_region_ranges	except.c	/^convert_from_eh_region_ranges ()$/;"	f
convert_from_eh_region_ranges_1	except.c	/^convert_from_eh_region_ranges_1 (pinsns, orig_sp, cur)$/;"	f	file:
convert_from_ssa	ssa.c	/^convert_from_ssa ()$/;"	f
convert_memory_address	explow.c	/^convert_memory_address (to_mode, x)$/;"	f
convert_modes	expr.c	/^convert_modes (mode, oldmode, x, unsignedp)$/;"	f
convert_move	expr.c	/^convert_move (to, from, unsignedp)$/;"	f
convert_parm_for_inlining	langhooks.h	/^  union tree_node *(*convert_parm_for_inlining) PARAMS ((union tree_node *,$/;"	m	struct:lang_hooks_for_tree_inlining	typeref:union:lang_hooks_for_tree_inlining::convert_parm_for_inlining
convert_regs	reg-stack.c	/^convert_regs (file)$/;"	f	file:
convert_regs_1	reg-stack.c	/^convert_regs_1 (file, block)$/;"	f	file:
convert_regs_2	reg-stack.c	/^convert_regs_2 (file, block)$/;"	f	file:
convert_regs_entry	reg-stack.c	/^convert_regs_entry ()$/;"	f	file:
convert_regs_exit	reg-stack.c	/^convert_regs_exit ()$/;"	f	file:
convert_to_complex	convert.c	/^convert_to_complex (type, expr)$/;"	f
convert_to_eh_region_ranges	except.c	/^convert_to_eh_region_ranges ()$/;"	f
convert_to_integer	convert.c	/^convert_to_integer (type, expr)$/;"	f
convert_to_mode	expr.c	/^convert_to_mode (mode, x, unsignedp)$/;"	f
convert_to_pointer	convert.c	/^convert_to_pointer (type, expr)$/;"	f
convert_to_real	convert.c	/^convert_to_real (type, expr)$/;"	f
convert_to_ssa	ssa.c	/^convert_to_ssa ()$/;"	f
convert_to_vector	convert.c	/^convert_to_vector (type, expr)$/;"	f
copied_p	gcse.c	/^  char copied_p;$/;"	m	struct:occr	file:
copy_addr_to_reg	explow.c	/^copy_addr_to_reg (x)$/;"	f
copy_all_regs	explow.c	/^copy_all_regs (x)$/;"	f
copy_asm_constraints_vector	emit-rtl.c	/^static rtvec copy_asm_constraints_vector;$/;"	v	file:
copy_asm_constraints_vector	integrate.h	/^  rtvec copy_asm_constraints_vector;$/;"	m	struct:inline_remap
copy_asm_operands_vector	emit-rtl.c	/^static rtvec copy_asm_operands_vector;$/;"	v	file:
copy_asm_operands_vector	integrate.h	/^  rtvec copy_asm_operands_vector;$/;"	m	struct:inline_remap
copy_blkmode_from_reg	expr.c	/^copy_blkmode_from_reg (tgtblk, srcreg, type)$/;"	f
copy_body	tree-inline.c	/^copy_body (id)$/;"	f	file:
copy_body_r	tree-inline.c	/^copy_body_r (tp, walk_subtrees, data)$/;"	f	file:
copy_constant	varasm.c	/^copy_constant (exp)$/;"	f	file:
copy_cost	loop.c	/^static int copy_cost;$/;"	v	file:
copy_cost	regclass.c	/^copy_cost (x, mode, class, to_p)$/;"	f	file:
copy_decl_for_inlining	integrate.c	/^copy_decl_for_inlining (decl, from_fn, to_fn)$/;"	f
copy_eh_notes	reload1.c	/^copy_eh_notes (insn, x)$/;"	f	file:
copy_insn	emit-rtl.c	/^copy_insn (insn)$/;"	f
copy_insn_1	emit-rtl.c	/^copy_insn_1 (orig)$/;"	f
copy_insn_list	integrate.c	/^copy_insn_list (insns, map, static_chain_value)$/;"	f	file:
copy_insn_n_scratches	emit-rtl.c	/^static int copy_insn_n_scratches;$/;"	v	file:
copy_insn_notes	integrate.c	/^copy_insn_notes (insns, map, eh_region_offset)$/;"	f	file:
copy_insn_scratch_in	emit-rtl.c	/^static rtx copy_insn_scratch_in[MAX_RECOG_OPERANDS];$/;"	v	file:
copy_insn_scratch_out	emit-rtl.c	/^static rtx copy_insn_scratch_out[MAX_RECOG_OPERANDS];$/;"	v	file:
copy_lang_decl	c-decl.c	/^copy_lang_decl (decl)$/;"	f
copy_list	tree.c	/^copy_list (list)$/;"	f
copy_loop_body	unroll.c	/^copy_loop_body (loop, copy_start, copy_end, map, exit_label, last_iteration,$/;"	f	file:
copy_loop_headers	jump.c	/^copy_loop_headers (f)$/;"	f
copy_most_rtx	emit-rtl.c	/^copy_most_rtx (orig, may_share)$/;"	f
copy_node	tree.c	/^copy_node (node)$/;"	f
copy_prop_count	gcse.c	/^static int copy_prop_count;$/;"	v	file:
copy_reloads	reload1.c	/^copy_reloads (chain)$/;"	f	file:
copy_replacements	reload.c	/^copy_replacements (x, y)$/;"	f
copy_replacements_1	reload.c	/^copy_replacements_1 (px, py, orig_replacements)$/;"	f	file:
copy_res_decl_for_inlining	langhooks.h	/^  union tree_node *(*copy_res_decl_for_inlining) PARAMS ((union tree_node *,$/;"	m	struct:lang_hooks_for_tree_inlining	typeref:union:lang_hooks_for_tree_inlining::copy_res_decl_for_inlining
copy_rtx	rtl.c	/^copy_rtx (orig)$/;"	f
copy_rtx_and_substitute	integrate.c	/^copy_rtx_and_substitute (orig, map, for_lhs)$/;"	f
copy_rtx_if_shared	emit-rtl.c	/^copy_rtx_if_shared (orig)$/;"	f
copy_scope_stmt	tree-inline.c	/^copy_scope_stmt (tp, walk_subtrees, id)$/;"	f	file:
copy_src_to_dest	regmove.c	/^copy_src_to_dest (insn, src, dest, old_max_uid)$/;"	f	file:
copy_to_mode_reg	explow.c	/^copy_to_mode_reg (mode, x)$/;"	f
copy_to_reg	explow.c	/^copy_to_reg (x)$/;"	f
copy_to_suggested_reg	explow.c	/^copy_to_suggested_reg (x, target, mode)$/;"	f
copy_tree_r	tree-inline.c	/^copy_tree_r (tp, walk_subtrees, data)$/;"	f
copy_value	regrename.c	/^copy_value (dest, src, vd)$/;"	f	file:
copying_arguments	alias.c	/^static int copying_arguments;$/;"	v	file:
copyprop_hardreg_forward	regrename.c	/^copyprop_hardreg_forward ()$/;"	f
copyprop_hardreg_forward_1	regrename.c	/^copyprop_hardreg_forward_1 (bb, vd)$/;"	f	file:
cos_optab	optabs.h	199;"	d
cost	cse.c	/^  int cost;$/;"	m	struct:table_elt	file:
cost	expmed.c	/^  short cost;$/;"	m	struct:algorithm	file:
cost	regclass.c	/^  int cost[N_REG_CLASSES];$/;"	m	struct:costs	file:
cost	sched-int.h	/^  short cost;$/;"	m	struct:haifa_insn_data
cost_table_	stmt.c	/^static short cost_table_[129];$/;"	v	file:
cost_table_initialized	stmt.c	/^static int cost_table_initialized;$/;"	v	file:
costs	regclass.c	/^static struct costs *costs;$/;"	v	typeref:struct:costs	file:
costs	regclass.c	/^struct costs$/;"	s	file:
count	basic-block.h	/^  gcov_type count;		\/* Expected number of executions calculated$/;"	m	struct:edge_def
count	basic-block.h	/^  gcov_type count;$/;"	m	struct:basic_block_def
count	cpplib.c	/^  unsigned int count;$/;"	m	struct:answer	file:
count	cppmacro.c	/^  unsigned int count;		\/* # of tokens in argument.  *\/$/;"	m	struct:macro_arg	file:
count	cppmacro.c	/^  unsigned int count;		\/* Number of tokens in expansion.  *\/$/;"	m	struct:cpp_macro	file:
count	dwarf2out.c	/^  int count;		\/* Number of files in this directory.  *\/$/;"	m	struct:dir_info	file:
count	unroll.c	/^static struct _factor { const int factor; int count; }$/;"	m	struct:_factor	file:
count_basic_blocks	cfgbuild.c	/^count_basic_blocks (f)$/;"	f	file:
count_bb_insns	ifcvt.c	/^count_bb_insns (bb)$/;"	f	file:
count_cond	fold-const.c	/^count_cond (expr, lim)$/;"	f	file:
count_error	diagnostic.c	/^count_error (warningp)$/;"	f
count_insns_in_loop	loop.c	/^count_insns_in_loop (loop)$/;"	f	file:
count_instrumented_edges	profile.c	/^int count_instrumented_edges;$/;"	v
count_nonfixed_reads	loop.c	/^count_nonfixed_reads (loop, x)$/;"	f	file:
count_occurrences	rtlanal.c	/^count_occurrences (x, find, count_dest)$/;"	f
count_one_set	loop.c	/^count_one_set (regs, insn, x, last_set)$/;"	f	file:
count_or_remove_death_notes	flow.c	/^count_or_remove_death_notes (blocks, kill)$/;"	f
count_pseudo	reload1.c	/^count_pseudo (reg)$/;"	f	file:
count_reg_usage	cse.c	/^count_reg_usage (x, counts, dest, incr)$/;"	f	file:
count_spilled_pseudo	reload1.c	/^count_spilled_pseudo (spilled, spilled_nregs, reg)$/;"	f	file:
count_valid	profile.c	/^    unsigned int count_valid : 1;$/;"	m	struct:bb_info	file:
count_valid	profile.c	/^    unsigned int count_valid : 1;$/;"	m	struct:edge_info	file:
counts_to_freqs	predict.c	/^counts_to_freqs ()$/;"	f	file:
cplusplus	cppdefault.h	/^  const int cplusplus;		\/* Only look here if we're compiling C++.  *\/$/;"	m	struct:default_include
cplusplus	cppinit.c	/^  char cplusplus;$/;"	m	struct:lang_flags	file:
cplusplus	cpplib.h	/^  unsigned char cplusplus;$/;"	m	struct:cpp_options
cplusplus_comments	cppinit.c	/^  char cplusplus_comments;$/;"	m	struct:lang_flags	file:
cplusplus_comments	cpplib.h	/^  unsigned char cplusplus_comments;$/;"	m	struct:cpp_options
cpp_GCC_INCLUDE_DIR	cppdefault.c	/^const char cpp_GCC_INCLUDE_DIR[] = "";$/;"	v
cpp_GCC_INCLUDE_DIR	cppdefault.c	/^const char cpp_GCC_INCLUDE_DIR[] = GCC_INCLUDE_DIR;$/;"	v
cpp_GCC_INCLUDE_DIR_len	cppdefault.c	/^const size_t cpp_GCC_INCLUDE_DIR_len = 0;$/;"	v
cpp_GCC_INCLUDE_DIR_len	cppdefault.c	/^const size_t cpp_GCC_INCLUDE_DIR_len = sizeof GCC_INCLUDE_DIR - 8;$/;"	v
cpp_assert	cpplib.c	/^cpp_assert (pfile, str)$/;"	f
cpp_avoid_paste	cpplex.c	/^cpp_avoid_paste (pfile, token1, token2)$/;"	f
cpp_buffer	cpphash.h	/^struct cpp_buffer$/;"	s
cpp_buffer	cpplib.h	/^typedef struct cpp_buffer cpp_buffer;$/;"	t	typeref:struct:cpp_buffer
cpp_callbacks	cpplib.h	/^struct cpp_callbacks$/;"	s
cpp_callbacks	cpplib.h	/^typedef struct cpp_callbacks cpp_callbacks;$/;"	t	typeref:struct:cpp_callbacks
cpp_cb	cpplib.h	/^typedef int (*cpp_cb) PARAMS ((cpp_reader *, cpp_hashnode *, void *));$/;"	t
cpp_context	cpphash.h	/^struct cpp_context$/;"	s
cpp_context	cpphash.h	/^typedef struct cpp_context cpp_context;$/;"	t	typeref:struct:cpp_context
cpp_create_reader	cppinit.c	/^cpp_create_reader (lang)$/;"	f
cpp_define	cpplib.c	/^cpp_define (pfile, str)$/;"	f
cpp_defined	cpphash.c	/^cpp_defined (pfile, str, len)$/;"	f
cpp_destroy	cppinit.c	/^cpp_destroy (pfile)$/;"	f
cpp_error	cpperror.c	/^cpp_error VPARAMS ((cpp_reader * pfile, const char *msgid, ...))$/;"	f
cpp_error_from_errno	cpperror.c	/^cpp_error_from_errno (pfile, name)$/;"	f
cpp_error_with_line	cpperror.c	/^cpp_error_with_line VPARAMS ((cpp_reader *pfile, int line, int column,$/;"	f
cpp_errors	cpplib.c	/^cpp_errors (pfile)$/;"	f
cpp_fatal	cpperror.c	/^cpp_fatal VPARAMS ((cpp_reader *pfile, const char *msgid, ...))$/;"	f
cpp_finish	cppinit.c	/^cpp_finish (pfile)$/;"	f
cpp_finish_options	cppinit.c	/^cpp_finish_options (pfile)$/;"	f
cpp_forall_identifiers	cpphash.c	/^cpp_forall_identifiers (pfile, cb, v)$/;"	f
cpp_get_callbacks	cpplib.c	/^cpp_get_callbacks (pfile)$/;"	f
cpp_get_line_maps	cpplib.c	/^cpp_get_line_maps (pfile)$/;"	f
cpp_get_options	cpplib.c	/^cpp_get_options (pfile)$/;"	f
cpp_get_token	cppmacro.c	/^cpp_get_token (pfile)$/;"	f
cpp_handle_option	cppinit.c	/^cpp_handle_option (pfile, argc, argv, ignore)$/;"	f
cpp_handle_options	cppinit.c	/^cpp_handle_options (pfile, argc, argv)$/;"	f
cpp_hashnode	cpplib.h	/^struct cpp_hashnode$/;"	s
cpp_hashnode	cpplib.h	/^typedef struct cpp_hashnode cpp_hashnode;$/;"	t	typeref:struct:cpp_hashnode
cpp_ice	cpperror.c	/^cpp_ice VPARAMS ((cpp_reader *pfile, const char *msgid, ...))$/;"	f
cpp_ideq	cpplex.c	/^cpp_ideq (token, string)$/;"	f
cpp_include_defaults	cppdefault.c	/^const struct default_include cpp_include_defaults[]$/;"	v	typeref:struct:default_include
cpp_included	cppfiles.c	/^cpp_included (pfile, fname)$/;"	f
cpp_interpret_charconst	cpplex.c	/^cpp_interpret_charconst (pfile, token, warn_multi, traditional, pchars_seen)$/;"	f
cpp_lookup	cpphash.c	/^cpp_lookup (pfile, str, len)$/;"	f
cpp_macro	cpplib.h	/^typedef struct cpp_macro cpp_macro;$/;"	t	typeref:struct:cpp_macro
cpp_macro	cppmacro.c	/^struct cpp_macro$/;"	s	file:
cpp_macro_definition	cppmacro.c	/^cpp_macro_definition (pfile, node)$/;"	f
cpp_make_system_header	cppfiles.c	/^cpp_make_system_header (pfile, syshdr, externc)$/;"	f
cpp_notice	cpperror.c	/^cpp_notice VPARAMS ((cpp_reader *pfile, const char *msgid, ...))$/;"	f
cpp_notice_from_errno	cpperror.c	/^cpp_notice_from_errno (pfile, name)$/;"	f
cpp_options	cpplib.h	/^struct cpp_options$/;"	s
cpp_options	cpplib.h	/^typedef struct cpp_options cpp_options;$/;"	t	typeref:struct:cpp_options
cpp_output_line	cpplex.c	/^cpp_output_line (pfile, fp)$/;"	f
cpp_output_token	cpplex.c	/^cpp_output_token (token, fp)$/;"	f
cpp_parse_escape	cpplex.c	/^cpp_parse_escape (pfile, pstr, limit, mask, traditional)$/;"	f
cpp_pedwarn	cpperror.c	/^cpp_pedwarn VPARAMS ((cpp_reader * pfile, const char *msgid, ...))$/;"	f
cpp_pedwarn_with_line	cpperror.c	/^cpp_pedwarn_with_line VPARAMS ((cpp_reader * pfile, int line, int column,$/;"	f
cpp_pending	cppinit.c	/^struct cpp_pending$/;"	s	file:
cpp_post_options	cppinit.c	/^cpp_post_options (pfile)$/;"	f
cpp_push_buffer	cpplib.c	/^cpp_push_buffer (pfile, buffer, len, from_stage3, return_at_eof)$/;"	f
cpp_quote_string	cppmacro.c	/^cpp_quote_string (dest, src, len)$/;"	f
cpp_read_main_file	cppinit.c	/^cpp_read_main_file (pfile, fname, table)$/;"	f
cpp_reader	c-pragma.h	/^typedef struct cpp_reader cpp_reader;$/;"	t	typeref:struct:cpp_reader
cpp_reader	cpphash.h	/^struct cpp_reader$/;"	s
cpp_reader	cpplib.h	/^typedef struct cpp_reader cpp_reader;$/;"	t	typeref:struct:cpp_reader
cpp_register_pragma	cpplib.c	/^cpp_register_pragma (pfile, space, name, handler)$/;"	f
cpp_scan_nooutput	cppmacro.c	/^cpp_scan_nooutput (pfile)$/;"	f
cpp_set_callbacks	cpplib.c	/^cpp_set_callbacks (pfile, cb)$/;"	f
cpp_spell_token	cpplex.c	/^cpp_spell_token (pfile, token, buffer)$/;"	f
cpp_string	cpplib.h	/^struct cpp_string$/;"	s
cpp_string	cpplib.h	/^typedef struct cpp_string cpp_string;$/;"	t	typeref:struct:cpp_string
cpp_sys_macro_p	cppmacro.c	/^cpp_sys_macro_p (pfile)$/;"	f
cpp_token	cpplib.h	/^struct cpp_token$/;"	s
cpp_token	cpplib.h	/^typedef struct cpp_token cpp_token;$/;"	t	typeref:struct:cpp_token
cpp_token_as_text	cpplex.c	/^cpp_token_as_text (pfile, token)$/;"	f
cpp_token_len	cpplex.c	/^cpp_token_len (token)$/;"	f
cpp_ttype	cpplib.h	/^enum cpp_ttype$/;"	g
cpp_type2name	cpplex.c	/^cpp_type2name (type)$/;"	f
cpp_unassert	cpplib.c	/^cpp_unassert (pfile, str)$/;"	f
cpp_undef	cpplib.c	/^cpp_undef (pfile, macro)$/;"	f
cpp_warning	cpperror.c	/^cpp_warning VPARAMS ((cpp_reader * pfile, const char *msgid, ...))$/;"	f
cpp_warning_with_line	cpperror.c	/^cpp_warning_with_line VPARAMS ((cpp_reader * pfile, int line, int column,$/;"	f
cppchar_t	cpplib.h	/^typedef int cppchar_t;$/;"	t
cprop	gcse.c	/^cprop (alter_jumps)$/;"	f	file:
cprop_absaltered	gcse.c	/^static sbitmap *cprop_absaltered;$/;"	v	file:
cprop_avin	gcse.c	/^static sbitmap *cprop_avin;$/;"	v	file:
cprop_avout	gcse.c	/^static sbitmap *cprop_avout;$/;"	v	file:
cprop_cc0_jump	gcse.c	/^cprop_cc0_jump (bb, insn, reg_used, src)$/;"	f	file:
cprop_insn	gcse.c	/^cprop_insn (bb, insn, alter_jumps)$/;"	f	file:
cprop_jump	gcse.c	/^cprop_jump (bb, insn, from, src)$/;"	f	file:
cprop_pavloc	gcse.c	/^static sbitmap *cprop_pavloc;$/;"	v	file:
cptr	varray.h	/^  char			 *cptr[1];$/;"	m	union:varray_data_tag
crash_signal	toplev.c	/^crash_signal (signo)$/;"	f	file:
create_basic_block	cfgrtl.c	/^create_basic_block (index, head, end)$/;"	f
create_basic_block_structure	cfgrtl.c	/^create_basic_block_structure (index, head, end, bb_note)$/;"	f
create_delayed_rename	ssa.c	/^create_delayed_rename (c, reg_loc)$/;"	f	file:
create_edge_list	cfganal.c	/^create_edge_list ()$/;"	f
created_for	dwarf2out.c	/^  tree created_for;$/;"	m	struct:limbo_die_struct	file:
csa_memlist	regmove.c	/^struct csa_memlist$/;"	s	file:
cse_altered	cse.c	/^static int cse_altered;$/;"	v	file:
cse_around_loop	cse.c	/^cse_around_loop (loop_start)$/;"	f	file:
cse_basic_block	cse.c	/^cse_basic_block (from, to, next_branch, around_loop)$/;"	f	file:
cse_basic_block_data	cse.c	/^struct cse_basic_block_data$/;"	s	file:
cse_basic_block_end	cse.c	/^static int cse_basic_block_end;$/;"	v	file:
cse_basic_block_start	cse.c	/^static int cse_basic_block_start;$/;"	v	file:
cse_check_loop_start	cse.c	/^cse_check_loop_start (x, set, data)$/;"	f	file:
cse_end_of_basic_block	cse.c	/^cse_end_of_basic_block (insn, data, follow_jumps, after_loop, skip_blocks)$/;"	f
cse_insn	cse.c	/^cse_insn (insn, libcall_insn)$/;"	f	file:
cse_jumps_altered	cse.c	/^static int cse_jumps_altered;$/;"	v	file:
cse_main	cse.c	/^cse_main (f, nregs, after_loop, file)$/;"	f
cse_not_expected	expr.c	/^int cse_not_expected;$/;"	v
cse_process_notes	cse.c	/^cse_process_notes (x, object)$/;"	f	file:
cse_reg_info	cse.c	/^struct cse_reg_info$/;"	s	file:
cse_reg_info_free_list	cse.c	/^static struct cse_reg_info *cse_reg_info_free_list;$/;"	v	typeref:struct:cse_reg_info	file:
cse_reg_info_used_list	cse.c	/^static struct cse_reg_info *cse_reg_info_used_list;$/;"	v	typeref:struct:cse_reg_info	file:
cse_reg_info_used_list_end	cse.c	/^static struct cse_reg_info *cse_reg_info_used_list_end;$/;"	v	typeref:struct:cse_reg_info	file:
cse_rtx_varies_p	cse.c	/^cse_rtx_varies_p (x, from_alias)$/;"	f	file:
cse_set_around_loop	cse.c	/^cse_set_around_loop (x, insn, loop_start)$/;"	f	file:
cselib_current_insn	cselib.c	/^static rtx cselib_current_insn;$/;"	v	file:
cselib_finish	cselib.c	/^cselib_finish ()$/;"	f
cselib_init	cselib.c	/^cselib_init ()$/;"	f
cselib_invalidate_mem	cselib.c	/^cselib_invalidate_mem (mem_rtx)$/;"	f	file:
cselib_invalidate_mem_1	cselib.c	/^cselib_invalidate_mem_1 (slot, info)$/;"	f	file:
cselib_invalidate_regno	cselib.c	/^cselib_invalidate_regno (regno, mode)$/;"	f	file:
cselib_invalidate_rtx	cselib.c	/^cselib_invalidate_rtx (dest, ignore, data)$/;"	f	file:
cselib_lookup	cselib.c	/^cselib_lookup (x, mode, create)$/;"	f
cselib_lookup_mem	cselib.c	/^cselib_lookup_mem (x, create)$/;"	f	file:
cselib_mem_conflict_p	cselib.c	/^cselib_mem_conflict_p (mem_base, val)$/;"	f	file:
cselib_nregs	cselib.c	/^static unsigned int cselib_nregs;$/;"	v	file:
cselib_obstack	cselib.c	/^static struct obstack cselib_obstack;$/;"	v	typeref:struct:obstack	file:
cselib_process_insn	cselib.c	/^cselib_process_insn (insn)$/;"	f
cselib_record_set	cselib.c	/^cselib_record_set (dest, src_elt, dest_addr_elt)$/;"	f	file:
cselib_record_sets	cselib.c	/^cselib_record_sets (insn)$/;"	f	file:
cselib_startobj	cselib.c	/^static char *cselib_startobj;$/;"	v	file:
cselib_subst_to_values	cselib.c	/^cselib_subst_to_values (x)$/;"	f
cselib_update_varray_sizes	cselib.c	/^cselib_update_varray_sizes ()$/;"	f
cselib_val	cselib.h	/^} cselib_val;$/;"	t	typeref:struct:cselib_val_struct
cselib_val_struct	cselib.h	/^typedef struct cselib_val_struct$/;"	s
cstore_optab	optabs.h	209;"	d
ctors_section	varasm.c	/^ctors_section ()$/;"	f
cuid_insn	gcse.c	/^static rtx *cuid_insn;$/;"	v	file:
cur	cpphash.h	/^  const unsigned char *cur;	 \/* current position *\/$/;"	m	struct:cpp_buffer
cur	cpphash.h	/^  unsigned char *base, *cur, *limit;$/;"	m	struct:_cpp_buff
cur_insn_uid	emit-rtl.c	173;"	d	file:
cur_region	except.c	/^  struct eh_region *cur_region;$/;"	m	struct:eh_status	typeref:struct:eh_status::eh_region	file:
cur_run	cpphash.h	/^  tokenrun base_run, *cur_run;$/;"	m	struct:cpp_reader
cur_token	cpphash.h	/^  cpp_token *cur_token;$/;"	m	struct:cpp_reader
current	bitmap.h	/^  bitmap_element *current;	\/* Last element looked at.  *\/$/;"	m	struct:bitmap_head_def
current_address	alloca.c	/^    long current_address;	\/* Current stack segment address.  *\/$/;"	m	struct:stk_stat	file:
current_bb	gcse.c	/^static int current_bb;$/;"	v	file:
current_binding_level	c-decl.c	/^static struct binding_level *current_binding_level;$/;"	v	typeref:struct:binding_level	file:
current_block	gcse.c	/^  int current_block;$/;"	m	struct:null_pointer_info	file:
current_block	reg-stack.c	/^static basic_block current_block;$/;"	v	file:
current_block_start_count	stmt.c	388;"	d	file:
current_blocks	sched-rgn.c	/^static int current_blocks;$/;"	v	file:
current_declspecs	c-parse.c	/^static tree current_declspecs = NULL_TREE;$/;"	v	file:
current_dienum	dwarfout.c	/^static unsigned current_dienum;$/;"	v	file:
current_extern_inline	c-decl.c	/^static int current_extern_inline;$/;"	v	file:
current_file	dbxout.c	/^static struct dbx_file *current_file;$/;"	v	typeref:struct:dbx_file	file:
current_file	sdbout.c	/^static struct sdb_file *current_file;$/;"	v	typeref:struct:sdb_file	file:
current_funcdef_fde	dwarf2out.c	/^static unsigned current_funcdef_fde;$/;"	v	file:
current_funcdef_number	dwarf2out.c	/^unsigned current_funcdef_number = 0;$/;"	v
current_funcdef_number	dwarfout.c	/^static unsigned current_funcdef_number = 1;$/;"	v	file:
current_funcdef_number	vmsdbgout.c	/^static unsigned int current_funcdef_number = 0;$/;"	v	file:
current_function_arg_offset_rtx	function.h	507;"	d
current_function_args_info	function.h	503;"	d
current_function_args_size	function.h	504;"	d
current_function_calls_alloca	function.h	497;"	d
current_function_calls_eh_return	function.h	499;"	d
current_function_calls_longjmp	function.h	498;"	d
current_function_calls_setjmp	function.h	496;"	d
current_function_cannot_inline	function.h	518;"	d
current_function_contains_functions	function.h	501;"	d
current_function_decl	toplev.c	/^tree current_function_decl;$/;"	v
current_function_epilogue_delay_list	function.h	519;"	d
current_function_func_begin_label	toplev.c	/^tree current_function_func_begin_label;$/;"	v
current_function_has_computed_jump	function.h	500;"	d
current_function_has_exception_handlers	except.c	/^current_function_has_exception_handlers ()$/;"	f
current_function_has_inlines	dwarf2out.c	/^static int current_function_has_inlines;$/;"	v	file:
current_function_has_nonlocal_goto	function.h	521;"	d
current_function_has_nonlocal_label	function.h	520;"	d
current_function_instrument_entry_exit	function.h	512;"	d
current_function_internal_arg_pointer	function.h	510;"	d
current_function_is_leaf	function.c	/^int current_function_is_leaf;$/;"	v
current_function_is_thunk	function.h	502;"	d
current_function_limit_stack	function.h	515;"	d
current_function_name	function.h	490;"	d
current_function_needs_context	function.h	495;"	d
current_function_nothrow	function.c	/^int current_function_nothrow;$/;"	v
current_function_outgoing_args_size	function.h	506;"	d
current_function_parm_tags	c-decl.c	/^static tree current_function_parm_tags;$/;"	v	file:
current_function_parms	c-decl.c	/^static tree current_function_parms;$/;"	v	file:
current_function_pops_args	function.h	491;"	d
current_function_pretend_args_size	function.h	505;"	d
current_function_profile	function.h	513;"	d
current_function_profile_label_no	function.h	514;"	d
current_function_prototype_file	c-decl.c	/^static const char *current_function_prototype_file;$/;"	v	file:
current_function_prototype_line	c-decl.c	/^static int current_function_prototype_line;$/;"	v	file:
current_function_return_rtx	function.h	511;"	d
current_function_returns_abnormally	c-decl.c	/^int current_function_returns_abnormally;$/;"	v
current_function_returns_null	c-decl.c	/^int current_function_returns_null;$/;"	v
current_function_returns_pcc_struct	function.h	493;"	d
current_function_returns_pointer	function.h	494;"	d
current_function_returns_struct	function.h	492;"	d
current_function_returns_value	c-decl.c	/^int current_function_returns_value;$/;"	v
current_function_sp_is_unchanging	function.c	/^int current_function_sp_is_unchanging;$/;"	v
current_function_stdarg	function.h	509;"	d
current_function_uses_const_pool	function.h	517;"	d
current_function_uses_only_leaf_regs	function.c	/^int current_function_uses_only_leaf_regs;$/;"	v
current_function_uses_pic_offset_table	function.h	516;"	d
current_function_varargs	function.h	508;"	d
current_insn	ssa.c	/^  rtx current_insn;$/;"	m	struct:rename_context	file:
current_insn_predicate	final.c	/^rtx current_insn_predicate;$/;"	v
current_live_regs	resource.c	/^static HARD_REG_SET current_live_regs;$/;"	v	file:
current_nesting_level	stmt.c	/^current_nesting_level ()$/;"	f
current_nr_blocks	sched-rgn.c	/^static int current_nr_blocks;$/;"	v	file:
current_output_insn	final.c	/^rtx current_output_insn;$/;"	v
current_sched_info	haifa-sched.c	/^struct sched_info *current_sched_info;$/;"	v	typeref:struct:sched_info
current_scope_stmt_stack	c-decl.c	/^current_scope_stmt_stack ()$/;"	f
current_size	alloca.c	/^    long current_size;		\/* Current stack segment size.  This$/;"	m	struct:stk_stat	file:
current_stmt_tree	c-decl.c	/^current_stmt_tree ()$/;"	f
current_sym_addr	dbxout.c	/^static rtx current_sym_addr;$/;"	v	file:
current_sym_code	dbxout.c	/^static STAB_CODE_TYPE current_sym_code;$/;"	v	file:
current_sym_nchars	dbxout.c	/^static int current_sym_nchars;$/;"	v	file:
current_sym_value	dbxout.c	/^static int current_sym_value;$/;"	v	file:
cursor	diagnostic.h	/^  const char *cursor;$/;"	m	struct:__anon12
cwd	dbxout.c	/^static const char *cwd;$/;"	v	file:
cxx_aware	cppdefault.h	/^  const int cxx_aware;		\/* Includes in this directory don't need to$/;"	m	struct:default_include
cycle_display	target.h	/^    rtx (* cycle_display) PARAMS ((int clock, rtx last));$/;"	m	struct:gcc_target::sched
d	cpplex.c	/^    double d;$/;"	m	union:dummy::__anon73	file:
d	ggc-page.c	/^    double d;$/;"	m	union:max_alignment::__anon13	file:
d	ggc-page.c	/^    long double d;$/;"	m	union:max_alignment::__anon13	file:
d	obstack.c	/^struct fooalign {char x; double d;};$/;"	m	struct:fooalign	file:
d	obstack.c	/^union fooround {long x; double d;};$/;"	m	union:fooround	file:
d	real.h	/^  REAL_VALUE_TYPE d;$/;"	m	union:real_extract
d	tree.c	/^  REAL_VALUE_TYPE d;		\/* Output: floating point value.  *\/$/;"	m	struct:brfic_args	file:
d	varasm.c	/^    double d;$/;"	m	union:constant_descriptor::__anon83	file:
d	varasm.c	/^    long double d;$/;"	m	union:constant_descriptor::__anon83	file:
d1	fold-const.c	/^  REAL_VALUE_TYPE d1, d2;	\/* Input: floating point operands.  *\/$/;"	m	struct:cb_args	file:
d2	fold-const.c	/^  REAL_VALUE_TYPE d1, d2;	\/* Input: floating point operands.  *\/$/;"	m	struct:cb_args	file:
d_htab_root	ggc-common.c	/^struct d_htab_root$/;"	s	file:
d_htab_roots	ggc-common.c	/^static struct d_htab_root *d_htab_roots;$/;"	v	typeref:struct:d_htab_root	file:
d_kind	tree.c	/^  d_kind,$/;"	e	enum:__anon88	file:
da	toplev.c	/^} *da,$/;"	v	typeref:struct:__anon60	file:
da_file	profile.c	/^static FILE *da_file;$/;"	v	file:
data	fibheap.h	/^  void *data;$/;"	m	struct:fibnode
data	regclass.c	/^  reg_info data[1];		\/* beginning of the reg_info data *\/$/;"	m	struct:reg_info_data	file:
data	ssa-dce.c	/^  bitmap *data;$/;"	m	struct:__anon15	file:
data	stmt.c	/^    } data;$/;"	m	struct:nesting	typeref:union:nesting::__anon67	file:
data	varray.h	/^  varray_data	data;		\/* data elements follow, must be last *\/$/;"	m	struct:varray_head_tag
data_member_location_attribute	dwarfout.c	/^data_member_location_attribute (t)$/;"	f	file:
data_section	varasm.c	/^data_section ()$/;"	f
data_type	c-aux-info.c	/^static const char *data_type;$/;"	v	file:
date	cpphash.h	/^  cpp_token date;$/;"	m	struct:cpp_reader
dbr_schedule	reorg.c	/^dbr_schedule (first, file)$/;"	f
dbr_sequence_length	final.c	/^dbr_sequence_length ()$/;"	f
dbx64_register_map	i386.c	/^int const dbx64_register_map[FIRST_PSEUDO_REGISTER] =$/;"	v
dbx_debug_hooks	dbxout.c	/^struct gcc_debug_hooks dbx_debug_hooks =$/;"	v	typeref:struct:gcc_debug_hooks
dbx_file	dbxout.c	/^struct dbx_file$/;"	s	file:
dbx_register_map	i386.c	/^int const dbx_register_map[FIRST_PSEUDO_REGISTER] =$/;"	v
dbxout_args	dbxout.c	/^dbxout_args (args)$/;"	f	file:
dbxout_begin_block	dbxout.c	/^dbxout_begin_block (line, n)$/;"	f	file:
dbxout_begin_function	dbxout.c	/^dbxout_begin_function (decl)$/;"	f	file:
dbxout_block	dbxout.c	/^dbxout_block (block, depth, args)$/;"	f	file:
dbxout_continue	dbxout.c	/^dbxout_continue ()$/;"	f	file:
dbxout_end_block	dbxout.c	/^dbxout_end_block (line, n)$/;"	f	file:
dbxout_end_source_file	dbxout.c	/^dbxout_end_source_file (line)$/;"	f	file:
dbxout_finish	dbxout.c	/^dbxout_finish (filename)$/;"	f	file:
dbxout_finish_symbol	dbxout.c	/^dbxout_finish_symbol (sym)$/;"	f	file:
dbxout_function_decl	dbxout.c	/^dbxout_function_decl (decl)$/;"	f	file:
dbxout_function_end	dbxout.c	/^dbxout_function_end ()$/;"	f	file:
dbxout_global_decl	dbxout.c	/^dbxout_global_decl (decl)$/;"	f	file:
dbxout_init	dbxout.c	/^dbxout_init (input_file_name)$/;"	f	file:
dbxout_parms	dbxout.c	/^dbxout_parms (parms)$/;"	f
dbxout_prepare_symbol	dbxout.c	/^dbxout_prepare_symbol (decl)$/;"	f	file:
dbxout_range_type	dbxout.c	/^dbxout_range_type (type)$/;"	f	file:
dbxout_reg_parms	dbxout.c	/^dbxout_reg_parms (parms)$/;"	f
dbxout_source_file	dbxout.c	/^dbxout_source_file (file, filename)$/;"	f	file:
dbxout_source_line	dbxout.c	/^dbxout_source_line (lineno, filename)$/;"	f	file:
dbxout_start_source_file	dbxout.c	/^dbxout_start_source_file (line, filename)$/;"	f	file:
dbxout_symbol	dbxout.c	/^dbxout_symbol (decl, local)$/;"	f
dbxout_symbol_location	dbxout.c	/^dbxout_symbol_location (decl, type, suffix, home)$/;"	f	file:
dbxout_symbol_name	dbxout.c	/^dbxout_symbol_name (decl, suffix, letter)$/;"	f	file:
dbxout_syms	dbxout.c	/^dbxout_syms (syms)$/;"	f
dbxout_type	dbxout.c	/^dbxout_type (type, full)$/;"	f	file:
dbxout_type_fields	dbxout.c	/^dbxout_type_fields (type)$/;"	f	file:
dbxout_type_index	dbxout.c	/^dbxout_type_index (type)$/;"	f	file:
dbxout_type_method_1	dbxout.c	/^dbxout_type_method_1 (decl, debug_name)$/;"	f	file:
dbxout_type_methods	dbxout.c	/^dbxout_type_methods (type)$/;"	f	file:
dbxout_type_name	dbxout.c	/^dbxout_type_name (type)$/;"	f	file:
dbxout_typedefs	dbxout.c	/^dbxout_typedefs (syms)$/;"	f	file:
dconst0	emit-rtl.c	/^REAL_VALUE_TYPE dconst0;$/;"	v
dconst1	emit-rtl.c	/^REAL_VALUE_TYPE dconst1;$/;"	v
dconst2	emit-rtl.c	/^REAL_VALUE_TYPE dconst2;$/;"	v
dconstm1	emit-rtl.c	/^REAL_VALUE_TYPE dconstm1;$/;"	v
ddf	df.c	/^static struct df *ddf;$/;"	v	typeref:struct:df	file:
dead_libcall_p	cse.c	/^dead_libcall_p (insn)$/;"	f	file:
dead_or_predicable	ifcvt.c	/^dead_or_predicable (test_bb, merge_bb, other_bb, new_dest, reversep)$/;"	f	file:
dead_or_set	reload.h	/^  regset_head dead_or_set;$/;"	m	struct:insn_chain
dead_or_set_p	rtlanal.c	/^dead_or_set_p (insn, x)$/;"	f
dead_or_set_regno_p	rtlanal.c	/^dead_or_set_regno_p (insn, test_regno)$/;"	f
deallocate	splay-tree.h	/^  splay_tree_deallocate_fn deallocate;$/;"	m	struct:splay_tree_s
deallocate_reload_reg	reload1.c	/^deallocate_reload_reg (r)$/;"	f
death	local-alloc.c	/^  int death;$/;"	m	struct:qty	file:
deaths	regs.h	/^  int deaths;			\/* # of times (REG n) dies *\/$/;"	m	struct:reg_info_def
deaths_in_region	sched-rgn.c	/^static int *deaths_in_region;$/;"	v	file:
debug_args	toplev.c	/^debug_args[] =$/;"	v	typeref:struct:__anon60	file:
debug_bb	cfgrtl.c	/^debug_bb (bb)$/;"	f
debug_bb_n	cfgrtl.c	/^debug_bb_n (n)$/;"	f
debug_bitmap	bitmap.c	/^debug_bitmap (head)$/;"	f
debug_bitmap_file	bitmap.c	/^debug_bitmap_file (file, head)$/;"	f
debug_biv	loop.c	/^debug_biv (v)$/;"	f
debug_call_placeholder_verbose	print-rtl.c	/^static int debug_call_placeholder_verbose;$/;"	v	file:
debug_candidate	sched-rgn.c	/^debug_candidate (i)$/;"	f
debug_candidates	sched-rgn.c	/^debug_candidates (trg)$/;"	f
debug_dependencies	sched-rgn.c	/^debug_dependencies ()$/;"	f
debug_df_chain	df.c	/^debug_df_chain (link)$/;"	f
debug_df_defno	df.c	/^debug_df_defno (defno)$/;"	f
debug_df_insn	df.c	/^debug_df_insn (insn)$/;"	f
debug_df_ref	df.c	/^debug_df_ref (ref)$/;"	f
debug_df_reg	df.c	/^debug_df_reg (reg)$/;"	f
debug_df_regno	df.c	/^debug_df_regno (regno)$/;"	f
debug_df_useno	df.c	/^debug_df_useno (defno)$/;"	f
debug_dwarf	dwarf2out.c	/^debug_dwarf ()$/;"	f
debug_dwarf_die	dwarf2out.c	/^debug_dwarf_die (die)$/;"	f
debug_file	ggc-page.c	/^  FILE *debug_file;$/;"	m	struct:globals	file:
debug_find_var_in_block_tree	function.c	/^debug_find_var_in_block_tree (var, block)$/;"	f
debug_flow_info	cfg.c	/^debug_flow_info ()$/;"	f
debug_giv	loop.c	/^debug_giv (v)$/;"	f
debug_hooks	toplev.c	/^struct gcc_debug_hooks *debug_hooks = &do_nothing_debug_hooks;$/;"	v	typeref:struct:gcc_debug_hooks
debug_info_level	flags.h	/^enum debug_info_level$/;"	g
debug_info_level	toplev.c	/^enum debug_info_level debug_info_level = DINFO_LEVEL_NONE;$/;"	v	typeref:enum:debug_info_level
debug_info_section_label	dwarf2out.c	/^static char debug_info_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
debug_info_type	flags.h	/^enum debug_info_type$/;"	g
debug_insn	final.c	/^static rtx debug_insn;$/;"	v	file:
debug_iv_class	loop.c	/^debug_iv_class (bl)$/;"	f
debug_ivs	loop.c	/^debug_ivs (loop)$/;"	f
debug_line_section_label	dwarf2out.c	/^static char debug_line_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
debug_loop	loop.c	/^debug_loop (loop)$/;"	f
debug_loops	loop.c	/^debug_loops (loops)$/;"	f
debug_no_type_hash	tree.c	/^int debug_no_type_hash = 0;$/;"	v
debug_nothing_charstar	debug.c	/^debug_nothing_charstar (main_filename)$/;"	f
debug_nothing_int	debug.c	/^debug_nothing_int (line)$/;"	f
debug_nothing_int_charstar	debug.c	/^debug_nothing_int_charstar (line, text)$/;"	f
debug_nothing_int_int	debug.c	/^debug_nothing_int_int (line, n)$/;"	f
debug_nothing_rtx	debug.c	/^debug_nothing_rtx (insn)$/;"	f
debug_nothing_tree	debug.c	/^debug_nothing_tree (decl)$/;"	f
debug_nothing_void	debug.c	/^debug_nothing_void ()$/;"	f
debug_print_page_list	ggc-page.c	/^debug_print_page_list (order)$/;"	f
debug_ready_list	haifa-sched.c	/^debug_ready_list (ready)$/;"	f	file:
debug_real	real.c	/^debug_real (r)$/;"	f
debug_reg_names	print-rtl.c	/^static const char * const debug_reg_names[] = DEBUG_REGISTER_NAMES;$/;"	v	file:
debug_regions	sched-rgn.c	/^debug_regions ()$/;"	f
debug_regset	flow.c	/^debug_regset (r)$/;"	f
debug_reload	reload.c	/^debug_reload ()$/;"	f
debug_reload_to_stream	reload.c	/^debug_reload_to_stream (f)$/;"	f
debug_rli	stor-layout.c	/^debug_rli (rli)$/;"	f
debug_rtx	print-rtl.c	/^debug_rtx (x)$/;"	f
debug_rtx_count	print-rtl.c	/^int debug_rtx_count = 0;	\/* 0 is treated as equivalent to 1 *\/$/;"	v
debug_rtx_find	print-rtl.c	/^debug_rtx_find (x, uid)$/;"	f
debug_rtx_list	print-rtl.c	/^debug_rtx_list (x, n)$/;"	f
debug_rtx_range	print-rtl.c	/^debug_rtx_range (start, end)$/;"	f
debug_sbitmap	sbitmap.c	/^debug_sbitmap (bmap)$/;"	f
debug_stderr	gcse.c	/^static FILE *debug_stderr;$/;"	v	file:
debug_str_hash	dwarf2out.c	/^struct ht *debug_str_hash;$/;"	v	typeref:struct:ht
debug_switch	toplev.c	/^  char const debug_switch;$/;"	m	struct:dump_file_info	file:
debug_tree	print-tree.c	/^debug_tree (node)$/;"	f
debug_true_tree	debug.c	/^debug_true_tree (block)$/;"	f
debug_type	toplev.c	/^  const enum debug_info_type debug_type;$/;"	m	struct:__anon60	typeref:enum:__anon60::debug_info_type	file:
debug_value_data	regrename.c	/^debug_value_data (vd)$/;"	f
decl	c-common.c	/^  tree *const decl;	\/* pointer to the VAR_DECL.  *\/$/;"	m	struct:fname_var_t	file:
decl	c-typeck.c	/^  tree decl;$/;"	m	struct:initializer_stack	file:
decl	function.h	/^  tree decl;$/;"	m	struct:function
decl	tree.h	/^  struct tree_decl decl;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_decl
decl_attributes	attribs.c	/^decl_attributes (node, attributes, flags)$/;"	f
decl_class_context	dwarf2out.c	/^decl_class_context (decl)$/;"	f	file:
decl_class_context	dwarfout.c	/^decl_class_context (decl)$/;"	f	file:
decl_constant_value	c-typeck.c	/^decl_constant_value (decl)$/;"	f
decl_constant_value_for_broken_optimization	c-typeck.c	/^decl_constant_value_for_broken_optimization (decl)$/;"	f	file:
decl_context	c-decl.c	/^enum decl_context$/;"	g	file:
decl_die_table	dwarf2out.c	/^static dw_die_ref *decl_die_table;$/;"	v	file:
decl_die_table_allocated	dwarf2out.c	/^static unsigned decl_die_table_allocated;$/;"	v	file:
decl_die_table_in_use	dwarf2out.c	/^static unsigned decl_die_table_in_use;$/;"	v	file:
decl_for_component_ref	alias.c	/^decl_for_component_ref (x)$/;"	f	file:
decl_function_context	tree.c	/^decl_function_context (decl)$/;"	f
decl_map	tree-inline.c	/^  splay_tree decl_map;$/;"	m	struct:inline_data	file:
decl_name	toplev.c	/^decl_name (decl, verbosity)$/;"	f	file:
decl_printable_name	toplev.c	/^const char *(*decl_printable_name)	PARAMS ((tree, int));$/;"	v
decl_required	tree.h	/^  const bool decl_required;$/;"	m	struct:attribute_spec
decl_scope_table	dwarf2out.c	/^varray_type decl_scope_table;$/;"	v
decl_type_context	tree.c	/^decl_type_context (decl)$/;"	f
decl_ultimate_origin	dwarf2out.c	/^decl_ultimate_origin (decl)$/;"	f	file:
decl_ultimate_origin	dwarfout.c	/^decl_ultimate_origin (decl)$/;"	f	file:
declare_nonlocal_label	stmt.c	/^declare_nonlocal_label (label)$/;"	f
declare_parm_level	c-decl.c	/^declare_parm_level (definition_flag)$/;"	f
declare_return_variable	tree-inline.c	/^declare_return_variable (id, use_stmt)$/;"	f	file:
declare_weak	varasm.c	/^declare_weak (decl)$/;"	f
declared	varasm.c	/^  bool declared;$/;"	m	struct:in_named_entry	file:
declared_inline	c-common.h	/^  unsigned declared_inline : 1;$/;"	m	struct:c_lang_decl
decls_for_scope	dwarf2out.c	/^decls_for_scope (stmt, context_die, depth)$/;"	f	file:
declspec_stack	c-parse.c	/^static tree declspec_stack;$/;"	v	file:
decmem_ok	recog.h	/^  unsigned int decmem_ok:1;$/;"	m	struct:operand_alternative
decode	fold-const.c	/^decode (words, low, hi)$/;"	f	file:
decode	i386.c	/^    rtx decode[3];$/;"	m	struct:__anon64::ppro_sched_data	file:
decode_W_option	toplev.c	/^decode_W_option (arg)$/;"	f	file:
decode_addr_const	varasm.c	/^decode_addr_const (exp, value)$/;"	f	file:
decode_asm_operands	recog.c	/^decode_asm_operands (body, operands, operand_locs, constraints, modes)$/;"	f
decode_d_option	toplev.c	/^decode_d_option (arg)$/;"	f	file:
decode_f_option	toplev.c	/^decode_f_option (arg)$/;"	f	file:
decode_field_reference	fold-const.c	/^decode_field_reference (exp, pbitsize, pbitpos, pmode, punsignedp,$/;"	f	file:
decode_format_attr	c-format.c	/^decode_format_attr (args, info, validated_p)$/;"	f	file:
decode_format_type	c-format.c	/^decode_format_type (s)$/;"	f	file:
decode_g_option	toplev.c	/^decode_g_option (arg)$/;"	f	file:
decode_option	langhooks.h	/^  int (*decode_option) PARAMS ((int, char **));$/;"	m	struct:lang_hooks
decode_reg_name	varasm.c	/^decode_reg_name (asmspec)$/;"	f
decode_rtx_const	varasm.c	/^decode_rtx_const (mode, x, value)$/;"	f	file:
decompose	reload.c	/^decompose (x)$/;"	f	file:
decomposition	reload.c	/^struct decomposition$/;"	s	file:
dectoe	real.c	/^dectoe (d, e)$/;"	f	file:
deep	alloca.c	/^      char *deep;		\/* For stack depth measure.  *\/$/;"	m	struct:hdr::__anon3	file:
def	dependence.c	/^enum def_use_type {def, use, init_def_use};$/;"	e	enum:def_use_type	file:
def_builtin	i386.c	10898;"	d	file:
def_cfa_1	dwarf2out.c	/^def_cfa_1 (label, loc_p)$/;"	f	file:
def_id	df.h	/^  unsigned int def_id;		\/* Next def ID.  *\/$/;"	m	struct:df
def_id_save	df.h	/^  unsigned int def_id_save;	\/* Saved next def ID.  *\/$/;"	m	struct:df
def_pragma	cpplib.h	/^  void (*def_pragma) PARAMS ((cpp_reader *, unsigned int));$/;"	m	struct:cpp_callbacks
def_reaches_here_p	gcse.c	/^def_reaches_here_p (insn, def_insn)$/;"	f	file:
def_size	df.h	/^  unsigned int def_size;	\/* Size of def table.  *\/$/;"	m	struct:df
def_use	dependence.c	/^typedef struct def_use$/;"	s	file:
def_use	dependence.c	/^} def_use;$/;"	t	typeref:struct:def_use	file:
def_use_chain	dependence.c	/^static varray_type def_use_chain;$/;"	v	file:
def_use_type	dependence.c	/^enum def_use_type {def, use, init_def_use};$/;"	g	file:
default_alignment	c-pragma.c	/^static int default_alignment;$/;"	v	file:
default_assemble_integer	varasm.c	/^default_assemble_integer (x, size, aligned_p)$/;"	f
default_coff_asm_named_section	varasm.c	/^default_coff_asm_named_section (name, flags)$/;"	f
default_comp_type_attributes	tree.c	/^default_comp_type_attributes (type1, type2)$/;"	f
default_conversion	c-typeck.c	/^default_conversion (exp)$/;"	f
default_cost	insn-attr.h	/^  const int default_cost;$/;"	m	struct:function_unit_desc
default_ctor_section_asm_out_constructor	varasm.c	/^default_ctor_section_asm_out_constructor (symbol, priority)$/;"	f
default_diagnostic_finalizer	diagnostic.c	/^default_diagnostic_finalizer (buffer, dc)$/;"	f	file:
default_diagnostic_starter	diagnostic.c	/^default_diagnostic_starter (buffer, dc)$/;"	f	file:
default_dtor_section_asm_out_destructor	varasm.c	/^default_dtor_section_asm_out_destructor (symbol, priority)$/;"	f
default_eh_frame_section	dwarf2out.c	/^default_eh_frame_section ()$/;"	f
default_elf_asm_named_section	varasm.c	/^default_elf_asm_named_section (name, flags)$/;"	f
default_exception_section	varasm.c	/^default_exception_section ()$/;"	f
default_expand_builtin	builtins.c	/^default_expand_builtin (exp, target, subtarget, mode, ignore)$/;"	f
default_function_array_conversion	c-typeck.c	/^default_function_array_conversion (exp)$/;"	f	file:
default_function_attribute_inlinable_p	tree.c	/^default_function_attribute_inlinable_p (fndecl)$/;"	f
default_function_pro_epilogue	final.c	/^default_function_pro_epilogue (file, size)$/;"	f
default_function_type	c-common.h	218;"	d
default_include	cppdefault.h	/^struct default_include$/;"	s
default_init_builtins	builtins.c	/^default_init_builtins ()$/;"	f
default_insert_attributes	tree.c	/^default_insert_attributes (decl, attr_ptr)$/;"	f
default_label	stmt.c	/^	  tree default_label;$/;"	m	struct:nesting::__anon67::__anon71	file:
default_ms_bitfield_layout_p	tree.c	/^default_ms_bitfield_layout_p (record)$/;"	f
default_named_section_asm_out_constructor	varasm.c	/^default_named_section_asm_out_constructor (symbol, priority)$/;"	f
default_named_section_asm_out_destructor	varasm.c	/^default_named_section_asm_out_destructor (symbol, priority)$/;"	f
default_no_named_section	varasm.c	/^default_no_named_section (name, flags)$/;"	f
default_pe_asm_named_section	varasm.c	/^default_pe_asm_named_section (name, flags)$/;"	f
default_print_error_function	diagnostic.c	/^default_print_error_function (context, file)$/;"	f
default_section_type_flags	varasm.c	/^default_section_type_flags (decl, name, reloc)$/;"	f
default_set_default_type_attributes	tree.c	/^default_set_default_type_attributes (type)$/;"	f
default_stabs_asm_out_constructor	varasm.c	/^default_stabs_asm_out_constructor (symbol, priority)$/;"	f
default_stabs_asm_out_destructor	varasm.c	/^default_stabs_asm_out_destructor (symbol, priority)$/;"	f
default_target_attribute_table	tree.c	/^const struct attribute_spec default_target_attribute_table[] =$/;"	v	typeref:struct:attribute_spec
defer_addressed_constants	varasm.c	/^defer_addressed_constants ()$/;"	f
defer_addressed_constants_flag	varasm.c	/^static int defer_addressed_constants_flag;$/;"	v	file:
defer_fn	c-objc-common.c	/^defer_fn (fn)$/;"	f
defer_output	tree.h	/^  unsigned defer_output : 1;$/;"	m	struct:tree_decl
deferred	c-typeck.c	/^  char deferred;$/;"	m	struct:initializer_stack	file:
deferred_constant	varasm.c	/^struct deferred_constant$/;"	s	file:
deferred_constants	varasm.c	/^static struct deferred_constant *deferred_constants;$/;"	v	typeref:struct:deferred_constant	file:
deferred_fns	c-objc-common.c	/^static varray_type deferred_fns;$/;"	v	file:
deferred_inline_function	debug.h	/^  void (* deferred_inline_function) PARAMS ((tree decl));$/;"	m	struct:gcc_debug_hooks
deferred_string	varasm.c	/^struct deferred_string$/;"	s	file:
define	cpplib.h	/^  void (*define) PARAMS ((cpp_reader *, unsigned int, cpp_hashnode *));$/;"	m	struct:cpp_callbacks
define	debug.h	/^  void (* define) PARAMS ((unsigned int line, const char *text));$/;"	m	struct:gcc_debug_hooks
define_label	c-decl.c	/^define_label (filename, line, name)$/;"	f
defs	df.h	/^  struct df_link *defs;		\/* Head of insn-def chain.  *\/$/;"	m	struct:insn_info	typeref:struct:insn_info::df_link
defs	df.h	/^  struct df_link *defs;		\/* Head of reg-def chain.  *\/$/;"	m	struct:reg_info	typeref:struct:reg_info::df_link
defs	df.h	/^  struct ref **defs;		\/* Def table, indexed by def_id.  *\/$/;"	m	struct:df	typeref:struct:df::ref
defs_to_undefined	ssa-ccp.c	/^defs_to_undefined (insn)$/;"	f	file:
defs_to_varying	ssa-ccp.c	/^defs_to_varying (insn)$/;"	f	file:
degree	fibheap.h	/^  unsigned int degree : 31;$/;"	m	struct:fibnode
del_f	hashtab.h	/^  htab_del del_f;$/;"	m	struct:htab
delete	lcm.c	/^static sbitmap *delete;$/;"	v	file:
delete_address_reloads	reload1.c	/^delete_address_reloads (dead_insn, current_insn)$/;"	f	file:
delete_address_reloads_1	reload1.c	/^delete_address_reloads_1 (dead_insn, x, current_insn)$/;"	f	file:
delete_barrier	jump.c	/^delete_barrier (insn)$/;"	f
delete_caller_save_insns	reload1.c	/^delete_caller_save_insns ()$/;"	f	file:
delete_computation	jump.c	/^delete_computation (insn)$/;"	f	file:
delete_dead_insn	reload1.c	/^delete_dead_insn (insn)$/;"	f	file:
delete_dead_jumptables	flow.c	/^delete_dead_jumptables ()$/;"	f	file:
delete_for_peephole	jump.c	/^delete_for_peephole (from, to)$/;"	f
delete_from_delay_slot	reorg.c	/^delete_from_delay_slot (insn)$/;"	f	file:
delete_handlers	function.c	/^delete_handlers ()$/;"	f	file:
delete_insn	cfgrtl.c	/^delete_insn (insn)$/;"	f
delete_insn_bb	ssa-dce.c	/^delete_insn_bb (insn)$/;"	f	file:
delete_insn_chain	cfgrtl.c	/^delete_insn_chain (start, finish)$/;"	f
delete_insns_since	emit-rtl.c	/^delete_insns_since (from)$/;"	f
delete_jump	jump.c	/^delete_jump (insn)$/;"	f
delete_key	splay-tree.h	/^  splay_tree_delete_key_fn delete_key;$/;"	m	struct:splay_tree_s
delete_noop_moves	flow.c	/^delete_noop_moves (f)$/;"	f
delete_null_pointer_checks	gcse.c	/^delete_null_pointer_checks (f)$/;"	f
delete_null_pointer_checks_1	gcse.c	/^delete_null_pointer_checks_1 (block_reg, nonnull_avin,$/;"	f	file:
delete_output_reload	reload1.c	/^delete_output_reload (insn, j, last_reload_reg)$/;"	f	file:
delete_prior_computation	jump.c	/^delete_prior_computation (note, insn)$/;"	f	file:
delete_reg_equiv	cse.c	/^delete_reg_equiv (reg)$/;"	f	file:
delete_related_insns	jump.c	/^delete_related_insns (insn)$/;"	f
delete_scheduled_jump	reorg.c	/^delete_scheduled_jump (insn)$/;"	f	file:
delete_store	gcse.c	/^delete_store (expr, bb)$/;"	f	file:
delete_trivially_dead_insns	cse.c	/^delete_trivially_dead_insns (insns, nreg, preserve_basic_blocks)$/;"	f
delete_unreachable_blocks	cfgcleanup.c	/^delete_unreachable_blocks ()$/;"	f	file:
delete_value	splay-tree.h	/^  splay_tree_delete_value_fn delete_value;$/;"	m	struct:splay_tree_s
deleted_p	gcse.c	/^  char deleted_p;$/;"	m	struct:occr	file:
demangle_name_func	dwarf2out.c	/^static const char *(*demangle_name_func) PARAMS ((const char *));$/;"	v	file:
dep	dependence.c	/^  struct dependence *dep;$/;"	m	struct:def_use	typeref:struct:def_use::dependence	file:
dep_chain	dependence.c	/^static varray_type dep_chain;$/;"	v	file:
dep_count	sched-int.h	/^  int dep_count;$/;"	m	struct:haifa_insn_data
depend	sched-int.h	/^  rtx depend;$/;"	m	struct:haifa_insn_data
dependence	dependence.c	/^  enum dependence_type dependence;$/;"	m	struct:dependence	typeref:enum:dependence::dependence_type	file:
dependence	dependence.c	/^typedef struct dependence$/;"	s	file:
dependence	dependence.c	/^} dependence;$/;"	t	typeref:struct:dependence	file:
dependence_type	dependence.c	/^enum dependence_type {dt_flow, dt_anti, dt_output, dt_none};$/;"	g	file:
dependencies	loop.c	/^  rtx dependencies;		\/* When INSN is libcall, this is an EXPR_LIST$/;"	m	struct:movable	file:
deprecated_flag	tree.h	/^  unsigned deprecated_flag : 1;$/;"	m	struct:tree_common
deprecated_state	c-decl.c	/^static enum deprecated_states deprecated_state = DEPRECATED_NORMAL;$/;"	v	typeref:enum:deprecated_states	file:
deprecated_states	c-decl.c	/^enum deprecated_states {$/;"	g	file:
deps	cpphash.h	/^  struct deps *deps;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::deps
deps	mkdeps.c	/^struct deps$/;"	s	file:
deps	sched-int.h	/^struct deps$/;"	s
deps_add_default_target	mkdeps.c	/^deps_add_default_target (d, tgt)$/;"	f
deps_add_dep	mkdeps.c	/^deps_add_dep (d, t)$/;"	f
deps_add_target	mkdeps.c	/^deps_add_target (d, t, quote)$/;"	f
deps_file	cpplib.h	/^  const char *deps_file;$/;"	m	struct:cpp_options
deps_free	mkdeps.c	/^deps_free (d)$/;"	f
deps_init	mkdeps.c	/^deps_init ()$/;"	f
deps_may_trap_p	sched-deps.c	/^deps_may_trap_p (mem)$/;"	f	file:
deps_phony_targets	cpplib.h	/^  unsigned char deps_phony_targets;$/;"	m	struct:cpp_options
deps_phony_targets	mkdeps.c	/^deps_phony_targets (d, fp)$/;"	f
deps_reg	sched-int.h	/^  struct deps_reg$/;"	s	struct:deps
deps_size	mkdeps.c	/^  unsigned int deps_size;$/;"	m	struct:deps	file:
deps_write	mkdeps.c	/^deps_write (d, fp, colmax)$/;"	f
depth	basic-block.h	/^  int depth;$/;"	m	struct:loop
depth	c-typeck.c	/^  int depth;$/;"	m	struct:constructor_stack	file:
depth	dependence.c	/^  int  depth;$/;"	m	struct:loop	file:
depth	line-map.h	/^  unsigned int depth;$/;"	m	struct:line_maps
depth	stmt.c	/^  int depth;$/;"	m	struct:nesting	file:
depth_first_search_ds	cfganal.c	/^typedef struct depth_first_search_dsS *depth_first_search_ds;$/;"	t	typeref:struct:depth_first_search_dsS	file:
depth_first_search_dsS	cfganal.c	/^struct depth_first_search_dsS {$/;"	s	file:
depv	mkdeps.c	/^  const char **depv;$/;"	m	struct:deps	file:
dequeue_and_dump	tree-dump.c	/^dequeue_and_dump (di)$/;"	f	file:
dequote_string	cpplib.c	/^dequote_string (pfile, str, len)$/;"	f	file:
derive_adjustment	loop.h	/^  rtx derive_adjustment;	\/* If nonzero, is an adjustment to be$/;"	m	struct:induction
desc	varasm.c	/^  struct constant_descriptor *desc;$/;"	m	struct:pool_constant	typeref:struct:pool_constant::constant_descriptor	file:
description	toplev.c	/^  const char *const description;$/;"	m	struct:__anon60	file:
description	toplev.c	/^  const char *const description;$/;"	m	struct:__anon61	file:
description	toplev.c	/^  const char *const description;$/;"	m	struct:__anon62	file:
description	toplev.c	/^  const char *const description;$/;"	m	struct:__anon63	file:
description	toplev.c	/^  const char *const description;$/;"	m	struct:lang_opt	file:
deserves_ellipsis	c-aux-info.c	/^deserves_ellipsis (fntype)$/;"	f	file:
designated	c-typeck.c	/^  char designated;$/;"	m	struct:constructor_stack	file:
designator_depth	c-typeck.c	/^static int designator_depth;$/;"	v	file:
designator_errorneous	c-typeck.c	/^static int designator_errorneous;$/;"	v	file:
dest	basic-block.h	/^  struct basic_block_def *src, *dest;$/;"	m	struct:edge_def	typeref:struct:edge_def::
dest	cselib.c	/^  rtx dest;$/;"	m	struct:set	file:
dest	gcov-io.h	/^     char *dest;$/;"	v
dest	gcov-io.h	/^     gcov_type *dest;$/;"	v
dest	gcov-io.h	/^     long *dest;$/;"	v
dest	integrate.h	/^      rtx dest;$/;"	m	struct:inline_remap::equiv_table
dest_addr_elt	cselib.c	/^  cselib_val *dest_addr_elt;$/;"	m	struct:set	file:
dest_hash	cse.c	/^  unsigned dest_hash;$/;"	m	struct:set	file:
dest_reg	loop.h	/^  rtx dest_reg;			\/* Destination register for insn: this is the$/;"	m	struct:induction
dest_to_remember	dependence.c	/^static tree dest_to_remember;$/;"	v	file:
destination	dependence.c	/^  tree destination;$/;"	m	struct:dependence	file:
destringize_and_run	cpplib.c	/^destringize_and_run (pfile, in)$/;"	f	file:
destroy_node	cppfiles.c	/^destroy_node (v)$/;"	f	file:
destructor	target.h	/^    void (* destructor) PARAMS ((rtx, int));$/;"	m	struct:gcc_target::asm_out
dev	cpphash.h	/^  dev_t dev;$/;"	m	struct:search_path
dev_zero_fd	ggc-page.c	/^  int dev_zero_fd;$/;"	m	struct:globals	file:
df	df.h	/^struct df$/;"	s
df_alloc	df.c	/^df_alloc (df, n_regs)$/;"	f	file:
df_analyse	df.c	/^df_analyse (df, blocks, flags)$/;"	f
df_analyse_1	df.c	/^df_analyse_1 (df, blocks, flags, update)$/;"	f	file:
df_analyzer	ssa-ccp.c	/^static struct df *df_analyzer;$/;"	v	typeref:struct:df	file:
df_bb_def_use_swap	df.c	/^df_bb_def_use_swap (df, bb, def_insn, use_insn, regno)$/;"	f
df_bb_du_chain_create	df.c	/^df_bb_du_chain_create (df, bb, ru)$/;"	f	file:
df_bb_insn_regno_first_def_find	df.c	/^df_bb_insn_regno_first_def_find (df, bb, insn, regno)$/;"	f	file:
df_bb_insn_regno_last_use_find	df.c	/^df_bb_insn_regno_last_use_find (df, bb, insn, regno)$/;"	f	file:
df_bb_lr_local_compute	df.c	/^df_bb_lr_local_compute (df, bb)$/;"	f	file:
df_bb_luids_set	df.c	/^df_bb_luids_set (df, bb)$/;"	f	file:
df_bb_rd_local_compute	df.c	/^df_bb_rd_local_compute (df, bb)$/;"	f	file:
df_bb_refs_record	df.c	/^df_bb_refs_record (df, bb)$/;"	f	file:
df_bb_refs_update	df.c	/^df_bb_refs_update (df, bb)$/;"	f	file:
df_bb_reg_def_chain_create	df.c	/^df_bb_reg_def_chain_create (df, bb)$/;"	f	file:
df_bb_reg_info_compute	df.c	/^df_bb_reg_info_compute (df, bb, live)$/;"	f	file:
df_bb_reg_live_end_p	df.c	/^df_bb_reg_live_end_p (df, bb, reg)$/;"	f
df_bb_reg_live_start_p	df.c	/^df_bb_reg_live_start_p (df, bb, reg)$/;"	f
df_bb_reg_use_chain_create	df.c	/^df_bb_reg_use_chain_create (df, bb)$/;"	f	file:
df_bb_regno_first_def_find	df.c	/^df_bb_regno_first_def_find (df, bb, regno)$/;"	f	file:
df_bb_regno_last_use_find	df.c	/^df_bb_regno_last_use_find (df, bb, regno)$/;"	f	file:
df_bb_regs_lives_compare	df.c	/^df_bb_regs_lives_compare (df, bb, reg1, reg2)$/;"	f
df_bb_ru_local_compute	df.c	/^df_bb_ru_local_compute (df, bb)$/;"	f	file:
df_bb_single_def_use_insn_find	df.c	/^df_bb_single_def_use_insn_find (df, bb, insn, reg)$/;"	f
df_bb_ud_chain_create	df.c	/^df_bb_ud_chain_create (df, bb)$/;"	f	file:
df_bitmaps_alloc	df.c	/^df_bitmaps_alloc (df, flags)$/;"	f	file:
df_bitmaps_free	df.c	/^df_bitmaps_free (df, flags)$/;"	f	file:
df_chain_dump	df.c	/^df_chain_dump (link, file)$/;"	f	file:
df_chain_dump_regno	df.c	/^df_chain_dump_regno (link, file)$/;"	f	file:
df_confluence_op	df.h	/^enum df_confluence_op$/;"	g
df_def_dominates_all_uses_p	df.c	/^df_def_dominates_all_uses_p (df, def)$/;"	f	file:
df_def_dominates_uses_p	df.c	/^df_def_dominates_uses_p (df, def, blocks)$/;"	f	file:
df_def_record_1	df.c	/^df_def_record_1 (df, x, bb, insn)$/;"	f	file:
df_def_unlink	df.c	/^df_def_unlink (df, def)$/;"	f	file:
df_defs_record	df.c	/^df_defs_record (df, x, bb, insn)$/;"	f	file:
df_du_chain_create	df.c	/^df_du_chain_create (df, blocks)$/;"	f	file:
df_dump	df.c	/^df_dump (df, flags, file)$/;"	f
df_finish	df.c	/^df_finish (df)$/;"	f
df_flow_dir	df.h	/^enum df_flow_dir$/;"	g
df_free	df.c	/^df_free (df)$/;"	f	file:
df_init	df.c	/^df_init ()$/;"	f
df_insn_debug	df.c	/^df_insn_debug (df, insn, file)$/;"	f
df_insn_debug_regno	df.c	/^df_insn_debug_regno (df, insn, file)$/;"	f
df_insn_delete	df.c	/^df_insn_delete (df, bb, insn)$/;"	f
df_insn_dominates_all_uses_p	df.c	/^df_insn_dominates_all_uses_p (df, bb, insn)$/;"	f
df_insn_dominates_uses_p	df.c	/^df_insn_dominates_uses_p (df, bb, insn, blocks)$/;"	f
df_insn_mem_replace	df.c	/^df_insn_mem_replace (df, bb, insn, mem, reg)$/;"	f
df_insn_modify	df.c	/^df_insn_modify (df, bb, insn)$/;"	f
df_insn_move_before	df.c	/^df_insn_move_before (df, bb, insn, before_bb, before_insn)$/;"	f
df_insn_refs_record	df.c	/^df_insn_refs_record (df, bb, insn)$/;"	f	file:
df_insn_refs_unlink	df.c	/^df_insn_refs_unlink (df, bb, insn)$/;"	f	file:
df_insn_regno_def_p	df.c	/^df_insn_regno_def_p (df, bb, insn, regno)$/;"	f
df_insn_table_realloc	df.c	/^df_insn_table_realloc (df, size)$/;"	f	file:
df_insns_modify	df.c	/^df_insns_modify (df, bb, first_insn, last_insn)$/;"	f	file:
df_jump_pattern_emit_after	df.c	/^df_jump_pattern_emit_after (df, pattern, bb, insn)$/;"	f
df_link	df.h	/^struct df_link$/;"	s
df_link_create	df.c	/^df_link_create (ref, next)$/;"	f	file:
df_lr_local_compute	df.c	/^df_lr_local_compute (df, blocks)$/;"	f	file:
df_lr_transfer_function	df.c	/^df_lr_transfer_function (bb, changed, in, out, use, def, data)$/;"	f	file:
df_luids_set	df.c	/^df_luids_set (df, blocks)$/;"	f	file:
df_map	df.h	/^struct df_map$/;"	s
df_modified_p	df.c	/^df_modified_p (df, blocks)$/;"	f	file:
df_pattern_emit_after	df.c	/^df_pattern_emit_after (df, pattern, bb, insn)$/;"	f
df_pattern_emit_before	df.c	/^df_pattern_emit_before (df, pattern, bb, insn)$/;"	f
df_rd_local_compute	df.c	/^df_rd_local_compute (df, blocks)$/;"	f	file:
df_rd_transfer_function	df.c	/^df_rd_transfer_function (bb, changed, in, out, gen, kill, data)$/;"	f	file:
df_ref_create	df.c	/^df_ref_create (df, reg, loc, insn, ref_type, ref_flags)$/;"	f	file:
df_ref_debug	df.c	/^df_ref_debug (df, ref, file)$/;"	f	file:
df_ref_flags	df.h	/^enum df_ref_flags$/;"	g
df_ref_obstack	df.c	/^static struct obstack df_ref_obstack;$/;"	v	typeref:struct:obstack	file:
df_ref_record	df.c	/^df_ref_record (df, reg, loc, insn, ref_type, ref_flags)$/;"	f	file:
df_ref_record_1	df.c	/^df_ref_record_1 (df, reg, loc, insn, ref_type, ref_flags)$/;"	f	file:
df_ref_reg_replace	df.c	/^df_ref_reg_replace (df, ref, oldreg, newreg)$/;"	f
df_ref_remove	df.c	/^df_ref_remove (df, ref)$/;"	f
df_ref_type	df.h	/^enum df_ref_type {DF_REF_REG_DEF, DF_REF_REG_USE, DF_REF_REG_MEM_LOAD,$/;"	g
df_ref_unlink	df.c	/^df_ref_unlink (phead, ref)$/;"	f	file:
df_refs_process	df.c	/^df_refs_process (df)$/;"	f	file:
df_refs_queue	df.c	/^df_refs_queue (df)$/;"	f	file:
df_refs_record	df.c	/^df_refs_record (df, blocks)$/;"	f	file:
df_refs_reg_replace	df.c	/^df_refs_reg_replace (df, blocks, chain, oldreg, newreg)$/;"	f
df_refs_update	df.c	/^df_refs_update (df)$/;"	f	file:
df_reg_clobber_gen	df.c	/^static rtx df_reg_clobber_gen (regno)$/;"	f	file:
df_reg_def_chain_create	df.c	/^df_reg_def_chain_create (df, blocks)$/;"	f	file:
df_reg_global_p	df.c	/^df_reg_global_p (df, reg)$/;"	f
df_reg_info_compute	df.c	/^df_reg_info_compute (df, blocks)$/;"	f	file:
df_reg_lifetime	df.c	/^df_reg_lifetime (df, reg)$/;"	f
df_reg_replace	df.c	/^df_reg_replace (df, blocks, oldreg, newreg)$/;"	f
df_reg_table_realloc	df.c	/^df_reg_table_realloc (df, size)$/;"	f	file:
df_reg_use_chain_create	df.c	/^df_reg_use_chain_create (df, blocks)$/;"	f	file:
df_reg_use_gen	df.c	/^static rtx df_reg_use_gen (regno)$/;"	f	file:
df_regno_bb	df.c	/^df_regno_bb (df, regno)$/;"	f
df_regno_debug	df.c	/^df_regno_debug (df, regno, file)$/;"	f	file:
df_rtx_mem_replace	df.c	/^df_rtx_mem_replace (px, data)$/;"	f	file:
df_rtx_reg_replace	df.c	/^df_rtx_reg_replace (px, data)$/;"	f	file:
df_ru_local_compute	df.c	/^df_ru_local_compute (df, blocks)$/;"	f	file:
df_ru_transfer_function	df.c	/^df_ru_transfer_function (bb, changed, in, out, gen, kill, data)$/;"	f	file:
df_ud_chain_create	df.c	/^df_ud_chain_create (df, blocks)$/;"	f	file:
df_use_unlink	df.c	/^df_use_unlink (df, use)$/;"	f	file:
df_uses_record	df.c	/^df_uses_record (df, loc, ref_type, bb, insn, flags)$/;"	f	file:
dfs_order	basic-block.h	/^    int *dfs_order;$/;"	m	struct:loops::cfg
dfs_order	df.h	/^  int * dfs_order; \/* DFS order -> block number *\/$/;"	m	struct:df
dfs_order	dominance.c	/^  TBB *dfs_order;$/;"	m	struct:dom_info	file:
dfs_parent	dominance.c	/^  TBB *dfs_parent;$/;"	m	struct:dom_info	file:
dfs_to_bb	dominance.c	/^  basic_block *dfs_to_bb;$/;"	m	struct:dom_info	file:
dfsnum	dominance.c	/^  unsigned int dfsnum;$/;"	m	struct:dom_info	file:
dfst_node	cfganal.c	/^struct dfst_node$/;"	s	file:
di	safe-ctype.c	39;"	d	file:
di	target.h	/^      const char *di;$/;"	m	struct:gcc_target::asm_out::asm_int_op
di	varasm.c	/^    struct {HOST_WIDE_INT high, low;} di;$/;"	m	union:rtx_const::__anon81	typeref:struct:rtx_const::__anon81::__anon82	file:
diagnostic_args	diagnostic.c	54;"	d	file:
diagnostic_argument_list	diagnostic.h	206;"	d
diagnostic_auxiliary_data	diagnostic.h	225;"	d
diagnostic_buffer	diagnostic.c	/^output_buffer *diagnostic_buffer = &global_diagnostic_context.buffer;$/;"	v
diagnostic_context	diagnostic.h	/^struct diagnostic_context$/;"	s
diagnostic_context	diagnostic.h	/^typedef struct diagnostic_context diagnostic_context;$/;"	t	typeref:struct:diagnostic_context
diagnostic_count	diagnostic.h	/^  int diagnostic_count[DK_LAST_DIAGNOSTIC_KIND];$/;"	m	struct:__anon12
diagnostic_file_location	diagnostic.h	209;"	d
diagnostic_finalizer	diagnostic.h	222;"	d
diagnostic_finalizer_fn	diagnostic.h	/^typedef diagnostic_starter_fn diagnostic_finalizer_fn;$/;"	t
diagnostic_finish	diagnostic.c	/^diagnostic_finish (buffer)$/;"	f	file:
diagnostic_for_asm	rtl-error.c	/^diagnostic_for_asm (insn, msg, args_ptr, warn)$/;"	f	file:
diagnostic_for_decl	diagnostic.c	/^diagnostic_for_decl (decl, msgid, args_ptr, warn)$/;"	f	file:
diagnostic_format_decoder	diagnostic.h	229;"	d
diagnostic_initialize	diagnostic.c	/^diagnostic_initialize (context)$/;"	f
diagnostic_is_warning	diagnostic.h	215;"	d
diagnostic_kind_count	diagnostic.h	250;"	d
diagnostic_line_cutoff	diagnostic.h	238;"	d
diagnostic_line_location	diagnostic.h	212;"	d
diagnostic_lock	diagnostic.c	/^static int diagnostic_lock;$/;"	v	file:
diagnostic_message	diagnostic.h	202;"	d
diagnostic_msg	diagnostic.c	55;"	d	file:
diagnostic_prefixing_rule	diagnostic.h	233;"	d
diagnostic_prefixing_rule_t	diagnostic.h	/^} diagnostic_prefixing_rule_t;$/;"	t	typeref:enum:__anon11
diagnostic_report_warnings_p	diagnostic.h	262;"	d
diagnostic_starter	diagnostic.h	218;"	d
diagnostic_starter_fn	diagnostic.h	/^typedef void (*diagnostic_starter_fn) PARAMS ((output_buffer *,$/;"	t
diagnostic_t	diagnostic.h	/^} diagnostic_t;$/;"	t	typeref:enum:__anon10
dialect_number	final.c	/^static int dialect_number;$/;"	v	file:
diddle_return_value	function.c	/^diddle_return_value (doit, arg)$/;"	f
die	dwarf2out.c	/^	  dw_die_ref die;$/;"	m	struct:dw_val_struct::__anon50::__anon51	file:
die	dwarf2out.c	/^  dw_die_ref die;$/;"	m	struct:limbo_die_struct	file:
die	dwarf2out.c	/^  dw_die_ref die;$/;"	m	struct:pubname_struct	file:
die_abbrev	dwarf2out.c	/^  unsigned long die_abbrev;$/;"	m	struct:die_struct	file:
die_attr	dwarf2out.c	/^  dw_attr_ref die_attr;$/;"	m	struct:die_struct	file:
die_checksum	dwarf2out.c	/^die_checksum (die, ctx)$/;"	f	file:
die_child	dwarf2out.c	/^  dw_die_ref die_child;$/;"	m	struct:die_struct	file:
die_mark	dwarf2out.c	/^  int die_mark;$/;"	m	struct:die_struct	file:
die_node	dwarf2out.c	/^die_node;$/;"	t	typeref:struct:die_struct	file:
die_offset	dwarf2out.c	/^  dw_offset die_offset;$/;"	m	struct:die_struct	file:
die_parent	dwarf2out.c	/^  dw_die_ref die_parent;$/;"	m	struct:die_struct	file:
die_sib	dwarf2out.c	/^  dw_die_ref die_sib;$/;"	m	struct:die_struct	file:
die_struct	dwarf2out.c	/^typedef struct die_struct$/;"	s	file:
die_symbol	dwarf2out.c	/^  char *die_symbol;$/;"	m	struct:die_struct	file:
die_tag	dwarf2out.c	/^  enum dwarf_tag die_tag;$/;"	m	struct:die_struct	typeref:enum:die_struct::dwarf_tag	file:
dienum_pop	dwarfout.c	/^dienum_pop ()$/;"	f	file:
dienum_push	dwarfout.c	/^dienum_push ()$/;"	f	file:
digest_init	c-typeck.c	/^digest_init (type, init, require_constant, constructor_constant)$/;"	f	file:
digit_buffer	diagnostic.h	/^  char digit_buffer[128];$/;"	m	struct:output_buffer
digit_string	ggc.h	44;"	d
digit_vector	stringpool.c	/^const char digit_vector[] = {$/;"	v
digraph_spellings	cpplex.c	/^static const unsigned char *const digraph_spellings[] =$/;"	v	file:
digraphs	cppinit.c	/^  char digraphs;$/;"	m	struct:lang_flags	file:
digraphs	cpplib.h	/^  unsigned char digraphs;$/;"	m	struct:cpp_options
dir	cpphash.h	/^  struct search_path dir;$/;"	m	struct:cpp_buffer	typeref:struct:cpp_buffer::search_path
dir_idx	dwarf2out.c	/^  int dir_idx;		\/* Index in directory table.  *\/$/;"	m	struct:file_info	file:
dir_idx	dwarf2out.c	/^  int dir_idx;		\/* Index of directory used as base.  *\/$/;"	m	struct:dir_info	file:
dir_info	dwarf2out.c	/^struct dir_info$/;"	s	file:
direct_load	expr.c	/^static char direct_load[NUM_MACHINE_MODES];$/;"	v	file:
direct_p	cpphash.h	/^  bool direct_p;$/;"	m	struct:cpp_context
direct_store	expr.c	/^static char direct_store[NUM_MACHINE_MODES];$/;"	v	file:
direction	dependence.c	/^  enum direction_type direction[MAX_SUBSCRIPTS];$/;"	m	struct:dependence	typeref:enum:dependence::direction_type	file:
direction	expr.h	/^enum direction {none, upward, downward};  \/* Value has this type.  *\/$/;"	g
direction_type	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	g	file:
directive	cpphash.h	/^  const struct directive *directive;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::directive
directive	cpplib.c	/^struct directive$/;"	s	file:
directive	cpplib.c	/^typedef struct directive directive;$/;"	t	typeref:struct:directive	file:
directive_diagnostics	cpplib.c	/^directive_diagnostics (pfile, dir, indented)$/;"	f	file:
directive_handler	cpplib.c	/^typedef void (*directive_handler) PARAMS ((cpp_reader *));$/;"	t	file:
directive_head	cppinit.c	/^  struct pending_option *directive_head, *directive_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::pending_option	file:
directive_index	cpplib.h	/^  unsigned char directive_index;	\/* Index into directive table.  *\/$/;"	m	struct:cpp_hashnode
directive_line	cpphash.h	/^  unsigned int directive_line;$/;"	m	struct:cpp_reader
directive_tail	cppinit.c	/^  struct pending_option *directive_head, *directive_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::	file:
directly_reachable	except.c	/^  int directly_reachable;$/;"	m	struct:sjlj_lp_info	file:
disable	c-parse.c	/^  unsigned int disable   : 16;$/;"	m	struct:resword	file:
disable_builtin_function	c-common.c	/^disable_builtin_function (name)$/;"	f
disabled_builtin	c-common.c	/^typedef struct disabled_builtin$/;"	s	file:
disabled_builtin	c-common.c	/^} disabled_builtin;$/;"	t	typeref:struct:disabled_builtin	file:
disabled_builtins	c-common.c	/^static disabled_builtin *disabled_builtins = NULL;$/;"	v	file:
discard_comments	cpplib.h	/^  unsigned char discard_comments;$/;"	m	struct:cpp_options
discard_useless_locs	cselib.c	/^discard_useless_locs (x, info)$/;"	f	file:
discard_useless_values	cselib.c	/^discard_useless_values (x, info)$/;"	f	file:
discover_flags_reg	regmove.c	/^discover_flags_reg ()$/;"	f	file:
disp	i386.c	/^  rtx base, index, disp;$/;"	m	struct:ix86_address	file:
dispatch_index	except.c	/^  int dispatch_index;$/;"	m	struct:sjlj_lp_info	file:
display_help	toplev.c	/^display_help ()$/;"	f	file:
display_target_options	toplev.c	/^display_target_options ()$/;"	f	file:
disregard_inline_limits	langhooks.h	/^  int (*disregard_inline_limits) PARAMS ((union tree_node *));$/;"	m	struct:lang_hooks_for_tree_inlining
distance	dependence.c	/^  int distance[MAX_SUBSCRIPTS];$/;"	m	struct:dependence	file:
distribute_bit_expr	fold-const.c	/^distribute_bit_expr (code, type, arg0, arg1)$/;"	f	file:
distribute_links	combine.c	/^distribute_links (links)$/;"	f	file:
distribute_notes	combine.c	/^distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)$/;"	f	file:
div_and_round_double	fold-const.c	/^div_and_round_double (code, uns,$/;"	f
div_cost	expmed.c	/^static int div_cost[NUM_MACHINE_MODES];$/;"	v	file:
div_operator	i386.c	/^div_operator (op, mode)$/;"	f
divide	i386.h	/^  const int divide;		\/* cost of a divide\/mod *\/$/;"	m	struct:processor_costs
do_SUBST	combine.c	/^do_SUBST (into, newval)$/;"	f	file:
do_SUBST_INT	combine.c	/^do_SUBST_INT (into, newval)$/;"	f	file:
do_abort	toplev.c	/^do_abort ()$/;"	f
do_assert	cpplib.c	/^do_assert (pfile)$/;"	f	file:
do_block	sdbout.c	/^static int do_block = 0;$/;"	v	file:
do_block	xcoffout.c	/^static int do_block = 0;$/;"	v	file:
do_case	c-typeck.c	/^do_case (low_value, high_value)$/;"	f
do_clobber_return_reg	function.c	/^do_clobber_return_reg (reg, arg)$/;"	f	file:
do_cmp_and_jump	expmed.c	/^do_cmp_and_jump (arg1, arg2, op, mode, label)$/;"	f	file:
do_compare_and_jump	expr.c	/^do_compare_and_jump (exp, signed_code, unsigned_code, if_false_label,$/;"	f	file:
do_compare_rtx_and_jump	expr.c	/^do_compare_rtx_and_jump (op0, op1, code, unsignedp, mode, size,$/;"	f
do_compile	toplev.c	/^do_compile ()$/;"	f	file:
do_define	cpplib.c	/^do_define (pfile)$/;"	f	file:
do_diagnostic	cpplib.c	/^do_diagnostic (pfile, code, print_dir)$/;"	f	file:
do_elif	cpplib.c	/^do_elif (pfile)$/;"	f	file:
do_else	cpplib.c	/^do_else (pfile)$/;"	f	file:
do_endif	cpplib.c	/^do_endif (pfile)$/;"	f	file:
do_error	cpplib.c	/^do_error (pfile)$/;"	f	file:
do_float_handler	toplev.c	/^do_float_handler (fn, data)$/;"	f
do_ident	cpplib.c	/^do_ident (pfile)$/;"	f	file:
do_if	cpplib.c	/^do_if (pfile)$/;"	f	file:
do_ifdef	cpplib.c	/^do_ifdef (pfile)$/;"	f	file:
do_ifndef	cpplib.c	/^do_ifndef (pfile)$/;"	f	file:
do_import	cpplib.c	/^do_import (pfile)$/;"	f	file:
do_include	cpplib.c	/^do_include (pfile)$/;"	f	file:
do_include_common	cpplib.c	/^do_include_common (pfile, type)$/;"	f	file:
do_include_next	cpplib.c	/^do_include_next (pfile)$/;"	f	file:
do_input_reload	reload1.c	/^do_input_reload (chain, rl, j)$/;"	f	file:
do_jump	expr.c	/^do_jump (exp, if_false_label, if_true_label)$/;"	f
do_jump_by_parts_equality	expr.c	/^do_jump_by_parts_equality (exp, if_false_label, if_true_label)$/;"	f	file:
do_jump_by_parts_equality_rtx	expr.c	/^do_jump_by_parts_equality_rtx (op0, if_false_label, if_true_label)$/;"	f
do_jump_by_parts_greater	expr.c	/^do_jump_by_parts_greater (exp, swap, if_false_label, if_true_label)$/;"	f	file:
do_jump_by_parts_greater_rtx	expr.c	/^do_jump_by_parts_greater_rtx (mode, unsignedp, op0, op1, if_false_label, if_true_label)$/;"	f
do_jump_if_equal	stmt.c	/^do_jump_if_equal (op1, op2, label, unsignedp)$/;"	f	file:
do_line	cpplib.c	/^do_line (pfile)$/;"	f	file:
do_linemarker	cpplib.c	/^do_linemarker (pfile)$/;"	f	file:
do_not_record	cse.c	/^static int do_not_record;$/;"	v	file:
do_nothing_debug_hooks	debug.c	/^struct gcc_debug_hooks do_nothing_debug_hooks =$/;"	v	typeref:struct:gcc_debug_hooks
do_output_reload	reload1.c	/^do_output_reload (chain, rl, j)$/;"	f	file:
do_pending_stack_adjust	expr.c	/^do_pending_stack_adjust ()$/;"	f
do_pragma	cpplib.c	/^do_pragma (pfile)$/;"	f	file:
do_pragma_dependency	cpplib.c	/^do_pragma_dependency (pfile)$/;"	f	file:
do_pragma_once	cpplib.c	/^do_pragma_once (pfile)$/;"	f	file:
do_pragma_poison	cpplib.c	/^do_pragma_poison (pfile)$/;"	f	file:
do_pragma_system_header	cpplib.c	/^do_pragma_system_header (pfile)$/;"	f	file:
do_replace	regrename.c	/^do_replace (chain, reg)$/;"	f	file:
do_sccs	cpplib.c	/^do_sccs (pfile)$/;"	f	file:
do_store_flag	expr.c	/^do_store_flag (exp, target, mode, only_cheap)$/;"	f	file:
do_tablejump	expr.c	/^do_tablejump (index, mode, range, table_label, default_label)$/;"	f	file:
do_unassert	cpplib.c	/^do_unassert (pfile)$/;"	f	file:
do_undef	cpplib.c	/^do_undef (pfile)$/;"	f	file:
do_use_return_reg	function.c	/^do_use_return_reg (reg, arg)$/;"	f	file:
do_warning	cpplib.c	/^do_warning (pfile)$/;"	f	file:
documented_lang_options	toplev.c	/^documented_lang_options[] =$/;"	v	typeref:struct:lang_opt	file:
doing_eh	except.c	/^doing_eh (do_warn)$/;"	f
dollar_arguments_alloc	c-format.c	/^static int dollar_arguments_alloc = 0;$/;"	v	file:
dollar_arguments_count	c-format.c	/^static int dollar_arguments_count;$/;"	v	file:
dollar_arguments_pointer_p	c-format.c	/^static char *dollar_arguments_pointer_p = NULL;$/;"	v	file:
dollar_arguments_used	c-format.c	/^static char *dollar_arguments_used = NULL;$/;"	v	file:
dollar_first_arg_num	c-format.c	/^static int dollar_first_arg_num;$/;"	v	file:
dollar_format_warned	c-format.c	/^static int dollar_format_warned;$/;"	v	file:
dollar_max_arg_used	c-format.c	/^static int dollar_max_arg_used;$/;"	v	file:
dollars_in_ident	c-decl.c	/^int dollars_in_ident = DOLLARS_IN_IDENTIFIERS;$/;"	v
dollars_in_ident	cppinit.c	/^  char dollars_in_ident;$/;"	m	struct:lang_flags	file:
dollars_in_ident	cpplib.h	/^  unsigned char dollars_in_ident;$/;"	m	struct:cpp_options
doloop_condition_get	doloop.c	/^doloop_condition_get (pattern)$/;"	f	file:
doloop_iterations_max	doloop.c	/^doloop_iterations_max (loop_info, mode, nonneg)$/;"	f	file:
doloop_modify	doloop.c	/^doloop_modify (loop, iterations, iterations_max,$/;"	f	file:
doloop_modify_runtime	doloop.c	/^doloop_modify_runtime (loop, iterations_max,$/;"	f	file:
doloop_optimize	doloop.c	/^doloop_optimize (loop)$/;"	f
doloop_valid_p	doloop.c	/^doloop_valid_p (loop, jump_insn)$/;"	f	file:
dom	basic-block.h	/^    sbitmap *dom;$/;"	m	struct:loops::cfg
dom	df.h	/^  sbitmap *dom;$/;"	m	struct:df
dom	dominance.c	/^  TBB *dom;$/;"	m	struct:dom_info	file:
dom	sched-rgn.c	/^static sbitmap *dom;$/;"	v	file:
dom_info	dominance.c	/^struct dom_info$/;"	s	file:
dominators	gcse.c	/^static sbitmap *dominators;$/;"	v	file:
done	loop.c	/^  unsigned int done : 1;	\/* 1 inhibits further processing of this *\/$/;"	m	struct:movable	file:
done	reg-stack.c	/^  int done;			\/* True if block already converted.  *\/$/;"	m	struct:block_info_def	file:
done_renames	ssa.c	/^  struct rename_set_data *done_renames;$/;"	m	struct:rename_context	typeref:struct:rename_context::rename_set_data	file:
double_index	c-format.c	/^  const enum format_lengths double_index;$/;"	m	struct:__anon38	typeref:enum:__anon38::format_lengths	file:
double_mode	emit-rtl.c	/^enum machine_mode double_mode;	\/* Mode whose width is DOUBLE_TYPE_SIZE.  *\/$/;"	v	typeref:enum:machine_mode
double_name	c-format.c	/^  const char *const double_name;$/;"	m	struct:__anon38	file:
double_reg_address_ok	reload1.c	/^char double_reg_address_ok;$/;"	v
double_std	c-format.c	/^  const enum format_std_version double_std;$/;"	m	struct:__anon38	typeref:enum:__anon38::format_std_version	file:
double_type_node	tree.h	1975;"	d
downward	expr.h	/^enum direction {none, upward, downward};  \/* Value has this type.  *\/$/;"	e	enum:direction
draw_edge	graph.c	/^draw_edge (fp, from, to, bb_edge, class)$/;"	f	file:
drop_through_at_end_p	stmt.c	/^drop_through_at_end_p ()$/;"	f
dst__header_length	vmsdbg.h	/^    } dst__header_length;$/;"	m	struct:_DST_HEADER	typeref:union:_DST_HEADER::__anon53
dst__header_type	vmsdbg.h	/^    } dst__header_type;$/;"	m	struct:_DST_HEADER	typeref:union:_DST_HEADER::__anon54
dst_a_blkbeg_header	vmsdbg.h	/^  DST_HEADER dst_a_blkbeg_header;$/;"	m	struct:_DST_BLOCK_BEGIN
dst_a_blkend_header	vmsdbg.h	/^  DST_HEADER dst_a_blkend_header;$/;"	m	struct:_DST_BLOCK_END
dst_a_line_num_header	vmsdbg.h	/^  DST_HEADER dst_a_line_num_header;$/;"	m	struct:_DST_LINE_NUM_HEADER
dst_a_modbeg_header	vmsdbg.h	/^  DST_HEADER dst_a_modbeg_header;$/;"	m	struct:_DST_MODULE_BEGIN
dst_a_modend_header	vmsdbg.h	/^  DST_HEADER dst_a_modend_header;$/;"	m	struct:_DST_MODULE_END
dst_a_pcline_access_fields	vmsdbg.h	/^    } dst_a_pcline_access_fields;$/;"	m	struct:_DST_PCLINE_COMMANDS	typeref:union:_DST_PCLINE_COMMANDS::__anon57
dst_a_prolog_header	vmsdbg.h	/^  DST_HEADER dst_a_prolog_header;$/;"	m	struct:_DST_PROLOG
dst_a_rtnbeg_header	vmsdbg.h	/^  DST_HEADER dst_a_rtnbeg_header;$/;"	m	struct:_DST_ROUTINE_BEGIN
dst_a_rtnend_header	vmsdbg.h	/^  DST_HEADER dst_a_rtnend_header;$/;"	m	struct:_DST_ROUTINE_END
dst_a_source_corr_header	vmsdbg.h	/^  DST_HEADER dst_a_source_corr_header;$/;"	m	struct:_DST_SOURCE_CORR
dst_a_src_cmd_fields	vmsdbg.h	/^    } dst_a_src_cmd_fields;$/;"	m	struct:_DST_SRC_COMMAND	typeref:union:_DST_SRC_COMMAND::__anon58
dst_a_src_decl_src	vmsdbg.h	/^	} dst_a_src_decl_src;$/;"	m	union:_DST_SRC_COMMAND::__anon58	typeref:struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_b_blkbeg_name	vmsdbg.h	/^  unsigned char dst_b_blkbeg_name;$/;"	m	struct:_DST_BLOCK_BEGIN
dst_b_blkbeg_unused	vmsdbg.h	/^  unsigned char dst_b_blkbeg_unused;$/;"	m	struct:_DST_BLOCK_BEGIN
dst_b_blkend_unused	vmsdbg.h	/^  unsigned char dst_b_blkend_unused;$/;"	m	struct:_DST_BLOCK_END
dst_b_compiler	vmsdbg.h	/^  unsigned char dst_b_compiler;$/;"	m	struct:_DST_MB_TRLR
dst_b_modbeg_flags	vmsdbg.h	/^    } dst_b_modbeg_flags;$/;"	m	struct:_DST_MODULE_BEGIN	typeref:struct:_DST_MODULE_BEGIN::__anon55
dst_b_modbeg_name	vmsdbg.h	/^  unsigned char dst_b_modbeg_name;$/;"	m	struct:_DST_MODULE_BEGIN
dst_b_modbeg_unused	vmsdbg.h	/^  unsigned char dst_b_modbeg_unused;$/;"	m	struct:_DST_MODULE_BEGIN
dst_b_pcline_command	vmsdbg.h	/^  char dst_b_pcline_command;$/;"	m	struct:_DST_PCLINE_COMMANDS
dst_b_pcline_unsbyte	vmsdbg.h	/^      unsigned char dst_b_pcline_unsbyte;$/;"	m	union:_DST_PCLINE_COMMANDS::__anon57
dst_b_rtnbeg_flags	vmsdbg.h	/^    } dst_b_rtnbeg_flags;$/;"	m	struct:_DST_ROUTINE_BEGIN	typeref:struct:_DST_ROUTINE_BEGIN::__anon56
dst_b_rtnbeg_name	vmsdbg.h	/^  unsigned char dst_b_rtnbeg_name;$/;"	m	struct:_DST_ROUTINE_BEGIN
dst_b_rtnend_unused	vmsdbg.h	/^  char dst_b_rtnend_unused;$/;"	m	struct:_DST_ROUTINE_END
dst_b_src_command	vmsdbg.h	/^  unsigned char dst_b_src_command;$/;"	m	struct:_DST_SRC_COMMAND
dst_b_src_df_filename	vmsdbg.h	/^	  unsigned char dst_b_src_df_filename;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_b_src_df_flags	vmsdbg.h	/^	  unsigned char dst_b_src_df_flags;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_b_src_df_length	vmsdbg.h	/^	  unsigned char dst_b_src_df_length;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_b_src_df_libmodname	vmsdbg.h	/^  unsigned char dst_b_src_df_libmodname;$/;"	m	struct:_DST_SRC_CMDTRLR
dst_b_src_df_rms_rfo	vmsdbg.h	/^	  unsigned char dst_b_src_df_rms_rfo;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_b_src_unsbyte	vmsdbg.h	/^      unsigned char dst_b_src_unsbyte;$/;"	m	union:_DST_SRC_COMMAND::__anon58
dst_file_info_entry	vmsdbgout.c	/^dst_file_info_entry;$/;"	t	typeref:struct:dst_file_info_struct	file:
dst_file_info_ref	vmsdbgout.c	/^typedef struct dst_file_info_struct *dst_file_info_ref;$/;"	t	typeref:struct:dst_file_info_struct	file:
dst_file_info_struct	vmsdbgout.c	/^typedef struct dst_file_info_struct$/;"	s	file:
dst_file_num	vmsdbgout.c	/^  unsigned long dst_file_num;$/;"	m	struct:dst_line_info_struct	file:
dst_l_blkbeg_address	vmsdbg.h	/^  int *dst_l_blkbeg_address;$/;"	m	struct:_DST_BLOCK_BEGIN
dst_l_blkend_size	vmsdbg.h	/^  unsigned int dst_l_blkend_size;$/;"	m	struct:_DST_BLOCK_END
dst_l_modbeg_language	vmsdbg.h	/^  DST_LANGUAGE dst_l_modbeg_language;$/;"	m	struct:_DST_MODULE_BEGIN
dst_l_pcline_unslong	vmsdbg.h	/^      unsigned int dst_l_pcline_unslong;$/;"	m	union:_DST_PCLINE_COMMANDS::__anon57
dst_l_prolog_bkpt_addr	vmsdbg.h	/^  unsigned int dst_l_prolog_bkpt_addr;$/;"	m	struct:_DST_PROLOG
dst_l_rtnbeg_address	vmsdbg.h	/^  int *dst_l_rtnbeg_address;$/;"	m	struct:_DST_ROUTINE_BEGIN
dst_l_rtnbeg_pd_address	vmsdbg.h	/^  int *dst_l_rtnbeg_pd_address;$/;"	m	struct:_DST_ROUTINE_BEGIN
dst_l_rtnend_size	vmsdbg.h	/^  unsigned int dst_l_rtnend_size;$/;"	m	struct:_DST_ROUTINE_END
dst_l_src_df_rms_ebk	vmsdbg.h	/^	  unsigned int dst_l_src_df_rms_ebk;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_l_src_unslong	vmsdbg.h	/^      unsigned int dst_l_src_unslong;$/;"	m	union:_DST_SRC_COMMAND::__anon58
dst_line_info_entry	vmsdbgout.c	/^dst_line_info_entry;$/;"	t	typeref:struct:dst_line_info_struct	file:
dst_line_info_ref	vmsdbgout.c	/^typedef struct dst_line_info_struct *dst_line_info_ref;$/;"	t	typeref:struct:dst_line_info_struct	file:
dst_line_info_struct	vmsdbgout.c	/^typedef struct dst_line_info_struct$/;"	s	file:
dst_line_num	vmsdbgout.c	/^  unsigned long dst_line_num;$/;"	m	struct:dst_line_info_struct	file:
dst_q_src_df_rms_cdt	vmsdbg.h	/^	  __int64 dst_q_src_df_rms_cdt;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_q_src_df_rms_cdt	vmsdbg.h	/^	  long long dst_q_src_df_rms_cdt;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_v_modbeg_hide	vmsdbg.h	/^      unsigned dst_v_modbeg_hide : 1;$/;"	m	struct:_DST_MODULE_BEGIN::__anon55
dst_v_modbeg_unused	vmsdbg.h	/^      unsigned dst_v_modbeg_unused : 6;$/;"	m	struct:_DST_MODULE_BEGIN::__anon55
dst_v_modbeg_version	vmsdbg.h	/^      unsigned dst_v_modbeg_version : 1;$/;"	m	struct:_DST_MODULE_BEGIN::__anon55
dst_v_rtnbeg_inlined	vmsdbg.h	/^      unsigned dst_v_rtnbeg_inlined : 1;$/;"	m	struct:_DST_ROUTINE_BEGIN::__anon56
dst_v_rtnbeg_no_call	vmsdbg.h	/^      unsigned dst_v_rtnbeg_no_call : 1;$/;"	m	struct:_DST_ROUTINE_BEGIN::__anon56
dst_v_rtnbeg_prototype	vmsdbg.h	/^      unsigned dst_v_rtnbeg_prototype : 1;$/;"	m	struct:_DST_ROUTINE_BEGIN::__anon56
dst_v_rtnbeg_unalloc	vmsdbg.h	/^      unsigned dst_v_rtnbeg_unalloc : 1;$/;"	m	struct:_DST_ROUTINE_BEGIN::__anon56
dst_v_rtnbeg_unused	vmsdbg.h	/^      unsigned dst_v_rtnbeg_unused : 4;$/;"	m	struct:_DST_ROUTINE_BEGIN::__anon56
dst_w_length	vmsdbg.h	/^      unsigned short int dst_w_length;$/;"	m	union:_DST_HEADER::__anon53
dst_w_pcline_unsword	vmsdbg.h	/^      unsigned short int dst_w_pcline_unsword;$/;"	m	union:_DST_PCLINE_COMMANDS::__anon57
dst_w_src_df_fileid	vmsdbg.h	/^	  unsigned short int dst_w_src_df_fileid;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_w_src_df_rms_ffb	vmsdbg.h	/^	  unsigned short int dst_w_src_df_rms_ffb;$/;"	m	struct:_DST_SRC_COMMAND::__anon58::__anon59
dst_w_src_unsword	vmsdbg.h	/^      unsigned short int dst_w_src_unsword;$/;"	m	union:_DST_SRC_COMMAND::__anon58
dst_w_version_major	vmsdbg.h	/^  unsigned short int dst_w_version_major;$/;"	m	struct:_DST_MODULE_BEGIN
dst_w_version_minor	vmsdbg.h	/^  unsigned short int dst_w_version_minor;$/;"	m	struct:_DST_MODULE_BEGIN
dst_x_length	vmsdbg.h	/^      unsigned short int dst_x_length;$/;"	m	union:_DST_HEADER::__anon53
dt_anti	dependence.c	/^enum dependence_type {dt_flow, dt_anti, dt_output, dt_none};$/;"	e	enum:dependence_type	file:
dt_flow	dependence.c	/^enum dependence_type {dt_flow, dt_anti, dt_output, dt_none};$/;"	e	enum:dependence_type	file:
dt_none	dependence.c	/^enum dependence_type {dt_flow, dt_anti, dt_output, dt_none};$/;"	e	enum:dependence_type	file:
dt_output	dependence.c	/^enum dependence_type {dt_flow, dt_anti, dt_output, dt_none};$/;"	e	enum:dependence_type	file:
dtable	cpplib.c	/^static const directive dtable[] =$/;"	v	file:
dtors_section	varasm.c	/^dtors_section ()$/;"	f
du	varasm.c	/^    union real_extract du;$/;"	m	union:rtx_const::__anon81	typeref:union:rtx_const::__anon81::real_extract	file:
du_chain	regrename.c	/^struct du_chain$/;"	s	file:
du_status_type	dependence.c	/^enum du_status_type {seen, unseen};$/;"	g	file:
dummy	cpplex.c	/^struct dummy$/;"	s	file:
dump_array_ref	dependence.c	/^dump_array_ref (node)$/;"	f	file:
dump_base_name	toplev.c	/^const char *dump_base_name;$/;"	v
dump_bb	cfgrtl.c	/^dump_bb (bb, outf)$/;"	f
dump_begin	tree-dump.c	/^dump_begin (phase, flag_ptr)$/;"	f
dump_bitmap	bitmap.h	110;"	d
dump_child	tree-dump.h	77;"	d
dump_class	cse.c	/^dump_class (classp)$/;"	f
dump_combine_stats	combine.c	/^dump_combine_stats (file)$/;"	f
dump_combine_total_stats	combine.c	/^dump_combine_total_stats (file)$/;"	f
dump_conflicts	global.c	/^dump_conflicts (file)$/;"	f	file:
dump_def_use_chain	regrename.c	/^dump_def_use_chain (chains)$/;"	f	file:
dump_definitions	cpplib.h	/^enum { dump_none = 0, dump_only, dump_names, dump_definitions };$/;"	e	enum:__anon86
dump_edge_info	cfg.c	/^dump_edge_info (file, e, do_succ)$/;"	f
dump_enabled_p	tree-dump.c	/^dump_enabled_p (phase)$/;"	f
dump_end	tree-dump.c	/^dump_end (phase, stream)$/;"	f
dump_file	toplev.c	/^static struct dump_file_info dump_file[DFI_MAX] =$/;"	v	typeref:struct:dump_file_info	file:
dump_file_index	toplev.c	/^enum dump_file_index$/;"	g	file:
dump_file_info	toplev.c	/^struct dump_file_info$/;"	s	file:
dump_file_info	tree-dump.c	/^struct dump_file_info$/;"	s	file:
dump_files	tree-dump.c	/^static struct dump_file_info dump_files[TDI_end] =$/;"	v	typeref:struct:dump_file_info	file:
dump_flag	tree-dump.c	/^int dump_flag (di, flag, node)$/;"	f
dump_flag_name	tree-dump.c	/^dump_flag_name (phase)$/;"	f
dump_flow_info	cfg.c	/^dump_flow_info (file)$/;"	f
dump_for_graph	print-rtl.c	/^int dump_for_graph;$/;"	v
dump_global_regs	global.c	/^dump_global_regs (file)$/;"	f
dump_hash_table	gcse.c	/^dump_hash_table (file, name, table, table_size, total_size)$/;"	f	file:
dump_includes	cpplib.h	/^  unsigned char dump_includes;$/;"	m	struct:cpp_options
dump_index	tree-dump.c	/^dump_index (di, index)$/;"	f	file:
dump_info	tree-dump.h	/^struct dump_info$/;"	s
dump_info_p	tree.h	/^typedef struct dump_info *dump_info_p;$/;"	t	typeref:struct:dump_info
dump_int	tree-dump.c	/^dump_int (di, field, i)$/;"	f
dump_local_alloc	local-alloc.c	/^dump_local_alloc (file)$/;"	f
dump_macros	cpplib.h	/^  unsigned char dump_macros;$/;"	m	struct:cpp_options
dump_maybe_newline	tree-dump.c	/^dump_maybe_newline (di)$/;"	f	file:
dump_names	cpplib.h	/^enum { dump_none = 0, dump_only, dump_names, dump_definitions };$/;"	e	enum:__anon86
dump_new_line	tree-dump.c	/^dump_new_line (di)$/;"	f	file:
dump_next_stmt	tree-dump.c	/^dump_next_stmt (di, t)$/;"	f
dump_node	tree-dump.c	/^dump_node (t, flags, stream)$/;"	f
dump_node_info	tree-dump.h	/^typedef struct dump_node_info$/;"	s
dump_node_info_p	tree-dump.h	/^} *dump_node_info_p;$/;"	t	typeref:struct:dump_node_info
dump_none	cpplib.h	/^enum { dump_none = 0, dump_only, dump_names, dump_definitions };$/;"	e	enum:__anon86
dump_one_header	c-lex.c	/^dump_one_header (n, dummy)$/;"	f	file:
dump_only	cpplib.h	/^enum { dump_none = 0, dump_only, dump_names, dump_definitions };$/;"	e	enum:__anon86
dump_option_value_info	tree-dump.c	/^struct dump_option_value_info$/;"	s	file:
dump_options	tree-dump.c	/^static const struct dump_option_value_info dump_options[] =$/;"	v	typeref:struct:dump_option_value_info	file:
dump_pointer	tree-dump.c	/^dump_pointer (di, field, ptr)$/;"	f
dump_prediction	predict.c	/^dump_prediction (predictor, probability, bb, used)$/;"	f	file:
dump_queue	tree-dump.h	/^typedef struct dump_queue$/;"	s
dump_queue_p	tree-dump.h	/^} *dump_queue_p;$/;"	t	typeref:struct:dump_queue
dump_regclass	regclass.c	/^dump_regclass (dump)$/;"	f	file:
dump_regset	flow.c	/^dump_regset (r, outf)$/;"	f
dump_sbitmap	sbitmap.c	/^dump_sbitmap (file, bmap)$/;"	f
dump_sbitmap_vector	sbitmap.c	/^dump_sbitmap_vector (file, title, subtitle, bmaps, n_maps)$/;"	f
dump_stmt	tree-dump.c	/^dump_stmt (di, t)$/;"	f
dump_string	tree-dump.c	/^dump_string (di, string)$/;"	f
dump_string_field	tree-dump.c	/^dump_string_field (di, field, string)$/;"	f	file:
dump_switch_p	tree-dump.c	/^dump_switch_p (arg)$/;"	f
dump_time_statistics	c-lex.c	/^dump_time_statistics ()$/;"	f
dump_tree	langhooks.h	/^  int (*dump_tree) PARAMS ((void *, tree));$/;"	m	struct:lang_hooks_for_tree_dump
dump_tree_statistics	tree.c	/^dump_tree_statistics ()$/;"	f
dup_loc	recog.h	/^  rtx *dup_loc[MAX_DUP_OPERANDS];$/;"	m	struct:recog_data
dup_num	recog.h	/^  char dup_num[MAX_DUP_OPERANDS];$/;"	m	struct:recog_data
duplicate_decls	c-decl.c	/^duplicate_decls (newdecl, olddecl, different_binding_level)$/;"	f	file:
duplicate_eh_region_1	except.c	/^duplicate_eh_region_1 (o, map)$/;"	f	file:
duplicate_eh_region_2	except.c	/^duplicate_eh_region_2 (o, n_array)$/;"	f	file:
duplicate_eh_regions	except.c	/^duplicate_eh_regions (ifun, map)$/;"	f
duplicate_loop_exit_test	jump.c	/^duplicate_loop_exit_test (loop_start)$/;"	f	file:
dw2_asm_output_addr	dwarf2asm.c	/^dw2_asm_output_addr VPARAMS ((int size, const char *label,$/;"	f
dw2_asm_output_addr_rtx	dwarf2asm.c	/^dw2_asm_output_addr_rtx VPARAMS ((int size, rtx addr,$/;"	f
dw2_asm_output_data	dwarf2asm.c	/^dw2_asm_output_data VPARAMS ((int size, unsigned HOST_WIDE_INT value,$/;"	f
dw2_asm_output_data_sleb128	dwarf2asm.c	/^dw2_asm_output_data_sleb128 VPARAMS ((HOST_WIDE_INT value,$/;"	f
dw2_asm_output_data_uleb128	dwarf2asm.c	/^dw2_asm_output_data_uleb128 VPARAMS ((unsigned HOST_WIDE_INT value,$/;"	f
dw2_asm_output_delta	dwarf2asm.c	/^dw2_asm_output_delta VPARAMS ((int size, const char *lab1, const char *lab2,$/;"	f
dw2_asm_output_delta_sleb128	dwarf2asm.c	/^dw2_asm_output_delta_sleb128 VPARAMS ((const char *lab1 ATTRIBUTE_UNUSED,$/;"	f
dw2_asm_output_delta_uleb128	dwarf2asm.c	/^dw2_asm_output_delta_uleb128 VPARAMS ((const char *lab1 ATTRIBUTE_UNUSED,$/;"	f
dw2_asm_output_encoded_addr_rtx	dwarf2asm.c	/^dw2_asm_output_encoded_addr_rtx VPARAMS ((int encoding,$/;"	f
dw2_asm_output_nstring	dwarf2asm.c	/^dw2_asm_output_nstring VPARAMS ((const char *str, size_t orig_len,$/;"	f
dw2_asm_output_offset	dwarf2asm.c	/^dw2_asm_output_offset VPARAMS ((int size, const char *label,$/;"	f
dw2_asm_output_pcrel	dwarf2asm.c	/^dw2_asm_output_pcrel VPARAMS ((int size ATTRIBUTE_UNUSED,$/;"	f
dw2_assemble_integer	dwarf2asm.c	/^dw2_assemble_integer (size, x)$/;"	f
dw2_build_landing_pads	except.c	/^dw2_build_landing_pads ()$/;"	f	file:
dw2_force_const_mem	dwarf2asm.c	/^dw2_force_const_mem (x)$/;"	f	file:
dw2_output_call_site_table	except.c	/^dw2_output_call_site_table ()$/;"	f	file:
dw2_output_indirect_constant_1	dwarf2asm.c	/^dw2_output_indirect_constant_1 (node, data)$/;"	f	file:
dw2_output_indirect_constants	dwarf2asm.c	/^dw2_output_indirect_constants ()$/;"	f
dw2_size_of_call_site_table	except.c	/^dw2_size_of_call_site_table ()$/;"	f	file:
dw_attr	dwarf2out.c	/^  enum dwarf_attribute dw_attr;$/;"	m	struct:dw_attr_struct	typeref:enum:dw_attr_struct::dwarf_attribute	file:
dw_attr_next	dwarf2out.c	/^  dw_attr_ref dw_attr_next;$/;"	m	struct:dw_attr_struct	file:
dw_attr_node	dwarf2out.c	/^dw_attr_node;$/;"	t	typeref:struct:dw_attr_struct	file:
dw_attr_ref	dwarf2out.c	/^typedef struct dw_attr_struct *dw_attr_ref;$/;"	t	typeref:struct:dw_attr_struct	file:
dw_attr_struct	dwarf2out.c	/^typedef struct dw_attr_struct$/;"	s	file:
dw_attr_val	dwarf2out.c	/^  dw_val_node dw_attr_val;$/;"	m	struct:dw_attr_struct	file:
dw_cfa_location	dwarf2out.c	/^} dw_cfa_location;$/;"	t	typeref:struct:cfa_loc	file:
dw_cfi_addr	dwarf2out.c	/^  const char *dw_cfi_addr;$/;"	m	union:dw_cfi_oprnd_struct	file:
dw_cfi_loc	dwarf2out.c	/^  struct dw_loc_descr_struct *dw_cfi_loc;$/;"	m	union:dw_cfi_oprnd_struct	typeref:struct:dw_cfi_oprnd_struct::dw_loc_descr_struct	file:
dw_cfi_next	dwarf2out.c	/^  dw_cfi_ref dw_cfi_next;$/;"	m	struct:dw_cfi_struct	file:
dw_cfi_node	dwarf2out.c	/^dw_cfi_node;$/;"	t	typeref:struct:dw_cfi_struct	file:
dw_cfi_offset	dwarf2out.c	/^  long int dw_cfi_offset;$/;"	m	union:dw_cfi_oprnd_struct	file:
dw_cfi_opc	dwarf2out.c	/^  enum dwarf_call_frame_info dw_cfi_opc;$/;"	m	struct:dw_cfi_struct	typeref:enum:dw_cfi_struct::dwarf_call_frame_info	file:
dw_cfi_oprnd	dwarf2out.c	/^dw_cfi_oprnd;$/;"	t	typeref:union:dw_cfi_oprnd_struct	file:
dw_cfi_oprnd1	dwarf2out.c	/^  dw_cfi_oprnd dw_cfi_oprnd1;$/;"	m	struct:dw_cfi_struct	file:
dw_cfi_oprnd2	dwarf2out.c	/^  dw_cfi_oprnd dw_cfi_oprnd2;$/;"	m	struct:dw_cfi_struct	file:
dw_cfi_oprnd_ref	dwarf2out.c	/^typedef union  dw_cfi_oprnd_struct *dw_cfi_oprnd_ref;$/;"	t	typeref:union:dw_cfi_oprnd_struct	file:
dw_cfi_oprnd_struct	dwarf2out.c	/^typedef union dw_cfi_oprnd_struct$/;"	u	file:
dw_cfi_ref	dwarf2out.c	/^typedef struct dw_cfi_struct *dw_cfi_ref;$/;"	t	typeref:struct:dw_cfi_struct	file:
dw_cfi_reg_num	dwarf2out.c	/^  unsigned long dw_cfi_reg_num;$/;"	m	union:dw_cfi_oprnd_struct	file:
dw_cfi_struct	dwarf2out.c	/^typedef struct dw_cfi_struct$/;"	s	file:
dw_die_ref	dwarf2out.c	/^typedef struct die_struct *dw_die_ref;$/;"	t	typeref:struct:die_struct	file:
dw_fde_begin	dwarf2out.c	/^  const char *dw_fde_begin;$/;"	m	struct:dw_fde_struct	file:
dw_fde_cfi	dwarf2out.c	/^  dw_cfi_ref dw_fde_cfi;$/;"	m	struct:dw_fde_struct	file:
dw_fde_current_label	dwarf2out.c	/^  const char *dw_fde_current_label;$/;"	m	struct:dw_fde_struct	file:
dw_fde_end	dwarf2out.c	/^  const char *dw_fde_end;$/;"	m	struct:dw_fde_struct	file:
dw_fde_node	dwarf2out.c	/^dw_fde_node;$/;"	t	typeref:struct:dw_fde_struct	file:
dw_fde_ref	dwarf2out.c	/^typedef struct dw_fde_struct *dw_fde_ref;$/;"	t	typeref:struct:dw_fde_struct	file:
dw_fde_struct	dwarf2out.c	/^typedef struct dw_fde_struct$/;"	s	file:
dw_file_num	dwarf2out.c	/^  unsigned long dw_file_num;$/;"	m	struct:dw_line_info_struct	file:
dw_file_num	dwarf2out.c	/^  unsigned long dw_file_num;$/;"	m	struct:dw_separate_line_info_struct	file:
dw_float_const	dwarf2out.c	/^dw_float_const;$/;"	t	typeref:struct:dw_fp_struct	file:
dw_fp_struct	dwarf2out.c	/^typedef struct dw_fp_struct$/;"	s	file:
dw_line_info_entry	dwarf2out.c	/^dw_line_info_entry;$/;"	t	typeref:struct:dw_line_info_struct	file:
dw_line_info_ref	dwarf2out.c	/^typedef struct dw_line_info_struct *dw_line_info_ref;$/;"	t	typeref:struct:dw_line_info_struct	file:
dw_line_info_struct	dwarf2out.c	/^typedef struct dw_line_info_struct$/;"	s	file:
dw_line_num	dwarf2out.c	/^  unsigned long dw_line_num;$/;"	m	struct:dw_line_info_struct	file:
dw_line_num	dwarf2out.c	/^  unsigned long dw_line_num;$/;"	m	struct:dw_separate_line_info_struct	file:
dw_loc_addr	dwarf2out.c	/^  int dw_loc_addr;$/;"	m	struct:dw_loc_descr_struct	file:
dw_loc_descr_node	dwarf2out.c	/^dw_loc_descr_node;$/;"	t	typeref:struct:dw_loc_descr_struct	file:
dw_loc_descr_ref	dwarf2out.c	/^typedef struct dw_loc_descr_struct *dw_loc_descr_ref;$/;"	t	typeref:struct:dw_loc_descr_struct	file:
dw_loc_descr_struct	dwarf2out.c	/^typedef struct dw_loc_descr_struct$/;"	s	file:
dw_loc_list_node	dwarf2out.c	/^} dw_loc_list_node;$/;"	t	typeref:struct:dw_loc_list_struct	file:
dw_loc_list_ref	dwarf2out.c	/^typedef struct dw_loc_list_struct *dw_loc_list_ref;$/;"	t	typeref:struct:dw_loc_list_struct	file:
dw_loc_list_struct	dwarf2out.c	/^typedef struct dw_loc_list_struct$/;"	s	file:
dw_loc_next	dwarf2out.c	/^  dw_loc_descr_ref dw_loc_next;$/;"	m	struct:dw_loc_descr_struct	file:
dw_loc_next	dwarf2out.c	/^  dw_loc_list_ref dw_loc_next;$/;"	m	struct:dw_loc_list_struct	file:
dw_loc_opc	dwarf2out.c	/^  enum dwarf_location_atom dw_loc_opc;$/;"	m	struct:dw_loc_descr_struct	typeref:enum:dw_loc_descr_struct::dwarf_location_atom	file:
dw_loc_oprnd1	dwarf2out.c	/^  dw_val_node dw_loc_oprnd1;$/;"	m	struct:dw_loc_descr_struct	file:
dw_loc_oprnd2	dwarf2out.c	/^  dw_val_node dw_loc_oprnd2;$/;"	m	struct:dw_loc_descr_struct	file:
dw_long_long_const	dwarf2out.c	/^dw_long_long_const;$/;"	t	typeref:struct:dw_long_long_struct	file:
dw_long_long_struct	dwarf2out.c	/^typedef struct dw_long_long_struct$/;"	s	file:
dw_offset	dwarf2out.c	/^typedef long int dw_offset;$/;"	t	file:
dw_ranges_ref	dwarf2out.c	/^typedef struct dw_ranges_struct *dw_ranges_ref;$/;"	t	typeref:struct:dw_ranges_struct	file:
dw_ranges_struct	dwarf2out.c	/^struct dw_ranges_struct$/;"	s	file:
dw_separate_line_info_entry	dwarf2out.c	/^dw_separate_line_info_entry;$/;"	t	typeref:struct:dw_separate_line_info_struct	file:
dw_separate_line_info_ref	dwarf2out.c	/^typedef struct dw_separate_line_info_struct *dw_separate_line_info_ref;$/;"	t	typeref:struct:dw_separate_line_info_struct	file:
dw_separate_line_info_struct	dwarf2out.c	/^typedef struct dw_separate_line_info_struct$/;"	s	file:
dw_val_class	dwarf2out.c	/^dw_val_class;$/;"	t	typeref:enum:__anon49	file:
dw_val_class_addr	dwarf2out.c	/^  dw_val_class_addr,$/;"	e	enum:__anon49	file:
dw_val_class_const	dwarf2out.c	/^  dw_val_class_const,$/;"	e	enum:__anon49	file:
dw_val_class_die_ref	dwarf2out.c	/^  dw_val_class_die_ref,$/;"	e	enum:__anon49	file:
dw_val_class_fde_ref	dwarf2out.c	/^  dw_val_class_fde_ref,$/;"	e	enum:__anon49	file:
dw_val_class_flag	dwarf2out.c	/^  dw_val_class_flag,$/;"	e	enum:__anon49	file:
dw_val_class_float	dwarf2out.c	/^  dw_val_class_float,$/;"	e	enum:__anon49	file:
dw_val_class_lbl_id	dwarf2out.c	/^  dw_val_class_lbl_id,$/;"	e	enum:__anon49	file:
dw_val_class_lbl_offset	dwarf2out.c	/^  dw_val_class_lbl_offset,$/;"	e	enum:__anon49	file:
dw_val_class_loc	dwarf2out.c	/^  dw_val_class_loc,$/;"	e	enum:__anon49	file:
dw_val_class_loc_list	dwarf2out.c	/^  dw_val_class_loc_list,$/;"	e	enum:__anon49	file:
dw_val_class_long_long	dwarf2out.c	/^  dw_val_class_long_long,$/;"	e	enum:__anon49	file:
dw_val_class_offset	dwarf2out.c	/^  dw_val_class_offset,$/;"	e	enum:__anon49	file:
dw_val_class_range_list	dwarf2out.c	/^  dw_val_class_range_list,$/;"	e	enum:__anon49	file:
dw_val_class_str	dwarf2out.c	/^  dw_val_class_str$/;"	e	enum:__anon49	file:
dw_val_class_unsigned_const	dwarf2out.c	/^  dw_val_class_unsigned_const,$/;"	e	enum:__anon49	file:
dw_val_node	dwarf2out.c	/^dw_val_node;$/;"	t	typeref:struct:dw_val_struct	file:
dw_val_ref	dwarf2out.c	/^typedef struct dw_val_struct *dw_val_ref;$/;"	t	typeref:struct:dw_val_struct	file:
dw_val_struct	dwarf2out.c	/^typedef struct dw_val_struct$/;"	s	file:
dwarf2_debug_hooks	dwarf2out.c	/^struct gcc_debug_hooks dwarf2_debug_hooks =$/;"	v	typeref:struct:gcc_debug_hooks
dwarf2_name	dwarf2out.c	/^dwarf2_name (decl, scope)$/;"	f	file:
dwarf2out_abstract_function	dwarf2out.c	/^dwarf2out_abstract_function (decl)$/;"	f	file:
dwarf2out_add_library_unit_info	dwarf2out.c	/^dwarf2out_add_library_unit_info (filename, context_list)$/;"	f
dwarf2out_args_size	dwarf2out.c	/^dwarf2out_args_size (label, size)$/;"	f
dwarf2out_begin_block	dwarf2out.c	/^dwarf2out_begin_block (line, blocknum)$/;"	f	file:
dwarf2out_begin_prologue	dwarf2out.c	/^dwarf2out_begin_prologue (line, file)$/;"	f
dwarf2out_cfi_label	dwarf2out.c	/^dwarf2out_cfi_label ()$/;"	f
dwarf2out_decl	dwarf2out.c	/^dwarf2out_decl (decl)$/;"	f
dwarf2out_def_cfa	dwarf2out.c	/^dwarf2out_def_cfa (label, reg, offset)$/;"	f
dwarf2out_define	dwarf2out.c	/^dwarf2out_define (lineno, buffer)$/;"	f	file:
dwarf2out_do_frame	dwarf2out.c	/^dwarf2out_do_frame ()$/;"	f
dwarf2out_end_block	dwarf2out.c	/^dwarf2out_end_block (line, blocknum)$/;"	f	file:
dwarf2out_end_epilogue	dwarf2out.c	/^dwarf2out_end_epilogue ()$/;"	f
dwarf2out_end_source_file	dwarf2out.c	/^dwarf2out_end_source_file (lineno)$/;"	f	file:
dwarf2out_finish	dwarf2out.c	/^dwarf2out_finish (input_filename)$/;"	f	file:
dwarf2out_frame_debug	dwarf2out.c	/^dwarf2out_frame_debug (insn)$/;"	f
dwarf2out_frame_debug_expr	dwarf2out.c	/^dwarf2out_frame_debug_expr (expr, label)$/;"	f	file:
dwarf2out_frame_finish	dwarf2out.c	/^dwarf2out_frame_finish ()$/;"	f
dwarf2out_frame_init	dwarf2out.c	/^dwarf2out_frame_init ()$/;"	f
dwarf2out_global_decl	dwarf2out.c	/^dwarf2out_global_decl (decl)$/;"	f	file:
dwarf2out_ignore_block	dwarf2out.c	/^dwarf2out_ignore_block (block)$/;"	f	file:
dwarf2out_init	dwarf2out.c	/^dwarf2out_init (main_input_filename)$/;"	f	file:
dwarf2out_reg_save	dwarf2out.c	/^dwarf2out_reg_save (label, reg, offset)$/;"	f
dwarf2out_return_reg	dwarf2out.c	/^dwarf2out_return_reg (label, sreg)$/;"	f
dwarf2out_return_save	dwarf2out.c	/^dwarf2out_return_save (label, offset)$/;"	f
dwarf2out_set_demangle_name_func	dwarf2out.c	/^dwarf2out_set_demangle_name_func (func)$/;"	f
dwarf2out_source_line	dwarf2out.c	/^dwarf2out_source_line (line, filename)$/;"	f	file:
dwarf2out_stack_adjust	dwarf2out.c	/^dwarf2out_stack_adjust (insn)$/;"	f	file:
dwarf2out_start_source_file	dwarf2out.c	/^dwarf2out_start_source_file (lineno, filename)$/;"	f	file:
dwarf2out_undef	dwarf2out.c	/^dwarf2out_undef (lineno, buffer)$/;"	f	file:
dwarf2out_window_save	dwarf2out.c	/^dwarf2out_window_save (label)$/;"	f
dwarf_access_attribute	dwarf2.h	/^enum dwarf_access_attribute$/;"	g
dwarf_array_dim_ordering	dwarf.h	/^enum dwarf_array_dim_ordering {$/;"	g
dwarf_array_dim_ordering	dwarf2.h	/^enum dwarf_array_dim_ordering$/;"	g
dwarf_attr_name	dwarf2out.c	/^dwarf_attr_name (attr)$/;"	f	file:
dwarf_attr_name	dwarfout.c	/^dwarf_attr_name (attr)$/;"	f	file:
dwarf_attribute	dwarf.h	/^enum dwarf_attribute {$/;"	g
dwarf_attribute	dwarf2.h	/^enum dwarf_attribute$/;"	g
dwarf_call_frame_info	dwarf2.h	/^enum dwarf_call_frame_info$/;"	g
dwarf_calling_convention	dwarf2.h	/^enum dwarf_calling_convention$/;"	g
dwarf_cfi_name	dwarf2out.c	/^dwarf_cfi_name (cfi_opc)$/;"	f	file:
dwarf_debug_hooks	dwarfout.c	/^struct gcc_debug_hooks dwarf_debug_hooks =$/;"	v	typeref:struct:gcc_debug_hooks
dwarf_discrim_list	dwarf2.h	/^enum dwarf_discrim_list$/;"	g
dwarf_fmt_byte_name	dwarfout.c	/^dwarf_fmt_byte_name (fmt)$/;"	f	file:
dwarf_form	dwarf.h	/^enum dwarf_form {$/;"	g
dwarf_form	dwarf2.h	/^enum dwarf_form$/;"	g
dwarf_form_name	dwarf2out.c	/^dwarf_form_name (form)$/;"	f	file:
dwarf_fund_type_name	dwarfout.c	/^dwarf_fund_type_name (ft)$/;"	f	file:
dwarf_fundamental_type	dwarf.h	/^enum dwarf_fundamental_type {$/;"	g
dwarf_id_case	dwarf2.h	/^enum dwarf_id_case$/;"	g
dwarf_inline_attribute	dwarf2.h	/^enum dwarf_inline_attribute$/;"	g
dwarf_last_decl	dwarfout.c	/^static tree dwarf_last_decl;$/;"	v	file:
dwarf_line_number_ops	dwarf2.h	/^enum dwarf_line_number_ops$/;"	g
dwarf_line_number_x_ops	dwarf2.h	/^enum dwarf_line_number_x_ops$/;"	g
dwarf_location_atom	dwarf.h	/^enum dwarf_location_atom {$/;"	g
dwarf_location_atom	dwarf2.h	/^enum dwarf_location_atom$/;"	g
dwarf_macinfo_record_type	dwarf.h	/^enum dwarf_macinfo_record_type {$/;"	g
dwarf_macinfo_record_type	dwarf2.h	/^enum dwarf_macinfo_record_type$/;"	g
dwarf_source_language	dwarf.h	/^enum dwarf_source_language {$/;"	g
dwarf_source_language	dwarf2.h	/^enum dwarf_source_language$/;"	g
dwarf_stack_op_name	dwarf2out.c	/^dwarf_stack_op_name (op)$/;"	f	file:
dwarf_stack_op_name	dwarfout.c	/^dwarf_stack_op_name (op)$/;"	f	file:
dwarf_subscr_data_formats	dwarf.h	/^enum dwarf_subscr_data_formats {$/;"	g
dwarf_tag	dwarf.h	/^enum dwarf_tag {$/;"	g
dwarf_tag	dwarf2.h	/^enum dwarf_tag$/;"	g
dwarf_tag_name	dwarf2out.c	/^dwarf_tag_name (tag)$/;"	f	file:
dwarf_tag_name	dwarfout.c	/^dwarf_tag_name (tag)$/;"	f	file:
dwarf_type	dwarf2.h	/^enum dwarf_type$/;"	g
dwarf_type_modifier	dwarf.h	/^enum dwarf_type_modifier {$/;"	g
dwarf_typemod_name	dwarfout.c	/^dwarf_typemod_name (mod)$/;"	f	file:
dwarf_virtuality_attribute	dwarf2.h	/^enum dwarf_virtuality_attribute$/;"	g
dwarf_visibility_attribute	dwarf2.h	/^enum dwarf_visibility_attribute$/;"	g
dwarfout_begin_block	dwarfout.c	/^dwarfout_begin_block (line, blocknum)$/;"	f	file:
dwarfout_deferred_inline_function	dwarfout.c	/^dwarfout_deferred_inline_function (decl)$/;"	f	file:
dwarfout_define	dwarfout.c	/^dwarfout_define (lineno, buffer)$/;"	f	file:
dwarfout_end_block	dwarfout.c	/^dwarfout_end_block (line, blocknum)$/;"	f	file:
dwarfout_end_epilogue	dwarfout.c	/^dwarfout_end_epilogue ()$/;"	f	file:
dwarfout_end_function	dwarfout.c	/^dwarfout_end_function (line)$/;"	f	file:
dwarfout_end_prologue	dwarfout.c	/^dwarfout_end_prologue (line)$/;"	f	file:
dwarfout_end_source_file	dwarfout.c	/^dwarfout_end_source_file (lineno)$/;"	f	file:
dwarfout_end_source_file_check	dwarfout.c	/^dwarfout_end_source_file_check (lineno)$/;"	f	file:
dwarfout_file_scope_decl	dwarfout.c	/^dwarfout_file_scope_decl (decl, set_finalizing)$/;"	f	file:
dwarfout_finish	dwarfout.c	/^dwarfout_finish (main_input_filename)$/;"	f	file:
dwarfout_function_decl	dwarfout.c	/^dwarfout_function_decl (decl)$/;"	f	file:
dwarfout_global_decl	dwarfout.c	/^dwarfout_global_decl (decl)$/;"	f	file:
dwarfout_init	dwarfout.c	/^dwarfout_init (main_input_filename)$/;"	f	file:
dwarfout_source_line	dwarfout.c	/^dwarfout_source_line (line, filename)$/;"	f	file:
dwarfout_start_source_file	dwarfout.c	/^dwarfout_start_source_file (line, filename)$/;"	f	file:
dwarfout_start_source_file_check	dwarfout.c	/^dwarfout_start_source_file_check (line, filename)$/;"	f	file:
dwarfout_undef	dwarfout.c	/^dwarfout_undef (lineno, buffer)$/;"	f	file:
dynamic_offset	function.c	/^static int dynamic_offset;$/;"	v	file:
e	regrename.c	/^  struct value_data_entry e[FIRST_PSEUDO_REGISTER];$/;"	m	struct:value_data	typeref:struct:value_data::value_data_entry	file:
e113toe	real.c	/^e113toe (pe, y)$/;"	f	file:
e24toe	real.c	/^e24toe (pe, y)$/;"	f	file:
e32	real.c	/^const UEMUSHORT e32[NE] =$/;"	v
e53toe	real.c	/^e53toe (pe, y)$/;"	f	file:
e64toe	real.c	/^e64toe (pe, y)$/;"	f	file:
e_kind	tree.c	/^  e_kind,$/;"	e	enum:__anon88	file:
eadd	real.c	/^eadd (a, b, c)$/;"	f	file:
eadd1	real.c	/^eadd1 (a, b, c)$/;"	f	file:
eaddm	real.c	/^eaddm (x, y)$/;"	f	file:
earith	real.c	/^earith (value, icode, r1, r2)$/;"	f
early_clobber	regmove.c	/^  int early_clobber[MAX_RECOG_OPERANDS];$/;"	m	struct:match	file:
early_type_list	stor-layout.c	/^static tree early_type_list;$/;"	v	file:
earlyclobber	recog.h	/^  unsigned int earlyclobber:1;$/;"	m	struct:operand_alternative
earlyclobber	regrename.c	/^  unsigned int earlyclobber:1;$/;"	m	struct:du_chain	file:
earlyclobber_operand_p	reload.c	/^earlyclobber_operand_p (x)$/;"	f
ebb_sched_info	sched-ebb.c	/^static struct sched_info ebb_sched_info =$/;"	v	typeref:struct:sched_info	file:
ebk	vmsdbgout.c	/^  long ebk;$/;"	m	struct:dst_file_info_struct	file:
eclear	real.c	/^eclear (x)$/;"	f	file:
ecleaz	real.c	/^ecleaz (xi)$/;"	f	file:
ecleazs	real.c	/^ecleazs (xi)$/;"	f	file:
ecmp	real.c	/^ecmp (a, b)$/;"	f	file:
ecmpm	real.c	/^ecmpm (a, b)$/;"	f	file:
edge	basic-block.h	/^} *edge;$/;"	t	typeref:struct:edge_def
edge_aux_obstack	cfg.c	/^static struct obstack edge_aux_obstack;$/;"	v	typeref:struct:obstack	file:
edge_def	basic-block.h	/^typedef struct edge_def {$/;"	s
edge_info	predict.c	/^} *edge_info;$/;"	t	typeref:struct:edge_info_def	file:
edge_info	profile.c	/^struct edge_info$/;"	s	file:
edge_info	ssa-ccp.c	/^static edge *edge_info;$/;"	v	file:
edge_info_def	predict.c	/^typedef struct edge_info_def$/;"	s	file:
edge_list	basic-block.h	/^struct edge_list$/;"	s
edge_list	gcse.c	/^static struct edge_list *edge_list;$/;"	v	typeref:struct:edge_list	file:
edge_table	sched-rgn.c	/^static haifa_edge *edge_table;$/;"	v	file:
edge_to_bit	sched-rgn.c	/^static int *edge_to_bit;$/;"	v	file:
edgelst	sched-rgn.c	/^typedef bitlst edgelst;$/;"	t	file:
edges	ssa-ccp.c	/^static struct edge_list *edges;$/;"	v	typeref:struct:edge_list	file:
edgeset	sched-rgn.c	/^typedef sbitmap edgeset;$/;"	t	file:
ediv	real.c	/^ediv (a, b, c)$/;"	f	file:
edivm	real.c	/^edivm (den, num)$/;"	f	file:
eff_end	cfglayout.h	/^  rtx eff_end;$/;"	m	struct:reorder_block_def
eff_head	cfglayout.h	/^  rtx eff_head;$/;"	m	struct:reorder_block_def
efixi	real.c	/^efixi (x)$/;"	f
efixui	real.c	/^efixui (x)$/;"	f
efloor	real.c	/^efloor (x, y)$/;"	f	file:
eh	function.h	/^  struct eh_status *eh;$/;"	m	struct:function	typeref:struct:function::eh_status
eh_data_format_name	dwarf2asm.c	/^eh_data_format_name (format)$/;"	f
eh_frame_section	target.h	/^    void (* eh_frame_section) PARAMS ((void));$/;"	m	struct:gcc_target::asm_out
eh_personality_libfunc	libfuncs.h	176;"	d
eh_region	except.c	/^struct eh_region$/;"	s	file:
eh_region_type	except.c	/^  enum eh_region_type$/;"	g	struct:eh_region	file:
eh_status	except.c	/^struct eh_status$/;"	s	file:
ehalf	real.c	/^const UEMUSHORT ehalf[NE] =$/;"	v
ehl_eq	except.c	/^ehl_eq (pentry, pdata)$/;"	f	file:
ehl_free	except.c	/^ehl_free (pentry)$/;"	f	file:
ehl_hash	except.c	/^ehl_hash (pentry)$/;"	f	file:
ehl_map_entry	except.c	/^struct ehl_map_entry$/;"	s	file:
ehr_handler	except.c	/^  rtx ehr_handler;$/;"	m	struct:eh_status	file:
ehr_label	except.c	/^  rtx ehr_label;$/;"	m	struct:eh_status	file:
ehr_stackadj	except.c	/^  rtx ehr_stackadj;$/;"	m	struct:eh_status	file:
ehspec_data	except.c	/^  varray_type ehspec_data;$/;"	m	struct:eh_status	file:
ehspec_filter_eq	except.c	/^ehspec_filter_eq (pentry, pdata)$/;"	f	file:
ehspec_filter_hash	except.c	/^ehspec_filter_hash (pentry)$/;"	f	file:
eifrac	real.c	/^eifrac (x, i, frac)$/;"	f	file:
eiisinf	real.c	/^eiisinf (x)$/;"	f	file:
eiisnan	real.c	/^eiisnan (x)$/;"	f	file:
eiisneg	real.c	/^eiisneg (x)$/;"	f	file:
einan	real.c	/^einan (x)$/;"	f	file:
einfin	real.c	/^einfin (x)$/;"	f	file:
eiremain	real.c	/^eiremain (den, num)$/;"	f	file:
eisinf	real.c	/^eisinf (x)$/;"	f	file:
eisnan	real.c	/^eisnan (x)$/;"	f	file:
eisneg	real.c	/^eisneg (x)$/;"	f	file:
elapsed	timevar.c	/^  struct timevar_time_def elapsed;$/;"	m	struct:timevar_def	typeref:struct:timevar_def::timevar_time_def	file:
eldexp	real.c	/^eldexp (x, pwr2, y)$/;"	f	file:
elem	rtl.h	/^  rtx elem[1];$/;"	m	struct:rtvec_def
elem_compare	partition.c	/^elem_compare (elem1, elem2)$/;"	f	file:
element_list_attribute	dwarfout.c	/^element_list_attribute (element)$/;"	f	file:
element_size	varray.h	/^  size_t	element_size;	\/* size of each data element *\/$/;"	m	struct:varray_head_tag
elements	c-typeck.c	/^  tree elements;$/;"	m	struct:constructor_stack	file:
elements	c-typeck.c	/^  tree elements;$/;"	m	struct:initializer_stack	file:
elements	partition.h	/^  struct partition_elem elements[1];$/;"	m	struct:partition_def	typeref:struct:partition_def::partition_elem
elements	tree.h	/^  tree elements;$/;"	m	struct:tree_vector
elements_used	varray.h	/^  size_t        elements_used;  \/* the number of elements used, if$/;"	m	struct:varray_head_tag
eligible_for_annul_false	reorg.c	153;"	d	file:
eligible_for_annul_true	reorg.c	150;"	d	file:
elim_reg_cond	flow.c	/^elim_reg_cond (x, regno)$/;"	f	file:
elim_reg_set	flow.c	/^static HARD_REG_SET elim_reg_set;$/;"	v	file:
elim_table	reload1.c	/^struct elim_table$/;"	s	file:
elim_table_1	reload1.c	/^static const struct elim_table_1$/;"	s	file:
eliminable	loop.h	/^  unsigned eliminable : 1;	\/* 1 if plausible candidate for$/;"	m	struct:iv_class
eliminable	recog.h	/^  const char eliminable;$/;"	m	struct:insn_operand_data
eliminable_regset	global.c	/^static HARD_REG_SET eliminable_regset;$/;"	v	file:
eliminate_constant_term	explow.c	/^eliminate_constant_term (x, constptr)$/;"	f
eliminate_phi	ssa.c	/^eliminate_phi (e, reg_partition)$/;"	f	file:
eliminate_regs	reload1.c	/^eliminate_regs (x, mem_mode, insn)$/;"	f
eliminate_regs_in_insn	reload1.c	/^eliminate_regs_in_insn (insn, replace)$/;"	f	file:
elimination_effects	reload1.c	/^elimination_effects (x, mem_mode)$/;"	f	file:
elms	sbitmap.h	/^  SBITMAP_ELT_TYPE elms[1];	\/* The elements.  *\/$/;"	m	struct:simple_bitmap_def
elog2	real.c	/^const UEMUSHORT elog2[NE] =$/;"	v
elt	cselib.h	/^  cselib_val *elt;$/;"	m	struct:elt_list
elt_list	cselib.h	/^struct elt_list$/;"	s
elt_loc_list	cselib.h	/^struct elt_loc_list$/;"	s
elts	c-tree.h	/^  tree elts[1];$/;"	m	struct:lang_type
emdnorm	real.c	/^emdnorm (s, lost, subflg, exp, rcntrl)$/;"	f	file:
emit	emit-rtl.c	/^emit (x)$/;"	f
emit	function.h	/^  struct emit_status *emit;$/;"	m	struct:function	typeref:struct:function::emit_status
emit_0_to_1_insn	optabs.c	/^emit_0_to_1_insn (x)$/;"	f
emit_barrier	emit-rtl.c	/^emit_barrier ()$/;"	f
emit_barrier_after	emit-rtl.c	/^emit_barrier_after (after)$/;"	f
emit_barrier_before	emit-rtl.c	/^emit_barrier_before (before)$/;"	f
emit_block_move	expr.c	/^emit_block_move (x, y, size)$/;"	f
emit_call_1	calls.c	/^emit_call_1 (funexp, fndecl, funtype, stack_size, rounded_stack_size,$/;"	f	file:
emit_call_insn	emit-rtl.c	/^emit_call_insn (pattern)$/;"	f
emit_call_insn_before	emit-rtl.c	/^emit_call_insn_before (pattern, before)$/;"	f
emit_case_nodes	stmt.c	/^emit_case_nodes (index, node, default_label, index_type)$/;"	f	file:
emit_clr_insn	optabs.c	/^emit_clr_insn (x)$/;"	f
emit_cmp_and_jump_insn_1	optabs.c	/^emit_cmp_and_jump_insn_1 (x, y, mode, comparison, unsignedp, label)$/;"	f	file:
emit_cmp_and_jump_insns	optabs.c	/^emit_cmp_and_jump_insns (x, y, comparison, size, mode, unsignedp, label)$/;"	f
emit_cmp_insn	optabs.c	/^emit_cmp_insn (x, y, comparison, size, mode, unsignedp)$/;"	f
emit_conditional_move	optabs.c	/^emit_conditional_move (target, code, op0, op1, cmode, op2, op3, mode,$/;"	f
emit_delay_sequence	reorg.c	/^emit_delay_sequence (insn, list, length)$/;"	f	file:
emit_equiv_load	function.c	/^emit_equiv_load (p)$/;"	f	file:
emit_filename	stmt.c	392;"	d	file:
emit_group_load	expr.c	/^emit_group_load (dst, orig_src, ssize)$/;"	f
emit_group_store	expr.c	/^emit_group_store (orig_dst, src, ssize)$/;"	f
emit_i387_cw_initialization	i386.c	/^emit_i387_cw_initialization (normal, round_down)$/;"	f
emit_indirect_jump	optabs.c	/^emit_indirect_jump (loc)$/;"	f
emit_initial_value_sets	integrate.c	/^emit_initial_value_sets ()$/;"	f
emit_input_reload_insns	reload1.c	/^emit_input_reload_insns (chain, rl, old, j)$/;"	f	file:
emit_insn	emit-rtl.c	/^emit_insn (pattern)$/;"	f
emit_insn_after	emit-rtl.c	/^emit_insn_after (pattern, after)$/;"	f
emit_insn_after_with_line_notes	emit-rtl.c	/^emit_insn_after_with_line_notes (pattern, after, from)$/;"	f
emit_insn_before	emit-rtl.c	/^emit_insn_before (pattern, before)$/;"	f
emit_insns	emit-rtl.c	/^emit_insns (insn)$/;"	f
emit_insns_after	emit-rtl.c	/^emit_insns_after (first, after)$/;"	f
emit_insns_before	emit-rtl.c	/^emit_insns_before (insn, before)$/;"	f
emit_jump	stmt.c	/^emit_jump (label)$/;"	f
emit_jump_if_reachable	stmt.c	/^emit_jump_if_reachable (label)$/;"	f	file:
emit_jump_insn	emit-rtl.c	/^emit_jump_insn (pattern)$/;"	f
emit_jump_insn_after	emit-rtl.c	/^emit_jump_insn_after (pattern, after)$/;"	f
emit_jump_insn_before	emit-rtl.c	/^emit_jump_insn_before (pattern, before)$/;"	f
emit_label	emit-rtl.c	/^emit_label (label)$/;"	f
emit_label_after	emit-rtl.c	/^emit_label_after (label, after)$/;"	f
emit_label_before	emit-rtl.c	/^emit_label_before (label, before)$/;"	f
emit_libcall_block	optabs.c	/^emit_libcall_block (insns, target, result, equiv)$/;"	f
emit_library_call	calls.c	/^emit_library_call VPARAMS((rtx orgfun, enum libcall_type fn_type,$/;"	f
emit_library_call_value	calls.c	/^emit_library_call_value VPARAMS((rtx orgfun, rtx value,$/;"	f
emit_library_call_value_1	calls.c	/^emit_library_call_value_1 (retval, orgfun, value, fn_type, outmode, nargs, p)$/;"	f	file:
emit_line_note	emit-rtl.c	/^emit_line_note (file, line)$/;"	f
emit_line_note_after	emit-rtl.c	/^emit_line_note_after (file, line, after)$/;"	f
emit_line_note_force	emit-rtl.c	/^emit_line_note_force (file, line)$/;"	f
emit_lineno	stmt.c	393;"	d	file:
emit_local_var	c-semantics.c	/^emit_local_var (decl)$/;"	f
emit_move_insn	expr.c	/^emit_move_insn (x, y)$/;"	f
emit_move_insn_1	expr.c	/^emit_move_insn_1 (x, y)$/;"	f
emit_no_conflict_block	optabs.c	/^emit_no_conflict_block (insns, target, op0, op1, equiv)$/;"	f
emit_nop	stmt.c	/^emit_nop ()$/;"	f
emit_note	emit-rtl.c	/^emit_note (file, line)$/;"	f
emit_note_after	emit-rtl.c	/^emit_note_after (subtype, after)$/;"	f
emit_note_before	emit-rtl.c	/^emit_note_before (subtype, before)$/;"	f
emit_output_reload_insns	reload1.c	/^emit_output_reload_insns (chain, rl, j)$/;"	f	file:
emit_pop_insn	reg-stack.c	/^emit_pop_insn (insn, regstack, reg, where)$/;"	f	file:
emit_prefetch_instructions	loop.c	/^emit_prefetch_instructions (loop)$/;"	f	file:
emit_push_insn	expr.c	/^emit_push_insn (x, mode, type, size, align, partial, reg, extra,$/;"	f
emit_queue	expr.c	/^emit_queue ()$/;"	f
emit_reload_insns	reload1.c	/^emit_reload_insns (chain)$/;"	f	file:
emit_return_into_block	function.c	/^emit_return_into_block (bb, line_note)$/;"	f	file:
emit_single_push_insn	expr.c	/^emit_single_push_insn (mode, x, type)$/;"	f	file:
emit_stack_probe	explow.c	/^emit_stack_probe (address)$/;"	f	file:
emit_stack_restore	explow.c	/^emit_stack_restore (save_level, sa, after)$/;"	f
emit_stack_save	explow.c	/^emit_stack_save (save_level, psave, after)$/;"	f
emit_status	function.h	/^struct emit_status$/;"	s
emit_store_flag	expmed.c	/^emit_store_flag (target, code, op0, op1, mode, unsignedp, normalizep)$/;"	f
emit_store_flag_force	expmed.c	/^emit_store_flag_force (target, code, op0, op1, mode, unsignedp, normalizep)$/;"	f
emit_swap_insn	reg-stack.c	/^emit_swap_insn (insn, regstack, reg)$/;"	f	file:
emit_unop_insn	optabs.c	/^emit_unop_insn (icode, target, op0, code)$/;"	f
emit_unrolled_add	unroll.c	/^emit_unrolled_add (dest_reg, src_reg, increment)$/;"	f
emit_where	reg-stack.c	/^enum emit_where$/;"	g	file:
emitted_prefix_p	diagnostic.h	/^  bool emitted_prefix_p;$/;"	m	struct:__anon12
emov	real.c	/^emov (a, b)$/;"	f	file:
emovi	real.c	/^emovi (a, b)$/;"	f	file:
emovo	real.c	/^emovo (a, b)$/;"	f	file:
emovz	real.c	/^emovz (a, b)$/;"	f	file:
empty_attribute_table	attribs.c	/^static const struct attribute_spec empty_attribute_table[] =$/;"	v	typeref:struct:attribute_spec	file:
empty_elt_lists	cselib.c	/^static struct elt_list *empty_elt_lists;$/;"	v	typeref:struct:elt_list	file:
empty_elt_loc_lists	cselib.c	/^static struct elt_loc_list *empty_elt_loc_lists;$/;"	v	typeref:struct:elt_loc_list	file:
empty_string	stringpool.c	/^const char empty_string[] = "";$/;"	v
empty_vals	cselib.c	/^static cselib_val *empty_vals;$/;"	v	file:
emtens	real.c	/^static const UEMUSHORT emtens[NTEN + 1][NE] =$/;"	v	file:
emul	real.c	/^emul (a, b, c)$/;"	f	file:
emulm	real.c	/^emulm (a, b)$/;"	f	file:
enabled	toplev.c	/^  char enabled;$/;"	m	struct:dump_file_info	file:
enan	real.c	/^enan (x, sign)$/;"	f	file:
encode	fold-const.c	/^encode (words, low, hi)$/;"	f	file:
end	basic-block.h	/^  rtx end;$/;"	m	struct:loop
end	basic-block.h	/^  rtx head, end;$/;"	m	struct:basic_block_def
end	dwarf2out.c	/^  const char *end;  \/* Label for end address of range *\/$/;"	m	struct:dw_loc_list_struct	file:
end	reload.c	/^  HOST_WIDE_INT end;	\/* Ending offset or register number.  *\/$/;"	m	struct:decomposition	file:
end_alias_analysis	alias.c	/^end_alias_analysis ()$/;"	f
end_bb	graph.c	/^end_bb (fp)$/;"	f	file:
end_block	debug.h	/^  void (* end_block) PARAMS ((unsigned int line, unsigned int n));$/;"	m	struct:gcc_debug_hooks
end_branch_prob	profile.c	/^end_branch_prob ()$/;"	f
end_cleanup_deferral	stmt.c	/^end_cleanup_deferral ()$/;"	f
end_dependence_analysis	dependence.c	/^end_dependence_analysis ()$/;"	f
end_diagnostic	diagnostic.h	/^  void (*end_diagnostic) PARAMS ((output_buffer *, diagnostic_context *));$/;"	m	struct:diagnostic_context
end_directive	cpplib.c	/^end_directive (pfile, skip_line)$/;"	f	file:
end_epilogue	debug.h	/^  void (* end_epilogue) PARAMS ((void));$/;"	m	struct:gcc_debug_hooks
end_fct	graph.c	/^end_fct (fp)$/;"	f	file:
end_final	final.c	/^end_final (filename)$/;"	f
end_full_sequence	emit-rtl.c	/^end_full_sequence (first, last)$/;"	f
end_function	debug.h	/^  void (* end_function) PARAMS ((unsigned int line));$/;"	m	struct:gcc_debug_hooks
end_inlining	langhooks.h	/^  void (*end_inlining) PARAMS ((union tree_node *));$/;"	m	struct:lang_hooks_for_tree_inlining
end_label	stmt.c	/^	  rtx end_label;$/;"	m	struct:nesting::__anon67::__anon69	file:
end_of_function_label	reorg.c	/^static rtx end_of_function_label;$/;"	v	file:
end_of_function_needs	resource.c	/^static struct resources end_of_function_needs;$/;"	v	typeref:struct:resources	file:
end_prologue	debug.h	/^  void (* end_prologue) PARAMS ((unsigned int line));$/;"	m	struct:gcc_debug_hooks
end_protect_partials	except.c	/^end_protect_partials ()$/;"	f
end_sequence	emit-rtl.c	/^end_sequence ()$/;"	f
end_sibling_chain	dwarfout.c	/^end_sibling_chain ()$/;"	f	file:
end_source_file	debug.h	/^  void (* end_source_file) PARAMS ((unsigned int line));$/;"	m	struct:gcc_debug_hooks
end_tree	basic-block.h	/^  tree end_tree;$/;"	m	struct:basic_block_def
endian	real.c	/^endian (e, x, mode)$/;"	f	file:
endif_label	stmt.c	/^	  rtx endif_label;$/;"	m	struct:nesting::__anon67::__anon68	file:
eneg	real.c	/^eneg (x)$/;"	f	file:
enormlz	real.c	/^enormlz (x)$/;"	f	file:
enqueue_insn	expr.c	/^enqueue_insn (var, body)$/;"	f	file:
enter_macro_context	cppmacro.c	/^enter_macro_context (pfile, node)$/;"	f	file:
entries	hashtab.h	/^  PTR *entries;$/;"	m	struct:htab
entries	hashtable.h	/^  hashnode *entries;$/;"	m	struct:ht
entries	integrate.c	/^  initial_value_pair *entries;$/;"	m	struct:initial_value_struct	file:
entry_and_rtx_equal_p	cselib.c	/^entry_and_rtx_equal_p (entry, x_arg)$/;"	f	file:
entry_edges	basic-block.h	/^  edge *entry_edges;$/;"	m	struct:loop
entry_exit_blocks	cfg.c	/^struct basic_block_def entry_exit_blocks[2]$/;"	v	typeref:struct:basic_block_def
enum_next_value	c-decl.c	/^static tree enum_next_value;$/;"	v	file:
enum_overflow	c-decl.c	/^static int enum_overflow;$/;"	v	file:
enumeral_type_class	typeclass.h	/^  enumeral_type_class, boolean_type_class,$/;"	e	enum:type_class
enumerate_ldsts	gcse.c	/^enumerate_ldsts ()$/;"	f	file:
eof	cpphash.h	/^  cpp_token eof;$/;"	m	struct:cpp_reader
eone	real.c	/^const UEMUSHORT eone[NE] =$/;"	v
ephi_add_node	ssa.c	/^ephi_add_node (reg, nodes, n_nodes)$/;"	f	file:
ephi_backward	ssa.c	/^ephi_backward (t, visited, pred, nodes)$/;"	f	file:
ephi_create	ssa.c	/^ephi_create (t, visited, pred, succ, nodes)$/;"	f	file:
ephi_forward	ssa.c	/^ephi_forward (t, visited, succ, tstack)$/;"	f	file:
epi	real.c	/^const UEMUSHORT epi[NE] =$/;"	v
epi_info	function.c	/^struct epi_info$/;"	s	file:
epilogue	function.c	/^static varray_type epilogue;$/;"	v	file:
epilogue_delay_list	function.h	/^  rtx epilogue_delay_list;$/;"	m	struct:function
eq	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
eq_f	hashtab.h	/^  htab_eq eq_f;$/;"	m	struct:htab
eq_pointer	hashtab.c	/^eq_pointer (p1, p2)$/;"	f	file:
eqdf2_libfunc	libfuncs.h	199;"	d
eqhf2_libfunc	libfuncs.h	183;"	d
eqsf2_libfunc	libfuncs.h	191;"	d
eqtf2_libfunc	libfuncs.h	215;"	d
equal	simplify-rtx.c	/^  int equal, op0lt, op1lt;	\/* Output *\/$/;"	m	struct:cfc_args	file:
equate_decl_number_to_die	dwarf2out.c	/^equate_decl_number_to_die (decl, decl_die)$/;"	f	file:
equate_decl_number_to_die_number	dwarfout.c	/^equate_decl_number_to_die_number (decl)$/;"	f	file:
equate_type_number_to_die	dwarf2out.c	/^equate_type_number_to_die (type, type_die)$/;"	f	file:
equate_type_number_to_die_number	dwarfout.c	/^equate_type_number_to_die_number (type)$/;"	f	file:
equiv	integrate.h	/^      rtx equiv;$/;"	m	struct:inline_remap::equiv_table
equiv_constant	cse.c	/^equiv_constant (x)$/;"	f	file:
equiv_init_movable_p	local-alloc.c	/^equiv_init_movable_p (x, regno)$/;"	f	file:
equiv_init_varies_p	local-alloc.c	/^equiv_init_varies_p (x)$/;"	f	file:
equiv_mem	local-alloc.c	/^static rtx equiv_mem;$/;"	v	file:
equiv_mem_modified	local-alloc.c	/^static int equiv_mem_modified;$/;"	v	file:
equiv_reg_src	function.c	/^  rtx equiv_reg_src;		\/* If nonzero, the value that SP_EQUIV_REG$/;"	m	struct:epi_info	file:
equiv_sets	integrate.h	/^    }  equiv_sets[MAX_RECOG_OPERANDS];$/;"	m	struct:inline_remap	typeref:struct:inline_remap::equiv_table
equiv_table	integrate.h	/^  struct equiv_table$/;"	s	struct:inline_remap
equivalence	local-alloc.c	/^struct equivalence$/;"	s	file:
equot	real.c	/^static UEMUSHORT equot[NI];$/;"	v	file:
eqxf2_libfunc	libfuncs.h	207;"	d
ereal_atof	real.c	/^ereal_atof (s, t)$/;"	f
ereal_cmp	real.c	/^ereal_cmp (x, y)$/;"	f
ereal_from_double	real.c	/^ereal_from_double (d)$/;"	f
ereal_from_float	real.c	/^ereal_from_float (f)$/;"	f
ereal_from_int	real.c	/^ereal_from_int (d, i, j, mode)$/;"	f
ereal_from_uint	real.c	/^ereal_from_uint (d, i, j, mode)$/;"	f
ereal_isneg	real.c	/^ereal_isneg (x)$/;"	f
ereal_ldexp	real.c	/^ereal_ldexp (x, n)$/;"	f
ereal_negate	real.c	/^ereal_negate (x)$/;"	f
ereal_to_decimal	real.c	/^ereal_to_decimal (x, s)$/;"	f
ereal_to_int	real.c	/^ereal_to_int (low, high, rr)$/;"	f
ereal_unto_double	real.c	/^ereal_unto_double (d)$/;"	f
ereal_unto_float	real.c	/^ereal_unto_float (f)$/;"	f
err_no	cppfiles.c	/^  int err_no;			\/* errno obtained if opening a file failed *\/$/;"	m	struct:include_file	file:
erroneous	c-typeck.c	/^  char erroneous;$/;"	m	struct:constructor_stack	file:
error	diagnostic.c	/^error VPARAMS ((const char *msgid, ...))$/;"	f
error_for_asm	rtl-error.c	/^error_for_asm VPARAMS ((rtx insn, const char *msgid, ...))$/;"	f
error_function_changed	diagnostic.c	/^error_function_changed ()$/;"	f
error_init	c-typeck.c	/^error_init (msgid)$/;"	f
error_locus	c-tree.h	/^  tree error_locus, limbo_value;$/;"	m	struct:lang_identifier
error_mark_node	tree.h	1949;"	d
error_module_changed	diagnostic.c	/^error_module_changed ()$/;"	f
error_recursion	diagnostic.c	/^error_recursion ()$/;"	f	file:
error_type	cpphash.h	/^enum error_type { WARNING = 0, WARNING_SYSHDR, PEDWARN, ERROR, FATAL, ICE };$/;"	g
error_with_decl	diagnostic.c	/^error_with_decl VPARAMS ((tree decl, const char *msgid, ...))$/;"	f
error_with_file_and_line	diagnostic.c	/^error_with_file_and_line VPARAMS ((const char *file, int line,$/;"	f
errorcount	diagnostic.h	255;"	d
errors	cpphash.h	/^  unsigned int errors;$/;"	m	struct:cpp_reader
eshdn1	real.c	/^eshdn1 (x)$/;"	f	file:
eshdn6	real.c	/^eshdn6 (x)$/;"	f	file:
eshdn8	real.c	/^eshdn8 (x)$/;"	f	file:
eshift	real.c	/^eshift (x, sc)$/;"	f	file:
eshup1	real.c	/^eshup1 (x)$/;"	f	file:
eshup6	real.c	/^eshup6 (x)$/;"	f	file:
eshup8	real.c	/^eshup8 (x)$/;"	f	file:
esqrt2	real.c	/^const UEMUSHORT esqrt2[NE] =$/;"	v
estimate_bb_frequencies	predict.c	/^estimate_bb_frequencies (loops)$/;"	f	file:
estimate_case_costs	stmt.c	/^estimate_case_costs (node)$/;"	f	file:
estimate_loops_at_level	predict.c	/^estimate_loops_at_level (first_loop)$/;"	f	file:
estimate_probability	predict.c	/^estimate_probability (loops_info)$/;"	f
esub	real.c	/^esub (a, b, c)$/;"	f	file:
esubm	real.c	/^esubm (x, y)$/;"	f	file:
etardouble	real.c	/^etardouble (r, l)$/;"	f
etarldouble	real.c	/^etarldouble (r, l)$/;"	f
etarsingle	real.c	/^etarsingle (r)$/;"	f
etartdouble	real.c	/^etartdouble (r, l)$/;"	f
etens	real.c	/^static const UEMUSHORT etens[NTEN + 1][NE] =$/;"	v	file:
etoasc	real.c	/^etoasc (x, string, ndigs)$/;"	f	file:
etoc4x	real.c	/^etoc4x (x, d, mode)$/;"	f	file:
etodec	real.c	/^etodec (x, d)$/;"	f	file:
etoe113	real.c	/^etoe113 (x, e)$/;"	f	file:
etoe24	real.c	/^etoe24 (x, e)$/;"	f	file:
etoe53	real.c	/^etoe53 (x, e)$/;"	f	file:
etoe64	real.c	/^etoe64 (x, e)$/;"	f	file:
etoibm	real.c	/^etoibm (x, d, mode)$/;"	f	file:
etrunci	real.c	/^etrunci (x)$/;"	f
etruncui	real.c	/^etruncui (x)$/;"	f
etwo	real.c	/^const UEMUSHORT etwo[NE] =$/;"	v
euifrac	real.c	/^euifrac (x, i, frac)$/;"	f	file:
eval	dominance.c	/^eval (di, v)$/;"	f	file:
eval_subst	fold-const.c	/^eval_subst (arg, old0, new0, old1, new1)$/;"	f	file:
exact_log2	toplev.h	127;"	d
exact_log2_wide	toplev.c	/^exact_log2_wide (x)$/;"	f
exact_real_inverse	fold-const.c	/^exact_real_inverse (mode, r)$/;"	f
exact_real_inverse	real.c	/^exact_real_inverse (mode, r)$/;"	f
exact_real_inverse_1	fold-const.c	/^exact_real_inverse_1 (p)$/;"	f	file:
exact_real_inverse_args	fold-const.c	/^struct exact_real_inverse_args$/;"	s	file:
examine_argument	i386.c	/^examine_argument (mode, type, in_return, int_nregs, sse_nregs)$/;"	f	file:
examine_flow_edges	ssa-ccp.c	/^examine_flow_edges ()$/;"	f	file:
exc_ptr	except.c	/^  rtx exc_ptr;$/;"	m	struct:eh_status	file:
exception_handler_label_map	except.c	/^static htab_t exception_handler_label_map;$/;"	v	file:
exception_region	stmt.c	/^	  int exception_region;$/;"	m	struct:nesting::__anon67::__anon70	file:
exception_section	target.h	/^    void (* exception_section) PARAMS ((void));$/;"	m	struct:gcc_target::asm_out
executable_blocks	ssa-ccp.c	/^static sbitmap executable_blocks;$/;"	v	file:
executable_edges	ssa-ccp.c	/^static sbitmap executable_edges;$/;"	v	file:
exit_after_options	toplev.c	/^static int exit_after_options = 0;$/;"	v	file:
exit_count	basic-block.h	/^  int exit_count;$/;"	m	struct:loop
exit_edges	basic-block.h	/^  edge *exit_edges;$/;"	m	struct:loop
exit_label	stmt.c	/^  rtx exit_label;$/;"	m	struct:nesting	file:
exit_labels	basic-block.h	/^  rtx exit_labels;$/;"	m	struct:loop
exits_doms	basic-block.h	/^  sbitmap exits_doms;$/;"	m	struct:loop
exp	cse.c	/^  rtx exp;$/;"	m	struct:check_dependence_data	file:
exp	cse.c	/^  rtx exp;$/;"	m	struct:table_elt	file:
exp	except.c	/^      tree exp;$/;"	m	struct:eh_region::__anon21::__anon26	file:
exp	tree.h	/^  struct tree_exp exp;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_exp
exp	varasm.c	/^  tree exp;$/;"	m	struct:deferred_constant	file:
exp	varasm.c	/^  tree exp;$/;"	m	struct:deferred_string	file:
exp_equiv_p	cse.c	/^exp_equiv_p (x, y, validate, equal_values)$/;"	f	file:
expand_abs	optabs.c	/^expand_abs (mode, op0, target, result_unsignedp, safe)$/;"	f
expand_and	expmed.c	/^expand_and (mode, op0, op1, target)$/;"	f
expand_anon_union_decl	stmt.c	/^expand_anon_union_decl (decl, cleanup, decl_elts)$/;"	f
expand_arg	cppmacro.c	/^expand_arg (pfile, arg)$/;"	f	file:
expand_asm	stmt.c	/^expand_asm (body)$/;"	f
expand_asm_operands	stmt.c	/^expand_asm_operands (string, outputs, inputs, clobbers, vol, filename, line)$/;"	f
expand_assignment	expr.c	/^expand_assignment (to, from, want_value, suggest_reg)$/;"	f
expand_binop	optabs.c	/^expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)$/;"	f
expand_builtin	builtins.c	/^expand_builtin (exp, target, subtarget, mode, ignore)$/;"	f
expand_builtin	target.h	/^  rtx (* expand_builtin) PARAMS ((tree exp, rtx target, rtx subtarget,$/;"	m	struct:gcc_target
expand_builtin_alloca	builtins.c	/^expand_builtin_alloca (arglist, target)$/;"	f	file:
expand_builtin_apply	builtins.c	/^expand_builtin_apply (function, arguments, argsize)$/;"	f	file:
expand_builtin_apply_args	builtins.c	/^expand_builtin_apply_args ()$/;"	f	file:
expand_builtin_apply_args_1	builtins.c	/^expand_builtin_apply_args_1 ()$/;"	f	file:
expand_builtin_args_info	builtins.c	/^expand_builtin_args_info (exp)$/;"	f	file:
expand_builtin_bzero	builtins.c	/^expand_builtin_bzero (exp)$/;"	f	file:
expand_builtin_classify_type	builtins.c	/^expand_builtin_classify_type (arglist)$/;"	f	file:
expand_builtin_constant_p	builtins.c	/^expand_builtin_constant_p (exp)$/;"	f	file:
expand_builtin_dwarf_fp_regnum	dwarf2out.c	/^expand_builtin_dwarf_fp_regnum ()$/;"	f
expand_builtin_eh_return	except.c	/^expand_builtin_eh_return (stackadj_tree, handler_tree)$/;"	f
expand_builtin_eh_return_data_regno	except.c	/^expand_builtin_eh_return_data_regno (arglist)$/;"	f
expand_builtin_expect	builtins.c	/^expand_builtin_expect (arglist, target)$/;"	f	file:
expand_builtin_expect_jump	builtins.c	/^expand_builtin_expect_jump (exp, if_false_label, if_true_label)$/;"	f
expand_builtin_extract_return_addr	except.c	/^expand_builtin_extract_return_addr (addr_tree)$/;"	f
expand_builtin_ffs	builtins.c	/^expand_builtin_ffs (arglist, target, subtarget)$/;"	f	file:
expand_builtin_fputs	builtins.c	/^expand_builtin_fputs (arglist, ignore, unlocked)$/;"	f	file:
expand_builtin_frame_address	builtins.c	/^expand_builtin_frame_address (exp)$/;"	f	file:
expand_builtin_frob_return_addr	except.c	/^expand_builtin_frob_return_addr (addr_tree)$/;"	f
expand_builtin_init_dwarf_reg_sizes	dwarf2out.c	/^expand_builtin_init_dwarf_reg_sizes (address)$/;"	f
expand_builtin_longjmp	builtins.c	/^expand_builtin_longjmp (buf_addr, value)$/;"	f
expand_builtin_mathfn	builtins.c	/^expand_builtin_mathfn (exp, target, subtarget)$/;"	f	file:
expand_builtin_memcmp	builtins.c	/^expand_builtin_memcmp (exp, arglist, target, mode)$/;"	f	file:
expand_builtin_memcpy	builtins.c	/^expand_builtin_memcpy (arglist, target, mode)$/;"	f	file:
expand_builtin_memset	builtins.c	/^expand_builtin_memset (exp, target, mode)$/;"	f	file:
expand_builtin_next_arg	builtins.c	/^expand_builtin_next_arg (arglist)$/;"	f	file:
expand_builtin_prefetch	builtins.c	/^expand_builtin_prefetch (arglist)$/;"	f	file:
expand_builtin_return	builtins.c	/^expand_builtin_return (result)$/;"	f	file:
expand_builtin_return_addr	builtins.c	/^expand_builtin_return_addr (fndecl_code, count, tem)$/;"	f
expand_builtin_saveregs	builtins.c	/^expand_builtin_saveregs ()$/;"	f
expand_builtin_setjmp	builtins.c	/^expand_builtin_setjmp (arglist, target)$/;"	f	file:
expand_builtin_setjmp_receiver	builtins.c	/^expand_builtin_setjmp_receiver (receiver_label)$/;"	f
expand_builtin_setjmp_setup	builtins.c	/^expand_builtin_setjmp_setup (buf_addr, receiver_label)$/;"	f
expand_builtin_strcat	builtins.c	/^expand_builtin_strcat (arglist, target, mode)$/;"	f	file:
expand_builtin_strchr	builtins.c	/^expand_builtin_strchr (arglist, target, mode)$/;"	f	file:
expand_builtin_strcmp	builtins.c	/^expand_builtin_strcmp (exp, target, mode)$/;"	f	file:
expand_builtin_strcpy	builtins.c	/^expand_builtin_strcpy (exp, target, mode)$/;"	f	file:
expand_builtin_strcspn	builtins.c	/^expand_builtin_strcspn (arglist, target, mode)$/;"	f	file:
expand_builtin_strlen	builtins.c	/^expand_builtin_strlen (exp, target)$/;"	f	file:
expand_builtin_strncat	builtins.c	/^expand_builtin_strncat (arglist, target, mode)$/;"	f	file:
expand_builtin_strncmp	builtins.c	/^expand_builtin_strncmp (exp, target, mode)$/;"	f	file:
expand_builtin_strncpy	builtins.c	/^expand_builtin_strncpy (arglist, target, mode)$/;"	f	file:
expand_builtin_strpbrk	builtins.c	/^expand_builtin_strpbrk (arglist, target, mode)$/;"	f	file:
expand_builtin_strrchr	builtins.c	/^expand_builtin_strrchr (arglist, target, mode)$/;"	f	file:
expand_builtin_strspn	builtins.c	/^expand_builtin_strspn (arglist, target, mode)$/;"	f	file:
expand_builtin_strstr	builtins.c	/^expand_builtin_strstr (arglist, target, mode)$/;"	f	file:
expand_builtin_trap	builtins.c	/^expand_builtin_trap ()$/;"	f
expand_builtin_unwind_init	except.c	/^expand_builtin_unwind_init ()$/;"	f
expand_builtin_va_arg	builtins.c	/^expand_builtin_va_arg (valist, type)$/;"	f
expand_builtin_va_copy	builtins.c	/^expand_builtin_va_copy (arglist)$/;"	f	file:
expand_builtin_va_end	builtins.c	/^expand_builtin_va_end (arglist)$/;"	f	file:
expand_builtin_va_start	builtins.c	/^expand_builtin_va_start (stdarg_p, arglist)$/;"	f	file:
expand_call	calls.c	/^expand_call (exp, target, ignore)$/;"	f
expand_call_inline	tree-inline.c	/^expand_call_inline (tp, walk_subtrees, data)$/;"	f	file:
expand_calls_inline	tree-inline.c	/^expand_calls_inline (tp, id)$/;"	f	file:
expand_cleanups	stmt.c	/^expand_cleanups (list, dont_do, in_fixup, reachable)$/;"	f	file:
expand_cmplxdiv_straight	optabs.c	/^expand_cmplxdiv_straight (real0, real1, imag0, imag1, realr, imagr, submode,$/;"	f	file:
expand_cmplxdiv_wide	optabs.c	/^expand_cmplxdiv_wide (real0, real1, imag0, imag1, realr, imagr, submode,$/;"	f	file:
expand_complex_abs	optabs.c	/^expand_complex_abs (mode, op0, target, unsignedp)$/;"	f
expand_compound_operation	combine.c	/^expand_compound_operation (x)$/;"	f	file:
expand_computed_goto	stmt.c	/^expand_computed_goto (exp)$/;"	f
expand_cond	c-semantics.c	/^expand_cond (t)$/;"	f
expand_constant	langhooks.h	/^  tree (*expand_constant) PARAMS ((tree));$/;"	m	struct:lang_hooks
expand_continue_loop	stmt.c	/^expand_continue_loop (whichloop)$/;"	f
expand_dec	expmed.c	/^expand_dec (target, dec)$/;"	f
expand_decl	stmt.c	/^expand_decl (decl)$/;"	f
expand_decl_cleanup	stmt.c	/^expand_decl_cleanup (decl, cleanup)$/;"	f
expand_decl_cleanup_eh	stmt.c	/^expand_decl_cleanup_eh (decl, cleanup, eh_only)$/;"	f
expand_decl_init	stmt.c	/^expand_decl_init (decl)$/;"	f
expand_deferred_fns	c-objc-common.c	/^expand_deferred_fns ()$/;"	f	file:
expand_divmod	expmed.c	/^expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)$/;"	f
expand_dummy_function_end	function.c	/^expand_dummy_function_end ()$/;"	f
expand_eh_region_end	except.c	/^expand_eh_region_end ()$/;"	f	file:
expand_eh_region_end_allowed	except.c	/^expand_eh_region_end_allowed (allowed, failure)$/;"	f
expand_eh_region_end_cleanup	except.c	/^expand_eh_region_end_cleanup (handler)$/;"	f
expand_eh_region_end_fixup	except.c	/^expand_eh_region_end_fixup (handler)$/;"	f
expand_eh_region_end_must_not_throw	except.c	/^expand_eh_region_end_must_not_throw (failure)$/;"	f
expand_eh_region_end_throw	except.c	/^expand_eh_region_end_throw (type)$/;"	f
expand_eh_region_start	except.c	/^expand_eh_region_start ()$/;"	f
expand_eh_return	except.c	/^expand_eh_return ()$/;"	f
expand_elseif	stmt.c	/^expand_elseif (cond)$/;"	f
expand_end_all_catch	except.c	/^expand_end_all_catch ()$/;"	f
expand_end_bindings	stmt.c	/^expand_end_bindings (vars, mark_ends, dont_jump_in)$/;"	f
expand_end_case	tree.h	2802;"	d
expand_end_case_dummy	stmt.c	/^expand_end_case_dummy ()$/;"	f
expand_end_case_type	stmt.c	/^expand_end_case_type (orig_index, orig_type)$/;"	f
expand_end_catch	except.c	/^expand_end_catch ()$/;"	f
expand_end_cond	stmt.c	/^expand_end_cond ()$/;"	f
expand_end_loop	stmt.c	/^expand_end_loop ()$/;"	f
expand_end_null_loop	stmt.c	/^expand_end_null_loop ()$/;"	f
expand_end_stmt_expr	stmt.c	/^expand_end_stmt_expr (t)$/;"	f
expand_end_target_temps	stmt.c	/^expand_end_target_temps ()$/;"	f
expand_exit_loop	stmt.c	/^expand_exit_loop (whichloop)$/;"	f
expand_exit_loop_if_false	stmt.c	/^expand_exit_loop_if_false (whichloop, cond)$/;"	f
expand_exit_loop_top_cond	stmt.c	/^expand_exit_loop_top_cond (whichloop, cond)$/;"	f
expand_exit_something	stmt.c	/^expand_exit_something ()$/;"	f
expand_expr	expr.c	/^expand_expr (exp, target, tmode, modifier)$/;"	f
expand_expr_stmt	stmt.c	/^expand_expr_stmt (exp)$/;"	f
expand_expr_stmt_value	stmt.c	/^expand_expr_stmt_value (exp, want_value, maybe_last)$/;"	f
expand_field_assignment	combine.c	/^expand_field_assignment (x)$/;"	f	file:
expand_fix	optabs.c	/^expand_fix (to, from, unsignedp)$/;"	f
expand_fixup	stmt.c	/^expand_fixup (tree_label, rtl_label, last_insn)$/;"	f	file:
expand_fixups	stmt.c	/^expand_fixups (first_insn)$/;"	f
expand_float	optabs.c	/^expand_float (to, from, unsignedp)$/;"	f
expand_function_end	function.c	/^expand_function_end (filename, line, end_bindings)$/;"	f
expand_function_start	function.c	/^expand_function_start (subr, parms_have_cleanups)$/;"	f
expand_goto	stmt.c	/^expand_goto (label)$/;"	f
expand_goto_internal	stmt.c	/^expand_goto_internal (body, label, last_insn)$/;"	f	file:
expand_inc	expmed.c	/^expand_inc (target, inc)$/;"	f
expand_increment	expr.c	/^expand_increment (exp, post, ignore)$/;"	f	file:
expand_inline_function	integrate.c	/^expand_inline_function (fndecl, parms, target, ignore, type,$/;"	f
expand_label	stmt.c	/^expand_label (label)$/;"	f
expand_loop_continue_here	stmt.c	/^expand_loop_continue_here ()$/;"	f
expand_main_function	function.c	/^expand_main_function ()$/;"	f
expand_modifier	expr.h	/^enum expand_modifier {EXPAND_NORMAL, EXPAND_SUM, EXPAND_CONST_ADDRESS,$/;"	g
expand_mult	expmed.c	/^expand_mult (mode, op0, op1, target, unsignedp)$/;"	f
expand_mult_add	expmed.c	/^expand_mult_add (x, target, mult, add, mode, unsignedp)$/;"	f
expand_mult_highpart	expmed.c	/^expand_mult_highpart (mode, op0, cnst1, target, unsignedp, max_cost)$/;"	f
expand_mult_highpart_adjust	expmed.c	/^expand_mult_highpart_adjust (mode, adj_operand, op0, op1, target, unsignedp)$/;"	f
expand_nl_goto_receiver	stmt.c	/^expand_nl_goto_receiver ()$/;"	f	file:
expand_nl_goto_receivers	stmt.c	/^expand_nl_goto_receivers (thisblock)$/;"	f	file:
expand_nl_handler_label	stmt.c	/^expand_nl_handler_label (slot, before_insn)$/;"	f	file:
expand_null_return	stmt.c	/^expand_null_return ()$/;"	f
expand_null_return_1	stmt.c	/^expand_null_return_1 (last_insn)$/;"	f	file:
expand_pending_sizes	function.c	/^expand_pending_sizes (pending_sizes)$/;"	f
expand_preferences	global.c	/^expand_preferences ()$/;"	f	file:
expand_return	stmt.c	/^expand_return (retval)$/;"	f
expand_shift	expmed.c	/^expand_shift (code, mode, shifted, amount, target, unsignedp)$/;"	f
expand_simple_binop	optabs.c	/^expand_simple_binop (mode, code, op0, op1, target, unsignedp, methods)$/;"	f
expand_simple_unop	optabs.c	/^expand_simple_unop (mode, code, op0, target, unsignedp)$/;"	f
expand_start_all_catch	except.c	/^expand_start_all_catch ()$/;"	f
expand_start_bindings	tree.h	2788;"	d
expand_start_bindings_and_block	stmt.c	/^expand_start_bindings_and_block (flags, block)$/;"	f
expand_start_case	stmt.c	/^expand_start_case (exit_flag, expr, type, printname)$/;"	f
expand_start_case_dummy	stmt.c	/^expand_start_case_dummy ()$/;"	f
expand_start_catch	except.c	/^expand_start_catch (type_or_list)$/;"	f
expand_start_cond	stmt.c	/^expand_start_cond (cond, exitflag)$/;"	f
expand_start_else	stmt.c	/^expand_start_else ()$/;"	f
expand_start_elseif	stmt.c	/^expand_start_elseif (cond)$/;"	f
expand_start_loop	stmt.c	/^expand_start_loop (exit_flag)$/;"	f
expand_start_loop_continue_elsewhere	stmt.c	/^expand_start_loop_continue_elsewhere (exit_flag)$/;"	f
expand_start_null_loop	stmt.c	/^expand_start_null_loop ()$/;"	f
expand_start_stmt_expr	stmt.c	/^expand_start_stmt_expr (has_scope)$/;"	f
expand_start_target_temps	stmt.c	/^expand_start_target_temps ()$/;"	f
expand_stmt	c-semantics.c	/^expand_stmt (t)$/;"	f
expand_tree_builtin	c-common.c	/^expand_tree_builtin (function, params, coerced_params)$/;"	f
expand_twoval_binop	optabs.c	/^expand_twoval_binop (binoptab, op0, op1, targ0, targ1, unsignedp)$/;"	f
expand_unop	optabs.c	/^expand_unop (mode, unoptab, op0, target, unsignedp)$/;"	f
expand_value_return	stmt.c	/^expand_value_return (val)$/;"	f	file:
expanded	cppmacro.c	/^  const cpp_token **expanded;	\/* Macro-expanded argument.  *\/$/;"	m	struct:macro_arg	file:
expanded_count	cppmacro.c	/^  unsigned int expanded_count;	\/* # of tokens in expanded argument.  *\/$/;"	m	struct:macro_arg	file:
expansion	cppmacro.c	/^  cpp_token *expansion;		\/* First token of replacement list.  *\/$/;"	m	struct:cpp_macro	file:
expected_value_to_br_prob	predict.c	/^expected_value_to_br_prob ()$/;"	f
expensive_function_p	predict.c	/^expensive_function_p (threshold)$/;"	f
explicit_flag_signed_bitfields	c-decl.c	/^int explicit_flag_signed_bitfields = 0;$/;"	v
explicit_inc_from	expr.c	/^  int explicit_inc_from;$/;"	m	struct:move_by_pieces	file:
explicit_inc_to	expr.c	/^  int explicit_inc_to;$/;"	m	struct:move_by_pieces	file:
explicit_inc_to	expr.c	/^  int explicit_inc_to;$/;"	m	struct:store_by_pieces	file:
expr	c-common.c	/^  tree expr, writer;$/;"	m	struct:tlist	file:
expr	c-common.c	/^  tree expr;$/;"	m	struct:tlist_cache	file:
expr	dwarf2out.c	/^  dw_loc_descr_ref expr;$/;"	m	struct:dw_loc_list_struct	file:
expr	function.h	/^  struct expr_status *expr;$/;"	m	struct:function	typeref:struct:function::expr_status
expr	gcse.c	/^  rtx expr;$/;"	m	struct:expr	file:
expr	gcse.c	/^  struct expr * expr;		\/* Gcse expression reference for LM.  *\/$/;"	m	struct:ls_expr	typeref:struct:ls_expr::expr	file:
expr	gcse.c	/^struct expr$/;"	s	file:
expr	rtl.h	/^  tree expr;			\/* expr corresponding to MEM.  *\/$/;"	m	struct:__anon8
expr_align	tree.c	/^expr_align (t)$/;"	f
expr_equiv_p	gcse.c	/^expr_equiv_p (x, y)$/;"	f	file:
expr_hash_table	gcse.c	/^static struct expr **expr_hash_table;$/;"	v	typeref:struct:expr	file:
expr_hash_table_size	gcse.c	/^static unsigned int expr_hash_table_size;$/;"	v	file:
expr_killed_p	gcse.c	/^expr_killed_p (x, bb)$/;"	f	file:
expr_reaches_here_p	gcse.c	/^expr_reaches_here_p (occr, expr, bb, check_self_loop)$/;"	f	file:
expr_reaches_here_p_work	gcse.c	/^expr_reaches_here_p_work (occr, expr, bb, check_self_loop, visited)$/;"	f	file:
expr_size	explow.c	/^expr_size (exp)$/;"	f
expr_status	function.h	/^struct expr_status$/;"	s
expr_stmts_for_value	stmt.c	391;"	d	file:
express_from	loop.c	/^express_from (g1, g2)$/;"	f
express_from_1	loop.c	/^express_from_1 (a, b, mult)$/;"	f	file:
expression	dependence.c	/^  tree expression;$/;"	m	struct:def_use	file:
expunge_block	cfg.c	/^expunge_block (b)$/;"	f
expunge_block_nocompact	cfg.c	/^expunge_block_nocompact (b)$/;"	f
ext_dependent	loop.h	/^  rtx ext_dependent;		\/* If nonzero, is a sign or zero extension$/;"	m	struct:induction
ext_register_operand	i386.c	/^ext_register_operand (op, mode)$/;"	f
extend_value_for_giv	loop.c	/^extend_value_for_giv (v, value)$/;"	f
extenddftf2_libfunc	libfuncs.h	158;"	d
extenddfxf2_libfunc	libfuncs.h	157;"	d
extended_count	combine.c	/^extended_count (x, mode, unsignedp)$/;"	f
extended_numbers	cppinit.c	/^  char extended_numbers;$/;"	m	struct:lang_flags	file:
extended_numbers	cpplib.h	/^  unsigned char extended_numbers;$/;"	m	struct:cpp_options
extends	alloca.c	/^    long extends;		\/* Number of block extensions.  *\/$/;"	m	struct:stk_stat	file:
extendsfdf2_libfunc	libfuncs.h	154;"	d
extendsftf2_libfunc	libfuncs.h	156;"	d
extendsfxf2_libfunc	libfuncs.h	155;"	d
extendtab	optabs.c	/^enum insn_code extendtab[MAX_MACHINE_MODE][MAX_MACHINE_MODE][2];$/;"	v	typeref:enum:insn_code
extension	toplev.c	/^  const char *const extension;$/;"	m	struct:dump_file_info	file:
extern_inline	c-decl.c	/^  int extern_inline;$/;"	m	struct:c_language_function	file:
external	dwarf2out.c	/^	  int external;$/;"	m	struct:dw_val_struct::__anon50::__anon51	file:
external_flag	tree.h	/^  unsigned external_flag : 1;$/;"	m	struct:tree_decl
extra_arg	obstack.h	/^  char *extra_arg;		\/* first arg for chunk alloc\/dealloc funcs *\/$/;"	m	struct:obstack
extra_arg	obstack.h	/^  void *extra_arg;		\/* first arg for chunk alloc\/dealloc funcs *\/$/;"	m	struct:obstack
extra_order_size_table	ggc-page.c	/^static const size_t extra_order_size_table[] = {$/;"	v	file:
extra_warnings	toplev.c	/^int extra_warnings = 0;$/;"	v
extract_bit_field	expmed.c	/^extract_bit_field (str_rtx, bitsize, bitnum, unsignedp,$/;"	f
extract_bitlst	sched-rgn.c	/^extract_bitlst (set, bl)$/;"	f	file:
extract_constrain_insn_cached	recog.c	/^extract_constrain_insn_cached (insn)$/;"	f
extract_fixed_bit_field	expmed.c	/^extract_fixed_bit_field (tmode, op0, offset, bitsize, bitpos,$/;"	f	file:
extract_insn	recog.c	/^extract_insn (insn)$/;"	f
extract_insn_cached	recog.c	/^extract_insn_cached (insn)$/;"	f
extract_interface_info	c-decl.c	/^extract_interface_info ()$/;"	f
extract_left_shift	combine.c	/^extract_left_shift (x, count)$/;"	f	file:
extract_muldiv	fold-const.c	/^extract_muldiv (t, c, code, wide_type)$/;"	f	file:
extract_split_bit_field	expmed.c	/^extract_split_bit_field (op0, bitsize, bitpos, unsignedp)$/;"	f	file:
extraction_pattern	expr.h	/^enum extraction_pattern { EP_insv, EP_extv, EP_extzv };$/;"	g
ezero	real.c	/^const UEMUSHORT ezero[NE] =$/;"	v
f	cpphash.h	/^     FILE *f;$/;"	v
f	tree.h	/^    enum built_in_function f;$/;"	m	union:tree_decl::__anon18	typeref:enum:tree_decl::__anon18::built_in_function
f	tree.h	/^    struct function *f;$/;"	m	union:tree_decl::__anon20	typeref:struct:tree_decl::__anon20::function
f_options	toplev.c	/^static const lang_independent_options f_options[] =$/;"	v	file:
factor	unroll.c	/^static struct _factor { const int factor; int count; }$/;"	m	struct:_factor	file:
factors	unroll.c	/^factors[NUM_FACTORS] = { {2, 0}, {3, 0}, {5, 0}, {7, 0}};$/;"	v	typeref:struct:_factor	file:
failed_reload	reload1.c	/^failed_reload (insn, r)$/;"	f	file:
failure	reload1.c	/^static int failure;$/;"	v	file:
fake_containing_scope	dwarfout.c	/^static tree fake_containing_scope;$/;"	v	file:
false	system.h	550;"	d
false	system.h	562;"	d
fancy_abort	diagnostic.c	/^fancy_abort (file, line, function)$/;"	f
fatal_error	diagnostic.c	/^fatal_error VPARAMS ((const char *msgid, ...))$/;"	f
fatal_insn	toplev.h	50;"	d
fatal_insn_not_found	toplev.h	52;"	d
fatal_io_error	diagnostic.c	/^fatal_io_error VPARAMS ((const char *msgid, ...))$/;"	f
fc_args	fold-const.c	/^struct fc_args$/;"	s	file:
fcmov_comparison_operator	i386.c	/^fcmov_comparison_operator (op, mode)$/;"	f
fd	cppfiles.c	/^  int fd;			\/* fd open on file (short term storage only) *\/$/;"	m	struct:include_file	file:
fde_table	dwarf2out.c	/^static dw_fde_ref fde_table;$/;"	v	file:
fde_table_allocated	dwarf2out.c	/^static unsigned fde_table_allocated;$/;"	v	file:
fde_table_in_use	dwarf2out.c	/^static unsigned fde_table_in_use;$/;"	v	file:
fe_current_bb	ssa.c	/^static int fe_current_bb;$/;"	v	file:
fe_evals	ssa.c	/^static sbitmap *fe_evals;$/;"	v	file:
fed_by_spec_load	sched-int.h	/^  unsigned int fed_by_spec_load : 1;$/;"	m	struct:haifa_insn_data
ffb	vmsdbgout.c	/^  short ffb;$/;"	m	struct:dst_file_info_struct	file:
fflag	c-lex.c	/^  int fflag;$/;"	m	struct:pf_args	file:
ffs_optab	optabs.h	196;"	d
fibheap	fibheap.h	/^typedef struct fibheap$/;"	s
fibheap_cascading_cut	fibheap.c	/^fibheap_cascading_cut (heap, y)$/;"	f	file:
fibheap_comp_data	fibheap.c	/^fibheap_comp_data (heap, key, data, b)$/;"	f	file:
fibheap_compare	fibheap.c	/^fibheap_compare (heap, a, b)$/;"	f	file:
fibheap_consolidate	fibheap.c	/^fibheap_consolidate (heap)$/;"	f	file:
fibheap_cut	fibheap.c	/^fibheap_cut (heap, node, parent)$/;"	f	file:
fibheap_delete	fibheap.c	/^fibheap_delete (heap)$/;"	f
fibheap_delete_node	fibheap.c	/^fibheap_delete_node (heap, node)$/;"	f
fibheap_empty	fibheap.c	/^fibheap_empty (heap)$/;"	f
fibheap_extr_min_node	fibheap.c	/^fibheap_extr_min_node (heap)$/;"	f	file:
fibheap_extract_min	fibheap.c	/^fibheap_extract_min (heap)$/;"	f
fibheap_ins_root	fibheap.c	/^fibheap_ins_root (heap, node)$/;"	f	file:
fibheap_insert	fibheap.c	/^fibheap_insert (heap, key, data)$/;"	f
fibheap_link	fibheap.c	/^fibheap_link (heap, node, parent)$/;"	f	file:
fibheap_min	fibheap.c	/^fibheap_min (heap)$/;"	f
fibheap_min_key	fibheap.c	/^fibheap_min_key (heap)$/;"	f
fibheap_new	fibheap.c	/^fibheap_new ()$/;"	f
fibheap_rem_root	fibheap.c	/^fibheap_rem_root (heap, node)$/;"	f	file:
fibheap_replace_data	fibheap.c	/^fibheap_replace_data (heap, node, data)$/;"	f
fibheap_replace_key	fibheap.c	/^fibheap_replace_key (heap, node, key)$/;"	f
fibheap_replace_key_data	fibheap.c	/^fibheap_replace_key_data (heap, node, key, data)$/;"	f
fibheap_t	fibheap.h	/^} *fibheap_t;$/;"	t	typeref:struct:fibheap
fibheap_union	fibheap.c	/^fibheap_union (heapa, heapb)$/;"	f
fibheapkey_t	fibheap.h	/^typedef long fibheapkey_t;$/;"	t
fibnode	fibheap.h	/^typedef struct fibnode$/;"	s
fibnode_insert_after	fibheap.c	/^fibnode_insert_after (a, b)$/;"	f	file:
fibnode_insert_before	fibheap.c	50;"	d	file:
fibnode_new	fibheap.c	/^fibnode_new ()$/;"	f	file:
fibnode_remove	fibheap.c	/^fibnode_remove (node)$/;"	f	file:
fibnode_t	fibheap.h	/^} *fibnode_t;$/;"	t	typeref:struct:fibnode
field_byte_offset	dwarf2out.c	/^field_byte_offset (decl)$/;"	f	file:
field_byte_offset	dwarfout.c	/^field_byte_offset (decl)$/;"	f	file:
field_type	dwarf2out.c	/^field_type (decl)$/;"	f	file:
field_type	dwarfout.c	/^field_type (decl)$/;"	f	file:
fields	c-typeck.c	/^  tree fields;$/;"	m	struct:constructor_range_stack	file:
fields	c-typeck.c	/^  tree fields;$/;"	m	struct:constructor_stack	file:
fields_length	tree.c	/^fields_length (type)$/;"	f
file	c-common.c	/^  const char *file;$/;"	m	struct:__anon72	file:
file	diagnostic.h	/^  const char *file;$/;"	m	struct:diagnostic_context
file	gcov-io.h	/^     FILE *file;$/;"	v
file_and_line_for_asm	rtl-error.c	/^file_and_line_for_asm (insn, pfile, pline)$/;"	f	file:
file_change	cpplib.h	/^  void (*file_change) PARAMS ((cpp_reader *, const struct line_map *));$/;"	m	struct:cpp_callbacks
file_idx	dwarf2out.c	/^  int file_idx;		\/* Index in input file table.  *\/$/;"	m	struct:file_info	file:
file_info	dwarf2out.c	/^struct file_info$/;"	s	file:
file_info_cmp	dwarf2out.c	/^file_info_cmp (p1, p2)$/;"	f	file:
file_info_table	vmsdbgout.c	/^static dst_file_info_ref file_info_table;$/;"	v	file:
file_info_table_allocated	vmsdbgout.c	/^static unsigned int file_info_table_allocated;$/;"	v	file:
file_info_table_in_use	vmsdbgout.c	/^static unsigned int file_info_table_in_use;$/;"	v	file:
file_info_tree	c-lex.c	/^static splay_tree file_info_tree;$/;"	v	file:
file_name	vmsdbgout.c	/^  char *file_name;$/;"	m	struct:dst_file_info_struct	file:
file_name_as_prefix	diagnostic.c	/^file_name_as_prefix (f)$/;"	f
file_name_map	cppfiles.c	/^struct file_name_map$/;"	s	file:
file_name_map_list	cppfiles.c	/^struct file_name_map_list$/;"	s	file:
file_number	dbxout.c	/^  int file_number;$/;"	m	struct:dbx_file	file:
file_number	dbxout.c	/^  int file_number;$/;"	m	struct:typeinfo	file:
file_stack	input.h	/^struct file_stack$/;"	s
file_table	dwarf2out.c	/^static struct file_table file_table;$/;"	v	typeref:struct:file_table	file:
file_table	dwarf2out.c	/^struct file_table$/;"	s	file:
file_type_class	typeclass.h	/^  array_type_class, string_type_class, set_type_class, file_type_class,$/;"	e	enum:type_class
filename	c-parse.c	/^	const char *filename; int lineno; } YYSTYPE;$/;"	m	union:__anon52	file:
filename	toplev.c	/^static char *filename;$/;"	v	file:
filename	tree.h	/^  const char *filename;$/;"	m	struct:tree_decl
filename_entry	dwarfout.c	/^struct filename_entry {$/;"	s	file:
filename_entry	dwarfout.c	/^typedef struct filename_entry filename_entry;$/;"	t	typeref:struct:filename_entry	file:
filename_table	dwarfout.c	/^static filename_entry *filename_table;$/;"	v	file:
fill_eager_delay_slots	reorg.c	/^fill_eager_delay_slots ()$/;"	f	file:
fill_simple_delay_slots	reorg.c	/^fill_simple_delay_slots (non_jumps_p)$/;"	f	file:
fill_slots_from_thread	reorg.c	/^fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,$/;"	f	file:
fillbuf	md5.c	/^static const unsigned char fillbuf[64] = { 0x80, 0 \/* , 0, 0, ...  *\/ };$/;"	v	file:
filter	except.c	/^      int filter;$/;"	m	struct:eh_region::__anon21::__anon24	file:
filter	except.c	/^  int filter;$/;"	m	struct:action_record	file:
filter	except.c	/^  int filter;$/;"	m	struct:ttypes_filter	file:
filter	except.c	/^  rtx filter;$/;"	m	struct:eh_status	file:
filter_list	except.c	/^      tree filter_list;$/;"	m	struct:eh_region::__anon21::__anon23	file:
final	final.c	/^final (first, file, optimize, prescan)$/;"	f
final_addr_vec_align	final.c	/^final_addr_vec_align (addr_vec)$/;"	f	file:
final_biv_value	unroll.c	/^final_biv_value (loop, bl)$/;"	f
final_end_function	final.c	/^final_end_function ()$/;"	f
final_equiv_value	loop.h	/^  rtx final_equiv_value;$/;"	m	struct:loop_info
final_forward_branch_p	final.c	/^final_forward_branch_p (insn)$/;"	f
final_giv_value	unroll.c	/^final_giv_value (loop, v)$/;"	f
final_reg_note_copy	unroll.c	/^final_reg_note_copy (notesp, map)$/;"	f	file:
final_scan_insn	final.c	/^final_scan_insn (insn, file, optimize, prescan, nopeepholes)$/;"	f
final_sequence	final.c	/^rtx final_sequence;$/;"	v
final_start_function	final.c	/^final_start_function (first, file, optimize)$/;"	f
final_value	loop.h	/^  rtx final_value;		\/* If the giv is used outside the loop, and its$/;"	m	struct:induction
final_value	loop.h	/^  rtx final_value;		\/* Value of reg at loop end, if known.  *\/$/;"	m	struct:iv_class
final_value	loop.h	/^  rtx final_value;$/;"	m	struct:loop_info
finalize	toplev.c	/^finalize ()$/;"	f	file:
finalize_must_preallocate	calls.c	/^finalize_must_preallocate (must_preallocate, num_actuals, args, args_size)$/;"	f	file:
finalize_record_size	stor-layout.c	/^finalize_record_size (rli)$/;"	f	file:
finalize_type_size	stor-layout.c	/^finalize_type_size (type)$/;"	f	file:
finalizing	dwarfout.c	/^static int finalizing = 0;$/;"	v	file:
find_all_control_dependences	ssa-dce.c	/^find_all_control_dependences (el, pdom, cdbte)$/;"	f	file:
find_and_verify_loops	loop.c	/^find_and_verify_loops (f, loops)$/;"	f	file:
find_answer	cpplib.c	/^find_answer (node, candidate)$/;"	f	file:
find_auto_inc	flow.c	/^find_auto_inc (pbi, x, insn)$/;"	f	file:
find_avail_set	gcse.c	/^find_avail_set (regno, insn)$/;"	f	file:
find_base_decl	alias.c	/^find_base_decl (t)$/;"	f	file:
find_base_term	alias.c	/^find_base_term (x)$/;"	f	file:
find_base_value	alias.c	/^find_base_value (src)$/;"	f	file:
find_basic_block	resource.c	/^find_basic_block (insn, search_limit)$/;"	f	file:
find_basic_blocks	cfgbuild.c	/^find_basic_blocks (f, nregs, file)$/;"	f
find_basic_blocks_1	cfgbuild.c	/^find_basic_blocks_1 (f)$/;"	f	file:
find_bb_boundaries	cfgbuild.c	/^find_bb_boundaries (bb)$/;"	f	file:
find_best_addr	cse.c	/^find_best_addr (insn, loc, mode)$/;"	f	file:
find_block	integrate.c	/^find_block (v1, v2)$/;"	f	file:
find_block_label	ssa-dce.c	/^find_block_label (bb)$/;"	f	file:
find_common_reg_term	unroll.c	/^find_common_reg_term (op0, op1)$/;"	f	file:
find_comparison_args	cse.c	/^find_comparison_args (code, parg1, parg2, pmode1, pmode2)$/;"	f	file:
find_cond_trap	ifcvt.c	/^find_cond_trap (test_bb, then_edge, else_edge)$/;"	f	file:
find_conditional_protection	sched-rgn.c	/^find_conditional_protection (insn, load_insn_bb)$/;"	f	file:
find_constant_term_loc	recog.c	/^find_constant_term_loc (p)$/;"	f
find_control_dependence	ssa-dce.c	/^find_control_dependence (el, edge_index, pdom, cdbte)$/;"	f	file:
find_dead_or_set_registers	resource.c	/^find_dead_or_set_registers (target, res, jump_target, jump_count, set, needed)$/;"	f	file:
find_dummy_reload	reload.c	/^find_dummy_reload (real_in, real_out, inloc, outloc,$/;"	f	file:
find_edge_index	cfganal.c	/^find_edge_index (edge_list, pred, succ)$/;"	f
find_empty_slot_for_expand	hashtab.c	/^find_empty_slot_for_expand (htab, hash)$/;"	f	file:
find_end_label	reorg.c	/^find_end_label ()$/;"	f	file:
find_equiv_reg	reload.c	/^find_equiv_reg (goal, insn, class, other, reload_reg_p, goalreg, mode)$/;"	f
find_evaluations	ssa.c	/^find_evaluations (evals, nregs)$/;"	f	file:
find_evaluations_1	ssa.c	/^find_evaluations_1 (dest, set, data)$/;"	f	file:
find_exception_handler_labels	except.c	/^find_exception_handler_labels ()$/;"	f
find_first_parameter_load	rtlanal.c	/^find_first_parameter_load (call_insn, boundary)$/;"	f
find_fixup_replacement	function.c	/^find_fixup_replacement (replacements, x)$/;"	f	file:
find_free_reg	local-alloc.c	/^find_free_reg (class, mode, qtyno, accept_call_clobbered, just_try_suggested,$/;"	f	file:
find_function_data	function.c	/^find_function_data (decl)$/;"	f
find_gcd	dependence.c	/^find_gcd (x, y)$/;"	f	file:
find_group	profile.c	/^find_group (bb)$/;"	f	file:
find_if_block	ifcvt.c	/^find_if_block (test_bb, then_edge, else_edge)$/;"	f	file:
find_if_case_1	ifcvt.c	/^find_if_case_1 (test_bb, then_edge, else_edge)$/;"	f	file:
find_if_case_2	ifcvt.c	/^find_if_case_2 (test_bb, then_edge, else_edge)$/;"	f	file:
find_if_header	ifcvt.c	/^find_if_header (test_bb)$/;"	f	file:
find_inc_amount	reload.c	/^find_inc_amount (x, inced)$/;"	f	file:
find_include_file	cppfiles.c	/^find_include_file (pfile, header, type)$/;"	f	file:
find_induction_variable	dependence.c	/^find_induction_variable (init_node, cond_node, incr_node, loop_def)$/;"	f	file:
find_inherently_necessary	ssa-dce.c	/^find_inherently_necessary (x)$/;"	f	file:
find_init_member	c-typeck.c	/^find_init_member (field)$/;"	f	file:
find_insn_list	sched-deps.c	/^find_insn_list (insn, list)$/;"	f
find_insn_reg_weight	haifa-sched.c	/^find_insn_reg_weight (b)$/;"	f	file:
find_label_refs	cfgbuild.c	/^find_label_refs (f, lvl)$/;"	f	file:
find_last_value	rtlanal.c	/^find_last_value (x, pinsn, valid_to, allow_hwreg)$/;"	f
find_line_note	emit-rtl.c	/^find_line_note (insn)$/;"	f	file:
find_loads	gcse.c	/^find_loads (x, store_pattern)$/;"	f	file:
find_many_sub_basic_blocks	cfgbuild.c	/^find_many_sub_basic_blocks (blocks)$/;"	f
find_matches	regmove.c	/^find_matches (insn, matchp)$/;"	f	file:
find_mem_givs	loop.c	/^find_mem_givs (loop, x, insn, not_every_iteration, maybe_multiple)$/;"	f	file:
find_memory	ifcvt.c	/^find_memory (px, data)$/;"	f	file:
find_moveable_store	gcse.c	/^find_moveable_store (insn)$/;"	f	file:
find_next_ref	explow.c	/^find_next_ref (reg, insn)$/;"	f
find_oldest_value_reg	regrename.c	/^find_oldest_value_reg (class, reg, vd)$/;"	f	file:
find_or_create_entry	cppfiles.c	/^find_or_create_entry (pfile, fname)$/;"	f	file:
find_pdom	ssa-dce.c	/^find_pdom (pdom, block)$/;"	f	file:
find_placeholder	expr.c	/^find_placeholder (exp, plist)$/;"	f
find_pool_constant	varasm.c	/^find_pool_constant (f, addr)$/;"	f	file:
find_reg	global.c	/^find_reg (num, losers, alt_regs_p, accept_call_clobbered, retrying)$/;"	f	file:
find_reg	reload1.c	/^find_reg (chain, order)$/;"	f	file:
find_reg_equal_equiv_note	rtlanal.c	/^find_reg_equal_equiv_note (insn)$/;"	f
find_reg_fusage	rtlanal.c	/^find_reg_fusage (insn, code, datum)$/;"	f
find_reg_note	rtlanal.c	/^find_reg_note (insn, kind, datum)$/;"	f
find_regno_fusage	rtlanal.c	/^find_regno_fusage (insn, code, regno)$/;"	f
find_regno_note	rtlanal.c	/^find_regno_note (insn, kind, regno)$/;"	f
find_regno_partial	flow.c	/^find_regno_partial (ptr, data)$/;"	f	file:
find_regno_partial_param	flow.c	/^} find_regno_partial_param;$/;"	t	typeref:struct:__anon45	file:
find_reload_regs	reload1.c	/^find_reload_regs (chain)$/;"	f	file:
find_reloads	reload.c	/^find_reloads (insn, replace, ind_levels, live_known, reload_reg_p)$/;"	f
find_reloads_address	reload.c	/^find_reloads_address (mode, memrefloc, ad, loc, opnum, type, ind_levels, insn)$/;"	f	file:
find_reloads_address_1	reload.c	/^find_reloads_address_1 (mode, x, context, loc, opnum, type, ind_levels, insn)$/;"	f	file:
find_reloads_address_part	reload.c	/^find_reloads_address_part (x, loc, class, mode, opnum, type, ind_levels)$/;"	f	file:
find_reloads_subreg_address	reload.c	/^find_reloads_subreg_address (x, force_replace, opnum, type,$/;"	f	file:
find_reloads_toplev	reload.c	/^find_reloads_toplev (x, opnum, type, ind_levels, is_set_dest, insn,$/;"	f	file:
find_replacement	reload.c	/^find_replacement (loc)$/;"	f
find_reusable_reload	reload.c	/^find_reusable_reload (p_in, out, class, type, opnum, dont_share)$/;"	f	file:
find_rgns	sched-rgn.c	/^find_rgns (edge_list, dom)$/;"	f	file:
find_rtx_in_ldst	gcse.c	/^find_rtx_in_ldst (x)$/;"	f	file:
find_single_block_region	sched-rgn.c	/^find_single_block_region ()$/;"	f	file:
find_single_use	recog.c	/^find_single_use (dest, insn, ploc)$/;"	f
find_single_use_1	recog.c	/^find_single_use_1 (dest, loc)$/;"	f	file:
find_single_use_in_loop	loop.c	/^find_single_use_in_loop (regs, insn, x)$/;"	f	file:
find_spanning_tree	profile.c	/^find_spanning_tree (el)$/;"	f	file:
find_split_point	combine.c	/^find_split_point (loc, insn)$/;"	f	file:
find_splittable_givs	unroll.c	/^find_splittable_givs (loop, bl, unroll_type, increment, unroll_number)$/;"	f	file:
find_splittable_regs	unroll.c	/^find_splittable_regs (loop, unroll_type, unroll_number)$/;"	f	file:
find_stack_direction	alloca.c	/^find_stack_direction ()$/;"	f	file:
find_sub_basic_blocks	cfgbuild.c	/^find_sub_basic_blocks (bb)$/;"	f
find_symbolic_term	alias.c	/^find_symbolic_term (x)$/;"	f	file:
find_temp_slot_from_address	function.c	/^find_temp_slot_from_address (x)$/;"	f	file:
find_unreachable_blocks	cfganal.c	/^find_unreachable_blocks ()$/;"	f
find_use_as_address	flow.c	/^find_use_as_address (x, reg, plusconst)$/;"	f
find_used_regs	gcse.c	/^find_used_regs (xptr, data)$/;"	f	file:
find_valid_class	reload.c	/^find_valid_class (m1, n, dest_regno)$/;"	f	file:
finish	debug.h	/^  void (* finish) PARAMS ((const char *main_filename));$/;"	m	struct:gcc_debug_hooks
finish	langhooks.h	/^  void (*finish) PARAMS ((void));$/;"	m	struct:lang_hooks
finish_cdtor	c-objc-common.c	/^finish_cdtor (body)$/;"	f	file:
finish_decl	c-decl.c	/^finish_decl (decl, init, asmspec_tree)$/;"	f
finish_deps_global	sched-deps.c	/^finish_deps_global ()$/;"	f
finish_dollar_format_checking	c-format.c	/^finish_dollar_format_checking (status, res, pointer_gap_ok)$/;"	f	file:
finish_eh_generation	except.c	/^finish_eh_generation ()$/;"	f
finish_enum	c-decl.c	/^finish_enum (enumtype, values, attributes)$/;"	f
finish_expr_for_function	expr.c	/^finish_expr_for_function ()$/;"	f
finish_file	c-lang.c	/^finish_file ()$/;"	f
finish_fname_decls	c-common.c	/^finish_fname_decls ()$/;"	f
finish_function	c-decl.c	/^finish_function (nested, can_defer_p)$/;"	f
finish_graph_dump_file	graph.c	/^finish_graph_dump_file (base, suffix)$/;"	f
finish_incomplete_decl	c-decl.c	/^finish_incomplete_decl (decl)$/;"	f
finish_init	c-typeck.c	/^finish_init ()$/;"	f
finish_label_address_expr	c-common.c	/^finish_label_address_expr (label)$/;"	f
finish_record_layout	stor-layout.c	/^finish_record_layout (rli)$/;"	f
finish_spills	reload1.c	/^finish_spills (global)$/;"	f	file:
finish_stmt_tree	c-semantics.c	/^finish_stmt_tree (t)$/;"	f
finish_struct	c-decl.c	/^finish_struct (t, fieldlist, attributes)$/;"	f
finish_vector_type	tree.c	/^finish_vector_type (t)$/;"	f	file:
first	basic-block.h	/^  basic_block first;$/;"	m	struct:loop
first	bitmap.h	/^  bitmap_element *first;	\/* First element in linked list.  *\/$/;"	m	struct:bitmap_head_def
first	cpphash.h	/^  union utoken first;$/;"	m	struct:cpp_context	typeref:union:cpp_context::utoken
first	cpplib.c	/^  cpp_token first[1];$/;"	m	struct:answer	file:
first	cppmacro.c	/^  const cpp_token **first;	\/* First token in unexpanded argument.  *\/$/;"	m	struct:macro_arg	file:
first	function.h	/^  rtx first, last;$/;"	m	struct:sequence_stack
first	haifa-sched.c	/^  int first;$/;"	m	struct:ready_list	file:
first_active_insn	ifcvt.c	/^first_active_insn (bb)$/;"	f	file:
first_arg_num	c-format.c	/^  unsigned HOST_WIDE_INT first_arg_num;	\/* number of first arg (zero for varargs) *\/$/;"	m	struct:function_format_info	file:
first_block_aux_obj	cfg.c	/^static void *first_block_aux_obj = 0;$/;"	v	file:
first_break	xmalloc.c	/^static char *first_break = NULL;$/;"	v	file:
first_deleted_block	cfg.c	/^static basic_block first_deleted_block;$/;"	v	file:
first_deleted_edge	cfg.c	/^edge first_deleted_edge;$/;"	v
first_edge_aux_obj	cfg.c	/^static void *first_edge_aux_obj = 0;$/;"	v	file:
first_global_object_name	varasm.c	/^const char *first_global_object_name;$/;"	v
first_inlined_fn	tree-inline.c	/^  unsigned first_inlined_fn;$/;"	m	struct:inline_data	file:
first_insn	emit-rtl.c	171;"	d	file:
first_insn	stmt.c	/^	  rtx first_insn;$/;"	m	struct:nesting::__anon67::__anon70	file:
first_insn_after_basic_block_note	flow.c	/^first_insn_after_basic_block_note (block)$/;"	f
first_label_num	emit-rtl.c	176;"	d	file:
first_loop_store_insn	loop.h	/^  rtx first_loop_store_insn;$/;"	m	struct:loop_info
first_ls_expr	gcse.c	/^first_ls_expr ()$/;"	f	file:
first_member	sched-rgn.c	/^  int *first_member;		\/* Pointer to the list start in bitlst_table.  *\/$/;"	m	struct:__anon30	file:
first_pool	varasm.c	105;"	d	file:
first_reg	cse.c	/^  unsigned int first_reg, last_reg;$/;"	m	struct:qty_table_elem	file:
first_reg	local-alloc.c	/^  int first_reg;$/;"	m	struct:qty	file:
first_rtl_op	tree.c	/^first_rtl_op (code)$/;"	f
first_same_value	cse.c	/^  struct table_elt *first_same_value;$/;"	m	struct:table_elt	typeref:struct:table_elt::table_elt	file:
first_set	gcse.c	/^  int first_set;$/;"	m	struct:reg_avail_info	file:
first_uid	regs.h	/^  int first_uid;		\/* UID of first insn to use (REG n) *\/$/;"	m	struct:reg_info_def
fix_lexical_addr	function.c	/^fix_lexical_addr (addr, var)$/;"	f
fix_reg_dead_note	reorg.c	/^fix_reg_dead_note (start_insn, stop_insn)$/;"	f	file:
fix_register	regclass.c	/^fix_register (name, fixed, call_used)$/;"	f
fix_sched_param	haifa-sched.c	/^fix_sched_param (param, val)$/;"	f
fixdfdi_libfunc	libfuncs.h	244;"	d
fixdfsi_libfunc	libfuncs.h	243;"	d
fixdfti_libfunc	libfuncs.h	245;"	d
fixed_reg_set	regclass.c	/^HARD_REG_SET fixed_reg_set;$/;"	v
fixed_regs	regclass.c	/^char fixed_regs[FIRST_PSEUDO_REGISTER];$/;"	v
fixed_scalar_and_varying_struct_p	alias.c	/^fixed_scalar_and_varying_struct_p (mem1, mem2, mem1_addr, mem2_addr, varies_p)$/;"	f	file:
fixsfdi_libfunc	libfuncs.h	240;"	d
fixsfsi_libfunc	libfuncs.h	239;"	d
fixsfti_libfunc	libfuncs.h	241;"	d
fixtab	optabs.c	/^enum insn_code fixtab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];$/;"	v	typeref:enum:insn_code
fixtfdi_libfunc	libfuncs.h	252;"	d
fixtfsi_libfunc	libfuncs.h	251;"	d
fixtfti_libfunc	libfuncs.h	253;"	d
fixtrunctab	optabs.c	/^enum insn_code fixtrunctab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];$/;"	v	typeref:enum:insn_code
fixunsdfdi_libfunc	libfuncs.h	260;"	d
fixunsdfsi_libfunc	libfuncs.h	259;"	d
fixunsdfti_libfunc	libfuncs.h	261;"	d
fixunssfdi_libfunc	libfuncs.h	256;"	d
fixunssfsi_libfunc	libfuncs.h	255;"	d
fixunssfti_libfunc	libfuncs.h	257;"	d
fixunstfdi_libfunc	libfuncs.h	268;"	d
fixunstfsi_libfunc	libfuncs.h	267;"	d
fixunstfti_libfunc	libfuncs.h	269;"	d
fixunsxfdi_libfunc	libfuncs.h	264;"	d
fixunsxfsi_libfunc	libfuncs.h	263;"	d
fixunsxfti_libfunc	libfuncs.h	265;"	d
fixup	except.c	/^    } fixup;$/;"	m	union:eh_region::__anon21	typeref:struct:eh_region::__anon21::__anon27	file:
fixup_abnormal_edges	reload1.c	/^fixup_abnormal_edges ()$/;"	f
fixup_fallthru_exit_predecessor	cfglayout.c	/^fixup_fallthru_exit_predecessor ()$/;"	f	file:
fixup_gotos	stmt.c	/^fixup_gotos (thisblock, stack_level, cleanup_list, first_insn, dont_jump_in)$/;"	f	file:
fixup_match_1	regmove.c	/^fixup_match_1 (insn, set, src, src_subreg, dst, backward, operand_number,$/;"	f	file:
fixup_match_2	regmove.c	/^fixup_match_2 (insn, dst, src, offset, regmove_dump_file)$/;"	f	file:
fixup_memory_subreg	function.c	/^fixup_memory_subreg (x, insn, promoted_mode, uncritical)$/;"	f	file:
fixup_reorder_chain	cfglayout.c	/^fixup_reorder_chain ()$/;"	f	file:
fixup_replacement	function.c	/^struct fixup_replacement$/;"	s	file:
fixup_signed_type	stor-layout.c	/^fixup_signed_type (type)$/;"	f
fixup_stack_1	function.c	/^fixup_stack_1 (x, insn)$/;"	f	file:
fixup_unsigned_type	stor-layout.c	/^fixup_unsigned_type (type)$/;"	f
fixup_var_refs	function.c	/^fixup_var_refs (var, promoted_mode, unsignedp, may_share, ht)$/;"	f	file:
fixup_var_refs_1	function.c	/^fixup_var_refs_1 (var, promoted_mode, loc, insn, replacements, no_share)$/;"	f	file:
fixup_var_refs_insn	function.c	/^fixup_var_refs_insn (insn, var, promoted_mode, unsignedp, toplevel, no_share)$/;"	f	file:
fixup_var_refs_insns	function.c	/^fixup_var_refs_insns (insn, var, promoted_mode, unsignedp, toplevel, may_share)$/;"	f	file:
fixup_var_refs_insns_with_hash	function.c	/^fixup_var_refs_insns_with_hash (ht, var, promoted_mode, unsignedp, may_share)$/;"	f	file:
fixup_var_refs_queue	function.h	/^  struct var_refs_queue *fixup_var_refs_queue;$/;"	m	struct:function	typeref:struct:function::var_refs_queue
fixxfdi_libfunc	libfuncs.h	248;"	d
fixxfsi_libfunc	libfuncs.h	247;"	d
fixxfti_libfunc	libfuncs.h	249;"	d
flag	cse.c	/^  char flag;$/;"	m	struct:table_elt	file:
flag	i386.c	/^  const unsigned int flag;$/;"	m	struct:builtin_description	file:
flag_allow_single_precision	c-decl.c	/^int flag_allow_single_precision = 0;$/;"	v
flag_argument_noalias	toplev.c	/^int flag_argument_noalias = 0;$/;"	v
flag_asynchronous_unwind_tables	toplev.c	/^int flag_asynchronous_unwind_tables = 0;$/;"	v
flag_bounded_pointers	toplev.c	/^int flag_bounded_pointers = 0;$/;"	v
flag_bounds_check	toplev.c	/^int flag_bounds_check = 0;$/;"	v
flag_branch_on_count_reg	toplev.c	/^int flag_branch_on_count_reg = 1;$/;"	v
flag_branch_probabilities	toplev.c	/^int flag_branch_probabilities = 0;$/;"	v
flag_caller_saves	toplev.c	/^int flag_caller_saves = 0;$/;"	v
flag_caller_saves	toplev.c	/^int flag_caller_saves = 1;$/;"	v
flag_char	c-format.c	/^  const int flag_char;$/;"	m	struct:__anon41	file:
flag_char1	c-format.c	/^  const int flag_char1;$/;"	m	struct:__anon42	file:
flag_char2	c-format.c	/^  const int flag_char2;$/;"	m	struct:__anon42	file:
flag_chars	c-format.c	/^  const char *const flag_chars;$/;"	m	struct:__anon40	file:
flag_chars	c-format.c	/^  const char *const flag_chars;$/;"	m	struct:__anon43	file:
flag_complex_divide_method	toplev.c	/^int flag_complex_divide_method = 0;$/;"	v
flag_cond_mismatch	c-decl.c	/^int flag_cond_mismatch;$/;"	v
flag_const_strings	c-decl.c	/^int flag_const_strings;$/;"	v
flag_cprop_registers	toplev.c	/^int flag_cprop_registers = 0;$/;"	v
flag_cse_follow_jumps	toplev.c	/^int flag_cse_follow_jumps;$/;"	v
flag_cse_skip_blocks	toplev.c	/^int flag_cse_skip_blocks;$/;"	v
flag_data_sections	toplev.c	/^int flag_data_sections = 0;$/;"	v
flag_debug_asm	toplev.c	/^int flag_debug_asm = 0;$/;"	v
flag_defer_pop	toplev.c	/^int flag_defer_pop = 0;$/;"	v
flag_delayed_branch	toplev.c	/^int flag_delayed_branch;$/;"	v
flag_delete_null_pointer_checks	toplev.c	/^static int flag_delete_null_pointer_checks;$/;"	v	file:
flag_detailed_statistics	toplev.c	/^int flag_detailed_statistics = 0;$/;"	v
flag_dump_rtl_in_asm	toplev.c	/^int flag_dump_rtl_in_asm = 0;$/;"	v
flag_dump_unnumbered	print-rtl.c	/^int flag_dump_unnumbered = 0;$/;"	v
flag_eliminate_dwarf2_dups	toplev.c	/^int flag_eliminate_dwarf2_dups = 0;$/;"	v
flag_errno_math	toplev.c	/^int flag_errno_math = 1;$/;"	v
flag_exceptions	toplev.c	/^int flag_exceptions;$/;"	v
flag_expensive_optimizations	toplev.c	/^int flag_expensive_optimizations;$/;"	v
flag_float_store	toplev.c	/^int flag_float_store = 0;$/;"	v
flag_force_addr	toplev.c	/^int flag_force_addr = 1;	\/* MJP *\/$/;"	v
flag_force_mem	toplev.c	/^int flag_force_mem = 0;$/;"	v
flag_function_sections	toplev.c	/^int flag_function_sections = 0;$/;"	v
flag_gcse	toplev.c	/^static int flag_gcse;$/;"	v	file:
flag_gcse_lm	toplev.c	/^int flag_gcse_lm = 1;$/;"	v
flag_gcse_sm	toplev.c	/^int flag_gcse_sm = 1;$/;"	v
flag_gen_aux_info	toplev.c	/^int flag_gen_aux_info = 0;$/;"	v
flag_gnu_linker	toplev.c	/^int flag_gnu_linker = 0;$/;"	v
flag_gnu_linker	toplev.c	/^int flag_gnu_linker = 1;$/;"	v
flag_guess_branch_prob	toplev.c	/^int flag_guess_branch_prob = 0;$/;"	v
flag_hosted	c-decl.c	/^int flag_hosted = 1;$/;"	v
flag_inhibit_size_directive	toplev.c	/^int flag_inhibit_size_directive = 0;$/;"	v
flag_inline_functions	toplev.c	/^int flag_inline_functions;$/;"	v
flag_inline_trees	tree-inline.c	/^int flag_inline_trees = 0;$/;"	v
flag_instrument_function_entry_exit	toplev.c	/^int flag_instrument_function_entry_exit = 0;$/;"	v
flag_isoc94	c-decl.c	/^int flag_isoc94 = 0;$/;"	v
flag_isoc99	c-decl.c	/^int flag_isoc99 = 0;$/;"	v
flag_keep_inline_functions	toplev.c	/^int flag_keep_inline_functions;$/;"	v
flag_keep_static_consts	toplev.c	/^int flag_keep_static_consts = 1;$/;"	v
flag_leading_underscore	toplev.c	/^int flag_leading_underscore = -1;$/;"	v
flag_merge_constants	toplev.c	/^int flag_merge_constants = 1;$/;"	v
flag_move_all_movables	toplev.c	/^int flag_move_all_movables = 0;$/;"	v
flag_no_asm	c-decl.c	/^int flag_no_asm;$/;"	v
flag_no_builtin	c-common.c	/^int flag_no_builtin;$/;"	v
flag_no_common	toplev.c	/^int flag_no_common;$/;"	v
flag_no_function_cse	toplev.c	/^int flag_no_function_cse = 0;$/;"	v
flag_no_ident	toplev.c	/^int flag_no_ident = 0;$/;"	v
flag_no_inline	toplev.c	/^int flag_no_inline = 2;$/;"	v
flag_no_nonansi_builtin	c-common.c	/^int flag_no_nonansi_builtin;$/;"	v
flag_no_peephole	toplev.c	/^int flag_no_peephole = 0;$/;"	v
flag_non_call_exceptions	except.c	/^int flag_non_call_exceptions;$/;"	v
flag_noniso_default_format_attributes	c-decl.c	/^int flag_noniso_default_format_attributes = 1;$/;"	v
flag_omit_frame_pointer	toplev.c	/^int flag_omit_frame_pointer = 1;	\/* MJP *\/$/;"	v
flag_optimize_sibling_calls	toplev.c	/^int flag_optimize_sibling_calls = 0;$/;"	v
flag_pack_struct	toplev.c	/^int flag_pack_struct = 0;$/;"	v
flag_pcc_struct_return	toplev.c	/^int flag_pcc_struct_return = DEFAULT_PCC_STRUCT_RETURN;$/;"	v
flag_pedantic_errors	toplev.c	/^int flag_pedantic_errors = 0;$/;"	v
flag_peephole2	toplev.c	/^int flag_peephole2 = 0;$/;"	v
flag_pic	toplev.c	/^int flag_pic;$/;"	v
flag_prefetch_loop_arrays	toplev.c	/^int flag_prefetch_loop_arrays;$/;"	v
flag_pretend_float	toplev.c	/^int flag_pretend_float;$/;"	v
flag_print_asm_name	toplev.c	/^int flag_print_asm_name;$/;"	v
flag_really_no_inline	toplev.c	/^int flag_really_no_inline = 2;$/;"	v
flag_reduce_all_givs	toplev.c	/^int flag_reduce_all_givs = 0;$/;"	v
flag_regmove	toplev.c	/^int flag_regmove = 0;$/;"	v
flag_rename_registers	toplev.c	/^int flag_rename_registers = 0;$/;"	v
flag_renumber_insns	toplev.c	/^int flag_renumber_insns = 1;$/;"	v
flag_reorder_blocks	toplev.c	/^int flag_reorder_blocks = 0;$/;"	v
flag_rerun_cse_after_loop	toplev.c	/^static int flag_rerun_cse_after_loop = 1;	\/* MJP *\/$/;"	v	file:
flag_rerun_loop_opt	toplev.c	/^int flag_rerun_loop_opt = 1;			\/* MJP *\/$/;"	v
flag_schedule_insns	toplev.c	/^int flag_schedule_insns = 0;$/;"	v
flag_schedule_insns_after_reload	toplev.c	/^int flag_schedule_insns_after_reload = 0;$/;"	v
flag_schedule_interblock	toplev.c	/^int flag_schedule_interblock = 1;$/;"	v
flag_schedule_speculative	toplev.c	/^int flag_schedule_speculative = 1;$/;"	v
flag_schedule_speculative_load	toplev.c	/^int flag_schedule_speculative_load = 0;$/;"	v
flag_schedule_speculative_load_dangerous	toplev.c	/^int flag_schedule_speculative_load_dangerous = 0;$/;"	v
flag_shared_data	toplev.c	/^int flag_shared_data;$/;"	v
flag_short_double	c-common.c	/^int flag_short_double;$/;"	v
flag_short_enums	toplev.c	/^int flag_short_enums;$/;"	v
flag_short_wchar	c-common.c	/^int flag_short_wchar;$/;"	v
flag_signed_bitfields	c-decl.c	/^int flag_signed_bitfields = 1;$/;"	v
flag_signed_char	toplev.c	/^int flag_signed_char;$/;"	v
flag_simple	print-rtl.c	/^int flag_simple = 0;$/;"	v
flag_single_precision_constant	toplev.c	/^int flag_single_precision_constant;$/;"	v
flag_specs	c-format.c	/^  const format_flag_spec *const flag_specs;$/;"	m	struct:__anon43	file:
flag_ssa	toplev.c	/^int flag_ssa = 1;		\/* MJP *\/$/;"	v
flag_ssa_ccp	toplev.c	/^int flag_ssa_ccp = 0;		\/* MJP *\/$/;"	v
flag_ssa_dce	toplev.c	/^int flag_ssa_dce = 1;		\/* MJP *\/$/;"	v
flag_stack_check	toplev.c	/^int flag_stack_check;$/;"	v
flag_strength_reduce	toplev.c	/^int flag_strength_reduce = 0;$/;"	v
flag_strict_aliasing	toplev.c	/^int flag_strict_aliasing = 0;$/;"	v
flag_syntax_only	toplev.c	/^int flag_syntax_only = 0;$/;"	v
flag_test_coverage	toplev.c	/^int flag_test_coverage = 0;$/;"	v
flag_thread_jumps	toplev.c	/^int flag_thread_jumps;$/;"	v
flag_traditional	c-decl.c	/^int flag_traditional;$/;"	v
flag_trapping_math	toplev.c	/^int flag_trapping_math = 1;$/;"	v
flag_trapv	toplev.c	/^int flag_trapv = 0;$/;"	v
flag_unroll_all_loops	toplev.c	/^int flag_unroll_all_loops;$/;"	v
flag_unroll_loops	toplev.c	/^int flag_unroll_loops;$/;"	v
flag_unsafe_math_optimizations	toplev.c	/^int flag_unsafe_math_optimizations = 1;		\/* MJP *\/$/;"	v
flag_unwind_tables	toplev.c	/^int flag_unwind_tables = 0;$/;"	v
flag_verbose_asm	toplev.c	/^int flag_verbose_asm = 0;$/;"	v
flag_volatile	toplev.c	/^int flag_volatile;$/;"	v
flag_volatile_global	toplev.c	/^int flag_volatile_global;$/;"	v
flag_volatile_static	toplev.c	/^int flag_volatile_static;$/;"	v
flag_writable_strings	toplev.c	/^int flag_writable_strings = 0;$/;"	v
flags	basic-block.h	/^  int flags;			\/* see EDGE_* below  *\/$/;"	m	struct:edge_def
flags	basic-block.h	/^  int flags;$/;"	m	struct:basic_block_def
flags	c-format.c	/^  const int flags;$/;"	m	struct:__anon43	file:
flags	conditions.h	/^typedef struct {int flags; rtx value1, value2; CC_STATUS_MDEP mdep;} CC_STATUS;$/;"	m	struct:__anon46
flags	cppexp.c	/^  U_CHAR flags;$/;"	m	struct:op	file:
flags	cppinit.c	/^  unsigned short flags;$/;"	m	struct:builtin	file:
flags	cpplib.c	/^  unsigned char flags;	        \/* Flags describing this directive.  *\/$/;"	m	struct:directive	file:
flags	cpplib.h	/^  unsigned char flags;			\/* CPP flags.  *\/$/;"	m	struct:cpp_hashnode
flags	cpplib.h	/^  unsigned char flags;		\/* flags - see above *\/$/;"	m	struct:cpp_token
flags	df.h	/^  enum df_ref_flags flags;	\/* Various flags.  *\/$/;"	m	struct:ref	typeref:enum:ref::df_ref_flags
flags	df.h	/^  int flags;			\/* Indicates what's recorded.  *\/$/;"	m	struct:df
flags	flow.c	/^  int flags;$/;"	m	struct:propagate_block_info	file:
flags	predict.c	/^  const int flags;$/;"	m	struct:predictor_info	file:
flags	tree-dump.c	/^  int flags;			\/* user flags *\/$/;"	m	struct:dump_file_info	file:
flags	tree-dump.h	/^  int flags;$/;"	m	struct:dump_info
flags	varasm.c	/^  unsigned int flags;$/;"	m	struct:in_named_entry	file:
flags2	c-format.c	/^  const char *const flags2;$/;"	m	struct:__anon40	file:
flags_from_decl_or_type	calls.c	/^flags_from_decl_or_type (exp)$/;"	f	file:
flags_set_1	regmove.c	/^flags_set_1 (x, pat, data)$/;"	f	file:
flags_set_1_rtx	regmove.c	/^static rtx flags_set_1_rtx;$/;"	v	file:
flags_set_1_set	regmove.c	/^static int flags_set_1_set;$/;"	v	file:
fld	rtl.h	/^  rtunion fld[1];$/;"	m	struct:rtx_def
flen	vmsdbgout.c	/^  char flen;$/;"	m	struct:dst_file_info_struct	file:
float_handled	toplev.c	/^int float_handled;$/;"	v
float_handler	toplev.c	/^jmp_buf float_handler;$/;"	v
float_handler_set	toplev.c	/^static int float_handler_set;$/;"	v	file:
float_signal	toplev.c	/^float_signal (signo)$/;"	f	file:
float_type_node	tree.h	1974;"	d
floatdidf_libfunc	libfuncs.h	228;"	d
floatdisf_libfunc	libfuncs.h	224;"	d
floatditf_libfunc	libfuncs.h	236;"	d
floatdixf_libfunc	libfuncs.h	232;"	d
floatsidf_libfunc	libfuncs.h	227;"	d
floatsisf_libfunc	libfuncs.h	223;"	d
floatsitf_libfunc	libfuncs.h	235;"	d
floatsixf_libfunc	libfuncs.h	231;"	d
floattab	optabs.c	/^enum insn_code floattab[NUM_MACHINE_MODES][NUM_MACHINE_MODES][2];$/;"	v	typeref:enum:insn_code
floattidf_libfunc	libfuncs.h	229;"	d
floattisf_libfunc	libfuncs.h	225;"	d
floattitf_libfunc	libfuncs.h	237;"	d
floattixf_libfunc	libfuncs.h	233;"	d
floor_log2	toplev.h	128;"	d
floor_log2_wide	toplev.c	/^floor_log2_wide (x)$/;"	f
flow2_completed	flow.c	/^int flow2_completed;$/;"	v
flow_call_edges_add	cfganal.c	/^flow_call_edges_add (blocks)$/;"	f
flow_delete_block	cfgrtl.c	/^flow_delete_block (b)$/;"	f
flow_delete_block_noexpunge	cfgrtl.c	/^flow_delete_block_noexpunge (b)$/;"	f
flow_depth_first_order_compute	cfganal.c	/^flow_depth_first_order_compute (dfs_order, rc_order)$/;"	f
flow_dfs_compute_reverse_add_bb	cfganal.c	/^flow_dfs_compute_reverse_add_bb (data, bb)$/;"	f	file:
flow_dfs_compute_reverse_execute	cfganal.c	/^flow_dfs_compute_reverse_execute (data)$/;"	f	file:
flow_dfs_compute_reverse_finish	cfganal.c	/^flow_dfs_compute_reverse_finish (data)$/;"	f	file:
flow_dfs_compute_reverse_init	cfganal.c	/^flow_dfs_compute_reverse_init (data)$/;"	f	file:
flow_edge_list_print	cfganal.c	/^flow_edge_list_print (str, edge_list, num_edges, file)$/;"	f
flow_edges	ssa-ccp.c	/^static edge flow_edges;$/;"	v	file:
flow_find_cross_jump	cfgcleanup.c	/^flow_find_cross_jump (mode, bb1, bb2, f1, f2)$/;"	f	file:
flow_firstobj	cfg.c	/^static char *flow_firstobj;$/;"	v	file:
flow_loop_dump	cfgloop.c	/^flow_loop_dump (loop, file, loop_dump_aux, verbose)$/;"	f
flow_loop_entry_edges_find	cfgloop.c	/^flow_loop_entry_edges_find (header, nodes, entry_edges)$/;"	f	file:
flow_loop_exit_edges_find	cfgloop.c	/^flow_loop_exit_edges_find (nodes, exit_edges)$/;"	f	file:
flow_loop_level_compute	cfgloop.c	/^flow_loop_level_compute (loop, depth)$/;"	f	file:
flow_loop_nested_p	cfgloop.c	/^flow_loop_nested_p (outer, loop)$/;"	f	file:
flow_loop_nodes_find	cfgloop.c	/^flow_loop_nodes_find (header, latch, nodes)$/;"	f	file:
flow_loop_outside_edge_p	cfgloop.c	/^flow_loop_outside_edge_p (loop, e)$/;"	f
flow_loop_pre_header_find	cfgloop.c	/^flow_loop_pre_header_find (header, dom)$/;"	f	file:
flow_loop_pre_header_scan	cfgloop.c	/^flow_loop_pre_header_scan (loop)$/;"	f	file:
flow_loop_scan	cfgloop.c	/^flow_loop_scan (loops, loop, flags)$/;"	f
flow_loop_tree_node_add	cfgloop.c	/^flow_loop_tree_node_add (prevloop, loop)$/;"	f	file:
flow_loops_cfg_dump	cfgloop.c	/^flow_loops_cfg_dump (loops, file)$/;"	f	file:
flow_loops_dump	cfgloop.c	/^flow_loops_dump (loops, file, loop_dump_aux, verbose)$/;"	f
flow_loops_find	cfgloop.c	/^flow_loops_find (loops, flags)$/;"	f
flow_loops_free	cfgloop.c	/^flow_loops_free (loops)$/;"	f
flow_loops_level_compute	cfgloop.c	/^flow_loops_level_compute (loops)$/;"	f	file:
flow_loops_tree_build	cfgloop.c	/^flow_loops_tree_build (loops)$/;"	f	file:
flow_loops_update	cfgloop.c	/^flow_loops_update (loops, flags)$/;"	f
flow_nodes_print	cfganal.c	/^flow_nodes_print (str, nodes, file)$/;"	f
flow_obstack	cfg.c	/^struct obstack flow_obstack;$/;"	v	typeref:struct:obstack
flow_preorder_transversal_compute	cfganal.c	/^flow_preorder_transversal_compute (pot_order)$/;"	f
flow_reverse_top_sort_order_compute	cfganal.c	/^flow_reverse_top_sort_order_compute (rts_order)$/;"	f
flush_addressof	function.c	/^flush_addressof (decl)$/;"	f
flush_diagnostic_buffer	diagnostic.c	/^flush_diagnostic_buffer ()$/;"	f
flush_hash_table	cse.c	/^flush_hash_table ()$/;"	f	file:
flush_pending_lists	sched-deps.c	/^flush_pending_lists (deps, insn, for_read, for_write)$/;"	f	file:
flush_queued_reg_saves	dwarf2out.c	/^flush_queued_reg_saves ()$/;"	f	file:
flush_reg_cond_reg	flow.c	/^flush_reg_cond_reg (pbi, regno)$/;"	f	file:
flush_reg_cond_reg_1	flow.c	/^flush_reg_cond_reg_1 (node, data)$/;"	f	file:
fname	cppdefault.h	/^  const char *const fname;	\/* The name of the directory.  *\/$/;"	m	struct:default_include
fname	dwarf2out.c	/^  char *fname;		\/* File name part.  *\/$/;"	m	struct:file_info	file:
fname_as_string	c-common.c	/^fname_as_string (pretty_p)$/;"	f
fname_decl	c-common.c	/^fname_decl (rid, id)$/;"	f
fname_string	c-common.c	/^fname_string (rid)$/;"	f
fname_var_t	c-common.c	/^struct fname_var_t$/;"	s	file:
fname_vars	c-common.c	/^const struct fname_var_t fname_vars[] =$/;"	v	typeref:struct:fname_var_t
fndecl	integrate.h	/^  union tree_node *fndecl;$/;"	m	struct:inline_remap	typeref:union:inline_remap::tree_node
fnotice	diagnostic.c	/^fnotice VPARAMS ((FILE *file, const char *msgid, ...))$/;"	f
fns	tree-inline.c	/^  varray_type fns;$/;"	m	struct:inline_data	file:
fold	fold-const.c	/^fold (expr)$/;"	f
fold_binary_op_with_conditional_arg	fold-const.c	/^fold_binary_op_with_conditional_arg (code, type, cond, arg, cond_first_p)$/;"	f	file:
fold_builtin	builtins.c	/^fold_builtin (exp)$/;"	f
fold_builtin_classify_type	builtins.c	/^fold_builtin_classify_type (arglist)$/;"	f	file:
fold_builtin_constant_p	builtins.c	/^fold_builtin_constant_p (arglist)$/;"	f	file:
fold_convert	fold-const.c	/^fold_convert (t, arg1)$/;"	f	file:
fold_convert_1	fold-const.c	/^fold_convert_1 (data)$/;"	f	file:
fold_range_test	fold-const.c	/^fold_range_test (exp)$/;"	f	file:
fold_rtx	cse.c	/^fold_rtx (x, insn)$/;"	f	file:
fold_rtx_mult_add	unroll.c	/^fold_rtx_mult_add (mult1, mult2, add1, mode)$/;"	f	file:
fold_truthop	fold-const.c	/^fold_truthop (code, truth_type, lhs, rhs)$/;"	f	file:
follow_def_use_chains	ssa-ccp.c	/^follow_def_use_chains ()$/;"	f	file:
follow_jumps	jump.c	/^follow_jumps (label)$/;"	f
fooalign	obstack.c	/^struct fooalign {char x; double d;};$/;"	s	file:
fooround	obstack.c	/^union fooround {long x; double d;};$/;"	u	file:
for_each_eh_label	except.c	/^for_each_eh_label (callback)$/;"	f
for_each_eh_label_1	except.c	/^for_each_eh_label_1 (pentry, data)$/;"	f	file:
for_each_insn_in_loop	loop.c	/^for_each_insn_in_loop (loop, fncall)$/;"	f
for_each_rtx	rtlanal.c	/^for_each_rtx (x, f, data)$/;"	f
for_each_successor_phi	ssa.c	/^for_each_successor_phi (bb, fn, data)$/;"	f
forbidden_inc_dec_class	regclass.c	/^static int forbidden_inc_dec_class[N_REG_CLASSES];$/;"	v	file:
force	loop.c	/^  unsigned int force : 1;	\/* 1 means MUST move this insn *\/$/;"	m	struct:movable	file:
force_const_mem	varasm.c	/^force_const_mem (mode, x)$/;"	f
force_data_section	varasm.c	/^force_data_section ()$/;"	f
force_fit_type	fold-const.c	/^force_fit_type (t, overflow)$/;"	f
force_line_numbers	emit-rtl.c	/^force_line_numbers ()$/;"	f
force_movables	loop.c	/^force_movables (movables)$/;"	f	file:
force_next_line_note	emit-rtl.c	/^force_next_line_note ()$/;"	f
force_nonfallthru	cfgrtl.c	/^force_nonfallthru (e)$/;"	f
force_nonfallthru_and_redirect	cfgrtl.c	/^force_nonfallthru_and_redirect (e, target)$/;"	f	file:
force_not_mem	explow.c	/^force_not_mem (x)$/;"	f
force_operand	expr.c	/^force_operand (value, target)$/;"	f
force_reg	explow.c	/^force_reg (mode, x)$/;"	f
force_to_mode	combine.c	/^force_to_mode (x, mode, mask, reg, just_select)$/;"	f	file:
forced_labels	function.h	167;"	d
forces	loop.c	/^  struct movable *forces;	\/* An insn that must be moved if this is *\/$/;"	m	struct:movable	typeref:struct:movable::movable	file:
forget_old_reloads_1	reload1.c	/^forget_old_reloads_1 (x, ignored, data)$/;"	f	file:
form	dwarf2out.c	/^  unsigned int form;$/;"	m	struct:indirect_string_node	file:
form_sum	reload.c	/^form_sum (x, y)$/;"	f
formals_style	c-aux-info.c	/^typedef enum formals_style_enum formals_style;$/;"	t	typeref:enum:formals_style_enum	file:
formals_style_enum	c-aux-info.c	/^enum formals_style_enum {$/;"	g	file:
format_args	diagnostic.h	/^  va_list *format_args;$/;"	m	struct:__anon12
format_attribute_table	attribs.c	/^const struct attribute_spec *format_attribute_table = empty_attribute_table;$/;"	v	typeref:struct:attribute_spec
format_char_info	c-format.c	/^} format_char_info;$/;"	t	typeref:struct:__anon40	file:
format_chars	c-format.c	/^  const char *const format_chars;$/;"	m	struct:__anon40	file:
format_check_results	c-format.c	/^} format_check_results;$/;"	t	typeref:struct:__anon44	file:
format_decoder	diagnostic.h	/^  printer_fn format_decoder;$/;"	m	struct:output_buffer
format_flag_pair	c-format.c	/^} format_flag_pair;$/;"	t	typeref:struct:__anon42	file:
format_flag_spec	c-format.c	/^} format_flag_spec;$/;"	t	typeref:struct:__anon41	file:
format_kind_info	c-format.c	/^} format_kind_info;$/;"	t	typeref:struct:__anon43	file:
format_length_info	c-format.c	/^} format_length_info;$/;"	t	typeref:struct:__anon38	file:
format_lengths	c-format.c	/^enum format_lengths$/;"	g	file:
format_num	c-format.c	/^  unsigned HOST_WIDE_INT format_num;	\/* number of format argument *\/$/;"	m	struct:function_format_info	file:
format_std_version	c-format.c	/^enum format_std_version$/;"	g	file:
format_type	c-format.c	/^  enum format_type format_type;	\/* type of format (printf, scanf, etc.) *\/$/;"	m	struct:function_format_info	typeref:enum:function_format_info::format_type	file:
format_type	c-format.c	/^enum format_type { printf_format_type, scanf_format_type,$/;"	g	file:
format_type_detail	c-format.c	/^} format_type_detail;$/;"	t	typeref:struct:__anon39	file:
format_type_error	c-format.c	/^		   format_type_error };$/;"	e	enum:format_type	file:
format_types	c-format.c	/^static const format_kind_info format_types[] =$/;"	v	file:
format_wanted_type	c-format.c	/^typedef struct format_wanted_type$/;"	s	file:
format_wanted_type	c-format.c	/^} format_wanted_type;$/;"	t	typeref:struct:format_wanted_type	file:
format_with_decl	diagnostic.c	/^format_with_decl (buffer, decl)$/;"	f	file:
forward_dependency_cache	sched-deps.c	/^static sbitmap *forward_dependency_cache;$/;"	v	file:
forwarder_block_p	cfganal.c	/^forwarder_block_p (bb)$/;"	f
found	rtlanal.c	/^    rtx found;$/;"	m	struct:set_of_data	file:
foundhere	cppfiles.c	/^  const struct search_path *foundhere;$/;"	m	struct:include_file	typeref:struct:include_file::search_path	file:
fp	conflict.c	/^  FILE *fp;$/;"	m	struct:print_context	file:
fp_cw_mode	i386.h	/^enum fp_cw_mode {FP_CW_STORED, FP_CW_UNINITIALIZED, FP_CW_ANY};$/;"	g
fp_load	i386.h	/^  const int fp_load[3];		\/* cost of loading FP register$/;"	m	struct:processor_costs
fp_move	i386.h	/^  const int fp_move;		\/* cost of reg,reg fld\/fst *\/$/;"	m	struct:processor_costs
fp_store	i386.h	/^  const int fp_store[3];	\/* cost of storing FP register$/;"	m	struct:processor_costs
fpmath_unit	i386.h	/^enum fpmath_unit$/;"	g
fprintf	system.h	96;"	d
fprintf	system.h	99;"	d
fpu_unit_blockage	insn-attrtab.c	/^fpu_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
fpu_unit_blockage_range	insn-attrtab.c	/^fpu_unit_blockage_range (insn)$/;"	f
fpu_unit_conflict_cost	insn-attrtab.c	/^fpu_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
fpu_unit_ready_cost	insn-attrtab.c	/^fpu_unit_ready_cost (insn)$/;"	f
fputc	system.h	77;"	d
fputc	system.h	78;"	d
fputs	system.h	82;"	d
fputs	system.h	83;"	d
fragment_chain	tree.h	/^  tree fragment_chain;$/;"	m	struct:tree_block
fragment_origin	tree.h	/^  tree fragment_origin;$/;"	m	struct:tree_block
frame	i386.c	/^  HOST_WIDE_INT frame;$/;"	m	struct:ix86_frame	file:
frame_offset	function.h	530;"	d
frame_pointer_needed	final.c	/^int frame_pointer_needed;$/;"	v
frame_pointer_offset	i386.c	/^  HOST_WIDE_INT frame_pointer_offset;$/;"	m	struct:ix86_frame	file:
frame_pointer_rtx	rtl.h	1628;"	d
frame_related	rtl.h	/^  unsigned frame_related : 1;$/;"	m	struct:rtx_def
free_AT	dwarf2out.c	/^free_AT (a)$/;"	f	file:
free_EXPR_LIST_list	lists.c	/^free_EXPR_LIST_list (listp)$/;"	f
free_EXPR_LIST_node	lists.c	/^free_EXPR_LIST_node (ptr)$/;"	f
free_INSN_LIST_list	lists.c	/^free_INSN_LIST_list (listp)$/;"	f
free_INSN_LIST_node	lists.c	/^free_INSN_LIST_node (ptr)$/;"	f
free_after_compilation	function.c	/^free_after_compilation (f)$/;"	f
free_after_parsing	function.c	/^free_after_parsing (f)$/;"	f
free_aux_for_blocks	cfg.c	/^free_aux_for_blocks ()$/;"	f
free_aux_for_edges	cfg.c	/^free_aux_for_edges ()$/;"	f
free_avail_expr_mem	gcse.c	/^free_avail_expr_mem ()$/;"	f	file:
free_basic_block_vars	flow.c	/^free_basic_block_vars (keep_head_end_p)$/;"	f
free_bb_for_insn	cfgrtl.c	/^free_bb_for_insn ()$/;"	f
free_binding_level	c-decl.c	/^static struct binding_level *free_binding_level;$/;"	v	typeref:struct:binding_level	file:
free_buffs	cpphash.h	/^  _cpp_buff *free_buffs;	\/* Free buffer chain.  *\/$/;"	m	struct:cpp_reader
free_case_nodes	stmt.c	/^free_case_nodes (cn)$/;"	f	file:
free_chain	cppinit.c	/^free_chain (head)$/;"	f	file:
free_code_hoist_mem	gcse.c	/^free_code_hoist_mem ()$/;"	f	file:
free_cprop_mem	gcse.c	/^free_cprop_mem ()$/;"	f	file:
free_csa_memlist	regmove.c	/^free_csa_memlist (memlist)$/;"	f	file:
free_dependency_caches	sched-deps.c	/^free_dependency_caches ()$/;"	f
free_deps	sched-deps.c	/^free_deps (deps)$/;"	f
free_die	dwarf2out.c	/^free_die (die)$/;"	f	file:
free_dom_info	dominance.c	/^free_dom_info (di)$/;"	f	file:
free_edge	cfg.c	/^free_edge (e)$/;"	f	file:
free_edge_list	cfganal.c	/^free_edge_list (elist)$/;"	f
free_eh_status	except.c	/^free_eh_status (f)$/;"	f
free_element_chain	cse.c	/^static struct table_elt *free_element_chain;$/;"	v	typeref:struct:table_elt	file:
free_emit_status	emit-rtl.c	/^free_emit_status (f)$/;"	f
free_expr_hash_table	gcse.c	/^free_expr_hash_table ()$/;"	f	file:
free_expr_status	expr.c	/^free_expr_status (f)$/;"	f
free_for_value_p	reload1.c	/^free_for_value_p (regno, mode, opnum, type, value, out, reloadnum,$/;"	f	file:
free_gcse_mem	gcse.c	/^free_gcse_mem ()$/;"	f	file:
free_insn	emit-rtl.c	/^static rtx free_insn;$/;"	v	file:
free_insn_expr_list_list	gcse.c	/^free_insn_expr_list_list (listp)$/;"	f	file:
free_lang_status	function.c	/^void (*free_lang_status) PARAMS ((struct function *));$/;"	v
free_ldst_entry	gcse.c	/^free_ldst_entry (ptr)$/;"	f	file:
free_ldst_mems	gcse.c	/^free_ldst_mems ()$/;"	f	file:
free_line_maps	line-map.c	/^free_line_maps (set)$/;"	f
free_list	lists.c	/^free_list (listp, unused_listp)$/;"	f	file:
free_list	tree-dump.h	/^  dump_queue_p free_list;$/;"	m	struct:dump_info
free_machine_status	function.c	/^void (*free_machine_status) PARAMS ((struct function *));$/;"	v
free_modify_mem_tables	gcse.c	/^free_modify_mem_tables ()$/;"	f	file:
free_page	ggc-page.c	/^free_page (entry)$/;"	f	file:
free_pages	ggc-page.c	/^  page_entry *free_pages;$/;"	m	struct:globals	file:
free_pending_lists	sched-rgn.c	/^free_pending_lists ()$/;"	f	file:
free_pre_mem	gcse.c	/^free_pre_mem ()$/;"	f	file:
free_propagate_block_info	flow.c	/^free_propagate_block_info (pbi)$/;"	f
free_rd_mem	gcse.c	/^free_rd_mem ()$/;"	f	file:
free_reg_cond_life_info	flow.c	/^free_reg_cond_life_info (value)$/;"	f	file:
free_reg_info	regclass.c	/^free_reg_info ()$/;"	f
free_reg_set_mem	gcse.c	/^free_reg_set_mem ()$/;"	f	file:
free_region	except.c	/^free_region (r)$/;"	f	file:
free_resource_info	resource.c	/^free_resource_info ()$/;"	f
free_set_hash_table	gcse.c	/^free_set_hash_table ()$/;"	f	file:
free_stmt_status	stmt.c	/^free_stmt_status (f)$/;"	f
free_store_memory	gcse.c	/^free_store_memory ()$/;"	f	file:
free_temp_slots	function.c	/^free_temp_slots ()$/;"	f
free_temps_for_rtl_expr	function.c	/^free_temps_for_rtl_expr (t)$/;"	f
free_varasm_status	varasm.c	/^free_varasm_status (f)$/;"	f
freefun	obstack.h	/^  void (*freefun) ();		\/* User's function to free a chunk.  *\/$/;"	m	struct:obstack
freefun	obstack.h	/^  void (*freefun) (void *, struct _obstack_chunk *);$/;"	m	struct:obstack
frees	combine.c	/^  struct undo *frees;$/;"	m	struct:undobuf	typeref:struct:undobuf::undo	file:
freq	global.c	/^  int freq;$/;"	m	struct:allocno	file:
freq	local-alloc.c	/^  int freq;$/;"	m	struct:qty	file:
freq	regs.h	/^  int freq;			\/* # estimated frequency (REG n) is used or set *\/$/;"	m	struct:reg_info_def
frequency	basic-block.h	/^  int frequency;$/;"	m	struct:basic_block_def
frequency	predict.c	/^  volatile double frequency;$/;"	m	struct:block_info_def	file:
frequency	regclass.c	/^static int frequency;$/;"	v	file:
from	expr.c	/^  rtx from;$/;"	m	struct:move_by_pieces	file:
from	recog.c	/^  rtx from;			\/* Old RTX *\/$/;"	m	struct:validate_replace_src_data	file:
from	reload1.c	/^  const int from;$/;"	m	struct:elim_table_1	file:
from	reload1.c	/^  int from;			\/* Register number to be eliminated.  *\/$/;"	m	struct:elim_table	file:
from_addr	expr.c	/^  rtx from_addr;$/;"	m	struct:move_by_pieces	file:
from_block	sched-rgn.c	/^  int from_block;$/;"	m	struct:__anon28	file:
from_line	line-map.h	/^  unsigned int from_line;$/;"	m	struct:line_map
from_rtx	reload1.c	/^  rtx from_rtx;			\/* REG rtx for the register to be eliminated.$/;"	m	struct:elim_table	file:
from_stage3	cpphash.h	/^  unsigned char from_stage3;$/;"	m	struct:cpp_buffer
ft_entries	dwarfout.c	/^static unsigned ft_entries;$/;"	v	file:
ft_entries_allocated	dwarfout.c	/^static unsigned ft_entries_allocated;$/;"	v	file:
ftrunc_optab	optabs.h	174;"	d
ftruncify	optabs.c	/^ftruncify (x)$/;"	f	file:
full_name	vmsdbgout.c	/^full_name (filename)$/;"	f	file:
full_size	function.c	/^  HOST_WIDE_INT full_size;$/;"	m	struct:temp_slot	file:
fullname_buff	vmsdbgout.c	/^static char fullname_buff [4096];$/;"	v	file:
fun_like	cppmacro.c	/^  unsigned int fun_like : 1;	\/* If a function-like macro.  *\/$/;"	m	struct:cpp_macro	file:
func_table	vmsdbgout.c	/^static char **func_table;$/;"	v	file:
func_table_allocated	vmsdbgout.c	/^static unsigned int func_table_allocated;$/;"	v	file:
func_table_in_use	vmsdbgout.c	/^static unsigned int func_table_in_use;$/;"	v	file:
funcdef_number	dwarf2out.c	/^  unsigned funcdef_number;$/;"	m	struct:dw_fde_struct	file:
function	dwarf2out.c	/^  unsigned long function;$/;"	m	struct:dw_separate_line_info_struct	file:
function	function.h	/^struct function$/;"	s
function_arg	i386.c	/^function_arg (cum, mode, type, named)$/;"	f
function_arg_advance	i386.c	/^function_arg_advance (cum, mode, type, named)$/;"	f
function_attribute_inlinable_p	integrate.c	/^function_attribute_inlinable_p (fndecl)$/;"	f
function_attribute_inlinable_p	target.h	/^  bool (* function_attribute_inlinable_p) PARAMS ((tree fndecl));$/;"	m	struct:gcc_target
function_begin_epilogue	target.h	/^    void (* function_begin_epilogue) PARAMS ((FILE *));$/;"	m	struct:gcc_target::asm_out
function_call_count	function.h	538;"	d
function_cannot_inline_p	integrate.c	/^function_cannot_inline_p (fndecl)$/;"	f
function_decl	debug.h	/^  void (* function_decl) PARAMS ((tree decl));$/;"	m	struct:gcc_debug_hooks
function_end_prologue	target.h	/^    void (* function_end_prologue) PARAMS ((FILE *));$/;"	m	struct:gcc_target::asm_out
function_epilogue	target.h	/^    void (* function_epilogue) PARAMS ((FILE *, HOST_WIDE_INT));$/;"	m	struct:gcc_target::asm_out
function_format_info	c-format.c	/^typedef struct function_format_info$/;"	s	file:
function_format_info	c-format.c	/^} function_format_info;$/;"	t	typeref:struct:function_format_info	file:
function_invariant_p	local-alloc.c	/^function_invariant_p (x)$/;"	f
function_name_decl_node	c-common.h	226;"	d
function_prologue	target.h	/^    void (* function_prologue) PARAMS ((FILE *, HOST_WIDE_INT));$/;"	m	struct:gcc_target::asm_out
function_section	varasm.c	/^function_section (decl)$/;"	f
function_start_label	dwarfout.c	/^function_start_label (decl)$/;"	f	file:
function_tail_eff_head	cfglayout.c	/^static rtx function_tail_eff_head;$/;"	v	file:
function_type_class	typeclass.h	/^  function_type_class, method_type_class,$/;"	e	enum:type_class
function_type_required	tree.h	/^  const bool function_type_required;$/;"	m	struct:attribute_spec
function_types_compatible_p	c-typeck.c	/^function_types_compatible_p (f1, f2)$/;"	f	file:
function_unit_desc	insn-attr.h	/^extern const struct function_unit_desc$/;"	s
function_units	insn-attrtab.c	/^const struct function_unit_desc function_units[] = {$/;"	v	typeref:struct:function_unit_desc
function_units_used	insn-attrtab.c	/^function_units_used (insn)$/;"	f
fund_type_attribute	dwarfout.c	/^fund_type_attribute (ft_code)$/;"	f	file:
fundamental_type_code	dwarfout.c	/^fundamental_type_code (type)$/;"	f	file:
funlike_invocation_p	cppmacro.c	/^funlike_invocation_p (pfile, node)$/;"	f	file:
funny_match	recog.c	/^struct funny_match$/;"	s	file:
fwrite	system.h	89;"	d
fwrite	system.h	90;"	d
g77_integer_type_node	c-common.h	221;"	d
g77_longint_type_node	c-common.h	223;"	d
g77_uinteger_type_node	c-common.h	222;"	d
g77_ulongint_type_node	c-common.h	224;"	d
g_switch_set	toplev.c	/^int g_switch_set;$/;"	v
g_switch_value	toplev.c	/^int g_switch_value;$/;"	v
g_types	loop.h	/^enum g_types$/;"	g
gcc	gcc.asm	/^gcc:     file format elf64-x86-64$/;"	l
gcc_debug_hooks	debug.h	/^struct gcc_debug_hooks$/;"	s
gcc_init_libintl	intl.c	/^gcc_init_libintl ()$/;"	f
gcc_init_libintl	intl.h	50;"	d
gcc_obstack_init	hashtable.c	/^gcc_obstack_init (obstack)$/;"	f
gcc_target	target.h	/^struct gcc_target$/;"	s
gcd_test	dependence.c	/^gcd_test (icoefficients, ocoefficients, direction, distance, loop_ptr, sub)$/;"	f	file:
gcov_type	basic-block.h	/^typedef HOST_WIDEST_INT gcov_type;$/;"	t
gcse_alloc	gcse.c	/^gcse_alloc (size)$/;"	f	file:
gcse_create_count	gcse.c	/^static int gcse_create_count;$/;"	v	file:
gcse_file	gcse.c	/^static FILE *gcse_file;$/;"	v	file:
gcse_main	gcse.c	/^gcse_main (f, file)$/;"	f
gcse_mem_operand	gcse.c	/^static rtx gcse_mem_operand;$/;"	v	file:
gcse_mems_conflict_p	gcse.c	/^static int gcse_mems_conflict_p;$/;"	v	file:
gcse_obstack	gcse.c	/^static struct obstack gcse_obstack;$/;"	v	typeref:struct:obstack	file:
gcse_subst_count	gcse.c	/^static int gcse_subst_count;$/;"	v	file:
ge	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
gedf2_libfunc	libfuncs.h	202;"	d
gehf2_libfunc	libfuncs.h	186;"	d
gen_absdf2	insn-emit.c	/^gen_absdf2 (operand0, operand1)$/;"	f
gen_absdf2_ifs	insn-emit.c	/^gen_absdf2_ifs (operand0, operand1, operand2)$/;"	f
gen_absdf2_memory	insn-emit.c	/^gen_absdf2_memory (operand0, operand1)$/;"	f
gen_abssf2	insn-emit.c	/^gen_abssf2 (operand0, operand1)$/;"	f
gen_abssf2_ifs	insn-emit.c	/^gen_abssf2_ifs (operand0, operand1, operand2)$/;"	f
gen_abssf2_memory	insn-emit.c	/^gen_abssf2_memory (operand0, operand1)$/;"	f
gen_abstf2	insn-emit.c	/^gen_abstf2 (operand0, operand1)$/;"	f
gen_absxf2	insn-emit.c	/^gen_absxf2 (operand0, operand1)$/;"	f
gen_add2_insn	optabs.c	/^gen_add2_insn (x, y)$/;"	f
gen_add3_insn	optabs.c	/^gen_add3_insn (r0, r1, c)$/;"	f
gen_add_mult	loop.c	/^gen_add_mult (b, m, a, reg)$/;"	f	file:
gen_adddf3	insn-emit.c	/^gen_adddf3 (operand0, operand1, operand2)$/;"	f
gen_adddi3	insn-emit.c	/^gen_adddi3 (operand0, operand1, operand2)$/;"	f
gen_addhi3	insn-emit.c	/^gen_addhi3 (operand0, operand1, operand2)$/;"	f
gen_addqi3	insn-emit.c	/^gen_addqi3 (operand0, operand1, operand2)$/;"	f
gen_addqi3_cc	insn-emit.c	/^gen_addqi3_cc (operand0, operand1, operand2)$/;"	f
gen_addqi_ext_1	insn-emit.c	/^gen_addqi_ext_1 (operand0, operand1, operand2)$/;"	f
gen_addsf3	insn-emit.c	/^gen_addsf3 (operand0, operand1, operand2)$/;"	f
gen_addsi3	insn-emit.c	/^gen_addsi3 (operand0, operand1, operand2)$/;"	f
gen_addsi_1_zext	insn-emit.c	/^gen_addsi_1_zext (operand0, operand1, operand2)$/;"	f
gen_addtf3	insn-emit.c	/^gen_addtf3 (operand0, operand1, operand2)$/;"	f
gen_addv2sf3	insn-emit.c	/^gen_addv2sf3 (operand0, operand1, operand2)$/;"	f
gen_addv2si3	insn-emit.c	/^gen_addv2si3 (operand0, operand1, operand2)$/;"	f
gen_addv4hi3	insn-emit.c	/^gen_addv4hi3 (operand0, operand1, operand2)$/;"	f
gen_addv4sf3	insn-emit.c	/^gen_addv4sf3 (operand0, operand1, operand2)$/;"	f
gen_addv8qi3	insn-emit.c	/^gen_addv8qi3 (operand0, operand1, operand2)$/;"	f
gen_addxf3	insn-emit.c	/^gen_addxf3 (operand0, operand1, operand2)$/;"	f
gen_allocate_stack	insn-emit.c	/^gen_allocate_stack (operand0, operand1)$/;"	f
gen_allocate_stack_worker	insn-emit.c	/^gen_allocate_stack_worker (operand0)$/;"	f
gen_allocate_stack_worker_1	insn-emit.c	/^gen_allocate_stack_worker_1 (operand0)$/;"	f
gen_allocate_stack_worker_rex64	insn-emit.c	/^gen_allocate_stack_worker_rex64 (operand0)$/;"	f
gen_anddi3	insn-emit.c	/^gen_anddi3 (operand0, operand1, operand2)$/;"	f
gen_andhi3	insn-emit.c	/^gen_andhi3 (operand0, operand1, operand2)$/;"	f
gen_andqi3	insn-emit.c	/^gen_andqi3 (operand0, operand1, operand2)$/;"	f
gen_andqi_ext_0	insn-emit.c	/^gen_andqi_ext_0 (operand0, operand1, operand2)$/;"	f
gen_andsi3	insn-emit.c	/^gen_andsi3 (operand0, operand1, operand2)$/;"	f
gen_array_type_die	dwarf2out.c	/^gen_array_type_die (type, context_die)$/;"	f	file:
gen_ashldi3	insn-emit.c	/^gen_ashldi3 (operand0, operand1, operand2)$/;"	f
gen_ashldi3_1	insn-emit.c	/^gen_ashldi3_1 (operand0, operand1, operand2)$/;"	f
gen_ashlhi3	insn-emit.c	/^gen_ashlhi3 (operand0, operand1, operand2)$/;"	f
gen_ashlqi3	insn-emit.c	/^gen_ashlqi3 (operand0, operand1, operand2)$/;"	f
gen_ashlsi3	insn-emit.c	/^gen_ashlsi3 (operand0, operand1, operand2)$/;"	f
gen_ashlv2si3	insn-emit.c	/^gen_ashlv2si3 (operand0, operand1, operand2)$/;"	f
gen_ashlv4hi3	insn-emit.c	/^gen_ashlv4hi3 (operand0, operand1, operand2)$/;"	f
gen_ashrdi3	insn-emit.c	/^gen_ashrdi3 (operand0, operand1, operand2)$/;"	f
gen_ashrdi3_1	insn-emit.c	/^gen_ashrdi3_1 (operand0, operand1, operand2)$/;"	f
gen_ashrdi3_63_rex64	insn-emit.c	/^gen_ashrdi3_63_rex64 (operand0, operand1, operand2)$/;"	f
gen_ashrhi3	insn-emit.c	/^gen_ashrhi3 (operand0, operand1, operand2)$/;"	f
gen_ashrqi3	insn-emit.c	/^gen_ashrqi3 (operand0, operand1, operand2)$/;"	f
gen_ashrsi3	insn-emit.c	/^gen_ashrsi3 (operand0, operand1, operand2)$/;"	f
gen_ashrsi3_31	insn-emit.c	/^gen_ashrsi3_31 (operand0, operand1, operand2)$/;"	f
gen_ashrv2si3	insn-emit.c	/^gen_ashrv2si3 (operand0, operand1, operand2)$/;"	f
gen_ashrv4hi3	insn-emit.c	/^gen_ashrv4hi3 (operand0, operand1, operand2)$/;"	f
gen_aux_info_record	c-aux-info.c	/^gen_aux_info_record (fndecl, is_definition, is_implicit, is_prototyped)$/;"	f
gen_beq	insn-emit.c	/^gen_beq (operand0)$/;"	f
gen_bge	insn-emit.c	/^gen_bge (operand0)$/;"	f
gen_bgeu	insn-emit.c	/^gen_bgeu (operand0)$/;"	f
gen_bgt	insn-emit.c	/^gen_bgt (operand0)$/;"	f
gen_bgtu	insn-emit.c	/^gen_bgtu (operand0)$/;"	f
gen_binary	combine.c	/^gen_binary (code, mode, op0, op1)$/;"	f	file:
gen_ble	insn-emit.c	/^gen_ble (operand0)$/;"	f
gen_bleu	insn-emit.c	/^gen_bleu (operand0)$/;"	f
gen_block_die	dwarf2out.c	/^gen_block_die (stmt, context_die, depth)$/;"	f	file:
gen_blockage	insn-emit.c	/^gen_blockage ()$/;"	f
gen_blt	insn-emit.c	/^gen_blt (operand0)$/;"	f
gen_bltgt	insn-emit.c	/^gen_bltgt (operand0)$/;"	f
gen_bltu	insn-emit.c	/^gen_bltu (operand0)$/;"	f
gen_bne	insn-emit.c	/^gen_bne (operand0)$/;"	f
gen_bordered	insn-emit.c	/^gen_bordered (operand0)$/;"	f
gen_builtin_setjmp_receiver	insn-emit.c	/^gen_builtin_setjmp_receiver (operand0)$/;"	f
gen_buneq	insn-emit.c	/^gen_buneq (operand0)$/;"	f
gen_bunge	insn-emit.c	/^gen_bunge (operand0)$/;"	f
gen_bungt	insn-emit.c	/^gen_bungt (operand0)$/;"	f
gen_bunle	insn-emit.c	/^gen_bunle (operand0)$/;"	f
gen_bunlt	insn-emit.c	/^gen_bunlt (operand0)$/;"	f
gen_bunordered	insn-emit.c	/^gen_bunordered (operand0)$/;"	f
gen_call	insn-emit.c	/^gen_call (operand0, operand1, operand2)$/;"	f
gen_call_exp	insn-emit.c	/^gen_call_exp (operand0, operand1)$/;"	f
gen_call_pop	insn-emit.c	/^gen_call_pop (operand0, operand1, operand2, operand3)$/;"	f
gen_call_value	insn-emit.c	/^gen_call_value (operand0, operand1, operand2, operand3)$/;"	f
gen_call_value_exp	insn-emit.c	/^gen_call_value_exp (operand0, operand1, operand2)$/;"	f
gen_call_value_pop	insn-emit.c	/^gen_call_value_pop (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_casesi	expr.c	10444;"	d	file:
gen_cld	insn-emit.c	/^gen_cld ()$/;"	f
gen_clrstrdi	insn-emit.c	/^gen_clrstrdi (operand0, operand1, operand2)$/;"	f
gen_clrstrsi	insn-emit.c	/^gen_clrstrsi (operand0, operand1, operand2)$/;"	f
gen_cmpdf	insn-emit.c	/^gen_cmpdf (operand0, operand1)$/;"	f
gen_cmpdi	insn-emit.c	/^gen_cmpdi (operand0, operand1)$/;"	f
gen_cmpdi_1_insn_rex64	insn-emit.c	/^gen_cmpdi_1_insn_rex64 (operand0, operand1)$/;"	f
gen_cmpdi_1_rex64	insn-emit.c	/^gen_cmpdi_1_rex64 (operand0, operand1)$/;"	f
gen_cmpdi_ccno_1_rex64	insn-emit.c	/^gen_cmpdi_ccno_1_rex64 (operand0, operand1)$/;"	f
gen_cmphi	insn-emit.c	/^gen_cmphi (operand0, operand1)$/;"	f
gen_cmpintqi	insn-emit.c	/^gen_cmpintqi (operand0)$/;"	f
gen_cmpqi	insn-emit.c	/^gen_cmpqi (operand0, operand1)$/;"	f
gen_cmpqi_ext_3	insn-emit.c	/^gen_cmpqi_ext_3 (operand0, operand1)$/;"	f
gen_cmpqi_ext_3_insn	insn-emit.c	/^gen_cmpqi_ext_3_insn (operand0, operand1)$/;"	f
gen_cmpqi_ext_3_insn_rex64	insn-emit.c	/^gen_cmpqi_ext_3_insn_rex64 (operand0, operand1)$/;"	f
gen_cmpsf	insn-emit.c	/^gen_cmpsf (operand0, operand1)$/;"	f
gen_cmpsi	insn-emit.c	/^gen_cmpsi (operand0, operand1)$/;"	f
gen_cmpsi_1	insn-emit.c	/^gen_cmpsi_1 (operand0, operand1)$/;"	f
gen_cmpstrqi_1	insn-emit.c	/^gen_cmpstrqi_1 (operand0, operand1, operand2, operand3, operand4, operand5, operand6)$/;"	f
gen_cmpstrqi_nz_1	insn-emit.c	/^gen_cmpstrqi_nz_1 (operand0, operand1, operand2, operand3, operand4, operand5, operand6)$/;"	f
gen_cmpstrqi_nz_rex_1	insn-emit.c	/^gen_cmpstrqi_nz_rex_1 (operand0, operand1, operand2, operand3, operand4, operand5, operand6)$/;"	f
gen_cmpstrqi_rex_1	insn-emit.c	/^gen_cmpstrqi_rex_1 (operand0, operand1, operand2, operand3, operand4, operand5, operand6)$/;"	f
gen_cmpstrsi	insn-emit.c	/^gen_cmpstrsi (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_cmptf	insn-emit.c	/^gen_cmptf (operand0, operand1)$/;"	f
gen_cmpxf	insn-emit.c	/^gen_cmpxf (operand0, operand1)$/;"	f
gen_compile_unit_die	dwarf2out.c	/^gen_compile_unit_die (filename)$/;"	f	file:
gen_cond_trap	optabs.c	/^gen_cond_trap (code, op1, op2, tcode)$/;"	f
gen_conditional_trap	insn-emit.c	/^gen_conditional_trap (operand0, operand1)$/;"	f
gen_const_vector_0	emit-rtl.c	/^gen_const_vector_0 (mode)$/;"	f	file:
gen_cosdf2	insn-emit.c	/^gen_cosdf2 (operand0, operand1)$/;"	f
gen_cossf2	insn-emit.c	/^gen_cossf2 (operand0, operand1)$/;"	f
gen_costf2	insn-emit.c	/^gen_costf2 (operand0, operand1)$/;"	f
gen_cosxf2	insn-emit.c	/^gen_cosxf2 (operand0, operand1)$/;"	f
gen_cvtpi2ps	insn-emit.c	/^gen_cvtpi2ps (operand0, operand1, operand2)$/;"	f
gen_cvtps2pi	insn-emit.c	/^gen_cvtps2pi (operand0, operand1)$/;"	f
gen_cvtsi2ss	insn-emit.c	/^gen_cvtsi2ss (operand0, operand1, operand2)$/;"	f
gen_cvtss2si	insn-emit.c	/^gen_cvtss2si (operand0, operand1)$/;"	f
gen_cvttps2pi	insn-emit.c	/^gen_cvttps2pi (operand0, operand1)$/;"	f
gen_cvttss2si	insn-emit.c	/^gen_cvttss2si (operand0, operand1)$/;"	f
gen_decl	c-aux-info.c	/^gen_decl (decl, is_func_definition, style)$/;"	f	file:
gen_decl_die	dwarf2out.c	/^gen_decl_die (decl, context_die)$/;"	f	file:
gen_divdf3	insn-emit.c	/^gen_divdf3 (operand0, operand1, operand2)$/;"	f
gen_divmoddi4	insn-emit.c	/^gen_divmoddi4 (operand0, operand1, operand2, operand3)$/;"	f
gen_divmodhi4	insn-emit.c	/^gen_divmodhi4 (operand0, operand1, operand2, operand3)$/;"	f
gen_divmodsi4	insn-emit.c	/^gen_divmodsi4 (operand0, operand1, operand2, operand3)$/;"	f
gen_divqi3	insn-emit.c	/^gen_divqi3 (operand0, operand1, operand2)$/;"	f
gen_divsf3	insn-emit.c	/^gen_divsf3 (operand0, operand1, operand2)$/;"	f
gen_divtf3	insn-emit.c	/^gen_divtf3 (operand0, operand1, operand2)$/;"	f
gen_divv4sf3	insn-emit.c	/^gen_divv4sf3 (operand0, operand1, operand2)$/;"	f
gen_divxf3	insn-emit.c	/^gen_divxf3 (operand0, operand1, operand2)$/;"	f
gen_doloop_end	insn-emit.c	/^gen_doloop_end (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_doloop_end_internal	insn-emit.c	/^gen_doloop_end_internal (operand0, operand1, operand2)$/;"	f
gen_edge_profiler	profile.c	/^gen_edge_profiler (edgeno)$/;"	f	file:
gen_eh_return	insn-emit.c	/^gen_eh_return (operand0, operand1)$/;"	f
gen_eh_return_di	insn-emit.c	/^gen_eh_return_di (operand0)$/;"	f
gen_eh_return_si	insn-emit.c	/^gen_eh_return_si (operand0)$/;"	f
gen_emms	insn-emit.c	/^gen_emms ()$/;"	f
gen_enumeration_type_die	dwarf2out.c	/^gen_enumeration_type_die (type, context_die)$/;"	f	file:
gen_epilogue	insn-emit.c	/^gen_epilogue ()$/;"	f
gen_eqv2sf3	insn-emit.c	/^gen_eqv2sf3 (operand0, operand1, operand2)$/;"	f
gen_eqv2si3	insn-emit.c	/^gen_eqv2si3 (operand0, operand1, operand2)$/;"	f
gen_eqv4hi3	insn-emit.c	/^gen_eqv4hi3 (operand0, operand1, operand2)$/;"	f
gen_eqv8qi3	insn-emit.c	/^gen_eqv8qi3 (operand0, operand1, operand2)$/;"	f
gen_extend_insn	optabs.c	/^gen_extend_insn (x, y, mto, mfrom, unsignedp)$/;"	f
gen_extenddftf2	insn-emit.c	/^gen_extenddftf2 (operand0, operand1)$/;"	f
gen_extenddfxf2	insn-emit.c	/^gen_extenddfxf2 (operand0, operand1)$/;"	f
gen_extendhidi2	insn-emit.c	/^gen_extendhidi2 (operand0, operand1)$/;"	f
gen_extendhisi2	insn-emit.c	/^gen_extendhisi2 (operand0, operand1)$/;"	f
gen_extendqidi2	insn-emit.c	/^gen_extendqidi2 (operand0, operand1)$/;"	f
gen_extendqihi2	insn-emit.c	/^gen_extendqihi2 (operand0, operand1)$/;"	f
gen_extendqisi2	insn-emit.c	/^gen_extendqisi2 (operand0, operand1)$/;"	f
gen_extendsfdf2	insn-emit.c	/^gen_extendsfdf2 (operand0, operand1)$/;"	f
gen_extendsftf2	insn-emit.c	/^gen_extendsftf2 (operand0, operand1)$/;"	f
gen_extendsfxf2	insn-emit.c	/^gen_extendsfxf2 (operand0, operand1)$/;"	f
gen_extendsidi2	insn-emit.c	/^gen_extendsidi2 (operand0, operand1)$/;"	f
gen_extendsidi2_rex64	insn-emit.c	/^gen_extendsidi2_rex64 (operand0, operand1)$/;"	f
gen_extv	expmed.c	84;"	d	file:
gen_extv	insn-emit.c	/^gen_extv (operand0, operand1, operand2, operand3)$/;"	f
gen_extzv	expmed.c	89;"	d	file:
gen_extzv	insn-emit.c	/^gen_extzv (operand0, operand1, operand2, operand3)$/;"	f
gen_fake_label	sdbout.c	/^gen_fake_label ()$/;"	f	file:
gen_femms	insn-emit.c	/^gen_femms ()$/;"	f
gen_ffssi2	insn-emit.c	/^gen_ffssi2 (operand0, operand1)$/;"	f
gen_ffssi_1	insn-emit.c	/^gen_ffssi_1 (operand0, operand1)$/;"	f
gen_field_die	dwarf2out.c	/^gen_field_die (decl, context_die)$/;"	f	file:
gen_fix_truncdfdi2	insn-emit.c	/^gen_fix_truncdfdi2 (operand0, operand1)$/;"	f
gen_fix_truncdfdi_sse	insn-emit.c	/^gen_fix_truncdfdi_sse (operand0, operand1)$/;"	f
gen_fix_truncdfhi2	insn-emit.c	/^gen_fix_truncdfhi2 (operand0, operand1)$/;"	f
gen_fix_truncdfsi2	insn-emit.c	/^gen_fix_truncdfsi2 (operand0, operand1)$/;"	f
gen_fix_truncdfsi_sse	insn-emit.c	/^gen_fix_truncdfsi_sse (operand0, operand1)$/;"	f
gen_fix_truncdi_memory	insn-emit.c	/^gen_fix_truncdi_memory (operand0, operand1, operand2, operand3)$/;"	f
gen_fix_truncdi_nomemory	insn-emit.c	/^gen_fix_truncdi_nomemory (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_fix_trunchi_memory	insn-emit.c	/^gen_fix_trunchi_memory (operand0, operand1, operand2, operand3)$/;"	f
gen_fix_trunchi_nomemory	insn-emit.c	/^gen_fix_trunchi_nomemory (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_fix_truncsfdi2	insn-emit.c	/^gen_fix_truncsfdi2 (operand0, operand1)$/;"	f
gen_fix_truncsfdi_sse	insn-emit.c	/^gen_fix_truncsfdi_sse (operand0, operand1)$/;"	f
gen_fix_truncsfhi2	insn-emit.c	/^gen_fix_truncsfhi2 (operand0, operand1)$/;"	f
gen_fix_truncsfsi2	insn-emit.c	/^gen_fix_truncsfsi2 (operand0, operand1)$/;"	f
gen_fix_truncsfsi_sse	insn-emit.c	/^gen_fix_truncsfsi_sse (operand0, operand1)$/;"	f
gen_fix_truncsi_memory	insn-emit.c	/^gen_fix_truncsi_memory (operand0, operand1, operand2, operand3)$/;"	f
gen_fix_truncsi_nomemory	insn-emit.c	/^gen_fix_truncsi_nomemory (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_fix_trunctfdi2	insn-emit.c	/^gen_fix_trunctfdi2 (operand0, operand1)$/;"	f
gen_fix_trunctfhi2	insn-emit.c	/^gen_fix_trunctfhi2 (operand0, operand1)$/;"	f
gen_fix_trunctfsi2	insn-emit.c	/^gen_fix_trunctfsi2 (operand0, operand1)$/;"	f
gen_fix_truncxfdi2	insn-emit.c	/^gen_fix_truncxfdi2 (operand0, operand1)$/;"	f
gen_fix_truncxfhi2	insn-emit.c	/^gen_fix_truncxfhi2 (operand0, operand1)$/;"	f
gen_fix_truncxfsi2	insn-emit.c	/^gen_fix_truncxfsi2 (operand0, operand1)$/;"	f
gen_floatdidf2	insn-emit.c	/^gen_floatdidf2 (operand0, operand1)$/;"	f
gen_floatdisf2	insn-emit.c	/^gen_floatdisf2 (operand0, operand1)$/;"	f
gen_floatditf2	insn-emit.c	/^gen_floatditf2 (operand0, operand1)$/;"	f
gen_floatdixf2	insn-emit.c	/^gen_floatdixf2 (operand0, operand1)$/;"	f
gen_floathidf2	insn-emit.c	/^gen_floathidf2 (operand0, operand1)$/;"	f
gen_floathisf2	insn-emit.c	/^gen_floathisf2 (operand0, operand1)$/;"	f
gen_floathitf2	insn-emit.c	/^gen_floathitf2 (operand0, operand1)$/;"	f
gen_floathixf2	insn-emit.c	/^gen_floathixf2 (operand0, operand1)$/;"	f
gen_floatsidf2	insn-emit.c	/^gen_floatsidf2 (operand0, operand1)$/;"	f
gen_floatsisf2	insn-emit.c	/^gen_floatsisf2 (operand0, operand1)$/;"	f
gen_floatsitf2	insn-emit.c	/^gen_floatsitf2 (operand0, operand1)$/;"	f
gen_floatsixf2	insn-emit.c	/^gen_floatsixf2 (operand0, operand1)$/;"	f
gen_floatv2si2	insn-emit.c	/^gen_floatv2si2 (operand0, operand1)$/;"	f
gen_formal_list_for_func_def	c-aux-info.c	/^gen_formal_list_for_func_def (fndecl, style)$/;"	f	file:
gen_formal_list_for_type	c-aux-info.c	/^gen_formal_list_for_type (fntype, style)$/;"	f	file:
gen_formal_parameter_die	dwarf2out.c	/^gen_formal_parameter_die (node, context_die)$/;"	f	file:
gen_formal_types_die	dwarf2out.c	/^gen_formal_types_die (function_or_method_type, context_die)$/;"	f	file:
gen_gev2sf3	insn-emit.c	/^gen_gev2sf3 (operand0, operand1, operand2)$/;"	f
gen_gtv2sf3	insn-emit.c	/^gen_gtv2sf3 (operand0, operand1, operand2)$/;"	f
gen_gtv2si3	insn-emit.c	/^gen_gtv2si3 (operand0, operand1, operand2)$/;"	f
gen_gtv4hi3	insn-emit.c	/^gen_gtv4hi3 (operand0, operand1, operand2)$/;"	f
gen_gtv8qi3	insn-emit.c	/^gen_gtv8qi3 (operand0, operand1, operand2)$/;"	f
gen_highpart	emit-rtl.c	/^gen_highpart (mode, x)$/;"	f
gen_highpart_mode	emit-rtl.c	/^gen_highpart_mode (outermode, innermode, exp)$/;"	f
gen_imagpart	emit-rtl.c	/^gen_imagpart (mode, x)$/;"	f
gen_indirect_jump	insn-emit.c	/^gen_indirect_jump (operand0)$/;"	f
gen_inheritance_die	dwarf2out.c	/^gen_inheritance_die (binfo, context_die)$/;"	f	file:
gen_inlined_enumeration_type_die	dwarf2out.c	/^gen_inlined_enumeration_type_die (type, context_die)$/;"	f	file:
gen_inlined_structure_type_die	dwarf2out.c	/^gen_inlined_structure_type_die (type, context_die)$/;"	f	file:
gen_inlined_subroutine_die	dwarf2out.c	/^gen_inlined_subroutine_die (stmt, context_die, depth)$/;"	f	file:
gen_inlined_union_type_die	dwarf2out.c	/^gen_inlined_union_type_die (type, context_die)$/;"	f	file:
gen_insv	expmed.c	79;"	d	file:
gen_insv	insn-emit.c	/^gen_insv (operand0, operand1, operand2, operand3)$/;"	f
gen_int_mode	emit-rtl.c	/^gen_int_mode (c, mode)$/;"	f
gen_internal_sym	dwarf2out.c	/^gen_internal_sym (prefix)$/;"	f	file:
gen_iordi3	insn-emit.c	/^gen_iordi3 (operand0, operand1, operand2)$/;"	f
gen_iorhi3	insn-emit.c	/^gen_iorhi3 (operand0, operand1, operand2)$/;"	f
gen_iorqi3	insn-emit.c	/^gen_iorqi3 (operand0, operand1, operand2)$/;"	f
gen_iorsi3	insn-emit.c	/^gen_iorsi3 (operand0, operand1, operand2)$/;"	f
gen_jump	insn-emit.c	/^gen_jump (operand0)$/;"	f
gen_label_die	dwarf2out.c	/^gen_label_die (decl, context_die)$/;"	f	file:
gen_label_rtx	emit-rtl.c	/^gen_label_rtx ()$/;"	f
gen_ldmxcsr	insn-emit.c	/^gen_ldmxcsr (operand0)$/;"	f
gen_leave	insn-emit.c	/^gen_leave ()$/;"	f
gen_leave_rex64	insn-emit.c	/^gen_leave_rex64 ()$/;"	f
gen_lexical_block_die	dwarf2out.c	/^gen_lexical_block_die (stmt, context_die, depth)$/;"	f	file:
gen_lowpart	combine.c	96;"	d	file:
gen_lowpart	combine.c	9762;"	d	file:
gen_lowpart	emit-rtl.c	/^gen_lowpart (mode, x)$/;"	f
gen_lowpart_SUBREG	emit-rtl.c	/^gen_lowpart_SUBREG (mode, reg)$/;"	f
gen_lowpart_common	emit-rtl.c	/^gen_lowpart_common (mode, x)$/;"	f
gen_lowpart_for_combine	combine.c	/^gen_lowpart_for_combine (mode, x)$/;"	f	file:
gen_lowpart_if_possible	cse.c	/^gen_lowpart_if_possible (mode, x)$/;"	f
gen_lshrdi3	insn-emit.c	/^gen_lshrdi3 (operand0, operand1, operand2)$/;"	f
gen_lshrdi3_1	insn-emit.c	/^gen_lshrdi3_1 (operand0, operand1, operand2)$/;"	f
gen_lshrhi3	insn-emit.c	/^gen_lshrhi3 (operand0, operand1, operand2)$/;"	f
gen_lshrqi3	insn-emit.c	/^gen_lshrqi3 (operand0, operand1, operand2)$/;"	f
gen_lshrsi3	insn-emit.c	/^gen_lshrsi3 (operand0, operand1, operand2)$/;"	f
gen_lshrv2si3	insn-emit.c	/^gen_lshrv2si3 (operand0, operand1, operand2)$/;"	f
gen_lshrv4hi3	insn-emit.c	/^gen_lshrv4hi3 (operand0, operand1, operand2)$/;"	f
gen_maskcmpv4sf3	insn-emit.c	/^gen_maskcmpv4sf3 (operand0, operand1, operand2, operand3)$/;"	f
gen_maskncmpv4sf3	insn-emit.c	/^gen_maskncmpv4sf3 (operand0, operand1, operand2, operand3)$/;"	f
gen_maxdf3	insn-emit.c	/^gen_maxdf3 (operand0, operand1, operand2)$/;"	f
gen_maxsf3	insn-emit.c	/^gen_maxsf3 (operand0, operand1, operand2)$/;"	f
gen_mem_addressof	function.c	/^gen_mem_addressof (reg, decl)$/;"	f
gen_member_die	dwarf2out.c	/^gen_member_die (type, context_die)$/;"	f	file:
gen_mindf3	insn-emit.c	/^gen_mindf3 (operand0, operand1, operand2)$/;"	f
gen_minsf3	insn-emit.c	/^gen_minsf3 (operand0, operand1, operand2)$/;"	f
gen_mmx_anddi3	insn-emit.c	/^gen_mmx_anddi3 (operand0, operand1, operand2)$/;"	f
gen_mmx_ashldi3	insn-emit.c	/^gen_mmx_ashldi3 (operand0, operand1, operand2)$/;"	f
gen_mmx_clrdi	insn-emit.c	/^gen_mmx_clrdi (operand0)$/;"	f
gen_mmx_iordi3	insn-emit.c	/^gen_mmx_iordi3 (operand0, operand1, operand2)$/;"	f
gen_mmx_lshrdi3	insn-emit.c	/^gen_mmx_lshrdi3 (operand0, operand1, operand2)$/;"	f
gen_mmx_maskmovq	insn-emit.c	/^gen_mmx_maskmovq (operand0, operand1, operand2)$/;"	f
gen_mmx_maskmovq_rex	insn-emit.c	/^gen_mmx_maskmovq_rex (operand0, operand1, operand2)$/;"	f
gen_mmx_nanddi3	insn-emit.c	/^gen_mmx_nanddi3 (operand0, operand1, operand2)$/;"	f
gen_mmx_packssdw	insn-emit.c	/^gen_mmx_packssdw (operand0, operand1, operand2)$/;"	f
gen_mmx_packsswb	insn-emit.c	/^gen_mmx_packsswb (operand0, operand1, operand2)$/;"	f
gen_mmx_packuswb	insn-emit.c	/^gen_mmx_packuswb (operand0, operand1, operand2)$/;"	f
gen_mmx_pextrw	insn-emit.c	/^gen_mmx_pextrw (operand0, operand1, operand2)$/;"	f
gen_mmx_pinsrw	insn-emit.c	/^gen_mmx_pinsrw (operand0, operand1, operand2, operand3)$/;"	f
gen_mmx_pmaddwd	insn-emit.c	/^gen_mmx_pmaddwd (operand0, operand1, operand2)$/;"	f
gen_mmx_pmovmskb	insn-emit.c	/^gen_mmx_pmovmskb (operand0, operand1)$/;"	f
gen_mmx_psadbw	insn-emit.c	/^gen_mmx_psadbw (operand0, operand1, operand2)$/;"	f
gen_mmx_pshufw	insn-emit.c	/^gen_mmx_pshufw (operand0, operand1, operand2)$/;"	f
gen_mmx_punpckhbw	insn-emit.c	/^gen_mmx_punpckhbw (operand0, operand1, operand2)$/;"	f
gen_mmx_punpckhdq	insn-emit.c	/^gen_mmx_punpckhdq (operand0, operand1, operand2)$/;"	f
gen_mmx_punpckhwd	insn-emit.c	/^gen_mmx_punpckhwd (operand0, operand1, operand2)$/;"	f
gen_mmx_punpcklbw	insn-emit.c	/^gen_mmx_punpcklbw (operand0, operand1, operand2)$/;"	f
gen_mmx_punpckldq	insn-emit.c	/^gen_mmx_punpckldq (operand0, operand1, operand2)$/;"	f
gen_mmx_punpcklwd	insn-emit.c	/^gen_mmx_punpcklwd (operand0, operand1, operand2)$/;"	f
gen_mmx_uavgv4hi3	insn-emit.c	/^gen_mmx_uavgv4hi3 (operand0, operand1, operand2)$/;"	f
gen_mmx_uavgv8qi3	insn-emit.c	/^gen_mmx_uavgv8qi3 (operand0, operand1, operand2)$/;"	f
gen_mmx_xordi3	insn-emit.c	/^gen_mmx_xordi3 (operand0, operand1, operand2)$/;"	f
gen_movdf	insn-emit.c	/^gen_movdf (operand0, operand1)$/;"	f
gen_movdfcc	insn-emit.c	/^gen_movdfcc (operand0, operand1, operand2, operand3)$/;"	f
gen_movdi	insn-emit.c	/^gen_movdi (operand0, operand1)$/;"	f
gen_movdicc	insn-emit.c	/^gen_movdicc (operand0, operand1, operand2, operand3)$/;"	f
gen_move_insn	optabs.c	/^gen_move_insn (x, y)$/;"	f
gen_movhi	insn-emit.c	/^gen_movhi (operand0, operand1)$/;"	f
gen_movhicc	insn-emit.c	/^gen_movhicc (operand0, operand1, operand2, operand3)$/;"	f
gen_movqi	insn-emit.c	/^gen_movqi (operand0, operand1)$/;"	f
gen_movsf	insn-emit.c	/^gen_movsf (operand0, operand1)$/;"	f
gen_movsfcc	insn-emit.c	/^gen_movsfcc (operand0, operand1, operand2, operand3)$/;"	f
gen_movsi	insn-emit.c	/^gen_movsi (operand0, operand1)$/;"	f
gen_movsi_insv_1	insn-emit.c	/^gen_movsi_insv_1 (operand0, operand1)$/;"	f
gen_movsicc	insn-emit.c	/^gen_movsicc (operand0, operand1, operand2, operand3)$/;"	f
gen_movstrdi	insn-emit.c	/^gen_movstrdi (operand0, operand1, operand2, operand3)$/;"	f
gen_movstricthi	insn-emit.c	/^gen_movstricthi (operand0, operand1)$/;"	f
gen_movstrictqi	insn-emit.c	/^gen_movstrictqi (operand0, operand1)$/;"	f
gen_movstrsi	insn-emit.c	/^gen_movstrsi (operand0, operand1, operand2, operand3)$/;"	f
gen_movtf	insn-emit.c	/^gen_movtf (operand0, operand1)$/;"	f
gen_movtfcc	insn-emit.c	/^gen_movtfcc (operand0, operand1, operand2, operand3)$/;"	f
gen_movti	insn-emit.c	/^gen_movti (operand0, operand1)$/;"	f
gen_movti_internal	insn-emit.c	/^gen_movti_internal (operand0, operand1)$/;"	f
gen_movv2sf	insn-emit.c	/^gen_movv2sf (operand0, operand1)$/;"	f
gen_movv2sf_internal	insn-emit.c	/^gen_movv2sf_internal (operand0, operand1)$/;"	f
gen_movv2si	insn-emit.c	/^gen_movv2si (operand0, operand1)$/;"	f
gen_movv2si_internal	insn-emit.c	/^gen_movv2si_internal (operand0, operand1)$/;"	f
gen_movv4hi	insn-emit.c	/^gen_movv4hi (operand0, operand1)$/;"	f
gen_movv4hi_internal	insn-emit.c	/^gen_movv4hi_internal (operand0, operand1)$/;"	f
gen_movv4sf	insn-emit.c	/^gen_movv4sf (operand0, operand1)$/;"	f
gen_movv4sf_internal	insn-emit.c	/^gen_movv4sf_internal (operand0, operand1)$/;"	f
gen_movv4si	insn-emit.c	/^gen_movv4si (operand0, operand1)$/;"	f
gen_movv4si_internal	insn-emit.c	/^gen_movv4si_internal (operand0, operand1)$/;"	f
gen_movv8qi	insn-emit.c	/^gen_movv8qi (operand0, operand1)$/;"	f
gen_movv8qi_internal	insn-emit.c	/^gen_movv8qi_internal (operand0, operand1)$/;"	f
gen_movxf	insn-emit.c	/^gen_movxf (operand0, operand1)$/;"	f
gen_movxfcc	insn-emit.c	/^gen_movxfcc (operand0, operand1, operand2, operand3)$/;"	f
gen_muldf3	insn-emit.c	/^gen_muldf3 (operand0, operand1, operand2)$/;"	f
gen_muldi3	insn-emit.c	/^gen_muldi3 (operand0, operand1, operand2)$/;"	f
gen_mulditi3	insn-emit.c	/^gen_mulditi3 (operand0, operand1, operand2)$/;"	f
gen_mulhi3	insn-emit.c	/^gen_mulhi3 (operand0, operand1, operand2)$/;"	f
gen_mulqi3	insn-emit.c	/^gen_mulqi3 (operand0, operand1, operand2)$/;"	f
gen_mulqihi3	insn-emit.c	/^gen_mulqihi3 (operand0, operand1, operand2)$/;"	f
gen_mulsf3	insn-emit.c	/^gen_mulsf3 (operand0, operand1, operand2)$/;"	f
gen_mulsi3	insn-emit.c	/^gen_mulsi3 (operand0, operand1, operand2)$/;"	f
gen_mulsidi3	insn-emit.c	/^gen_mulsidi3 (operand0, operand1, operand2)$/;"	f
gen_multf3	insn-emit.c	/^gen_multf3 (operand0, operand1, operand2)$/;"	f
gen_mulv2sf3	insn-emit.c	/^gen_mulv2sf3 (operand0, operand1, operand2)$/;"	f
gen_mulv4hi3	insn-emit.c	/^gen_mulv4hi3 (operand0, operand1, operand2)$/;"	f
gen_mulv4sf3	insn-emit.c	/^gen_mulv4sf3 (operand0, operand1, operand2)$/;"	f
gen_mulxf3	insn-emit.c	/^gen_mulxf3 (operand0, operand1, operand2)$/;"	f
gen_negdf2	insn-emit.c	/^gen_negdf2 (operand0, operand1)$/;"	f
gen_negdf2_ifs	insn-emit.c	/^gen_negdf2_ifs (operand0, operand1, operand2)$/;"	f
gen_negdf2_memory	insn-emit.c	/^gen_negdf2_memory (operand0, operand1)$/;"	f
gen_negdi2	insn-emit.c	/^gen_negdi2 (operand0, operand1)$/;"	f
gen_neghi2	insn-emit.c	/^gen_neghi2 (operand0, operand1)$/;"	f
gen_negqi2	insn-emit.c	/^gen_negqi2 (operand0, operand1)$/;"	f
gen_negsf2	insn-emit.c	/^gen_negsf2 (operand0, operand1)$/;"	f
gen_negsf2_ifs	insn-emit.c	/^gen_negsf2_ifs (operand0, operand1, operand2)$/;"	f
gen_negsf2_memory	insn-emit.c	/^gen_negsf2_memory (operand0, operand1)$/;"	f
gen_negsi2	insn-emit.c	/^gen_negsi2 (operand0, operand1)$/;"	f
gen_negtf2	insn-emit.c	/^gen_negtf2 (operand0, operand1)$/;"	f
gen_negxf2	insn-emit.c	/^gen_negxf2 (operand0, operand1)$/;"	f
gen_nop	insn-emit.c	/^gen_nop ()$/;"	f
gen_one_cmpldi2	insn-emit.c	/^gen_one_cmpldi2 (operand0, operand1)$/;"	f
gen_one_cmplhi2	insn-emit.c	/^gen_one_cmplhi2 (operand0, operand1)$/;"	f
gen_one_cmplqi2	insn-emit.c	/^gen_one_cmplqi2 (operand0, operand1)$/;"	f
gen_one_cmplsi2	insn-emit.c	/^gen_one_cmplsi2 (operand0, operand1)$/;"	f
gen_pavgusb	insn-emit.c	/^gen_pavgusb (operand0, operand1, operand2)$/;"	f
gen_peephole2_1164	insn-emit.c	/^gen_peephole2_1164 (curr_insn, operands)$/;"	f
gen_peephole2_1165	insn-emit.c	/^gen_peephole2_1165 (curr_insn, operands)$/;"	f
gen_peephole2_1207	insn-emit.c	/^gen_peephole2_1207 (curr_insn, operands)$/;"	f
gen_peephole2_1208	insn-emit.c	/^gen_peephole2_1208 (curr_insn, operands)$/;"	f
gen_peephole2_1242	insn-emit.c	/^gen_peephole2_1242 (curr_insn, operands)$/;"	f
gen_peephole2_1243	insn-emit.c	/^gen_peephole2_1243 (curr_insn, operands)$/;"	f
gen_peephole2_1244	insn-emit.c	/^gen_peephole2_1244 (curr_insn, operands)$/;"	f
gen_peephole2_1245	insn-emit.c	/^gen_peephole2_1245 (curr_insn, operands)$/;"	f
gen_peephole2_1246	insn-emit.c	/^gen_peephole2_1246 (curr_insn, operands)$/;"	f
gen_peephole2_1247	insn-emit.c	/^gen_peephole2_1247 (curr_insn, operands)$/;"	f
gen_peephole2_1248	insn-emit.c	/^gen_peephole2_1248 (curr_insn, operands)$/;"	f
gen_peephole2_1249	insn-emit.c	/^gen_peephole2_1249 (curr_insn, operands)$/;"	f
gen_peephole2_1250	insn-emit.c	/^gen_peephole2_1250 (curr_insn, operands)$/;"	f
gen_peephole2_1251	insn-emit.c	/^gen_peephole2_1251 (curr_insn, operands)$/;"	f
gen_peephole2_1252	insn-emit.c	/^gen_peephole2_1252 (curr_insn, operands)$/;"	f
gen_peephole2_1253	insn-emit.c	/^gen_peephole2_1253 (curr_insn, operands)$/;"	f
gen_peephole2_1254	insn-emit.c	/^gen_peephole2_1254 (curr_insn, operands)$/;"	f
gen_peephole2_1255	insn-emit.c	/^gen_peephole2_1255 (curr_insn, operands)$/;"	f
gen_peephole2_1256	insn-emit.c	/^gen_peephole2_1256 (curr_insn, operands)$/;"	f
gen_peephole2_1257	insn-emit.c	/^gen_peephole2_1257 (curr_insn, operands)$/;"	f
gen_peephole2_1258	insn-emit.c	/^gen_peephole2_1258 (curr_insn, operands)$/;"	f
gen_peephole2_1259	insn-emit.c	/^gen_peephole2_1259 (curr_insn, operands)$/;"	f
gen_peephole2_1260	insn-emit.c	/^gen_peephole2_1260 (curr_insn, operands)$/;"	f
gen_peephole2_1261	insn-emit.c	/^gen_peephole2_1261 (curr_insn, operands)$/;"	f
gen_peephole2_1262	insn-emit.c	/^gen_peephole2_1262 (curr_insn, operands)$/;"	f
gen_peephole2_1263	insn-emit.c	/^gen_peephole2_1263 (curr_insn, operands)$/;"	f
gen_peephole2_1264	insn-emit.c	/^gen_peephole2_1264 (curr_insn, operands)$/;"	f
gen_peephole2_1265	insn-emit.c	/^gen_peephole2_1265 (curr_insn, operands)$/;"	f
gen_peephole2_1266	insn-emit.c	/^gen_peephole2_1266 (curr_insn, operands)$/;"	f
gen_peephole2_1267	insn-emit.c	/^gen_peephole2_1267 (curr_insn, operands)$/;"	f
gen_peephole2_1268	insn-emit.c	/^gen_peephole2_1268 (curr_insn, operands)$/;"	f
gen_peephole2_1269	insn-emit.c	/^gen_peephole2_1269 (curr_insn, operands)$/;"	f
gen_peephole2_1270	insn-emit.c	/^gen_peephole2_1270 (curr_insn, operands)$/;"	f
gen_peephole2_1271	insn-emit.c	/^gen_peephole2_1271 (curr_insn, operands)$/;"	f
gen_peephole2_1272	insn-emit.c	/^gen_peephole2_1272 (curr_insn, operands)$/;"	f
gen_peephole2_1273	insn-emit.c	/^gen_peephole2_1273 (curr_insn, operands)$/;"	f
gen_peephole2_1274	insn-emit.c	/^gen_peephole2_1274 (curr_insn, operands)$/;"	f
gen_peephole2_1275	insn-emit.c	/^gen_peephole2_1275 (curr_insn, operands)$/;"	f
gen_peephole2_1276	insn-emit.c	/^gen_peephole2_1276 (curr_insn, operands)$/;"	f
gen_peephole2_1277	insn-emit.c	/^gen_peephole2_1277 (curr_insn, operands)$/;"	f
gen_peephole2_1278	insn-emit.c	/^gen_peephole2_1278 (curr_insn, operands)$/;"	f
gen_peephole2_1279	insn-emit.c	/^gen_peephole2_1279 (curr_insn, operands)$/;"	f
gen_peephole2_1280	insn-emit.c	/^gen_peephole2_1280 (curr_insn, operands)$/;"	f
gen_peephole2_1281	insn-emit.c	/^gen_peephole2_1281 (curr_insn, operands)$/;"	f
gen_peephole2_1282	insn-emit.c	/^gen_peephole2_1282 (curr_insn, operands)$/;"	f
gen_peephole2_1283	insn-emit.c	/^gen_peephole2_1283 (curr_insn, operands)$/;"	f
gen_peephole2_1284	insn-emit.c	/^gen_peephole2_1284 (curr_insn, operands)$/;"	f
gen_peephole2_1285	insn-emit.c	/^gen_peephole2_1285 (curr_insn, operands)$/;"	f
gen_peephole2_1286	insn-emit.c	/^gen_peephole2_1286 (curr_insn, operands)$/;"	f
gen_peephole2_1287	insn-emit.c	/^gen_peephole2_1287 (curr_insn, operands)$/;"	f
gen_peephole2_1288	insn-emit.c	/^gen_peephole2_1288 (curr_insn, operands)$/;"	f
gen_peephole2_1289	insn-emit.c	/^gen_peephole2_1289 (curr_insn, operands)$/;"	f
gen_peephole2_1290	insn-emit.c	/^gen_peephole2_1290 (curr_insn, operands)$/;"	f
gen_peephole2_1291	insn-emit.c	/^gen_peephole2_1291 (curr_insn, operands)$/;"	f
gen_peephole2_1292	insn-emit.c	/^gen_peephole2_1292 (curr_insn, operands)$/;"	f
gen_peephole2_1293	insn-emit.c	/^gen_peephole2_1293 (curr_insn, operands)$/;"	f
gen_peephole2_1294	insn-emit.c	/^gen_peephole2_1294 (curr_insn, operands)$/;"	f
gen_peephole2_1295	insn-emit.c	/^gen_peephole2_1295 (curr_insn, operands)$/;"	f
gen_peephole2_1296	insn-emit.c	/^gen_peephole2_1296 (curr_insn, operands)$/;"	f
gen_peephole2_1297	insn-emit.c	/^gen_peephole2_1297 (curr_insn, operands)$/;"	f
gen_peephole2_853	insn-emit.c	/^gen_peephole2_853 (curr_insn, operands)$/;"	f
gen_peephole2_854	insn-emit.c	/^gen_peephole2_854 (curr_insn, operands)$/;"	f
gen_peephole2_858	insn-emit.c	/^gen_peephole2_858 (curr_insn, operands)$/;"	f
gen_peephole2_859	insn-emit.c	/^gen_peephole2_859 (curr_insn, operands)$/;"	f
gen_pf2id	insn-emit.c	/^gen_pf2id (operand0, operand1)$/;"	f
gen_pf2iw	insn-emit.c	/^gen_pf2iw (operand0, operand1)$/;"	f
gen_pfacc	insn-emit.c	/^gen_pfacc (operand0, operand1, operand2)$/;"	f
gen_pfmaxv2sf3	insn-emit.c	/^gen_pfmaxv2sf3 (operand0, operand1, operand2)$/;"	f
gen_pfminv2sf3	insn-emit.c	/^gen_pfminv2sf3 (operand0, operand1, operand2)$/;"	f
gen_pfnacc	insn-emit.c	/^gen_pfnacc (operand0, operand1, operand2)$/;"	f
gen_pfpnacc	insn-emit.c	/^gen_pfpnacc (operand0, operand1, operand2)$/;"	f
gen_pfrcpit1v2sf3	insn-emit.c	/^gen_pfrcpit1v2sf3 (operand0, operand1, operand2)$/;"	f
gen_pfrcpit2v2sf3	insn-emit.c	/^gen_pfrcpit2v2sf3 (operand0, operand1, operand2)$/;"	f
gen_pfrcpv2sf2	insn-emit.c	/^gen_pfrcpv2sf2 (operand0, operand1)$/;"	f
gen_pfrsqit1v2sf3	insn-emit.c	/^gen_pfrsqit1v2sf3 (operand0, operand1, operand2)$/;"	f
gen_pfrsqrtv2sf2	insn-emit.c	/^gen_pfrsqrtv2sf2 (operand0, operand1)$/;"	f
gen_pi2fw	insn-emit.c	/^gen_pi2fw (operand0, operand1)$/;"	f
gen_pmulhrwv4hi3	insn-emit.c	/^gen_pmulhrwv4hi3 (operand0, operand1, operand2)$/;"	f
gen_popdi1	insn-emit.c	/^gen_popdi1 (operand0)$/;"	f
gen_popsi1	insn-emit.c	/^gen_popsi1 (operand0)$/;"	f
gen_prefetch	insn-emit.c	/^gen_prefetch (operand0, operand1, operand2)$/;"	f
gen_prefetch	loop.c	69;"	d	file:
gen_pro_epilogue_adjust_stack	insn-emit.c	/^gen_pro_epilogue_adjust_stack (operand0, operand1, operand2)$/;"	f
gen_pro_epilogue_adjust_stack_rex64	insn-emit.c	/^gen_pro_epilogue_adjust_stack_rex64 (operand0, operand1, operand2)$/;"	f
gen_prologue	insn-emit.c	/^gen_prologue ()$/;"	f
gen_prologue_get_pc	insn-emit.c	/^gen_prologue_get_pc (operand0, operand1)$/;"	f
gen_prologue_set_got	insn-emit.c	/^gen_prologue_set_got (operand0, operand1, operand2)$/;"	f
gen_pswapdv2sf2	insn-emit.c	/^gen_pswapdv2sf2 (operand0, operand1)$/;"	f
gen_pswapdv2si2	insn-emit.c	/^gen_pswapdv2si2 (operand0, operand1)$/;"	f
gen_ptr_to_mbr_type_die	dwarf2out.c	/^gen_ptr_to_mbr_type_die (type, context_die)$/;"	f	file:
gen_push	i386.c	/^gen_push (arg)$/;"	f	file:
gen_pushdi2_rex64	insn-emit.c	/^gen_pushdi2_rex64 (operand0, operand1)$/;"	f
gen_raw_REG	emit-rtl.c	/^gen_raw_REG (mode, regno)$/;"	f
gen_rcpv4sf2	insn-emit.c	/^gen_rcpv4sf2 (operand0, operand1)$/;"	f
gen_realpart	emit-rtl.c	/^gen_realpart (mode, x)$/;"	f
gen_reg_rtx	emit-rtl.c	/^gen_reg_rtx (mode)$/;"	f
gen_reload	reload1.c	/^gen_reload (out, in, opnum, type)$/;"	f
gen_reload_outqi	insn-emit.c	/^gen_reload_outqi (operand0, operand1, operand2)$/;"	f
gen_rep_movdi_rex64	insn-emit.c	/^gen_rep_movdi_rex64 (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_rep_movqi	insn-emit.c	/^gen_rep_movqi (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_rep_movqi_rex64	insn-emit.c	/^gen_rep_movqi_rex64 (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_rep_movsi	insn-emit.c	/^gen_rep_movsi (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_rep_movsi_rex64	insn-emit.c	/^gen_rep_movsi_rex64 (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_rep_stosdi_rex64	insn-emit.c	/^gen_rep_stosdi_rex64 (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_rep_stosqi	insn-emit.c	/^gen_rep_stosqi (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_rep_stosqi_rex64	insn-emit.c	/^gen_rep_stosqi_rex64 (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_rep_stossi	insn-emit.c	/^gen_rep_stossi (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_rep_stossi_rex64	insn-emit.c	/^gen_rep_stossi_rex64 (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_return	cfgrtl.c	63;"	d	file:
gen_return	insn-emit.c	/^gen_return ()$/;"	f
gen_return_indirect_internal	insn-emit.c	/^gen_return_indirect_internal (operand0)$/;"	f
gen_return_internal	insn-emit.c	/^gen_return_internal ()$/;"	f
gen_return_pop_internal	insn-emit.c	/^gen_return_pop_internal (operand0)$/;"	f
gen_rotldi3	insn-emit.c	/^gen_rotldi3 (operand0, operand1, operand2)$/;"	f
gen_rotlhi3	insn-emit.c	/^gen_rotlhi3 (operand0, operand1, operand2)$/;"	f
gen_rotlqi3	insn-emit.c	/^gen_rotlqi3 (operand0, operand1, operand2)$/;"	f
gen_rotlsi3	insn-emit.c	/^gen_rotlsi3 (operand0, operand1, operand2)$/;"	f
gen_rotrdi3	insn-emit.c	/^gen_rotrdi3 (operand0, operand1, operand2)$/;"	f
gen_rotrhi3	insn-emit.c	/^gen_rotrhi3 (operand0, operand1, operand2)$/;"	f
gen_rotrqi3	insn-emit.c	/^gen_rotrqi3 (operand0, operand1, operand2)$/;"	f
gen_rotrsi3	insn-emit.c	/^gen_rotrsi3 (operand0, operand1, operand2)$/;"	f
gen_rsqrtv4sf2	insn-emit.c	/^gen_rsqrtv4sf2 (operand0, operand1)$/;"	f
gen_rtvec	emit-rtl.c	/^gen_rtvec VPARAMS ((int n, ...))$/;"	f
gen_rtvec_v	emit-rtl.c	/^gen_rtvec_v (n, argp)$/;"	f
gen_rtx	emit-rtl.c	/^gen_rtx VPARAMS ((enum rtx_code code, enum machine_mode mode, ...))$/;"	f
gen_rtx_ABS	genrtl.h	357;"	d
gen_rtx_ADDRESS	genrtl.h	151;"	d
gen_rtx_ADDRESSOF	genrtl.h	239;"	d
gen_rtx_ADDR_DIFF_VEC	genrtl.h	189;"	d
gen_rtx_ADDR_VEC	genrtl.h	187;"	d
gen_rtx_AND	genrtl.h	265;"	d
gen_rtx_ASHIFT	genrtl.h	273;"	d
gen_rtx_ASHIFTRT	genrtl.h	277;"	d
gen_rtx_ASM_INPUT	genrtl.h	179;"	d
gen_rtx_ASM_OPERANDS	genrtl.h	181;"	d
gen_rtx_ATTR	genrtl.h	155;"	d
gen_rtx_ATTR_FLAG	genrtl.h	163;"	d
gen_rtx_BARRIER	genrtl.h	171;"	d
gen_rtx_CALL	genrtl.h	199;"	d
gen_rtx_CALL_INSN	genrtl.h	169;"	d
gen_rtx_CALL_PLACEHOLDER	genrtl.h	381;"	d
gen_rtx_CC0	genrtl.h	237;"	d
gen_rtx_CLOBBER	genrtl.h	197;"	d
gen_rtx_CODE_LABEL	genrtl.h	173;"	d
gen_rtx_COMPARE	genrtl.h	247;"	d
gen_rtx_CONCAT	genrtl.h	229;"	d
gen_rtx_COND	genrtl.h	245;"	d
gen_rtx_COND_EXEC	genrtl.h	175;"	d
gen_rtx_CONST	genrtl.h	215;"	d
gen_rtx_CONSTANT_P_RTX	genrtl.h	379;"	d
gen_rtx_CONST_DOUBLE	emit-rtl.c	/^gen_rtx_CONST_DOUBLE (mode, arg0, arg1)$/;"	f
gen_rtx_CONST_INT	emit-rtl.c	/^gen_rtx_CONST_INT (mode, arg)$/;"	f
gen_rtx_CONST_STRING	genrtl.h	213;"	d
gen_rtx_CONST_VECTOR	genrtl.h	211;"	d
gen_rtx_DEFINE_ATTR	genrtl.h	153;"	d
gen_rtx_DEFINE_COMBINE	genrtl.h	141;"	d
gen_rtx_DEFINE_COND_EXEC	genrtl.h	147;"	d
gen_rtx_DEFINE_DELAY	genrtl.h	145;"	d
gen_rtx_DEFINE_EXPAND	genrtl.h	143;"	d
gen_rtx_DIV	genrtl.h	257;"	d
gen_rtx_EQ	genrtl.h	305;"	d
gen_rtx_EQ_ATTR	genrtl.h	161;"	d
gen_rtx_EXPR_LIST	genrtl.h	121;"	d
gen_rtx_FFS	genrtl.h	361;"	d
gen_rtx_FIX	genrtl.h	351;"	d
gen_rtx_FLOAT	genrtl.h	349;"	d
gen_rtx_FLOAT_EXTEND	genrtl.h	345;"	d
gen_rtx_FLOAT_TRUNCATE	genrtl.h	347;"	d
gen_rtx_GE	genrtl.h	307;"	d
gen_rtx_GEU	genrtl.h	315;"	d
gen_rtx_GT	genrtl.h	309;"	d
gen_rtx_GTU	genrtl.h	317;"	d
gen_rtx_HIGH	genrtl.h	367;"	d
gen_rtx_IF_THEN_ELSE	genrtl.h	243;"	d
gen_rtx_INCLUDE	genrtl.h	119;"	d
gen_rtx_INSN	genrtl.h	165;"	d
gen_rtx_INSN_LIST	genrtl.h	123;"	d
gen_rtx_IOR	genrtl.h	267;"	d
gen_rtx_JUMP_INSN	genrtl.h	167;"	d
gen_rtx_LABEL_REF	genrtl.h	233;"	d
gen_rtx_LE	genrtl.h	311;"	d
gen_rtx_LEU	genrtl.h	319;"	d
gen_rtx_LO_SUM	genrtl.h	369;"	d
gen_rtx_LSHIFTRT	genrtl.h	279;"	d
gen_rtx_LT	genrtl.h	313;"	d
gen_rtx_LTGT	genrtl.h	337;"	d
gen_rtx_LTU	genrtl.h	321;"	d
gen_rtx_MATCH_DUP	genrtl.h	129;"	d
gen_rtx_MATCH_INSN	genrtl.h	139;"	d
gen_rtx_MATCH_OPERAND	genrtl.h	125;"	d
gen_rtx_MATCH_OPERATOR	genrtl.h	131;"	d
gen_rtx_MATCH_OP_DUP	genrtl.h	135;"	d
gen_rtx_MATCH_PARALLEL	genrtl.h	133;"	d
gen_rtx_MATCH_PAR_DUP	genrtl.h	137;"	d
gen_rtx_MATCH_SCRATCH	genrtl.h	127;"	d
gen_rtx_MEM	emit-rtl.c	/^gen_rtx_MEM (mode, addr)$/;"	f
gen_rtx_MINUS	genrtl.h	251;"	d
gen_rtx_MOD	genrtl.h	259;"	d
gen_rtx_MULT	genrtl.h	255;"	d
gen_rtx_NE	genrtl.h	303;"	d
gen_rtx_NEG	genrtl.h	253;"	d
gen_rtx_NOT	genrtl.h	271;"	d
gen_rtx_ORDERED	genrtl.h	325;"	d
gen_rtx_PARALLEL	genrtl.h	177;"	d
gen_rtx_PC	genrtl.h	217;"	d
gen_rtx_PHI	genrtl.h	403;"	d
gen_rtx_PLUS	genrtl.h	249;"	d
gen_rtx_POST_DEC	genrtl.h	295;"	d
gen_rtx_POST_INC	genrtl.h	297;"	d
gen_rtx_POST_MODIFY	genrtl.h	301;"	d
gen_rtx_PREFETCH	genrtl.h	191;"	d
gen_rtx_PRE_DEC	genrtl.h	291;"	d
gen_rtx_PRE_INC	genrtl.h	293;"	d
gen_rtx_PRE_MODIFY	genrtl.h	299;"	d
gen_rtx_QUEUED	genrtl.h	241;"	d
gen_rtx_RANGE_INFO	genrtl.h	371;"	d
gen_rtx_RANGE_LIVE	genrtl.h	377;"	d
gen_rtx_RANGE_REG	genrtl.h	373;"	d
gen_rtx_RANGE_VAR	genrtl.h	375;"	d
gen_rtx_REG	emit-rtl.c	/^gen_rtx_REG (mode, regno)$/;"	f
gen_rtx_RESX	genrtl.h	205;"	d
gen_rtx_RETURN	genrtl.h	201;"	d
gen_rtx_ROTATE	genrtl.h	275;"	d
gen_rtx_ROTATERT	genrtl.h	281;"	d
gen_rtx_SCRATCH	genrtl.h	223;"	d
gen_rtx_SEQUENCE	genrtl.h	149;"	d
gen_rtx_SET	genrtl.h	193;"	d
gen_rtx_SET_ATTR	genrtl.h	157;"	d
gen_rtx_SET_ATTR_ALTERNATIVE	genrtl.h	159;"	d
gen_rtx_SIGN_EXTEND	genrtl.h	339;"	d
gen_rtx_SIGN_EXTRACT	genrtl.h	363;"	d
gen_rtx_SMAX	genrtl.h	285;"	d
gen_rtx_SMIN	genrtl.h	283;"	d
gen_rtx_SQRT	genrtl.h	359;"	d
gen_rtx_SS_MINUS	genrtl.h	395;"	d
gen_rtx_SS_PLUS	genrtl.h	391;"	d
gen_rtx_SS_TRUNCATE	genrtl.h	399;"	d
gen_rtx_STRICT_LOW_PART	genrtl.h	227;"	d
gen_rtx_SUBREG	emit-rtl.c	/^gen_rtx_SUBREG (mode, reg, offset)$/;"	f
gen_rtx_SYMBOL_REF	genrtl.h	235;"	d
gen_rtx_TRAP_IF	genrtl.h	203;"	d
gen_rtx_TRUNCATE	genrtl.h	343;"	d
gen_rtx_UDIV	genrtl.h	261;"	d
gen_rtx_UMAX	genrtl.h	289;"	d
gen_rtx_UMIN	genrtl.h	287;"	d
gen_rtx_UMOD	genrtl.h	263;"	d
gen_rtx_UNEQ	genrtl.h	327;"	d
gen_rtx_UNGE	genrtl.h	329;"	d
gen_rtx_UNGT	genrtl.h	331;"	d
gen_rtx_UNLE	genrtl.h	333;"	d
gen_rtx_UNLT	genrtl.h	335;"	d
gen_rtx_UNORDERED	genrtl.h	323;"	d
gen_rtx_UNSIGNED_FIX	genrtl.h	355;"	d
gen_rtx_UNSIGNED_FLOAT	genrtl.h	353;"	d
gen_rtx_UNSPEC	genrtl.h	183;"	d
gen_rtx_UNSPEC_VOLATILE	genrtl.h	185;"	d
gen_rtx_USE	genrtl.h	195;"	d
gen_rtx_US_MINUS	genrtl.h	397;"	d
gen_rtx_US_PLUS	genrtl.h	393;"	d
gen_rtx_US_TRUNCATE	genrtl.h	401;"	d
gen_rtx_VALUE	genrtl.h	219;"	d
gen_rtx_VEC_CONCAT	genrtl.h	387;"	d
gen_rtx_VEC_DUPLICATE	genrtl.h	389;"	d
gen_rtx_VEC_MERGE	genrtl.h	383;"	d
gen_rtx_VEC_SELECT	genrtl.h	385;"	d
gen_rtx_XOR	genrtl.h	269;"	d
gen_rtx_ZERO_EXTEND	genrtl.h	341;"	d
gen_rtx_ZERO_EXTRACT	genrtl.h	365;"	d
gen_rtx_fmt_	genrtl.c	/^gen_rtx_fmt_ (code, mode)$/;"	f
gen_rtx_fmt_0	genrtl.c	/^gen_rtx_fmt_0 (code, mode)$/;"	f
gen_rtx_fmt_0www	genrtl.c	/^gen_rtx_fmt_0www (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_E	genrtl.c	/^gen_rtx_fmt_E (code, mode, arg0)$/;"	f
gen_rtx_fmt_Ee	genrtl.c	/^gen_rtx_fmt_Ee (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_Ei	genrtl.c	/^gen_rtx_fmt_Ei (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_Ess	genrtl.c	/^gen_rtx_fmt_Ess (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_bi	genrtl.c	/^gen_rtx_fmt_bi (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_e	genrtl.c	/^gen_rtx_fmt_e (code, mode, arg0)$/;"	f
gen_rtx_fmt_e0	genrtl.c	/^gen_rtx_fmt_e0 (code, mode, arg0)$/;"	f
gen_rtx_fmt_eE	genrtl.c	/^gen_rtx_fmt_eE (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_eEee0	genrtl.c	/^gen_rtx_fmt_eEee0 (code, mode, arg0, arg1, arg2, arg3)$/;"	f
gen_rtx_fmt_ee	genrtl.c	/^gen_rtx_fmt_ee (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_eee	genrtl.c	/^gen_rtx_fmt_eee (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_eeeee	genrtl.c	/^gen_rtx_fmt_eeeee (code, mode, arg0, arg1, arg2, arg3, arg4)$/;"	f
gen_rtx_fmt_ei	genrtl.c	/^gen_rtx_fmt_ei (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_eit	genrtl.c	/^gen_rtx_fmt_eit (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_eti	genrtl.c	/^gen_rtx_fmt_eti (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_i	genrtl.c	/^gen_rtx_fmt_i (code, mode, arg0)$/;"	f
gen_rtx_fmt_i0	genrtl.c	/^gen_rtx_fmt_i0 (code, mode, arg0)$/;"	f
gen_rtx_fmt_iE	genrtl.c	/^gen_rtx_fmt_iE (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_iiiiiiiitt	genrtl.c	/^gen_rtx_fmt_iiiiiiiitt (code, mode, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9)$/;"	f
gen_rtx_fmt_is	genrtl.c	/^gen_rtx_fmt_is (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_isE	genrtl.c	/^gen_rtx_fmt_isE (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_iss	genrtl.c	/^gen_rtx_fmt_iss (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_iuu	genrtl.c	/^gen_rtx_fmt_iuu (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_iuu00iss	genrtl.c	/^gen_rtx_fmt_iuu00iss (code, mode, arg0, arg1, arg2, arg3, arg4, arg5)$/;"	f
gen_rtx_fmt_iuueiee	genrtl.c	/^gen_rtx_fmt_iuueiee (code, mode, arg0, arg1, arg2, arg3, arg4, arg5, arg6)$/;"	f
gen_rtx_fmt_iuueiee0	genrtl.c	/^gen_rtx_fmt_iuueiee0 (code, mode, arg0, arg1, arg2, arg3, arg4, arg5, arg6)$/;"	f
gen_rtx_fmt_iuueieee	genrtl.c	/^gen_rtx_fmt_iuueieee (code, mode, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7)$/;"	f
gen_rtx_fmt_s	genrtl.c	/^gen_rtx_fmt_s (code, mode, arg0)$/;"	f
gen_rtx_fmt_sE	genrtl.c	/^gen_rtx_fmt_sE (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_sEss	genrtl.c	/^gen_rtx_fmt_sEss (code, mode, arg0, arg1, arg2, arg3)$/;"	f
gen_rtx_fmt_ss	genrtl.c	/^gen_rtx_fmt_ss (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_sse	genrtl.c	/^gen_rtx_fmt_sse (code, mode, arg0, arg1, arg2)$/;"	f
gen_rtx_fmt_ssiEEsi	genrtl.c	/^gen_rtx_fmt_ssiEEsi (code, mode, arg0, arg1, arg2, arg3, arg4, arg5, arg6)$/;"	f
gen_rtx_fmt_u00	genrtl.c	/^gen_rtx_fmt_u00 (code, mode, arg0)$/;"	f
gen_rtx_fmt_ue	genrtl.c	/^gen_rtx_fmt_ue (code, mode, arg0, arg1)$/;"	f
gen_rtx_fmt_uuEiiiiiibbii	genrtl.c	/^gen_rtx_fmt_uuEiiiiiibbii (code, mode, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12)$/;"	f
gen_rtx_fmt_uuuu	genrtl.c	/^gen_rtx_fmt_uuuu (code, mode, arg0, arg1, arg2, arg3)$/;"	f
gen_rtx_fmt_w	genrtl.c	/^gen_rtx_fmt_w (code, mode, arg0)$/;"	f
gen_rtx_raw_CONST_DOUBLE	genrtl.h	209;"	d
gen_rtx_raw_CONST_INT	genrtl.h	207;"	d
gen_rtx_raw_MEM	genrtl.h	231;"	d
gen_rtx_raw_REG	genrtl.h	221;"	d
gen_rtx_raw_SUBREG	genrtl.h	225;"	d
gen_seq	insn-emit.c	/^gen_seq (operand0)$/;"	f
gen_sequence	emit-rtl.c	/^gen_sequence ()$/;"	f
gen_set_type_die	dwarf2out.c	/^gen_set_type_die (type, context_die)$/;"	f	file:
gen_setcc_2	insn-emit.c	/^gen_setcc_2 (operand0, operand1)$/;"	f
gen_sfence	insn-emit.c	/^gen_sfence ()$/;"	f
gen_sge	insn-emit.c	/^gen_sge (operand0)$/;"	f
gen_sgeu	insn-emit.c	/^gen_sgeu (operand0)$/;"	f
gen_sgt	insn-emit.c	/^gen_sgt (operand0)$/;"	f
gen_sgtu	insn-emit.c	/^gen_sgtu (operand0)$/;"	f
gen_sibcall_epilogue	insn-emit.c	/^gen_sibcall_epilogue ()$/;"	f
gen_sindf2	insn-emit.c	/^gen_sindf2 (operand0, operand1)$/;"	f
gen_sinsf2	insn-emit.c	/^gen_sinsf2 (operand0, operand1)$/;"	f
gen_sintf2	insn-emit.c	/^gen_sintf2 (operand0, operand1)$/;"	f
gen_sinxf2	insn-emit.c	/^gen_sinxf2 (operand0, operand1)$/;"	f
gen_sle	insn-emit.c	/^gen_sle (operand0)$/;"	f
gen_sleu	insn-emit.c	/^gen_sleu (operand0)$/;"	f
gen_slt	insn-emit.c	/^gen_slt (operand0)$/;"	f
gen_sltgt	insn-emit.c	/^gen_sltgt (operand0)$/;"	f
gen_sltu	insn-emit.c	/^gen_sltu (operand0)$/;"	f
gen_smaxv4hi3	insn-emit.c	/^gen_smaxv4hi3 (operand0, operand1, operand2)$/;"	f
gen_smaxv4sf3	insn-emit.c	/^gen_smaxv4sf3 (operand0, operand1, operand2)$/;"	f
gen_sminv4hi3	insn-emit.c	/^gen_sminv4hi3 (operand0, operand1, operand2)$/;"	f
gen_sminv4sf3	insn-emit.c	/^gen_sminv4sf3 (operand0, operand1, operand2)$/;"	f
gen_smuldi3_highpart	insn-emit.c	/^gen_smuldi3_highpart (operand0, operand1, operand2)$/;"	f
gen_smulsi3_highpart	insn-emit.c	/^gen_smulsi3_highpart (operand0, operand1, operand2)$/;"	f
gen_smulv4hi3_highpart	insn-emit.c	/^gen_smulv4hi3_highpart (operand0, operand1, operand2)$/;"	f
gen_sne	insn-emit.c	/^gen_sne (operand0)$/;"	f
gen_sordered	insn-emit.c	/^gen_sordered (operand0)$/;"	f
gen_split_1001	insn-emit.c	/^gen_split_1001 (operands)$/;"	f
gen_split_1003	insn-emit.c	/^gen_split_1003 (operands)$/;"	f
gen_split_1004	insn-emit.c	/^gen_split_1004 (operands)$/;"	f
gen_split_1005	insn-emit.c	/^gen_split_1005 (operands)$/;"	f
gen_split_1010	insn-emit.c	/^gen_split_1010 (operands)$/;"	f
gen_split_1013	insn-emit.c	/^gen_split_1013 (operands)$/;"	f
gen_split_1014	insn-emit.c	/^gen_split_1014 (operands)$/;"	f
gen_split_1015	insn-emit.c	/^gen_split_1015 (operands)$/;"	f
gen_split_1028	insn-emit.c	/^gen_split_1028 (operands)$/;"	f
gen_split_1033	insn-emit.c	/^gen_split_1033 (operands)$/;"	f
gen_split_1034	insn-emit.c	/^gen_split_1034 (operands)$/;"	f
gen_split_1035	insn-emit.c	/^gen_split_1035 (operands)$/;"	f
gen_split_1036	insn-emit.c	/^gen_split_1036 (operands)$/;"	f
gen_split_1037	insn-emit.c	/^gen_split_1037 (operands)$/;"	f
gen_split_1038	insn-emit.c	/^gen_split_1038 (operands)$/;"	f
gen_split_1040	insn-emit.c	/^gen_split_1040 (operands)$/;"	f
gen_split_1041	insn-emit.c	/^gen_split_1041 (operands)$/;"	f
gen_split_1042	insn-emit.c	/^gen_split_1042 (operands)$/;"	f
gen_split_1043	insn-emit.c	/^gen_split_1043 (operands)$/;"	f
gen_split_1044	insn-emit.c	/^gen_split_1044 (operands)$/;"	f
gen_split_1045	insn-emit.c	/^gen_split_1045 (operands)$/;"	f
gen_split_1048	insn-emit.c	/^gen_split_1048 (operands)$/;"	f
gen_split_1049	insn-emit.c	/^gen_split_1049 (operands)$/;"	f
gen_split_1050	insn-emit.c	/^gen_split_1050 (operands)$/;"	f
gen_split_1051	insn-emit.c	/^gen_split_1051 (operands)$/;"	f
gen_split_1053	insn-emit.c	/^gen_split_1053 (operands)$/;"	f
gen_split_1054	insn-emit.c	/^gen_split_1054 (operands)$/;"	f
gen_split_1055	insn-emit.c	/^gen_split_1055 (operands)$/;"	f
gen_split_1056	insn-emit.c	/^gen_split_1056 (operands)$/;"	f
gen_split_1057	insn-emit.c	/^gen_split_1057 (operands)$/;"	f
gen_split_1058	insn-emit.c	/^gen_split_1058 (operands)$/;"	f
gen_split_1060	insn-emit.c	/^gen_split_1060 (operands)$/;"	f
gen_split_1061	insn-emit.c	/^gen_split_1061 (operands)$/;"	f
gen_split_1062	insn-emit.c	/^gen_split_1062 (operands)$/;"	f
gen_split_1063	insn-emit.c	/^gen_split_1063 (operands)$/;"	f
gen_split_1064	insn-emit.c	/^gen_split_1064 (operands)$/;"	f
gen_split_1067	insn-emit.c	/^gen_split_1067 (operands)$/;"	f
gen_split_1068	insn-emit.c	/^gen_split_1068 (operands)$/;"	f
gen_split_1069	insn-emit.c	/^gen_split_1069 (operands)$/;"	f
gen_split_1070	insn-emit.c	/^gen_split_1070 (operands)$/;"	f
gen_split_1072	insn-emit.c	/^gen_split_1072 (operands)$/;"	f
gen_split_1074	insn-emit.c	/^gen_split_1074 (operands)$/;"	f
gen_split_1075	insn-emit.c	/^gen_split_1075 (operands)$/;"	f
gen_split_1077	insn-emit.c	/^gen_split_1077 (operands)$/;"	f
gen_split_1079	insn-emit.c	/^gen_split_1079 (operands)$/;"	f
gen_split_1081	insn-emit.c	/^gen_split_1081 (operands)$/;"	f
gen_split_1082	insn-emit.c	/^gen_split_1082 (operands)$/;"	f
gen_split_1083	insn-emit.c	/^gen_split_1083 (operands)$/;"	f
gen_split_1087	insn-emit.c	/^gen_split_1087 (operands)$/;"	f
gen_split_1088	insn-emit.c	/^gen_split_1088 (operands)$/;"	f
gen_split_1092	insn-emit.c	/^gen_split_1092 (operands)$/;"	f
gen_split_1093	insn-emit.c	/^gen_split_1093 (operands)$/;"	f
gen_split_1099	insn-emit.c	/^gen_split_1099 (operands)$/;"	f
gen_split_1100	insn-emit.c	/^gen_split_1100 (operands)$/;"	f
gen_split_1133	insn-emit.c	/^gen_split_1133 (operands)$/;"	f
gen_split_1134	insn-emit.c	/^gen_split_1134 (operands)$/;"	f
gen_split_1135	insn-emit.c	/^gen_split_1135 (operands)$/;"	f
gen_split_1136	insn-emit.c	/^gen_split_1136 (operands)$/;"	f
gen_split_1155	insn-emit.c	/^gen_split_1155 (operands)$/;"	f
gen_split_1156	insn-emit.c	/^gen_split_1156 (operands)$/;"	f
gen_split_1157	insn-emit.c	/^gen_split_1157 (operands)$/;"	f
gen_split_1158	insn-emit.c	/^gen_split_1158 (operands)$/;"	f
gen_split_1162	insn-emit.c	/^gen_split_1162 (operands)$/;"	f
gen_split_1163	insn-emit.c	/^gen_split_1163 (operands)$/;"	f
gen_split_1178	insn-emit.c	/^gen_split_1178 (operands)$/;"	f
gen_split_1179	insn-emit.c	/^gen_split_1179 (operands)$/;"	f
gen_split_1181	insn-emit.c	/^gen_split_1181 (operands)$/;"	f
gen_split_1182	insn-emit.c	/^gen_split_1182 (operands)$/;"	f
gen_split_1214	insn-emit.c	/^gen_split_1214 (operands)$/;"	f
gen_split_1218	insn-emit.c	/^gen_split_1218 (operands)$/;"	f
gen_split_1219	insn-emit.c	/^gen_split_1219 (operands)$/;"	f
gen_split_1221	insn-emit.c	/^gen_split_1221 (operands)$/;"	f
gen_split_1222	insn-emit.c	/^gen_split_1222 (operands)$/;"	f
gen_split_1224	insn-emit.c	/^gen_split_1224 (operands)$/;"	f
gen_split_1225	insn-emit.c	/^gen_split_1225 (operands)$/;"	f
gen_split_1227	insn-emit.c	/^gen_split_1227 (operands)$/;"	f
gen_split_1228	insn-emit.c	/^gen_split_1228 (operands)$/;"	f
gen_split_1230	insn-emit.c	/^gen_split_1230 (operands)$/;"	f
gen_split_1231	insn-emit.c	/^gen_split_1231 (operands)$/;"	f
gen_split_1232	insn-emit.c	/^gen_split_1232 (operands)$/;"	f
gen_split_1236	insn-emit.c	/^gen_split_1236 (operands)$/;"	f
gen_split_1237	insn-emit.c	/^gen_split_1237 (operands)$/;"	f
gen_split_1238	insn-emit.c	/^gen_split_1238 (operands)$/;"	f
gen_split_1239	insn-emit.c	/^gen_split_1239 (operands)$/;"	f
gen_split_1240	insn-emit.c	/^gen_split_1240 (operands)$/;"	f
gen_split_1241	insn-emit.c	/^gen_split_1241 (operands)$/;"	f
gen_split_1306	insn-emit.c	/^gen_split_1306 (operands)$/;"	f
gen_split_1307	insn-emit.c	/^gen_split_1307 (operands)$/;"	f
gen_split_1308	insn-emit.c	/^gen_split_1308 (operands)$/;"	f
gen_split_1309	insn-emit.c	/^gen_split_1309 (operands)$/;"	f
gen_split_1310	insn-emit.c	/^gen_split_1310 (operands)$/;"	f
gen_split_1311	insn-emit.c	/^gen_split_1311 (operands)$/;"	f
gen_split_1312	insn-emit.c	/^gen_split_1312 (operands)$/;"	f
gen_split_1313	insn-emit.c	/^gen_split_1313 (operands)$/;"	f
gen_split_845	insn-emit.c	/^gen_split_845 (operands)$/;"	f
gen_split_855	insn-emit.c	/^gen_split_855 (operands)$/;"	f
gen_split_856	insn-emit.c	/^gen_split_856 (operands)$/;"	f
gen_split_857	insn-emit.c	/^gen_split_857 (operands)$/;"	f
gen_split_860	insn-emit.c	/^gen_split_860 (operands)$/;"	f
gen_split_862	insn-emit.c	/^gen_split_862 (operands)$/;"	f
gen_split_863	insn-emit.c	/^gen_split_863 (operands)$/;"	f
gen_split_864	insn-emit.c	/^gen_split_864 (operands)$/;"	f
gen_split_866	insn-emit.c	/^gen_split_866 (operands)$/;"	f
gen_split_867	insn-emit.c	/^gen_split_867 (operands)$/;"	f
gen_split_868	insn-emit.c	/^gen_split_868 (operands)$/;"	f
gen_split_869	insn-emit.c	/^gen_split_869 (operands)$/;"	f
gen_split_872	insn-emit.c	/^gen_split_872 (operands)$/;"	f
gen_split_873	insn-emit.c	/^gen_split_873 (operands)$/;"	f
gen_split_874	insn-emit.c	/^gen_split_874 (operands)$/;"	f
gen_split_875	insn-emit.c	/^gen_split_875 (operands)$/;"	f
gen_split_876	insn-emit.c	/^gen_split_876 (operands)$/;"	f
gen_split_877	insn-emit.c	/^gen_split_877 (operands)$/;"	f
gen_split_879	insn-emit.c	/^gen_split_879 (operands)$/;"	f
gen_split_881	insn-emit.c	/^gen_split_881 (operands)$/;"	f
gen_split_882	insn-emit.c	/^gen_split_882 (operands)$/;"	f
gen_split_883	insn-emit.c	/^gen_split_883 (operands)$/;"	f
gen_split_885	insn-emit.c	/^gen_split_885 (operands)$/;"	f
gen_split_886	insn-emit.c	/^gen_split_886 (operands)$/;"	f
gen_split_887	insn-emit.c	/^gen_split_887 (operands)$/;"	f
gen_split_889	insn-emit.c	/^gen_split_889 (operands)$/;"	f
gen_split_890	insn-emit.c	/^gen_split_890 (operands)$/;"	f
gen_split_891	insn-emit.c	/^gen_split_891 (operands)$/;"	f
gen_split_893	insn-emit.c	/^gen_split_893 (operands)$/;"	f
gen_split_894	insn-emit.c	/^gen_split_894 (operands)$/;"	f
gen_split_895	insn-emit.c	/^gen_split_895 (operands)$/;"	f
gen_split_896	insn-emit.c	/^gen_split_896 (operands)$/;"	f
gen_split_897	insn-emit.c	/^gen_split_897 (operands)$/;"	f
gen_split_898	insn-emit.c	/^gen_split_898 (operands)$/;"	f
gen_split_899	insn-emit.c	/^gen_split_899 (operands)$/;"	f
gen_split_900	insn-emit.c	/^gen_split_900 (operands)$/;"	f
gen_split_901	insn-emit.c	/^gen_split_901 (operands)$/;"	f
gen_split_902	insn-emit.c	/^gen_split_902 (operands)$/;"	f
gen_split_903	insn-emit.c	/^gen_split_903 (operands)$/;"	f
gen_split_910	insn-emit.c	/^gen_split_910 (operands)$/;"	f
gen_split_911	insn-emit.c	/^gen_split_911 (operands)$/;"	f
gen_split_912	insn-emit.c	/^gen_split_912 (operands)$/;"	f
gen_split_914	insn-emit.c	/^gen_split_914 (operands)$/;"	f
gen_split_915	insn-emit.c	/^gen_split_915 (operands)$/;"	f
gen_split_917	insn-emit.c	/^gen_split_917 (operands)$/;"	f
gen_split_918	insn-emit.c	/^gen_split_918 (operands)$/;"	f
gen_split_920	insn-emit.c	/^gen_split_920 (operands)$/;"	f
gen_split_921	insn-emit.c	/^gen_split_921 (operands)$/;"	f
gen_split_923	insn-emit.c	/^gen_split_923 (operands)$/;"	f
gen_split_924	insn-emit.c	/^gen_split_924 (operands)$/;"	f
gen_split_929	insn-emit.c	/^gen_split_929 (operands)$/;"	f
gen_split_930	insn-emit.c	/^gen_split_930 (operands)$/;"	f
gen_split_931	insn-emit.c	/^gen_split_931 (operands)$/;"	f
gen_split_936	insn-emit.c	/^gen_split_936 (operands)$/;"	f
gen_split_937	insn-emit.c	/^gen_split_937 (operands)$/;"	f
gen_split_938	insn-emit.c	/^gen_split_938 (operands)$/;"	f
gen_split_943	insn-emit.c	/^gen_split_943 (operands)$/;"	f
gen_split_944	insn-emit.c	/^gen_split_944 (operands)$/;"	f
gen_split_945	insn-emit.c	/^gen_split_945 (operands)$/;"	f
gen_split_950	insn-emit.c	/^gen_split_950 (operands)$/;"	f
gen_split_952	insn-emit.c	/^gen_split_952 (operands)$/;"	f
gen_split_954	insn-emit.c	/^gen_split_954 (operands)$/;"	f
gen_split_955	insn-emit.c	/^gen_split_955 (operands)$/;"	f
gen_split_956	insn-emit.c	/^gen_split_956 (operands)$/;"	f
gen_split_957	insn-emit.c	/^gen_split_957 (operands)$/;"	f
gen_split_958	insn-emit.c	/^gen_split_958 (operands)$/;"	f
gen_split_959	insn-emit.c	/^gen_split_959 (operands)$/;"	f
gen_split_960	insn-emit.c	/^gen_split_960 (operands)$/;"	f
gen_split_961	insn-emit.c	/^gen_split_961 (operands)$/;"	f
gen_split_962	insn-emit.c	/^gen_split_962 (operands)$/;"	f
gen_split_970	insn-emit.c	/^gen_split_970 (operands)$/;"	f
gen_sqrtdf2	insn-emit.c	/^gen_sqrtdf2 (operand0, operand1)$/;"	f
gen_sqrtdf2_1	insn-emit.c	/^gen_sqrtdf2_1 (operand0, operand1)$/;"	f
gen_sqrtdf2_1_sse_only	insn-emit.c	/^gen_sqrtdf2_1_sse_only (operand0, operand1)$/;"	f
gen_sqrtdf2_i387	insn-emit.c	/^gen_sqrtdf2_i387 (operand0, operand1)$/;"	f
gen_sqrtsf2	insn-emit.c	/^gen_sqrtsf2 (operand0, operand1)$/;"	f
gen_sqrtsf2_1	insn-emit.c	/^gen_sqrtsf2_1 (operand0, operand1)$/;"	f
gen_sqrtsf2_1_sse_only	insn-emit.c	/^gen_sqrtsf2_1_sse_only (operand0, operand1)$/;"	f
gen_sqrtsf2_i387	insn-emit.c	/^gen_sqrtsf2_i387 (operand0, operand1)$/;"	f
gen_sqrttf2	insn-emit.c	/^gen_sqrttf2 (operand0, operand1)$/;"	f
gen_sqrtv4sf2	insn-emit.c	/^gen_sqrtv4sf2 (operand0, operand1)$/;"	f
gen_sqrtxf2	insn-emit.c	/^gen_sqrtxf2 (operand0, operand1)$/;"	f
gen_ssaddv4hi3	insn-emit.c	/^gen_ssaddv4hi3 (operand0, operand1, operand2)$/;"	f
gen_ssaddv8qi3	insn-emit.c	/^gen_ssaddv8qi3 (operand0, operand1, operand2)$/;"	f
gen_sse_andti3	insn-emit.c	/^gen_sse_andti3 (operand0, operand1, operand2)$/;"	f
gen_sse_clrv4sf	insn-emit.c	/^gen_sse_clrv4sf (operand0)$/;"	f
gen_sse_comi	insn-emit.c	/^gen_sse_comi (operand0, operand1, operand2)$/;"	f
gen_sse_iorti3	insn-emit.c	/^gen_sse_iorti3 (operand0, operand1, operand2)$/;"	f
gen_sse_loadss	insn-emit.c	/^gen_sse_loadss (operand0, operand1)$/;"	f
gen_sse_movaps	insn-emit.c	/^gen_sse_movaps (operand0, operand1)$/;"	f
gen_sse_movdfcc	insn-emit.c	/^gen_sse_movdfcc (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_sse_movdfcc_eq	insn-emit.c	/^gen_sse_movdfcc_eq (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_sse_movhlps	insn-emit.c	/^gen_sse_movhlps (operand0, operand1, operand2)$/;"	f
gen_sse_movhps	insn-emit.c	/^gen_sse_movhps (operand0, operand1, operand2)$/;"	f
gen_sse_movlhps	insn-emit.c	/^gen_sse_movlhps (operand0, operand1, operand2)$/;"	f
gen_sse_movlps	insn-emit.c	/^gen_sse_movlps (operand0, operand1, operand2)$/;"	f
gen_sse_movmskps	insn-emit.c	/^gen_sse_movmskps (operand0, operand1)$/;"	f
gen_sse_movntdi	insn-emit.c	/^gen_sse_movntdi (operand0, operand1)$/;"	f
gen_sse_movntv4sf	insn-emit.c	/^gen_sse_movntv4sf (operand0, operand1)$/;"	f
gen_sse_movsfcc	insn-emit.c	/^gen_sse_movsfcc (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_sse_movsfcc_eq	insn-emit.c	/^gen_sse_movsfcc_eq (operand0, operand1, operand2, operand3, operand4)$/;"	f
gen_sse_movss	insn-emit.c	/^gen_sse_movss (operand0, operand1, operand2)$/;"	f
gen_sse_movups	insn-emit.c	/^gen_sse_movups (operand0, operand1)$/;"	f
gen_sse_nandti3	insn-emit.c	/^gen_sse_nandti3 (operand0, operand1, operand2)$/;"	f
gen_sse_prologue_save	insn-emit.c	/^gen_sse_prologue_save (operand0, operand1, operand2, operand3)$/;"	f
gen_sse_shufps	insn-emit.c	/^gen_sse_shufps (operand0, operand1, operand2, operand3)$/;"	f
gen_sse_storess	insn-emit.c	/^gen_sse_storess (operand0, operand1)$/;"	f
gen_sse_ucomi	insn-emit.c	/^gen_sse_ucomi (operand0, operand1, operand2)$/;"	f
gen_sse_unpckhps	insn-emit.c	/^gen_sse_unpckhps (operand0, operand1, operand2)$/;"	f
gen_sse_unpcklps	insn-emit.c	/^gen_sse_unpcklps (operand0, operand1, operand2)$/;"	f
gen_sse_xorti3	insn-emit.c	/^gen_sse_xorti3 (operand0, operand1, operand2)$/;"	f
gen_sssubv4hi3	insn-emit.c	/^gen_sssubv4hi3 (operand0, operand1, operand2)$/;"	f
gen_sssubv8qi3	insn-emit.c	/^gen_sssubv8qi3 (operand0, operand1, operand2)$/;"	f
gen_stmxcsr	insn-emit.c	/^gen_stmxcsr (operand0)$/;"	f
gen_string_type_die	dwarf2out.c	/^gen_string_type_die (type, context_die)$/;"	f	file:
gen_strlendi	insn-emit.c	/^gen_strlendi (operand0, operand1, operand2, operand3)$/;"	f
gen_strlenqi_1	insn-emit.c	/^gen_strlenqi_1 (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_strlenqi_rex_1	insn-emit.c	/^gen_strlenqi_rex_1 (operand0, operand1, operand2, operand3, operand4, operand5)$/;"	f
gen_strlensi	insn-emit.c	/^gen_strlensi (operand0, operand1, operand2, operand3)$/;"	f
gen_strmovdi_rex64	insn-emit.c	/^gen_strmovdi_rex64 (operand0, operand1)$/;"	f
gen_strmovdi_rex_1	insn-emit.c	/^gen_strmovdi_rex_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_strmovhi	insn-emit.c	/^gen_strmovhi (operand0, operand1)$/;"	f
gen_strmovhi_1	insn-emit.c	/^gen_strmovhi_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_strmovhi_rex64	insn-emit.c	/^gen_strmovhi_rex64 (operand0, operand1)$/;"	f
gen_strmovhi_rex_1	insn-emit.c	/^gen_strmovhi_rex_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_strmovqi	insn-emit.c	/^gen_strmovqi (operand0, operand1)$/;"	f
gen_strmovqi_1	insn-emit.c	/^gen_strmovqi_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_strmovqi_rex64	insn-emit.c	/^gen_strmovqi_rex64 (operand0, operand1)$/;"	f
gen_strmovqi_rex_1	insn-emit.c	/^gen_strmovqi_rex_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_strmovsi	insn-emit.c	/^gen_strmovsi (operand0, operand1)$/;"	f
gen_strmovsi_1	insn-emit.c	/^gen_strmovsi_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_strmovsi_rex64	insn-emit.c	/^gen_strmovsi_rex64 (operand0, operand1)$/;"	f
gen_strmovsi_rex_1	insn-emit.c	/^gen_strmovsi_rex_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_strsetdi_rex64	insn-emit.c	/^gen_strsetdi_rex64 (operand0, operand1)$/;"	f
gen_strsetdi_rex_1	insn-emit.c	/^gen_strsetdi_rex_1 (operand0, operand1, operand2)$/;"	f
gen_strsethi	insn-emit.c	/^gen_strsethi (operand0, operand1)$/;"	f
gen_strsethi_1	insn-emit.c	/^gen_strsethi_1 (operand0, operand1, operand2)$/;"	f
gen_strsethi_rex64	insn-emit.c	/^gen_strsethi_rex64 (operand0, operand1)$/;"	f
gen_strsethi_rex_1	insn-emit.c	/^gen_strsethi_rex_1 (operand0, operand1, operand2)$/;"	f
gen_strsetqi	insn-emit.c	/^gen_strsetqi (operand0, operand1)$/;"	f
gen_strsetqi_1	insn-emit.c	/^gen_strsetqi_1 (operand0, operand1, operand2)$/;"	f
gen_strsetqi_rex64	insn-emit.c	/^gen_strsetqi_rex64 (operand0, operand1)$/;"	f
gen_strsetqi_rex_1	insn-emit.c	/^gen_strsetqi_rex_1 (operand0, operand1, operand2)$/;"	f
gen_strsetsi	insn-emit.c	/^gen_strsetsi (operand0, operand1)$/;"	f
gen_strsetsi_1	insn-emit.c	/^gen_strsetsi_1 (operand0, operand1, operand2)$/;"	f
gen_strsetsi_rex64	insn-emit.c	/^gen_strsetsi_rex64 (operand0, operand1)$/;"	f
gen_strsetsi_rex_1	insn-emit.c	/^gen_strsetsi_rex_1 (operand0, operand1, operand2)$/;"	f
gen_struct_or_union_type_die	dwarf2out.c	/^gen_struct_or_union_type_die (type, context_die)$/;"	f	file:
gen_sub2_insn	optabs.c	/^gen_sub2_insn (x, y)$/;"	f
gen_sub3_insn	optabs.c	/^gen_sub3_insn (r0, r1, c)$/;"	f
gen_subdf3	insn-emit.c	/^gen_subdf3 (operand0, operand1, operand2)$/;"	f
gen_subdi3	insn-emit.c	/^gen_subdi3 (operand0, operand1, operand2)$/;"	f
gen_subdi3_carry_rex64	insn-emit.c	/^gen_subdi3_carry_rex64 (operand0, operand1, operand2)$/;"	f
gen_subhi3	insn-emit.c	/^gen_subhi3 (operand0, operand1, operand2)$/;"	f
gen_subprogram_die	dwarf2out.c	/^gen_subprogram_die (decl, context_die)$/;"	f	file:
gen_subqi3	insn-emit.c	/^gen_subqi3 (operand0, operand1, operand2)$/;"	f
gen_subroutine_type_die	dwarf2out.c	/^gen_subroutine_type_die (type, context_die)$/;"	f	file:
gen_subrv2sf3	insn-emit.c	/^gen_subrv2sf3 (operand0, operand1, operand2)$/;"	f
gen_subsf3	insn-emit.c	/^gen_subsf3 (operand0, operand1, operand2)$/;"	f
gen_subsi3	insn-emit.c	/^gen_subsi3 (operand0, operand1, operand2)$/;"	f
gen_subsi3_carry	insn-emit.c	/^gen_subsi3_carry (operand0, operand1, operand2)$/;"	f
gen_subsi3_carry_zext	insn-emit.c	/^gen_subsi3_carry_zext (operand0, operand1, operand2)$/;"	f
gen_subtf3	insn-emit.c	/^gen_subtf3 (operand0, operand1, operand2)$/;"	f
gen_subv2sf3	insn-emit.c	/^gen_subv2sf3 (operand0, operand1, operand2)$/;"	f
gen_subv2si3	insn-emit.c	/^gen_subv2si3 (operand0, operand1, operand2)$/;"	f
gen_subv4hi3	insn-emit.c	/^gen_subv4hi3 (operand0, operand1, operand2)$/;"	f
gen_subv4sf3	insn-emit.c	/^gen_subv4sf3 (operand0, operand1, operand2)$/;"	f
gen_subv8qi3	insn-emit.c	/^gen_subv8qi3 (operand0, operand1, operand2)$/;"	f
gen_subxf3	insn-emit.c	/^gen_subxf3 (operand0, operand1, operand2)$/;"	f
gen_suneq	insn-emit.c	/^gen_suneq (operand0)$/;"	f
gen_sunge	insn-emit.c	/^gen_sunge (operand0)$/;"	f
gen_sungt	insn-emit.c	/^gen_sungt (operand0)$/;"	f
gen_sunle	insn-emit.c	/^gen_sunle (operand0)$/;"	f
gen_sunlt	insn-emit.c	/^gen_sunlt (operand0)$/;"	f
gen_sunordered	insn-emit.c	/^gen_sunordered (operand0)$/;"	f
gen_swaptf	insn-emit.c	/^gen_swaptf (operand0, operand1)$/;"	f
gen_swapxf	insn-emit.c	/^gen_swapxf (operand0, operand1)$/;"	f
gen_tablejump	expr.c	10540;"	d	file:
gen_tablejump	insn-emit.c	/^gen_tablejump (operand0, operand1)$/;"	f
gen_tagged_type_instantiation_die	dwarf2out.c	/^gen_tagged_type_instantiation_die (type, context_die)$/;"	f	file:
gen_testqi_ccz_1	insn-emit.c	/^gen_testqi_ccz_1 (operand0, operand1)$/;"	f
gen_testqi_ext_ccno_0	insn-emit.c	/^gen_testqi_ext_ccno_0 (operand0, operand1)$/;"	f
gen_testsi_1	insn-emit.c	/^gen_testsi_1 (operand0, operand1)$/;"	f
gen_testsi_ccno_1	insn-emit.c	/^gen_testsi_ccno_1 (operand0, operand1)$/;"	f
gen_trap	insn-emit.c	/^gen_trap ()$/;"	f
gen_truncdfsf2	insn-emit.c	/^gen_truncdfsf2 (operand0, operand1)$/;"	f
gen_truncdfsf2_3	insn-emit.c	/^gen_truncdfsf2_3 (operand0, operand1)$/;"	f
gen_truncdfsf2_sse_only	insn-emit.c	/^gen_truncdfsf2_sse_only (operand0, operand1)$/;"	f
gen_trunctfdf2	insn-emit.c	/^gen_trunctfdf2 (operand0, operand1)$/;"	f
gen_trunctfsf2	insn-emit.c	/^gen_trunctfsf2 (operand0, operand1)$/;"	f
gen_truncxfdf2	insn-emit.c	/^gen_truncxfdf2 (operand0, operand1)$/;"	f
gen_truncxfsf2	insn-emit.c	/^gen_truncxfsf2 (operand0, operand1)$/;"	f
gen_type	c-aux-info.c	/^gen_type (ret_val, t, style)$/;"	f	file:
gen_type_die	dwarf2out.c	/^gen_type_die (type, context_die)$/;"	f	file:
gen_type_die_for_member	dwarf2out.c	/^gen_type_die_for_member (type, member, context_die)$/;"	f	file:
gen_typedef_die	dwarf2out.c	/^gen_typedef_die (decl, context_die)$/;"	f	file:
gen_udivmoddi4	insn-emit.c	/^gen_udivmoddi4 (operand0, operand1, operand2, operand3)$/;"	f
gen_udivmodhi4	insn-emit.c	/^gen_udivmodhi4 (operand0, operand1, operand2, operand3)$/;"	f
gen_udivmodsi4	insn-emit.c	/^gen_udivmodsi4 (operand0, operand1, operand2, operand3)$/;"	f
gen_udivqi3	insn-emit.c	/^gen_udivqi3 (operand0, operand1, operand2)$/;"	f
gen_umaxv8qi3	insn-emit.c	/^gen_umaxv8qi3 (operand0, operand1, operand2)$/;"	f
gen_uminv8qi3	insn-emit.c	/^gen_uminv8qi3 (operand0, operand1, operand2)$/;"	f
gen_umuldi3_highpart	insn-emit.c	/^gen_umuldi3_highpart (operand0, operand1, operand2)$/;"	f
gen_umulditi3	insn-emit.c	/^gen_umulditi3 (operand0, operand1, operand2)$/;"	f
gen_umulqihi3	insn-emit.c	/^gen_umulqihi3 (operand0, operand1, operand2)$/;"	f
gen_umulsi3_highpart	insn-emit.c	/^gen_umulsi3_highpart (operand0, operand1, operand2)$/;"	f
gen_umulsidi3	insn-emit.c	/^gen_umulsidi3 (operand0, operand1, operand2)$/;"	f
gen_umulv4hi3_highpart	insn-emit.c	/^gen_umulv4hi3_highpart (operand0, operand1, operand2)$/;"	f
gen_unspecified_parameters_die	dwarf2out.c	/^gen_unspecified_parameters_die (decl_or_type, context_die)$/;"	f	file:
gen_untyped_call	insn-emit.c	/^gen_untyped_call (operand0, operand1, operand2)$/;"	f
gen_usaddv4hi3	insn-emit.c	/^gen_usaddv4hi3 (operand0, operand1, operand2)$/;"	f
gen_usaddv8qi3	insn-emit.c	/^gen_usaddv8qi3 (operand0, operand1, operand2)$/;"	f
gen_ussubv4hi3	insn-emit.c	/^gen_ussubv4hi3 (operand0, operand1, operand2)$/;"	f
gen_ussubv8qi3	insn-emit.c	/^gen_ussubv8qi3 (operand0, operand1, operand2)$/;"	f
gen_variable_die	dwarf2out.c	/^gen_variable_die (decl, context_die)$/;"	f	file:
gen_vmaddv4sf3	insn-emit.c	/^gen_vmaddv4sf3 (operand0, operand1, operand2)$/;"	f
gen_vmdivv4sf3	insn-emit.c	/^gen_vmdivv4sf3 (operand0, operand1, operand2)$/;"	f
gen_vmmaskcmpv4sf3	insn-emit.c	/^gen_vmmaskcmpv4sf3 (operand0, operand1, operand2, operand3)$/;"	f
gen_vmmaskncmpv4sf3	insn-emit.c	/^gen_vmmaskncmpv4sf3 (operand0, operand1, operand2, operand3)$/;"	f
gen_vmmulv4sf3	insn-emit.c	/^gen_vmmulv4sf3 (operand0, operand1, operand2)$/;"	f
gen_vmrcpv4sf2	insn-emit.c	/^gen_vmrcpv4sf2 (operand0, operand1, operand2)$/;"	f
gen_vmrsqrtv4sf2	insn-emit.c	/^gen_vmrsqrtv4sf2 (operand0, operand1, operand2)$/;"	f
gen_vmsmaxv4sf3	insn-emit.c	/^gen_vmsmaxv4sf3 (operand0, operand1, operand2)$/;"	f
gen_vmsminv4sf3	insn-emit.c	/^gen_vmsminv4sf3 (operand0, operand1, operand2)$/;"	f
gen_vmsqrtv4sf2	insn-emit.c	/^gen_vmsqrtv4sf2 (operand0, operand1, operand2)$/;"	f
gen_vmsubv4sf3	insn-emit.c	/^gen_vmsubv4sf3 (operand0, operand1, operand2)$/;"	f
gen_x86_fldcw_1	insn-emit.c	/^gen_x86_fldcw_1 (operand0)$/;"	f
gen_x86_fnstcw_1	insn-emit.c	/^gen_x86_fnstcw_1 (operand0)$/;"	f
gen_x86_fnstsw_1	insn-emit.c	/^gen_x86_fnstsw_1 (operand0)$/;"	f
gen_x86_movdicc_0_m1_rex64	insn-emit.c	/^gen_x86_movdicc_0_m1_rex64 (operand0)$/;"	f
gen_x86_movsicc_0_m1	insn-emit.c	/^gen_x86_movsicc_0_m1 (operand0)$/;"	f
gen_x86_sahf_1	insn-emit.c	/^gen_x86_sahf_1 (operand0)$/;"	f
gen_x86_shift_adj_1	insn-emit.c	/^gen_x86_shift_adj_1 (operand0, operand1, operand2, operand3)$/;"	f
gen_x86_shift_adj_2	insn-emit.c	/^gen_x86_shift_adj_2 (operand0, operand1, operand2)$/;"	f
gen_x86_shift_adj_3	insn-emit.c	/^gen_x86_shift_adj_3 (operand0, operand1, operand2)$/;"	f
gen_x86_shld_1	insn-emit.c	/^gen_x86_shld_1 (operand0, operand1, operand2)$/;"	f
gen_x86_shrd_1	insn-emit.c	/^gen_x86_shrd_1 (operand0, operand1, operand2)$/;"	f
gen_xordi3	insn-emit.c	/^gen_xordi3 (operand0, operand1, operand2)$/;"	f
gen_xorhi3	insn-emit.c	/^gen_xorhi3 (operand0, operand1, operand2)$/;"	f
gen_xorqi3	insn-emit.c	/^gen_xorqi3 (operand0, operand1, operand2)$/;"	f
gen_xorqi_cc_ext_1	insn-emit.c	/^gen_xorqi_cc_ext_1 (operand0, operand1, operand2)$/;"	f
gen_xorsi3	insn-emit.c	/^gen_xorsi3 (operand0, operand1, operand2)$/;"	f
gen_zero_extendhidi2	insn-emit.c	/^gen_zero_extendhidi2 (operand0, operand1)$/;"	f
gen_zero_extendhisi2	insn-emit.c	/^gen_zero_extendhisi2 (operand0, operand1)$/;"	f
gen_zero_extendhisi2_and	insn-emit.c	/^gen_zero_extendhisi2_and (operand0, operand1)$/;"	f
gen_zero_extendqidi2	insn-emit.c	/^gen_zero_extendqidi2 (operand0, operand1)$/;"	f
gen_zero_extendqihi2	insn-emit.c	/^gen_zero_extendqihi2 (operand0, operand1)$/;"	f
gen_zero_extendqisi2	insn-emit.c	/^gen_zero_extendqisi2 (operand0, operand1)$/;"	f
gen_zero_extendsidi2	insn-emit.c	/^gen_zero_extendsidi2 (operand0, operand1)$/;"	f
gen_zero_extendsidi2_32	insn-emit.c	/^gen_zero_extendsidi2_32 (operand0, operand1)$/;"	f
gen_zero_extendsidi2_rex64	insn-emit.c	/^gen_zero_extendsidi2_rex64 (operand0, operand1)$/;"	f
general_induction_var	loop.c	/^general_induction_var (loop, x, src_reg, add_val, mult_val, ext_val,$/;"	f	file:
general_init	toplev.c	/^general_init (argv0)$/;"	f	file:
general_no_elim_operand	i386.c	/^general_no_elim_operand (op, mode)$/;"	f
general_operand	recog.c	/^general_operand (op, mode)$/;"	f
generate_macinfo_entry	dwarfout.c	/^generate_macinfo_entry (type, offset, string)$/;"	f	file:
generate_new_sfname_entry	dwarfout.c	/^generate_new_sfname_entry ()$/;"	f	file:
generate_srcinfo_entry	dwarfout.c	/^generate_srcinfo_entry (line_entry_num, files_entry_num)$/;"	f	file:
generating_concat_p	rtl.c	/^int generating_concat_p;$/;"	v
generic	varray.h	/^  PTR			 generic[1];$/;"	m	union:varray_data_tag
genfun	recog.h	/^  const insn_gen_fn genfun;$/;"	m	struct:insn_data
genrtl_asm_stmt	c-semantics.c	/^genrtl_asm_stmt (cv_qualifier, string, output_operands,$/;"	f
genrtl_break_stmt	c-semantics.c	/^genrtl_break_stmt ()$/;"	f
genrtl_case_label	c-semantics.c	/^genrtl_case_label (case_label)$/;"	f
genrtl_compound_stmt	c-semantics.c	/^genrtl_compound_stmt (t)$/;"	f
genrtl_continue_stmt	c-semantics.c	/^genrtl_continue_stmt ()$/;"	f
genrtl_decl_cleanup	c-semantics.c	/^genrtl_decl_cleanup (t)$/;"	f
genrtl_decl_stmt	c-semantics.c	/^genrtl_decl_stmt (t)$/;"	f
genrtl_do_pushlevel	c-semantics.c	/^genrtl_do_pushlevel ()$/;"	f
genrtl_do_stmt	c-semantics.c	/^genrtl_do_stmt (t)$/;"	f
genrtl_expr_stmt	c-semantics.c	/^genrtl_expr_stmt (expr)$/;"	f
genrtl_expr_stmt_value	c-semantics.c	/^genrtl_expr_stmt_value (expr, want_value, maybe_last)$/;"	f
genrtl_for_stmt	c-semantics.c	/^genrtl_for_stmt (t)$/;"	f
genrtl_goto_stmt	c-semantics.c	/^genrtl_goto_stmt (destination)$/;"	f
genrtl_if_stmt	c-semantics.c	/^genrtl_if_stmt (t)$/;"	f
genrtl_return_stmt	c-semantics.c	/^genrtl_return_stmt (stmt)$/;"	f
genrtl_scope_stmt	c-semantics.c	/^genrtl_scope_stmt (t)$/;"	f
genrtl_switch_stmt	c-semantics.c	/^genrtl_switch_stmt (t)$/;"	f
genrtl_while_stmt	c-semantics.c	/^genrtl_while_stmt (t)$/;"	f
gesf2_libfunc	libfuncs.h	194;"	d
get_AT	dwarf2out.c	/^get_AT (die, attr_kind)$/;"	f	file:
get_AT_flag	dwarf2out.c	/^get_AT_flag (die, attr_kind)$/;"	f	file:
get_AT_hi_pc	dwarf2out.c	/^get_AT_hi_pc (die)$/;"	f	file:
get_AT_low_pc	dwarf2out.c	/^get_AT_low_pc (die)$/;"	f	file:
get_AT_ref	dwarf2out.c	/^get_AT_ref (die, attr_kind)$/;"	f	file:
get_AT_string	dwarf2out.c	/^get_AT_string (die, attr_kind)$/;"	f	file:
get_AT_unsigned	dwarf2out.c	/^get_AT_unsigned (die, attr_kind)$/;"	f	file:
get__Pragma_string	cpplib.c	/^get__Pragma_string (pfile)$/;"	f	file:
get_addr	alias.c	/^get_addr (x)$/;"	f
get_alias_set	alias.c	/^get_alias_set (t)$/;"	f
get_alias_set	langhooks.h	/^  HOST_WIDE_INT (*get_alias_set) PARAMS ((tree));$/;"	m	struct:lang_hooks
get_alias_set_entry	alias.c	/^get_alias_set_entry (alias_set)$/;"	f	file:
get_arg_pointer_save_area	function.c	/^get_arg_pointer_save_area (f)$/;"	f
get_asm_operand_n_inputs	reg-stack.c	/^get_asm_operand_n_inputs (body)$/;"	f	file:
get_attr_alternative	insn-attr.h	8;"	d
get_attr_athlon_decode	insn-attrtab.c	/^get_attr_athlon_decode (insn)$/;"	f
get_attr_athlon_fpunits	insn-attrtab.c	/^get_attr_athlon_fpunits (insn)$/;"	f
get_attr_fp_int_src	insn-attrtab.c	/^get_attr_fp_int_src (insn)$/;"	f
get_attr_i387	insn-attrtab.c	/^get_attr_i387 (insn)$/;"	f
get_attr_imm_disp	insn-attrtab.c	/^get_attr_imm_disp (insn)$/;"	f
get_attr_length	final.c	/^get_attr_length (insn)$/;"	f
get_attr_length_address	insn-attrtab.c	/^get_attr_length_address (insn)$/;"	f
get_attr_length_immediate	insn-attrtab.c	/^get_attr_length_immediate (insn)$/;"	f
get_attr_memory	insn-attrtab.c	/^get_attr_memory (insn)$/;"	f
get_attr_mode	insn-attrtab.c	/^get_attr_mode (insn)$/;"	f
get_attr_modrm	insn-attrtab.c	/^get_attr_modrm (insn)$/;"	f
get_attr_pent_pair	insn-attrtab.c	/^get_attr_pent_pair (insn)$/;"	f
get_attr_pent_prefix	insn-attrtab.c	/^get_attr_pent_prefix (insn)$/;"	f
get_attr_ppro_uops	insn-attrtab.c	/^get_attr_ppro_uops (insn)$/;"	f
get_attr_prefix_0f	insn-attrtab.c	/^get_attr_prefix_0f (insn)$/;"	f
get_attr_prefix_data16	insn-attrtab.c	/^get_attr_prefix_data16 (insn)$/;"	f
get_attr_prefix_rep	insn-attrtab.c	/^get_attr_prefix_rep (insn)$/;"	f
get_attr_type	insn-attrtab.c	/^get_attr_type (insn)$/;"	f
get_best_mode	stor-layout.c	/^get_best_mode (bitsize, bitpos, align, largest_mode, volatilep)$/;"	f
get_bitmap_width	gcse.c	/^get_bitmap_width (n, x, y)$/;"	f	file:
get_block_head_tail	haifa-sched.c	/^get_block_head_tail (b, headp, tailp)$/;"	f
get_block_vector	function.c	/^get_block_vector (block, n_blocks_p)$/;"	f	file:
get_branch_condition	reorg.c	/^get_branch_condition (insn, target)$/;"	f	file:
get_callee_fndecl	tree.c	/^get_callee_fndecl (call)$/;"	f
get_cfa_from_loc_descr	dwarf2out.c	/^get_cfa_from_loc_descr (cfa, loc)$/;"	f	file:
get_coefficients	dependence.c	/^get_coefficients (du, coefficients)$/;"	f	file:
get_condition	loop.c	/^get_condition (jump, earliest)$/;"	f
get_condition	sched-deps.c	/^get_condition (insn)$/;"	f	file:
get_condition_for_loop	loop.c	/^get_condition_for_loop (loop, x)$/;"	f
get_containing_scope	tree.c	/^get_containing_scope (t)$/;"	f
get_cse_reg_info	cse.c	/^get_cse_reg_info (regno)$/;"	f	file:
get_effective_char	cpplex.c	/^get_effective_char (pfile)$/;"	f	file:
get_exception_filter	except.c	/^get_exception_filter (fun)$/;"	f	file:
get_exception_pointer	except.c	/^get_exception_pointer (fun)$/;"	f
get_file_function_name	tree.c	/^get_file_function_name (kind)$/;"	f
get_file_function_name_long	tree.c	/^get_file_function_name_long (type)$/;"	f
get_fileinfo	c-lex.c	/^get_fileinfo (name)$/;"	f
get_first_block_beg	function.c	/^get_first_block_beg ()$/;"	f
get_first_label_num	emit-rtl.c	/^get_first_label_num ()$/;"	f
get_first_nonparm_insn	function.c	/^get_first_nonparm_insn ()$/;"	f
get_flag_spec	c-format.c	/^get_flag_spec (spec, flag, predicates)$/;"	f	file:
get_frame_alias_set	alias.c	/^get_frame_alias_set ()$/;"	f
get_frame_size	function.c	/^get_frame_size ()$/;"	f
get_func_frame_size	function.c	/^get_func_frame_size (f)$/;"	f
get_func_hard_reg_initial_val	integrate.c	/^get_func_hard_reg_initial_val (fun, reg)$/;"	f
get_hard_reg_initial_reg	integrate.c	/^get_hard_reg_initial_reg (fun, reg)$/;"	f
get_hard_reg_initial_val	integrate.c	/^get_hard_reg_initial_val (mode, regno)$/;"	f
get_hard_regnum	reg-stack.c	/^get_hard_regnum (regstack, reg)$/;"	f	file:
get_identifier	stringpool.c	/^get_identifier (text)$/;"	f
get_identifier_with_length	stringpool.c	/^get_identifier_with_length (text, length)$/;"	f
get_inner_array_type	tree.c	/^get_inner_array_type (array)$/;"	f
get_inner_reference	expr.c	/^get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode,$/;"	f
get_insn_name	insn-output.c	/^get_insn_name (code)$/;"	f
get_insn_template	final.c	/^get_insn_template (code, insn)$/;"	f
get_insns	emit-rtl.c	/^get_insns ()$/;"	f
get_integer_term	rtlanal.c	/^get_integer_term (x)$/;"	f
get_jump_flags	reorg.c	/^get_jump_flags (insn, label)$/;"	f	file:
get_jump_table_offset	rtlanal.c	/^get_jump_table_offset (insn, earliest)$/;"	f
get_key_value	prefix.c	/^get_key_value (key)$/;"	f	file:
get_label_after	jump.c	/^get_label_after (insn)$/;"	f
get_label_before	jump.c	/^get_label_before (insn)$/;"	f
get_label_from_map	integrate.c	/^get_label_from_map (map, i)$/;"	f
get_last_insn	emit-rtl.c	/^get_last_insn ()$/;"	f
get_last_insn_anywhere	emit-rtl.c	/^get_last_insn_anywhere ()$/;"	f
get_last_value	combine.c	/^get_last_value (x)$/;"	f	file:
get_last_value_validate	combine.c	/^get_last_value_validate (loc, insn, tick, replace)$/;"	f	file:
get_low_bound	dependence.c	/^get_low_bound (node, variable)$/;"	f	file:
get_max_uid	emit-rtl.c	/^get_max_uid ()$/;"	f
get_mem_attrs	emit-rtl.c	/^get_mem_attrs (alias, expr, offset, size, align, mode)$/;"	f	file:
get_mem_expr_from_op	final.c	/^get_mem_expr_from_op (op, paddressp)$/;"	f	file:
get_memory_rtx	builtins.c	/^get_memory_rtx (exp)$/;"	f	file:
get_mode_alignment	rtl.c	/^get_mode_alignment (mode)$/;"	f
get_named_section_flags	varasm.c	/^get_named_section_flags (section)$/;"	f
get_narrower	tree.c	/^get_narrower (op, unsignedp_ptr)$/;"	f
get_node_dependence	dependence.c	/^get_node_dependence ()$/;"	f	file:
get_one_coefficient	dependence.c	/^get_one_coefficient (node, coefficients, du, type)$/;"	f	file:
get_parm_info	c-decl.c	/^get_parm_info (void_at_end)$/;"	f
get_pending_sizes	stor-layout.c	/^get_pending_sizes ()$/;"	f
get_pointer_alignment	builtins.c	/^get_pointer_alignment (exp, max_align)$/;"	f	file:
get_pool_constant	varasm.c	/^get_pool_constant (addr)$/;"	f
get_pool_constant_for_function	varasm.c	/^get_pool_constant_for_function (f, addr)$/;"	f
get_pool_constant_mark	varasm.c	/^get_pool_constant_mark (addr, pmarked)$/;"	f
get_pool_mode	varasm.c	/^get_pool_mode (addr)$/;"	f
get_pool_mode_for_function	varasm.c	/^get_pool_mode_for_function (f, addr)$/;"	f
get_pool_offset	varasm.c	/^get_pool_offset (addr)$/;"	f
get_pool_size	varasm.c	/^get_pool_size ()$/;"	f
get_pos_from_mask	combine.c	/^get_pos_from_mask (m, plen)$/;"	f	file:
get_qualified_type	tree.c	/^get_qualified_type (type, type_quals)$/;"	f
get_related_value	rtlanal.c	/^get_related_value (x)$/;"	f
get_run_time	timevar.c	/^get_run_time ()$/;"	f
get_secondary_mem	reload.c	/^get_secondary_mem (x, mode, opnum, type)$/;"	f
get_set_constructor_bits	tree.c	/^get_set_constructor_bits (init, buffer, bit_size)$/;"	f
get_set_constructor_bytes	tree.c	/^get_set_constructor_bytes (init, buffer, wd_size)$/;"	f
get_subtarget	expr.c	/^get_subtarget (x)$/;"	f	file:
get_time	timevar.c	/^get_time (now)$/;"	f	file:
get_token_no_padding	cpplib.c	/^get_token_no_padding (pfile)$/;"	f	file:
get_true_reg	reg-stack.c	/^get_true_reg (pat)$/;"	f	file:
get_unit_last_insn	haifa-sched.c	/^get_unit_last_insn (instance)$/;"	f
get_unwidened	tree.c	/^get_unwidened (op, for_type)$/;"	f
get_value_hash	cselib.c	/^get_value_hash (entry)$/;"	f	file:
get_varargs_alias_set	alias.c	/^get_varargs_alias_set ()$/;"	f
get_visual_tbl_length	sched-vis.c	/^get_visual_tbl_length ()$/;"	f	file:
getcwd	getpwd.c	48;"	d	file:
getdecls	c-decl.c	/^getdecls ()$/;"	f
getf2_libfunc	libfuncs.h	218;"	d
getpwd	getpwd.c	/^getpwd ()$/;"	f
gettags	c-decl.c	/^gettags ()$/;"	f
gettext	intl.h	48;"	d
gettext	intl.h	49;"	d
gexf2_libfunc	libfuncs.h	210;"	d
ggc_add_deletable_htab	ggc-common.c	/^ggc_add_deletable_htab (x, marked_p, mark)$/;"	f
ggc_add_root	ggc-common.c	/^ggc_add_root (base, nelt, size, cb)$/;"	f
ggc_add_rtx_root	ggc-common.c	/^ggc_add_rtx_root (base, nelt)$/;"	f
ggc_add_rtx_varray_root	ggc-common.c	/^ggc_add_rtx_varray_root (base, nelt)$/;"	f
ggc_add_tree_hash_table_root	ggc-common.c	/^ggc_add_tree_hash_table_root (base, nelt)$/;"	f
ggc_add_tree_root	ggc-common.c	/^ggc_add_tree_root (base, nelt)$/;"	f
ggc_add_tree_varray_root	ggc-common.c	/^ggc_add_tree_varray_root (base, nelt)$/;"	f
ggc_alloc	ggc-page.c	/^ggc_alloc (size)$/;"	f
ggc_alloc_cleared	ggc-common.c	/^ggc_alloc_cleared (size)$/;"	f
ggc_alloc_rtvec	ggc.h	149;"	d
ggc_alloc_rtx	ggc.h	145;"	d
ggc_alloc_string	stringpool.c	/^ggc_alloc_string (contents, length)$/;"	f
ggc_alloc_tree	ggc.h	153;"	d
ggc_allocated_p	ggc-page.c	/^ggc_allocated_p (p)$/;"	f	file:
ggc_collect	ggc-page.c	/^ggc_collect ()$/;"	f
ggc_del_root	ggc-common.c	/^ggc_del_root (base)$/;"	f
ggc_get_size	ggc-page.c	/^ggc_get_size (p)$/;"	f
ggc_htab_delete	ggc-common.c	/^ggc_htab_delete (slot, info)$/;"	f	file:
ggc_htab_mark	ggc.h	/^typedef void (*ggc_htab_mark) PARAMS ((const void *));$/;"	t
ggc_htab_marked_p	ggc.h	/^typedef int (*ggc_htab_marked_p) PARAMS ((const void *));$/;"	t
ggc_mark	ggc.h	117;"	d
ggc_mark_nonnull_tree	ggc.h	103;"	d
ggc_mark_roots	ggc-common.c	/^ggc_mark_roots ()$/;"	f
ggc_mark_rtvec	ggc.h	110;"	d
ggc_mark_rtvec_children	ggc-common.c	/^ggc_mark_rtvec_children (v)$/;"	f
ggc_mark_rtx	ggc.h	89;"	d
ggc_mark_rtx_children	ggc-common.c	/^ggc_mark_rtx_children (r)$/;"	f
ggc_mark_rtx_children_1	ggc-common.c	/^ggc_mark_rtx_children_1 (r)$/;"	f	file:
ggc_mark_rtx_ptr	ggc-common.c	/^ggc_mark_rtx_ptr (elt)$/;"	f	file:
ggc_mark_rtx_varray	ggc-common.c	/^ggc_mark_rtx_varray (v)$/;"	f
ggc_mark_rtx_varray_ptr	ggc-common.c	/^ggc_mark_rtx_varray_ptr (elt)$/;"	f	file:
ggc_mark_struct_function	function.c	/^ggc_mark_struct_function (f)$/;"	f
ggc_mark_tree	ggc.h	96;"	d
ggc_mark_tree_hash_table	ggc-common.c	/^ggc_mark_tree_hash_table (ht)$/;"	f
ggc_mark_tree_hash_table_entry	ggc-common.c	/^ggc_mark_tree_hash_table_entry (he, k)$/;"	f	file:
ggc_mark_tree_hash_table_ptr	ggc-common.c	/^ggc_mark_tree_hash_table_ptr (elt)$/;"	f	file:
ggc_mark_tree_ptr	ggc-common.c	/^ggc_mark_tree_ptr (elt)$/;"	f	file:
ggc_mark_tree_varray	ggc-common.c	/^ggc_mark_tree_varray (v)$/;"	f
ggc_mark_tree_varray_ptr	ggc-common.c	/^ggc_mark_tree_varray_ptr (elt)$/;"	f	file:
ggc_mark_trees	ggc-common.c	/^ggc_mark_trees ()$/;"	f	file:
ggc_marked_p	ggc-page.c	/^ggc_marked_p (p)$/;"	f
ggc_pending_trees	ggc-common.c	/^varray_type ggc_pending_trees;$/;"	v
ggc_pop_context	ggc-page.c	/^ggc_pop_context ()$/;"	f
ggc_print_common_statistics	ggc-common.c	/^ggc_print_common_statistics (stream, stats)$/;"	f
ggc_print_statistics	ggc-page.c	/^ggc_print_statistics ()$/;"	f
ggc_push_context	ggc-page.c	/^ggc_push_context ()$/;"	f
ggc_recalculate_in_use_p	ggc-page.c	/^ggc_recalculate_in_use_p (p)$/;"	f	file:
ggc_root	ggc-common.c	/^struct ggc_root$/;"	s	file:
ggc_set_mark	ggc-page.c	/^ggc_set_mark (p)$/;"	f
ggc_statistics	ggc.h	/^typedef struct ggc_statistics $/;"	s
ggc_statistics	ggc.h	/^} ggc_statistics;$/;"	t	typeref:struct:ggc_statistics
ggc_stats	ggc-common.c	/^static ggc_statistics *ggc_stats;$/;"	v	file:
ggc_strdup	ggc.h	162;"	d
ggc_test_and_set_mark	ggc.h	86;"	d
giv	loop.c	/^  struct induction *giv;	\/* GIV this prefetch is based on.  *\/$/;"	m	struct:prefetch_info	typeref:struct:prefetch_info::induction	file:
giv	loop.h	/^  struct induction *giv;	\/* List of all insns that compute a giv$/;"	m	struct:iv_class	typeref:struct:iv_class::induction
giv_count	loop.h	/^  int giv_count;		\/* Number of DEST_REG givs computed from this$/;"	m	struct:iv_class
giv_number	loop.c	/^  int giv_number;$/;"	m	struct:combine_givs_stats	file:
giv_type	loop.h	/^  enum g_types giv_type;	\/* Indicate whether DEST_ADDR or DEST_REG *\/$/;"	m	struct:induction	typeref:enum:induction::g_types
global	loop.c	/^  unsigned int global : 1;	\/* 1 means reg is live outside this loop *\/$/;"	m	struct:movable	file:
global_alloc	global.c	/^global_alloc (file)$/;"	f
global_binding_level	c-decl.c	/^static struct binding_level *global_binding_level;$/;"	v	typeref:struct:binding_level	file:
global_bindings_p	c-decl.c	/^global_bindings_p ()$/;"	f
global_conflicts	global.c	/^global_conflicts ()$/;"	f	file:
global_const_equiv_varray	integrate.c	/^varray_type global_const_equiv_varray;$/;"	v
global_dc	diagnostic.c	/^diagnostic_context *global_dc = &global_diagnostic_context;$/;"	v
global_decl	debug.h	/^  void (* global_decl) PARAMS ((tree decl));$/;"	m	struct:gcc_debug_hooks
global_diagnostic_context	diagnostic.c	/^static diagnostic_context global_diagnostic_context;$/;"	v	file:
global_live_at_end	basic-block.h	/^  regset global_live_at_end;$/;"	m	struct:basic_block_def
global_live_at_start	basic-block.h	/^  regset global_live_at_start;$/;"	m	struct:basic_block_def
global_regs	regclass.c	/^char global_regs[FIRST_PSEUDO_REGISTER];$/;"	v
global_rtl	emit-rtl.c	/^rtx global_rtl[GR_MAX];$/;"	v
global_rtl_index	rtl.h	/^enum global_rtl_index$/;"	g
global_total_width	vasprintf.c	/^int global_total_width;$/;"	v
global_trees	tree.c	/^tree global_trees[TI_MAX];$/;"	v
global_value	c-tree.h	/^  tree global_value, local_value, label_value, implicit_decl;$/;"	m	struct:lang_identifier
globalize_decl	varasm.c	/^globalize_decl (decl)$/;"	f	file:
globalize_reg	regclass.c	/^globalize_reg (i)$/;"	f
globals	ggc-page.c	/^static struct globals$/;"	s	file:
glue_header_name	cpplib.c	/^glue_header_name (pfile)$/;"	f	file:
gmalloc	gcse.c	/^gmalloc (size)$/;"	f	file:
goto_fixup	stmt.c	/^struct goto_fixup$/;"	s	file:
goto_fixup_chain	stmt.c	394;"	d	file:
graph_dump_format	toplev.c	/^enum graph_dump_types graph_dump_format;$/;"	v	typeref:enum:graph_dump_types
graph_dump_p	toplev.c	/^  char const graph_dump_p;$/;"	m	struct:dump_file_info	file:
graph_dump_types	flags.h	/^enum graph_dump_types$/;"	g
graph_ext	graph.c	/^static const char *const graph_ext[] =$/;"	v	file:
grealloc	gcse.c	/^grealloc (ptr, size)$/;"	f	file:
grokdeclarator	c-decl.c	/^grokdeclarator (declarator, declspecs, decl_context, initialized)$/;"	f	file:
grokfield	c-decl.c	/^grokfield (filename, line, declarator, declspecs, width)$/;"	f
grokparms	c-decl.c	/^grokparms (parms_info, funcdef_flag)$/;"	f	file:
groktypename	c-decl.c	/^groktypename (typename)$/;"	f
groktypename_in_parm_context	c-decl.c	/^groktypename_in_parm_context (typename)$/;"	f
group	ggc-page.c	/^  struct page_group *group;$/;"	m	struct:page_entry	typeref:struct:page_entry::page_group	file:
group_case_nodes	stmt.c	/^group_case_nodes (head)$/;"	f	file:
group_leader	sched-deps.c	/^group_leader (insn)$/;"	f	file:
groups	reload.h	/^  short groups[N_REG_CLASSES];$/;"	m	struct:needs
gt	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
gtdf2_libfunc	libfuncs.h	201;"	d
gthf2_libfunc	libfuncs.h	185;"	d
gtsf2_libfunc	libfuncs.h	193;"	d
gttf2_libfunc	libfuncs.h	217;"	d
gtxf2_libfunc	libfuncs.h	209;"	d
h	alloca.c	/^    } h;$/;"	m	union:hdr	typeref:struct:hdr::__anon3	file:
h_i_d	haifa-sched.c	/^struct haifa_insn_data *h_i_d;$/;"	v	typeref:struct:haifa_insn_data
haifa_classify_insn	sched-rgn.c	/^haifa_classify_insn (insn)$/;"	f	file:
haifa_edge	sched-rgn.c	/^haifa_edge;$/;"	t	typeref:struct:__anon28	file:
haifa_insn_data	sched-int.h	/^struct haifa_insn_data$/;"	s
handle_alias_attribute	attribs.c	/^handle_alias_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_aligned_attribute	attribs.c	/^handle_aligned_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_always_inline_attribute	attribs.c	/^handle_always_inline_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_assertion	cpplib.c	/^handle_assertion (pfile, str, type)$/;"	f	file:
handle_avail_expr	gcse.c	/^handle_avail_expr (insn, expr)$/;"	f	file:
handle_common_attribute	attribs.c	/^handle_common_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_const_attribute	attribs.c	/^handle_const_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_constructor_attribute	attribs.c	/^handle_constructor_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_deprecated_attribute	attribs.c	/^handle_deprecated_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_destructor_attribute	attribs.c	/^handle_destructor_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_epilogue_set	function.c	/^handle_epilogue_set (set, p)$/;"	f	file:
handle_format_arg_attribute	c-format.c	/^handle_format_arg_attribute (node, name, args, flags, no_add_attrs)$/;"	f
handle_format_attribute	c-format.c	/^handle_format_attribute (node, name, args, flags, no_add_attrs)$/;"	f
handle_malloc_attribute	attribs.c	/^handle_malloc_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_missing_header	cppfiles.c	/^handle_missing_header (pfile, fname, angle_brackets)$/;"	f	file:
handle_mode_attribute	attribs.c	/^handle_mode_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_newline	cpplex.c	/^handle_newline (pfile)$/;"	f	file:
handle_no_instrument_function_attribute	attribs.c	/^handle_no_instrument_function_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_no_limit_stack_attribute	attribs.c	/^handle_no_limit_stack_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_nocommon_attribute	attribs.c	/^handle_nocommon_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_noinline_attribute	attribs.c	/^handle_noinline_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_noreturn_attribute	attribs.c	/^handle_noreturn_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_packed_attribute	attribs.c	/^handle_packed_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_pragma_extern_prefix	c-pragma.c	/^handle_pragma_extern_prefix (dummy)$/;"	f	file:
handle_pragma_pack	c-pragma.c	/^handle_pragma_pack (dummy)$/;"	f	file:
handle_pragma_redefine_extname	c-pragma.c	/^handle_pragma_redefine_extname (dummy)$/;"	f	file:
handle_pragma_weak	c-pragma.c	/^handle_pragma_weak (dummy)$/;"	f	file:
handle_pure_attribute	attribs.c	/^handle_pure_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_rd_kill_set	gcse.c	/^handle_rd_kill_set (insn, regno, bb)$/;"	f	file:
handle_section_attribute	attribs.c	/^handle_section_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_transparent_union_attribute	attribs.c	/^handle_transparent_union_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_unused_attribute	attribs.c	/^handle_unused_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_used_attribute	attribs.c	/^handle_used_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_vector_size_attribute	attribs.c	/^handle_vector_size_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handle_weak_attribute	attribs.c	/^handle_weak_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
handled_component_p	expr.c	/^handled_component_p (t)$/;"	f
handler	cppinit.c	/^  cl_directive_handler handler;$/;"	m	struct:pending_option	file:
handler	cpplib.c	/^    pragma_cb handler;$/;"	m	union:pragma_entry::__anon47	file:
handler	cpplib.c	/^  directive_handler handler;	\/* Function to handle directive.  *\/$/;"	m	struct:directive	file:
handler	tree.h	/^  tree (*const handler) PARAMS ((tree *node, tree name, tree args,$/;"	m	struct:attribute_spec
handler_block_flag	tree.h	/^  unsigned handler_block_flag : 1;$/;"	m	struct:tree_block
handlers	except.c	/^  rtx handlers;$/;"	m	struct:reachable_info	file:
handlers	optabs.h	/^  } handlers [NUM_MACHINE_MODES];$/;"	m	struct:optab	typeref:struct:optab::__anon14
hard_frame_pointer_offset	i386.c	/^  HOST_WIDE_INT hard_frame_pointer_offset;$/;"	m	struct:ix86_frame	file:
hard_frame_pointer_rtx	rtl.h	1629;"	d
hard_function_value	explow.c	/^hard_function_value (valtype, func, outgoing)$/;"	f
hard_libcall_value	explow.c	/^hard_libcall_value (mode)$/;"	f
hard_reg	integrate.c	/^  rtx hard_reg;$/;"	m	struct:initial_value_pair	file:
hard_reg_conflicts	global.c	/^  HARD_REG_SET hard_reg_conflicts;$/;"	m	struct:allocno	file:
hard_reg_copy_preferences	global.c	/^  HARD_REG_SET hard_reg_copy_preferences;$/;"	m	struct:allocno	file:
hard_reg_full_preferences	global.c	/^  HARD_REG_SET hard_reg_full_preferences;$/;"	m	struct:allocno	file:
hard_reg_initial_vals	function.h	/^  struct initial_value_struct *hard_reg_initial_vals;$/;"	m	struct:function	typeref:struct:function::initial_value_struct
hard_reg_preferences	global.c	/^  HARD_REG_SET hard_reg_preferences;$/;"	m	struct:allocno	file:
hard_reg_set_here_p	reload.c	/^hard_reg_set_here_p (beg_regno, end_regno, x)$/;"	f	file:
hard_regs_in_table	cse.c	/^static HARD_REG_SET hard_regs_in_table;$/;"	v	file:
hard_regs_live	global.c	/^static HARD_REG_SET hard_regs_live;$/;"	v	file:
hard_regs_live_known	reload.c	/^static int hard_regs_live_known;$/;"	v	file:
hard_regs_saved	caller-save.c	/^static HARD_REG_SET hard_regs_saved;$/;"	v	file:
has_call	loop.h	/^  int has_call;$/;"	m	struct:loop_info
has_cleanups	tree.c	/^has_cleanups (exp)$/;"	f
has_computed_jump	function.h	/^  unsigned int has_computed_jump : 1;$/;"	m	struct:function
has_func_hard_reg_initial_val	integrate.c	/^has_func_hard_reg_initial_val (fun, reg)$/;"	f
has_hard_reg_initial_val	integrate.c	/^has_hard_reg_initial_val (mode, regno)$/;"	f
has_indirect_jump	loop.h	/^  int has_indirect_jump;$/;"	m	struct:loop_info
has_libcall	loop.h	/^  int has_libcall;$/;"	m	struct:loop_info
has_multiple_exit_targets	loop.h	/^  int has_multiple_exit_targets;$/;"	m	struct:loop_info
has_nonconst_call	loop.h	/^  int has_nonconst_call;$/;"	m	struct:loop_info
has_nonlocal_goto	function.h	/^  unsigned int has_nonlocal_goto : 1;$/;"	m	struct:function
has_nonlocal_label	function.h	/^  unsigned int has_nonlocal_label : 1;$/;"	m	struct:function
has_tablejump	loop.h	/^  int has_tablejump;$/;"	m	struct:loop_info
has_volatile	loop.h	/^  int has_volatile;$/;"	m	struct:loop_info
has_zero_child	alias.c	/^  int has_zero_child;$/;"	m	struct:alias_set_entry	file:
hash	hash.h	/^  unsigned long (*hash) PARAMS ((hash_table_key));$/;"	m	struct:hash_table
hash	hash.h	/^  unsigned long hash;$/;"	m	struct:hash_entry
hash	tree.c	/^  unsigned long hash;$/;"	m	struct:type_hash	file:
hash_allocate	hash.c	/^hash_allocate (table, size)$/;"	f
hash_arg_in_memory	cse.c	/^static int hash_arg_in_memory;$/;"	v	file:
hash_entry	hash.h	/^struct hash_entry$/;"	s
hash_expr	gcse.c	/^hash_expr (x, mode, do_not_record_p, hash_table_size)$/;"	f	file:
hash_expr_1	gcse.c	/^hash_expr_1 (x, mode, do_not_record_p)$/;"	f	file:
hash_f	hashtab.h	/^  htab_hash hash_f;$/;"	m	struct:htab
hash_index	gcse.c	/^  int hash_index;		\/* Index when in a hash table.  *\/$/;"	m	struct:ls_expr	file:
hash_lookup	hash.c	/^hash_lookup (table, key, create, copy)$/;"	f
hash_newfunc	hash.c	/^hash_newfunc (entry, table, p)$/;"	f
hash_next	cse.c	/^  struct cse_reg_info *hash_next;$/;"	m	struct:cse_reg_info	typeref:struct:cse_reg_info::cse_reg_info	file:
hash_ob	cpphash.h	/^  struct obstack hash_ob;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::obstack
hash_pointer	hashtab.c	/^hash_pointer (p)$/;"	f	file:
hash_rtx	cselib.c	/^hash_rtx (x, mode, create)$/;"	f	file:
hash_scan_call	gcse.c	/^hash_scan_call (x, insn)$/;"	f	file:
hash_scan_clobber	gcse.c	/^hash_scan_clobber (x, insn)$/;"	f	file:
hash_scan_insn	gcse.c	/^hash_scan_insn (insn, set_p, in_libcall_block)$/;"	f	file:
hash_scan_set	gcse.c	/^hash_scan_set (pat, insn, set_p)$/;"	f	file:
hash_set	gcse.c	/^hash_set (regno, hash_table_size)$/;"	f	file:
hash_string_1	gcse.c	/^hash_string_1 (ps)$/;"	f	file:
hash_table	cpphash.h	/^  struct ht *hash_table;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::ht
hash_table	cselib.c	/^static htab_t hash_table;$/;"	v	file:
hash_table	hash.h	/^struct hash_table$/;"	s
hash_table	hashtable.h	/^typedef struct ht hash_table;$/;"	t	typeref:struct:ht
hash_table_free	hash.c	/^hash_table_free (table)$/;"	f
hash_table_init	hash.c	/^hash_table_init (table, newfunc, hash, comp)$/;"	f
hash_table_init_n	hash.c	/^hash_table_init_n (table, newfunc, hash, comp, size)$/;"	f
hash_table_key	hash.h	/^typedef PTR hash_table_key;$/;"	t
hash_traverse	hash.c	/^hash_traverse (table, func, info)$/;"	f
hashnode	hashtable.h	/^typedef struct ht_identifier *hashnode;$/;"	t	typeref:struct:ht_identifier
hashval_t	hashtab.h	/^typedef unsigned int hashval_t;$/;"	t
have_add2_insn	optabs.c	/^have_add2_insn (x, y)$/;"	f
have_ctors_dtors	target.h	/^  bool have_ctors_dtors;$/;"	m	struct:gcc_target
have_dependence_p	dependence.c	/^have_dependence_p (dest_rtx, src_rtx, direction, distance)$/;"	f
have_induction_variable	dependence.c	/^have_induction_variable (outer_loop, ind_var)$/;"	f	file:
have_insn_for	optabs.c	/^have_insn_for (code, mode)$/;"	f
have_location_lists	dwarf2out.c	/^static unsigned have_location_lists;$/;"	v	file:
have_named_sections	target.h	/^  bool have_named_sections;$/;"	m	struct:gcc_target
have_sub2_insn	optabs.c	/^have_sub2_insn (x, y)$/;"	f
have_used_extensions	dbxout.c	/^static int have_used_extensions = 0;$/;"	v	file:
hdr	alloca.c	/^typedef union hdr$/;"	u	file:
he	function.c	/^  struct hash_entry he;$/;"	m	struct:insns_for_mem_entry	typeref:struct:insns_for_mem_entry::hash_entry	file:
head	basic-block.h	/^  rtx head, end;$/;"	m	struct:basic_block_def
head	loop.h	/^  struct movable *head;$/;"	m	struct:loop_movables	typeref:struct:loop_movables::movable
head	sched-int.h	/^  rtx head, tail;$/;"	m	struct:sched_info
head_tree	basic-block.h	/^  tree head_tree;$/;"	m	struct:basic_block_def
header	alloca.c	/^} header;$/;"	t	typeref:union:hdr	file:
header	basic-block.h	/^  basic_block header;$/;"	m	struct:loop
header_time	c-lex.c	/^static int header_time, body_time;$/;"	v	file:
help	params.h	/^  const char *const help;$/;"	m	struct:param_info
help_only	cpplib.h	/^  unsigned char help_only;$/;"	m	struct:cpp_options
hex_digit_value	cpplex.c	/^hex_digit_value (c)$/;"	f	file:
hex_init	hex.c	/^hex_init ()$/;"	f
hex_p	libiberty.h	253;"	d
hex_value	libiberty.h	256;"	d
hi	dwarf2out.c	/^  unsigned long hi;$/;"	m	struct:dw_long_long_struct	file:
hi	target.h	/^      const char *hi;$/;"	m	struct:gcc_target::asm_out::asm_int_op
hi_reg_name	i386.c	/^static const char *const hi_reg_name[] = HI_REGISTER_NAMES; \/* names for 16 bit regs *\/$/;"	v	file:
high	stmt.c	/^  tree			high;	\/* Highest index value for this label *\/$/;"	m	struct:case_node	file:
high	tree.h	/^    HOST_WIDE_INT high;$/;"	m	struct:tree_int_cst::__anon16
high	varasm.c	/^    struct {HOST_WIDE_INT high, low;} di;$/;"	m	struct:rtx_const::__anon81::__anon82	file:
high_bits	ggc-page.c	/^  size_t high_bits;$/;"	m	struct:page_table_chain	file:
high_block_linenum	final.c	/^static int high_block_linenum;$/;"	v	file:
high_bound	dependence.c	/^  int  high_bound;$/;"	m	struct:induction	file:
high_cuid	cse.c	/^  int high_cuid;$/;"	m	struct:cse_basic_block_data	file:
high_function_linenum	final.c	/^static int high_function_linenum;$/;"	v	file:
high_pc_attribute	dwarfout.c	/^high_pc_attribute (asm_high_label)$/;"	f	file:
high_water	alloca.c	/^    long high_water;		\/* Stack high-water mark.  *\/$/;"	m	struct:stk_stat	file:
higher_prime_number	hashtab.c	/^higher_prime_number (n)$/;"	f	file:
highest_outgoing_arg_in_use	calls.c	/^static int highest_outgoing_arg_in_use;$/;"	v	file:
highest_pow2_factor	expr.c	/^highest_pow2_factor (exp)$/;"	f	file:
highest_pow2_factor_for_type	expr.c	/^highest_pow2_factor_for_type (type, exp)$/;"	f	file:
hint	varray.h	/^  HOST_WIDE_INT		 hint[1];$/;"	m	union:varray_data_tag
hitrate	predict.c	/^  const int hitrate;		\/* Expected hitrate used by$/;"	m	struct:predictor_info	file:
hits	alloca.c	/^    long hits;			\/* Number of internal buffer hits.  *\/$/;"	m	struct:stk_stat	file:
hoist_code	gcse.c	/^hoist_code ()$/;"	f	file:
hoist_expr_reaches_here_p	gcse.c	/^hoist_expr_reaches_here_p (expr_bb, expr_index, bb, visited)$/;"	f	file:
hoist_exprs	gcse.c	/^static sbitmap *hoist_exprs;$/;"	v	file:
hoist_vbein	gcse.c	/^static sbitmap *hoist_vbein;$/;"	v	file:
hoist_vbeout	gcse.c	/^static sbitmap *hoist_vbeout;$/;"	v	file:
honor_readonly	langhooks.h	/^  bool honor_readonly;$/;"	m	struct:lang_hooks
hook_get_alias_set_0	langhooks.c	/^hook_get_alias_set_0 (t)$/;"	f
hook_void_bool_false	hooks.c	/^hook_void_bool_false ()$/;"	f
hook_void_void	hooks.c	/^hook_void_void ()$/;"	f
host_integerp	tree.c	/^host_integerp (t, pos)$/;"	f
ht	function.c	/^  struct hash_table *ht;$/;"	m	struct:insns_for_mem_walk_info	typeref:struct:insns_for_mem_walk_info::hash_table	file:
ht	hashtable.h	/^struct ht$/;"	s
ht_cb	hashtable.h	/^typedef int (*ht_cb) PARAMS ((struct cpp_reader *, hashnode, const void *));$/;"	t
ht_create	hashtable.c	/^ht_create (order)$/;"	f
ht_destroy	hashtable.c	/^ht_destroy (table)$/;"	f
ht_dump_statistics	hashtable.c	/^ht_dump_statistics (table)$/;"	f
ht_expand	hashtable.c	/^ht_expand (table)$/;"	f	file:
ht_forall	hashtable.c	/^ht_forall (table, cb, v)$/;"	f
ht_identifier	hashtable.h	/^struct ht_identifier$/;"	s
ht_identifier	hashtable.h	/^typedef struct ht_identifier ht_identifier;$/;"	t	typeref:struct:ht_identifier
ht_lookup	hashtable.c	/^ht_lookup (table, str, len, insert)$/;"	f
ht_lookup_option	hashtable.h	/^enum ht_lookup_option {HT_NO_INSERT = 0, HT_ALLOC, HT_ALLOCED};$/;"	g
htab	ggc-common.c	/^  htab_t htab;$/;"	m	struct:d_htab_root	file:
htab	hashtab.h	/^struct htab$/;"	s
htab_clear_slot	hashtab.c	/^htab_clear_slot (htab, slot)$/;"	f
htab_collisions	hashtab.c	/^htab_collisions (htab)$/;"	f
htab_create	hashtab.c	/^htab_create (size, hash_f, eq_f, del_f)$/;"	f
htab_del	hashtab.h	/^typedef void (*htab_del) PARAMS ((void *));$/;"	t
htab_delete	hashtab.c	/^htab_delete (htab)$/;"	f
htab_elements	hashtab.c	/^htab_elements (htab)$/;"	f
htab_empty	hashtab.c	/^htab_empty (htab)$/;"	f
htab_eq	hashtab.h	/^typedef int (*htab_eq) PARAMS ((const void *, const void *));$/;"	t
htab_eq_pointer	hashtab.c	/^htab_eq htab_eq_pointer = eq_pointer;$/;"	v
htab_expand	hashtab.c	/^htab_expand (htab)$/;"	f	file:
htab_find	hashtab.c	/^htab_find (htab, element)$/;"	f
htab_find_slot	hashtab.c	/^htab_find_slot (htab, element, insert)$/;"	f
htab_find_slot_with_hash	hashtab.c	/^htab_find_slot_with_hash (htab, element, hash, insert)$/;"	f
htab_find_with_hash	hashtab.c	/^htab_find_with_hash (htab, element, hash)$/;"	f
htab_hash	hashtab.h	/^typedef hashval_t (*htab_hash) PARAMS ((const void *));$/;"	t
htab_hash_pointer	hashtab.c	/^htab_hash htab_hash_pointer = hash_pointer;$/;"	v
htab_hash_string	hashtab.c	/^htab_hash_string (p)$/;"	f
htab_remove_elt	hashtab.c	/^htab_remove_elt (htab, element)$/;"	f
htab_size	hashtab.c	/^htab_size (htab)$/;"	f
htab_t	hashtab.h	/^typedef struct htab *htab_t;$/;"	t	typeref:struct:htab
htab_trav	hashtab.h	/^typedef int (*htab_trav) PARAMS ((void **, void *));$/;"	t
htab_traverse	hashtab.c	/^htab_traverse (htab, callback, info)$/;"	f
htab_try_create	hashtab.c	/^htab_try_create (size, hash_f, eq_f, del_f)$/;"	f
hybrid_search_bitmap	df.c	/^hybrid_search_bitmap (block, in, out, gen, kill, dir, $/;"	f	file:
hybrid_search_sbitmap	df.c	/^hybrid_search_sbitmap (block, in, out, gen, kill, dir, $/;"	f	file:
i	c-typeck.c	/^      int i;$/;"	m	union:spelling::__anon36	file:
i	combine.c	/^  union {rtx *r; unsigned int *i;} where;$/;"	m	union:undo::__anon34	file:
i	combine.c	/^  union {rtx r; unsigned int i;} old_contents;$/;"	m	union:undo::__anon33	file:
i	ggc-page.c	/^    HOST_WIDEST_INT i;$/;"	m	union:max_alignment::__anon13	file:
i	real.h	/^  HOST_WIDE_INT i[sizeof (REAL_VALUE_TYPE) \/ sizeof (HOST_WIDE_INT)];$/;"	m	union:real_extract
i	tree.c	/^  tree i;			\/* Input: operand to convert.  *\/$/;"	m	struct:brfic_args	file:
i	tree.h	/^    HOST_WIDE_INT i;$/;"	m	union:tree_decl::__anon18
i	tree.h	/^    int i;$/;"	m	union:tree_decl::__anon20
i	varray.h	/^  int			 i[1];$/;"	m	union:varray_data_tag
i00afunc	alloca.c	/^i00afunc (long *address)$/;"	f	file:
i00afunc	alloca.c	/^i00afunc (long address)$/;"	f	file:
i386_cost	i386.c	/^struct processor_costs i386_cost = {	\/* 386 specific costs *\/$/;"	v	typeref:struct:processor_costs	file:
i386_dwarf_output_addr_const	i386.c	/^i386_dwarf_output_addr_const (file, x)$/;"	f
i386_simplify_dwarf_addr	i386.c	/^i386_simplify_dwarf_addr (orig_x)$/;"	f
i486_cost	i386.c	/^struct processor_costs i486_cost = {	\/* 486 specific costs *\/$/;"	v	typeref:struct:processor_costs	file:
ibmtoe	real.c	/^ibmtoe (d, e, mode)$/;"	f	file:
icode	i386.c	/^  const enum insn_code icode;$/;"	m	struct:builtin_description	typeref:enum:builtin_description::insn_code	file:
id	c-pragma.c	/^  tree                 id;$/;"	m	struct:align_stack	file:
id	df.h	/^  int id;			\/* Ref index.  *\/$/;"	m	struct:ref
id	dwarf2out.c	/^  struct ht_identifier id;$/;"	m	struct:indirect_string_node	typeref:struct:indirect_string_node::ht_identifier	file:
id	tree.h	/^  struct ht_identifier id;$/;"	m	struct:tree_identifier	typeref:struct:tree_identifier::ht_identifier
id_kind	tree.c	/^  id_kind,$/;"	e	enum:__anon88	file:
ideal_maximum_length	diagnostic.h	/^  int ideal_maximum_length;$/;"	m	struct:__anon12
ident	cpplib.h	/^  struct ht_identifier ident;$/;"	m	struct:cpp_hashnode	typeref:struct:cpp_hashnode::ht_identifier
ident	cpplib.h	/^  void (*ident) PARAMS ((cpp_reader *, unsigned int, const cpp_string *));$/;"	m	struct:cpp_callbacks
ident_hash	stringpool.c	/^struct ht *ident_hash;$/;"	v	typeref:struct:ht
identifier	tree.h	/^  struct tree_identifier identifier;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_identifier
identifier_global_value	c-decl.c	/^identifier_global_value	(t)$/;"	f
identifier_size	langhooks.h	/^  size_t identifier_size;$/;"	m	struct:lang_hooks
identify_blocks	function.c	/^identify_blocks ()$/;"	f
identify_blocks_1	function.c	/^identify_blocks_1 (insns, block_vector, end_block_vector, orig_block_stack)$/;"	f	file:
identify_call_return_value	sibcall.c	/^identify_call_return_value (cp, p_hard_return, p_soft_return)$/;"	f	file:
idoms_to_doms	dominance.c	/^idoms_to_doms (di, dominators)$/;"	f	file:
if_convert	ifcvt.c	/^if_convert (x_life_data_ok)$/;"	f
if_elt	c-common.c	/^} if_elt;$/;"	t	typeref:struct:__anon72	file:
if_stack	c-common.c	/^static if_elt *if_stack;$/;"	v	file:
if_stack	cpphash.h	/^  struct if_stack *if_stack;$/;"	m	struct:cpp_buffer	typeref:struct:cpp_buffer::if_stack
if_stack	cpplib.c	/^struct if_stack$/;"	s	file:
if_stack_pointer	c-common.c	/^static int if_stack_pointer = 0;$/;"	v	file:
if_stack_space	c-common.c	/^static int if_stack_space = 0;$/;"	v	file:
if_stmt	c-common.c	/^  tree if_stmt;$/;"	m	struct:__anon72	file:
if_stmt_file	c-parse.c	/^static const char *if_stmt_file;$/;"	v	file:
if_stmt_line	c-parse.c	/^static int if_stmt_line;$/;"	v	file:
if_then_else_cond	combine.c	/^if_then_else_cond (x, ptrue, pfalse)$/;"	f	file:
ignore	c-tree.h	/^  struct c_common_identifier ignore;$/;"	m	struct:lang_identifier	typeref:struct:lang_identifier::c_common_identifier
ignore	loop.h	/^  unsigned ignore : 1;		\/* 1 prohibits further processing of giv *\/$/;"	m	struct:induction
ignore	profile.c	/^    unsigned int ignore : 1;$/;"	m	struct:edge_info	file:
ignore_block	debug.h	/^  bool (* ignore_block) PARAMS ((tree));$/;"	m	struct:gcc_debug_hooks
ignore_escape_flag	c-lex.c	/^static int ignore_escape_flag;$/;"	v	file:
ignore_some_movables	loop.c	/^ignore_some_movables (movables)$/;"	f	file:
ignore_srcdir	cpplib.h	/^  unsigned char ignore_srcdir;$/;"	m	struct:cpp_options
ignored	c-format.c	/^  const int ignored;$/;"	m	struct:__anon42	file:
ignored_flag	tree.h	/^  unsigned ignored_flag : 1;$/;"	m	struct:tree_decl
imacros_head	cppinit.c	/^  struct pending_option *imacros_head, *imacros_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::pending_option	file:
imacros_tail	cppinit.c	/^  struct pending_option *imacros_head, *imacros_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::	file:
imag	tree.h	/^  tree imag;$/;"	m	struct:tree_complex
immed_double_const	varasm.c	/^immed_double_const (i0, i1, mode)$/;"	f
immed_real_const	varasm.c	/^immed_real_const (exp)$/;"	f
immed_real_const_1	varasm.c	/^immed_real_const_1 (d, mode)$/;"	f
immediate_operand	recog.c	/^immediate_operand (op, mode)$/;"	f
immediate_size_expand	stor-layout.c	/^int immediate_size_expand;$/;"	v
immune_p	reload.c	/^immune_p (x, y, ydata)$/;"	f	file:
implicit	c-typeck.c	/^  char implicit;$/;"	m	struct:constructor_stack	file:
implicit_decl	c-tree.h	/^  tree global_value, local_value, label_value, implicit_decl;$/;"	m	struct:lang_identifier
implicit_decl_warning	c-decl.c	/^implicit_decl_warning (id)$/;"	f
implicitly_declare	c-decl.c	/^implicitly_declare (functionid)$/;"	f
in	reload.h	/^  rtx in;$/;"	m	struct:reload
in_arg_offset	function.c	/^static int in_arg_offset;$/;"	v	file:
in_bss	varasm.c	/^  , in_bss$/;"	e	enum:in_section	file:
in_class	dwarfout.c	/^static int in_class;$/;"	v	file:
in_control_zone_p	stmt.c	/^in_control_zone_p ()$/;"	f
in_ctors	varasm.c	/^  , in_ctors$/;"	e	enum:in_section	file:
in_data	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	enum:in_section	file:
in_data_section	varasm.c	/^in_data_section ()$/;"	f
in_directive	cpphash.h	/^  unsigned char in_directive;$/;"	m	struct:lexer_state
in_dtors	varasm.c	/^  , in_dtors$/;"	e	enum:in_section	file:
in_edges	sched-rgn.c	/^static int *in_edges;$/;"	v	file:
in_expr_list_p	rtlanal.c	/^in_expr_list_p (listp, node)$/;"	f
in_fname	cpplib.h	/^  const char *in_fname;$/;"	m	struct:cpp_options
in_inc_dec	regclass.c	/^static char *in_inc_dec;$/;"	v	file:
in_memory	cse.c	/^  char in_memory;$/;"	m	struct:table_elt	file:
in_named	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	enum:in_section	file:
in_named_entry	varasm.c	/^struct in_named_entry$/;"	s	file:
in_named_entry_eq	varasm.c	/^in_named_entry_eq (p1, p2)$/;"	f	file:
in_named_entry_hash	varasm.c	/^in_named_entry_hash (p)$/;"	f	file:
in_named_htab	varasm.c	/^static htab_t in_named_htab;$/;"	v	file:
in_named_name	varasm.c	/^static const char *in_named_name;$/;"	v	file:
in_nonparm_insns	integrate.c	/^static int in_nonparm_insns;$/;"	v	file:
in_parm_level_p	c-decl.c	/^in_parm_level_p ()$/;"	f
in_post_call_group_p	sched-int.h	/^  bool in_post_call_group_p;$/;"	m	struct:deps
in_reg	reload.h	/^  rtx in_reg;$/;"	m	struct:reload
in_section	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	g	file:
in_section	varasm.c	/^} in_section = no_section;$/;"	v	typeref:enum:in_section	file:
in_sequence_p	emit-rtl.c	/^in_sequence_p ()$/;"	f
in_ssa_form	ssa.c	/^int in_ssa_form = 0;$/;"	v
in_struct	rtl.h	/^  unsigned int in_struct : 1;$/;"	m	struct:rtx_def
in_system_header	toplev.c	/^int in_system_header = 0;$/;"	v
in_system_header_flag	tree.h	/^  unsigned in_system_header_flag : 1;$/;"	m	struct:tree_decl
in_target_cleanup_p	tree-inline.c	/^  int in_target_cleanup_p;$/;"	m	struct:inline_data	file:
in_text	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	enum:in_section	file:
in_text_section	varasm.c	/^in_text_section ()$/;"	f
in_use	dwarf2out.c	/^  unsigned in_use;$/;"	m	struct:file_table	file:
in_use	function.c	/^  char in_use;$/;"	m	struct:temp_slot	file:
in_use	ggc-page.c	/^  unsigned int in_use;$/;"	m	struct:page_group	file:
in_use_p	ggc-page.c	/^  unsigned long in_use_p[1];$/;"	m	struct:page_entry	file:
inc	cpphash.h	/^  struct include_file *inc;$/;"	m	struct:cpp_buffer	typeref:struct:cpp_buffer::include_file
inc	reload.h	/^  int inc;$/;"	m	struct:reload
inc_for_reload	reload1.c	/^inc_for_reload (reloadreg, in, value, inc_amount)$/;"	f	file:
incdec_operand	i386.c	/^incdec_operand (op, mode)$/;"	f
include	cpplib.h	/^  void (*include) PARAMS ((cpp_reader *, unsigned int,$/;"	m	struct:cpp_callbacks
include_count	cppfiles.c	/^  unsigned short include_count;	\/* number of times file has been read *\/$/;"	m	struct:include_file	file:
include_file	cppfiles.c	/^struct include_file$/;"	s	file:
include_head	cppinit.c	/^  struct pending_option *include_head, *include_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::pending_option	file:
include_prefix	cpplib.h	/^  const char *include_prefix;$/;"	m	struct:cpp_options
include_prefix_len	cpplib.h	/^  unsigned int include_prefix_len;$/;"	m	struct:cpp_options
include_tail	cppinit.c	/^  struct pending_option *include_head, *include_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::	file:
include_type	cpphash.h	/^enum include_type {IT_INCLUDE, IT_INCLUDE_NEXT, IT_IMPORT, IT_CMDLINE};$/;"	g
included_from	line-map.h	/^  int included_from;$/;"	m	struct:line_map
incmem_ok	recog.h	/^  unsigned int incmem_ok:1;$/;"	m	struct:operand_alternative
incomplete_decl_finalize_hook	toplev.c	/^void (*incomplete_decl_finalize_hook) PARAMS ((tree)) = 0;$/;"	v
incomplete_type_error	c-typeck.c	/^incomplete_type_error (value, type)$/;"	f
incomplete_types	dwarf2out.c	/^varray_type incomplete_types;$/;"	v
incomplete_types	dwarfout.c	/^static unsigned incomplete_types;$/;"	v	file:
incomplete_types_allocated	dwarfout.c	/^static unsigned incomplete_types_allocated;$/;"	v	file:
incomplete_types_list	dwarfout.c	/^static tree *incomplete_types_list;$/;"	v	file:
incr_ticks_for_insn	resource.c	/^incr_ticks_for_insn (insn)$/;"	f
increment	dependence.c	/^  int  increment;$/;"	m	struct:induction	file:
increment	loop.h	/^  rtx increment;$/;"	m	struct:loop_info
incremental	c-typeck.c	/^  char incremental;$/;"	m	struct:constructor_stack	file:
incremented	loop.h	/^  unsigned incremented : 1;	\/* 1 if somewhere incremented\/decremented *\/$/;"	m	struct:iv_class
ind	dependence.c	/^  struct induction *ind;$/;"	m	struct:loop	typeref:struct:loop::induction	file:
indent	print-rtl.c	/^static int indent;$/;"	v	file:
indent_level	c-lex.c	/^int indent_level;        \/* Number of { minus number of }.  *\/$/;"	v
indent_level	input.h	/^    int indent_level;$/;"	m	struct:file_stack
indent_skip	diagnostic.h	/^  int indent_skip;$/;"	m	struct:__anon12
indent_to	print-tree.c	/^indent_to (file, column)$/;"	f
independent	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
independent_decode_option	toplev.c	/^independent_decode_option (argc, argv)$/;"	f	file:
index	basic-block.h	/^  int index;$/;"	m	struct:basic_block_def
index	c-format.c	/^  const enum format_lengths index;$/;"	m	struct:__anon38	typeref:enum:__anon38::format_lengths	file:
index	c-typeck.c	/^  tree index;$/;"	m	struct:constructor_range_stack	file:
index	c-typeck.c	/^  tree index;$/;"	m	struct:constructor_stack	file:
index	gcse.c	/^  int index;			\/* If it maps to a bitmap index.  *\/$/;"	m	struct:ls_expr	file:
index	i386.c	/^  rtx base, index, disp;$/;"	m	struct:ix86_address	file:
index	loop.c	/^  HOST_WIDE_INT index;$/;"	m	struct:prefetch_info	file:
index	tree-dump.h	/^  unsigned int index;$/;"	m	struct:dump_info
index	tree-dump.h	/^  unsigned int index;$/;"	m	struct:dump_node_info
index_expr	stmt.c	/^	  tree index_expr;$/;"	m	struct:nesting::__anon67::__anon71	file:
index_to_edge	basic-block.h	/^  edge *index_to_edge;$/;"	m	struct:edge_list
index_type_equal	tree.c	/^index_type_equal (itype1, itype2)$/;"	f
indirect	dwarf2out.c	/^  int indirect;            \/* 1 if CFA is accessed via a dereference.  *\/$/;"	m	struct:cfa_loc	file:
indirect_jump_in_function	loop.c	/^static int indirect_jump_in_function;$/;"	v	file:
indirect_jump_in_function_p	loop.c	/^indirect_jump_in_function_p (start)$/;"	f	file:
indirect_operand	recog.c	/^indirect_operand (op, mode)$/;"	f
indirect_pool	dwarf2asm.c	/^static splay_tree indirect_pool;$/;"	v	file:
indirect_string_alloc	dwarf2out.c	/^indirect_string_alloc (tab)$/;"	f	file:
indirect_string_node	dwarf2out.c	/^struct indirect_string_node$/;"	s	file:
indirect_symref_ok	reload1.c	/^char indirect_symref_ok;$/;"	v
induction	dependence.c	/^typedef struct induction$/;"	s	file:
induction	dependence.c	/^} induction;$/;"	t	typeref:struct:induction	file:
induction	loop.h	/^struct induction$/;"	s
induction_chain	dependence.c	/^static varray_type induction_chain;$/;"	v	file:
indx	bitmap.h	/^  unsigned int indx;			\/* regno\/BITMAP_ELEMENT_ALL_BITS.  *\/$/;"	m	struct:bitmap_element_def
indx	bitmap.h	/^  unsigned int indx;		\/* Index of last element looked at.  *\/$/;"	m	struct:bitmap_head_def
inequality_comparisons_p	rtlanal.c	/^inequality_comparisons_p (x)$/;"	f
info	loop.h	/^    struct induction *info;$/;"	m	union:iv::__anon35	typeref:struct:iv::__anon35::induction
inherently_necessary_register	ssa-dce.c	/^inherently_necessary_register (current_rtx)$/;"	f	file:
inherently_necessary_register_1	ssa-dce.c	/^inherently_necessary_register_1 (current_rtx, data)$/;"	f	file:
inhibit_defer_pop	function.h	164;"	d
inhibit_errors	cpplib.h	/^  unsigned char inhibit_errors;$/;"	m	struct:cpp_options
inhibit_warnings	cpplib.h	/^  unsigned char inhibit_warnings;$/;"	m	struct:cpp_options
inhibit_warnings	toplev.c	/^int inhibit_warnings = 0;$/;"	v
init	debug.h	/^  void (* init) PARAMS ((const char *main_filename));$/;"	m	struct:gcc_debug_hooks
init	langhooks.h	/^  const char * (*init) PARAMS ((const char *));$/;"	m	struct:lang_hooks
init_EXPR_INSN_LIST_cache	lists.c	/^init_EXPR_INSN_LIST_cache ()$/;"	f
init_alias_analysis	alias.c	/^init_alias_analysis ()$/;"	f
init_alias_once	alias.c	/^init_alias_once ()$/;"	f
init_all_optabs	insn-opinit.c	/^init_all_optabs ()$/;"	f
init_ar	dominance.c	121;"	d	file:
init_ar	dominance.c	163;"	d	file:
init_asm_output	toplev.c	/^init_asm_output (name)$/;"	f	file:
init_attributes	attribs.c	/^init_attributes ()$/;"	f	file:
init_block_visualization	sched-vis.c	/^init_block_visualization ()$/;"	f
init_branch_prob	profile.c	/^init_branch_prob (filename)$/;"	f
init_builtins	cppinit.c	/^init_builtins (pfile)$/;"	f	file:
init_builtins	target.h	/^  void (* init_builtins) PARAMS ((void));$/;"	m	struct:gcc_target
init_c_lex	c-lex.c	/^init_c_lex (filename)$/;"	f
init_caller_save	caller-save.c	/^init_caller_save ()$/;"	f
init_cost	regclass.c	/^static struct costs init_cost;$/;"	v	typeref:struct:costs	file:
init_cumulative_args	i386.c	/^init_cumulative_args (cum, fntype, libname)$/;"	f
init_def_use	dependence.c	/^enum def_use_type {def, use, init_def_use};$/;"	e	enum:def_use_type	file:
init_dependence_analysis	dependence.c	/^init_dependence_analysis (exp)$/;"	f
init_dependency_caches	sched-deps.c	/^init_dependency_caches (luid)$/;"	f
init_dependency_output	cppinit.c	/^init_dependency_output (pfile)$/;"	f	file:
init_deps	sched-deps.c	/^init_deps (deps)$/;"	f
init_deps_global	sched-deps.c	/^init_deps_global ()$/;"	f
init_dollar_format_checking	c-format.c	/^init_dollar_format_checking (first_arg_num, params)$/;"	f	file:
init_dom_info	dominance.c	/^init_dom_info (di)$/;"	f	file:
init_dummy_function_start	function.c	/^init_dummy_function_start ()$/;"	f
init_edge_profiler	profile.c	/^init_edge_profiler ()$/;"	f	file:
init_eh	except.c	/^init_eh ()$/;"	f
init_eh_for_function	except.c	/^init_eh_for_function ()$/;"	f
init_elim_table	reload1.c	/^init_elim_table ()$/;"	f	file:
init_emit	emit-rtl.c	/^init_emit ()$/;"	f
init_emit_once	emit-rtl.c	/^init_emit_once (line_numbers)$/;"	f
init_expmed	expmed.c	/^init_expmed ()$/;"	f
init_expr	expr.c	/^init_expr ()$/;"	f
init_expr_once	expr.c	/^init_expr_once ()$/;"	f
init_file_table	dwarf2out.c	/^init_file_table ()$/;"	f	file:
init_final	final.c	/^init_final (filename)$/;"	f
init_floating_libfuncs	optabs.c	/^init_floating_libfuncs (optable, opname, suffix)$/;"	f	file:
init_flow	cfg.c	/^init_flow ()$/;"	f
init_function_for_compilation	function.c	/^init_function_for_compilation ()$/;"	f
init_function_once	function.c	/^init_function_once ()$/;"	f
init_function_start	function.c	/^init_function_start (subr, filename, line)$/;"	f
init_ggc	ggc-page.c	/^init_ggc ()$/;"	f
init_insn	loop.h	/^  rtx init_insn;		\/* insn which initializes biv, 0 if none.  *\/$/;"	m	struct:iv_class
init_insn_lengths	final.c	/^init_insn_lengths ()$/;"	f
init_insns	local-alloc.c	/^  rtx init_insns;$/;"	m	struct:equivalence	file:
init_integral_libfuncs	optabs.c	/^init_integral_libfuncs (optable, opname, suffix)$/;"	f	file:
init_label_info	jump.c	/^init_label_info (f)$/;"	f	file:
init_lang_status	function.c	/^void (*init_lang_status) PARAMS ((struct function *));$/;"	v
init_libfuncs	optabs.c	/^init_libfuncs (optable, first_mode, last_mode, opname, suffix)$/;"	f	file:
init_library	cppinit.c	/^init_library ()$/;"	f	file:
init_line_maps	line-map.c	/^init_line_maps (set)$/;"	f
init_loop	loop.c	/^init_loop ()$/;"	f
init_machine_status	function.c	/^void (*init_machine_status) PARAMS ((struct function *));$/;"	v
init_node	c-typeck.c	/^struct init_node$/;"	s	file:
init_obstacks	tree.c	/^init_obstacks ()$/;"	f
init_one_libfunc	optabs.c	/^init_one_libfunc (name)$/;"	f
init_optab	optabs.c	/^init_optab (code)$/;"	f	file:
init_optabs	optabs.c	/^init_optabs ()$/;"	f
init_optabv	optabs.c	/^init_optabv (code)$/;"	f	file:
init_options	langhooks.h	/^  void (*init_options) PARAMS ((void));$/;"	m	struct:lang_hooks
init_output_buffer	diagnostic.c	/^init_output_buffer (buffer, prefix, maximum_length)$/;"	f
init_pending_stack_adjust	expr.c	/^init_pending_stack_adjust ()$/;"	f
init_pragma	c-pragma.c	/^init_pragma ()$/;"	f
init_propagate_block_info	flow.c	/^init_propagate_block_info (bb, live, local_set, cond_local_set, flags)$/;"	f
init_ready_list	sched-ebb.c	/^init_ready_list (ready)$/;"	f	file:
init_ready_list	sched-int.h	/^  void (*init_ready_list) PARAMS ((struct ready_list *));$/;"	m	struct:sched_info
init_ready_list	sched-rgn.c	/^init_ready_list (ready)$/;"	f	file:
init_recog	recog.c	/^init_recog ()$/;"	f
init_recog_no_volatile	recog.c	/^init_recog_no_volatile ()$/;"	f
init_reg_last_arrays	combine.c	/^init_reg_last_arrays ()$/;"	f	file:
init_reg_map	unroll.c	/^init_reg_map (map, maxregnum)$/;"	f	file:
init_reg_modes	regclass.c	/^init_reg_modes ()$/;"	f	file:
init_reg_sets	regclass.c	/^init_reg_sets ()$/;"	f
init_reg_sets_1	regclass.c	/^init_reg_sets_1 ()$/;"	f	file:
init_regions	sched-rgn.c	/^init_regions ()$/;"	f	file:
init_regs	regclass.c	/^init_regs ()$/;"	f
init_reload	reload1.c	/^init_reload ()$/;"	f
init_resource_info	resource.c	/^init_resource_info (epilogue_insn)$/;"	f
init_reswords	c-parse.c	/^init_reswords ()$/;"	f	file:
init_save_areas	caller-save.c	/^init_save_areas ()$/;"	f
init_set	loop.h	/^  rtx init_set;			\/* SET of INIT_INSN, if any.  *\/$/;"	m	struct:iv_class
init_standard_includes	cppinit.c	/^init_standard_includes (pfile)$/;"	f	file:
init_stmt	stmt.c	/^init_stmt ()$/;"	f
init_stmt_for_function	stmt.c	/^init_stmt_for_function ()$/;"	f
init_stor_layout_once	stor-layout.c	/^init_stor_layout_once ()$/;"	f
init_stringpool	stringpool.c	/^init_stringpool ()$/;"	f
init_target_units	sched-vis.c	/^init_target_units ()$/;"	f
init_temp_slots	function.c	/^init_temp_slots ()$/;"	f
init_timevar	timevar.c	/^init_timevar ()$/;"	f
init_traps	optabs.c	/^init_traps ()$/;"	f	file:
init_trigraph_map	cppinit.c	132;"	d	file:
init_value_data	regrename.c	/^init_value_data (vd)$/;"	f	file:
init_varasm_once	varasm.c	/^init_varasm_once ()$/;"	f
init_varasm_status	varasm.c	/^init_varasm_status (f)$/;"	f
init_virtual_regs	emit-rtl.c	/^init_virtual_regs (es)$/;"	f
initial	tree.h	/^  tree initial;	\/* Also used for DECL_QUALIFIER *\/$/;"	m	struct:tree_decl
initial_address	alloca.c	/^    long initial_address;	\/* Address of initial segment.  *\/$/;"	m	struct:stk_stat	file:
initial_call_used_regs	regclass.c	/^static const char initial_call_used_regs[] = CALL_USED_REGISTERS;$/;"	v	file:
initial_equiv_value	loop.h	/^  rtx initial_equiv_value;$/;"	m	struct:loop_info
initial_fixed_regs	regclass.c	/^static const char initial_fixed_regs[] = FIXED_REGISTERS;$/;"	v	file:
initial_offset	reload1.c	/^  int initial_offset;		\/* Initial difference between values.  *\/$/;"	m	struct:elim_table	file:
initial_reg_note_copy	unroll.c	/^initial_reg_note_copy (notes, map)$/;"	f	file:
initial_return_save	dwarf2out.c	/^initial_return_save (rtl)$/;"	f	file:
initial_size	alloca.c	/^    long initial_size;		\/* Size of initial segment.  *\/$/;"	m	struct:stk_stat	file:
initial_test	loop.h	/^  rtx initial_test;		\/* Test performed on BIV before loop.  *\/$/;"	m	struct:iv_class
initial_value	calls.c	/^  rtx initial_value;$/;"	m	struct:arg_data	file:
initial_value	loop.h	/^  rtx initial_value;		\/* Value of reg at loop start.  *\/$/;"	m	struct:iv_class
initial_value	loop.h	/^  rtx initial_value;$/;"	m	struct:loop_info
initial_value_pair	integrate.c	/^typedef struct initial_value_pair {$/;"	s	file:
initial_value_pair	integrate.c	/^} initial_value_pair;$/;"	t	typeref:struct:initial_value_pair	file:
initial_value_struct	integrate.c	/^typedef struct initial_value_struct {$/;"	s	file:
initial_value_struct	integrate.c	/^} initial_value_struct;$/;"	t	typeref:struct:initial_value_struct	file:
initialize_argument_information	calls.c	/^initialize_argument_information (num_actuals, args, args_size, n_named_args,$/;"	f	file:
initialize_for_inline	integrate.c	/^initialize_for_inline (fndecl)$/;"	f	file:
initialize_inlined_parameters	tree-inline.c	/^initialize_inlined_parameters (id, args, fn)$/;"	f	file:
initialize_sizetypes	stor-layout.c	/^initialize_sizetypes ()$/;"	f
initialize_uninitialized_subregs	flow.c	/^initialize_uninitialized_subregs ()$/;"	f
initialized	toplev.c	/^  char initialized;$/;"	m	struct:dump_file_info	file:
initializer_constant_valid_p	varasm.c	/^initializer_constant_valid_p (value, endtype)$/;"	f
initializer_stack	c-typeck.c	/^struct initializer_stack *initializer_stack;$/;"	v	typeref:struct:initializer_stack
initializer_stack	c-typeck.c	/^struct initializer_stack$/;"	s	file:
inl_last_parm_insn	function.h	/^  rtx inl_last_parm_insn;$/;"	m	struct:function
inl_max_label_num	function.h	/^  int inl_max_label_num;$/;"	m	struct:function
inlinable	function.h	/^  int inlinable;$/;"	m	struct:function
inlinable_function_p	tree-inline.c	/^inlinable_function_p (fn, id)$/;"	f	file:
inline	ansidecl.h	169;"	d
inline	ansidecl.h	174;"	d
inline	ansidecl.h	176;"	d
inline	ansidecl.h	201;"	d
inline	ansidecl.h	205;"	d
inline_attribute	dwarfout.c	/^inline_attribute (decl)$/;"	f	file:
inline_data	tree-inline.c	/^typedef struct inline_data$/;"	s	file:
inline_data	tree-inline.c	/^} inline_data;$/;"	t	typeref:struct:inline_data	file:
inline_flag	tree.h	/^  unsigned inline_flag : 1;$/;"	m	struct:tree_decl
inline_forbidden_p	c-objc-common.c	/^inline_forbidden_p (nodep, walk_subtrees, fn)$/;"	f	file:
inline_function_decl	function.c	/^tree inline_function_decl;$/;"	v
inline_remap	integrate.h	/^struct inline_remap$/;"	s
inline_target	integrate.h	/^  rtx inline_target;$/;"	m	struct:inline_remap
inlined_fns	tree-inline.c	/^  varray_type inlined_fns;$/;"	m	struct:inline_data	file:
inlined_fns	tree.h	/^  tree inlined_fns;$/;"	m	struct:tree_decl
inlined_stmts	tree-inline.c	/^  int inlined_stmts;$/;"	m	struct:inline_data	file:
inlining	integrate.c	/^static struct function *inlining = 0;$/;"	v	typeref:struct:function	file:
inmode	reload.h	/^  enum machine_mode inmode;$/;"	m	struct:reload	typeref:enum:reload::machine_mode
inner	basic-block.h	/^  struct loop *inner;$/;"	m	struct:loop	typeref:struct:loop::loop
inner	except.c	/^  struct eh_region *inner;$/;"	m	struct:eh_region	typeref:struct:eh_region::eh_region	file:
inner_dest	cse.c	/^  rtx inner_dest;$/;"	m	struct:set	file:
inner_mode_array	rtl.c	/^const enum machine_mode inner_mode_array[NUM_MACHINE_MODES] = {$/;"	v	typeref:enum:machine_mode
innermost_stack_block	stmt.c	/^	  struct nesting *innermost_stack_block;$/;"	m	struct:nesting::__anon67::__anon70	typeref:struct:nesting::__anon67::__anon70::nesting	file:
ino	cpphash.h	/^  ino_t ino;$/;"	m	struct:search_path
inpaddr_address_reload_insns	reload1.c	/^static rtx inpaddr_address_reload_insns[MAX_RECOG_OPERANDS];$/;"	v	file:
input_address_reload_insns	reload1.c	/^static rtx input_address_reload_insns[MAX_RECOG_OPERANDS];$/;"	v	file:
input_file_stack	toplev.c	/^struct file_stack *input_file_stack;$/;"	v	typeref:struct:file_stack
input_file_stack_tick	toplev.c	/^int input_file_stack_tick;$/;"	v
input_filename	toplev.c	/^const char *input_filename;$/;"	v
input_reload_insns	reload1.c	/^static rtx input_reload_insns[MAX_RECOG_OPERANDS];$/;"	v	file:
insert	cse.c	/^insert (x, classp, hash, mode)$/;"	f	file:
insert	lcm.c	/^static sbitmap *insert;$/;"	v	file:
insert_attributes	target.h	/^  void (* insert_attributes) PARAMS ((tree decl, tree *attributes));$/;"	m	struct:gcc_target
insert_block	c-decl.c	/^insert_block (block)$/;"	f
insert_default_attributes	c-decl.c	/^insert_default_attributes (decl)$/;"	f
insert_expr_in_table	gcse.c	/^insert_expr_in_table (x, mode, insn, antic_p, avail_p)$/;"	f	file:
insert_insn_end_bb	gcse.c	/^insert_insn_end_bb (expr, bb, pre)$/;"	f	file:
insert_insn_on_edge	cfgrtl.c	/^insert_insn_on_edge (pattern, e)$/;"	f
insert_insn_start_bb	gcse.c	/^insert_insn_start_bb (insn, bb)$/;"	f	file:
insert_loop_mem	loop.c	/^insert_loop_mem (mem, data)$/;"	f	file:
insert_one_insn	caller-save.c	/^insert_one_insn (chain, before_p, code, pat)$/;"	f	file:
insert_option	hashtab.h	/^enum insert_option {NO_INSERT, INSERT};$/;"	g
insert_phi_node	ssa.c	/^insert_phi_node (regno, bb)$/;"	f	file:
insert_phi_nodes	ssa.c	/^insert_phi_nodes (idfs, evals, nregs)$/;"	f	file:
insert_pragma_entry	cpplib.c	/^insert_pragma_entry (pfile, chain, pragma, handler)$/;"	f	file:
insert_regs	cse.c	/^insert_regs (x, classp, modified)$/;"	f	file:
insert_restore	caller-save.c	/^insert_restore (chain, before_p, regno, maxrestore, save_mode)$/;"	f	file:
insert_save	caller-save.c	/^insert_save (chain, before_p, regno, to_save, save_mode)$/;"	f	file:
insert_set_in_table	gcse.c	/^insert_set_in_table (x, insn)$/;"	f	file:
insert_store	gcse.c	/^insert_store (expr, e)$/;"	f	file:
insert_subset_children	alias.c	/^insert_subset_children (node, data)$/;"	f	file:
inside_basic_block_p	cfgbuild.c	/^inside_basic_block_p (insn)$/;"	f	file:
insn	df.c	/^  rtx insn;$/;"	m	struct:replace_args	file:
insn	df.h	/^  rtx insn;			\/* Insn containing ref.  *\/$/;"	m	struct:ref
insn	function.c	/^  rtx insn;$/;"	m	struct:insns_for_mem_walk_info	file:
insn	gcse.c	/^  rtx insn;$/;"	m	struct:occr	file:
insn	gcse.c	/^  rtx insn;$/;"	m	struct:reg_set	file:
insn	loop.c	/^  rtx insn;			\/* A movable insn *\/$/;"	m	struct:movable	file:
insn	loop.c	/^  rtx insn;$/;"	m	struct:loop_replace_args	file:
insn	loop.h	/^  rtx insn;			\/* The insn that sets a biv or giv *\/$/;"	m	struct:induction
insn	recog.c	/^  rtx insn;			\/* Insn in which substitution is occurring.  *\/$/;"	m	struct:validate_replace_src_data	file:
insn	recog.c	/^  rtx insn;$/;"	m	struct:peep2_insn_data	file:
insn	recog.h	/^  rtx insn;$/;"	m	struct:recog_data
insn	regmove.c	/^  rtx insn, *mem;$/;"	m	struct:csa_memlist	file:
insn	regmove.c	/^  rtx insn;$/;"	m	struct:record_stack_memrefs_data	file:
insn	regrename.c	/^  rtx insn;$/;"	m	struct:du_chain	file:
insn	reload.h	/^  rtx insn;$/;"	m	struct:insn_chain
insn	reload1.c	/^struct reg_use { rtx insn, *usep; };$/;"	m	struct:reg_use	file:
insn_a	ifcvt.c	/^  rtx insn_a, insn_b;$/;"	m	struct:noce_if_info	file:
insn_addresses_	final.c	/^varray_type insn_addresses_;$/;"	v
insn_b	ifcvt.c	/^  rtx insn_a, insn_b;$/;"	m	struct:noce_if_info	file:
insn_chain	reload.h	/^struct insn_chain $/;"	s
insn_code	insn-codes.h	/^enum insn_code {$/;"	g
insn_code	optabs.h	/^    enum insn_code insn_code;$/;"	m	struct:optab::__anon14	typeref:enum:optab::__anon14::insn_code
insn_cost	haifa-sched.c	/^insn_cost (insn, link, used)$/;"	f
insn_counter	final.c	/^static int insn_counter = 0;$/;"	v	file:
insn_cuid	combine.c	/^insn_cuid (insn)$/;"	f	file:
insn_current_address	final.c	/^int insn_current_address;$/;"	v
insn_current_align	final.c	/^int insn_current_align;$/;"	v
insn_current_length	insn-attrtab.c	/^insn_current_length (insn)$/;"	f
insn_current_reference_address	final.c	/^insn_current_reference_address (branch)$/;"	f
insn_data	insn-output.c	/^const struct insn_data insn_data[] = $/;"	v	typeref:struct:insn_data
insn_data	recog.h	/^struct insn_data$/;"	s
insn_dead_p	flow.c	/^insn_dead_p (pbi, x, call_ok, notes)$/;"	f	file:
insn_default_length	insn-attrtab.c	/^insn_default_length (insn)$/;"	f
insn_dependent_p	rtlanal.c	/^insn_dependent_p (x, y)$/;"	f
insn_dependent_p_1	rtlanal.c	/^insn_dependent_p_1 (x, pat, data)$/;"	f	file:
insn_extract	insn-extract.c	/^insn_extract (insn)$/;"	f
insn_gen_fn	recog.h	/^typedef rtx (*insn_gen_fn) PARAMS ((rtx, ...));$/;"	t
insn_info	df.h	/^struct insn_info$/;"	s
insn_invalid_p	recog.c	/^insn_invalid_p (insn)$/;"	f
insn_issue_delay	haifa-sched.c	/^insn_issue_delay (insn)$/;"	f
insn_last_address	final.c	/^int insn_last_address;$/;"	v
insn_lengths	final.c	/^static int *insn_lengths;$/;"	v	file:
insn_lengths_max_uid	final.c	/^static int insn_lengths_max_uid;$/;"	v	file:
insn_live_p	cse.c	/^insn_live_p (insn, counts)$/;"	f	file:
insn_map	integrate.h	/^  rtx *insn_map;$/;"	m	struct:inline_remap
insn_noperands	final.c	/^static unsigned int insn_noperands;$/;"	v	file:
insn_note	rtl.h	/^enum insn_note$/;"	g
insn_operand_data	recog.h	/^struct insn_operand_data$/;"	s
insn_operand_predicate_fn	recog.h	/^typedef int (*insn_operand_predicate_fn) PARAMS ((rtx, enum machine_mode));$/;"	t
insn_output_fn	recog.h	/^typedef const char * (*insn_output_fn) PARAMS ((rtx *, rtx));$/;"	t
insn_print_units	sched-vis.c	/^insn_print_units (insn)$/;"	f
insn_ptr	lcm.c	/^  rtx insn_ptr;$/;"	m	struct:seginfo	file:
insn_queue	haifa-sched.c	/^static rtx insn_queue[INSN_QUEUE_SIZE];$/;"	v	file:
insn_references_resource_p	reorg.c	/^insn_references_resource_p (insn, res, include_delayed_effects)$/;"	f	file:
insn_scopes	cfglayout.c	/^static varray_type insn_scopes;$/;"	v	file:
insn_sets_resource_p	reorg.c	/^insn_sets_resource_p (insn, res, include_delayed_effects)$/;"	f	file:
insn_size	df.h	/^  unsigned int insn_size;	\/* Size of insn table.  *\/$/;"	m	struct:df
insn_unit	haifa-sched.c	/^insn_unit (insn)$/;"	f
insn_variable_length_p	insn-attrtab.c	/^insn_variable_length_p (insn)$/;"	f
insns	basic-block.h	/^  rtx insns;$/;"	m	struct:edge_def
insns	df.h	/^  struct insn_info *insns;	\/* Insn table, indexed by insn UID.  *\/$/;"	m	struct:df	typeref:struct:df::insn_info
insns	function.c	/^  rtx insns;$/;"	m	struct:insns_for_mem_entry	file:
insns_at_start	integrate.h	/^  rtx insns_at_start;$/;"	m	struct:inline_remap
insns_for_mem_comp	function.c	/^insns_for_mem_comp (k1, k2)$/;"	f	file:
insns_for_mem_entry	function.c	/^struct insns_for_mem_entry$/;"	s	file:
insns_for_mem_hash	function.c	/^insns_for_mem_hash (k)$/;"	f	file:
insns_for_mem_newfunc	function.c	/^insns_for_mem_newfunc (he, ht, k)$/;"	f	file:
insns_for_mem_walk	function.c	/^insns_for_mem_walk (r, data)$/;"	f	file:
insns_for_mem_walk_info	function.c	/^struct insns_for_mem_walk_info$/;"	s	file:
insns_match_p	cfgcleanup.c	/^insns_match_p (mode, i1, i2)$/;"	f	file:
insns_modified	df.h	/^  bitmap insns_modified;	\/* Insns that (may) have changed.  *\/$/;"	m	struct:df
insns_need_reload	reload1.c	/^static struct insn_chain *insns_need_reload;$/;"	v	typeref:struct:insn_chain	file:
insns_safe_to_move_p	rtlanal.c	/^insns_safe_to_move_p (from, to, new_to)$/;"	f
instantiate_decl	function.c	/^instantiate_decl (x, size, valid_only)$/;"	f	file:
instantiate_decls	function.c	/^instantiate_decls (fndecl, valid_only)$/;"	f	file:
instantiate_decls_1	function.c	/^instantiate_decls_1 (let, valid_only)$/;"	f	file:
instantiate_new_reg	function.c	/^instantiate_new_reg (x, poffset)$/;"	f	file:
instantiate_virtual_regs	function.c	/^instantiate_virtual_regs (fndecl, insns)$/;"	f
instantiate_virtual_regs_1	function.c	/^instantiate_virtual_regs_1 (loc, object, extra_insns)$/;"	f	file:
instrument_edges	profile.c	/^instrument_edges (el)$/;"	f	file:
instrument_entry_exit	function.h	/^  unsigned int instrument_entry_exit : 1;$/;"	m	struct:function
intDI_type_node	tree.h	1954;"	d
intHI_type_node	tree.h	1952;"	d
intQI_type_node	tree.h	1951;"	d
intSI_type_node	tree.h	1953;"	d
intTI_type_node	tree.h	1955;"	d
int_array_type_node	c-common.h	214;"	d
int_bit_position	tree.c	/^int_bit_position (field)$/;"	f
int_byte_position	tree.c	/^int_byte_position (field)$/;"	f
int_const_binop	fold-const.c	/^int_const_binop (code, arg1, arg2, notrunc)$/;"	f	file:
int_cst	tree.h	/^  struct tree_int_cst int_cst;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_int_cst
int_cst	tree.h	/^  } int_cst;$/;"	m	struct:tree_int_cst	typeref:struct:tree_int_cst::__anon16
int_fits_type_p	tree.c	/^int_fits_type_p (c, type)$/;"	f
int_load	i386.h	/^  const int int_load[3];	\/* cost of loading integer registers$/;"	m	struct:processor_costs
int_loc_descriptor	dwarf2out.c	/^int_loc_descriptor (i)$/;"	f	file:
int_mode_for_mode	stor-layout.c	/^int_mode_for_mode (mode)$/;"	f
int_reg_class_contents	regclass.c	/^static const unsigned int_reg_class_contents[N_REG_CLASSES][N_REG_INTS] $/;"	v	file:
int_size_in_bytes	tree.c	/^int_size_in_bytes (type)$/;"	f
int_store	i386.h	/^  const int int_store[3];	\/* cost of storing integer register$/;"	m	struct:processor_costs
int_vasprintf	vasprintf.c	/^int_vasprintf (result, format, args)$/;"	f	file:
integer	target.h	/^    bool (* integer) PARAMS ((rtx x, unsigned int size, int aligned_p));$/;"	m	struct:gcc_target::asm_out
integer_all_onesp	tree.c	/^integer_all_onesp (expr)$/;"	f
integer_asm_op	varasm.c	/^integer_asm_op (size, aligned_p)$/;"	f
integer_minus_one_node	tree.h	1965;"	d
integer_one_node	tree.h	1964;"	d
integer_onep	tree.c	/^integer_onep (expr)$/;"	f
integer_overflow	cppexp.c	/^integer_overflow (pfile)$/;"	f	file:
integer_pow2p	tree.c	/^integer_pow2p (expr)$/;"	f
integer_type_class	typeclass.h	/^  void_type_class, integer_type_class, char_type_class,$/;"	e	enum:type_class
integer_type_kind	tree.h	/^enum integer_type_kind $/;"	g
integer_type_kind	tree.h	/^typedef enum integer_type_kind integer_type_kind;$/;"	t	typeref:enum:integer_type_kind
integer_type_node	tree.h	2047;"	d
integer_types	tree.c	/^tree integer_types[itk_none];$/;"	v
integer_zero_node	tree.h	1963;"	d
integer_zerop	tree.c	/^integer_zerop (expr)$/;"	f
integrate_decl_tree	integrate.c	/^integrate_decl_tree (let, map)$/;"	f	file:
integrate_parm_decls	integrate.c	/^integrate_parm_decls (args, map, arg_vector)$/;"	f	file:
integrated	rtl.h	/^  unsigned integrated : 1;$/;"	m	struct:rtx_def
integrating	integrate.h	/^  int integrating;$/;"	m	struct:inline_remap
interface_only	c-common.h	/^  short interface_only;		\/* Flags - used only by C++ *\/$/;"	m	struct:c_fileinfo
interface_unknown	c-common.h	/^  short interface_unknown;$/;"	m	struct:c_fileinfo
internal_arg_pointer	function.h	/^  rtx internal_arg_pointer;$/;"	m	struct:function
internal_build_compound_expr	c-typeck.c	/^internal_build_compound_expr (list, first_p)$/;"	f	file:
internal_error	diagnostic.c	/^internal_error VPARAMS ((const char *msgid, ...))$/;"	f
internal_error_function	diagnostic.c	/^static void (*internal_error_function) PARAMS ((const char *, va_list *));$/;"	v	file:
internal_label_prefix	i386.c	/^static char internal_label_prefix[16];$/;"	v	file:
internal_label_prefix_len	i386.c	/^static int internal_label_prefix_len;$/;"	v	file:
internal_reference_types	stor-layout.c	/^internal_reference_types ()$/;"	f
intmax_type_node	c-common.h	199;"	d
inv_reg_alloc_order	regclass.c	/^int inv_reg_alloc_order[FIRST_PSEUDO_REGISTER];$/;"	v
invalid	basic-block.h	/^  int invalid;$/;"	m	struct:loop
invalid	gcse.c	/^  int invalid;			\/* Invalid for some reason.  *\/$/;"	m	struct:ls_expr	file:
invalidate	cse.c	/^invalidate (x, full_mode)$/;"	f	file:
invalidate_any_buried_refs	gcse.c	/^invalidate_any_buried_refs (x)$/;"	f	file:
invalidate_for_call	cse.c	/^invalidate_for_call ()$/;"	f	file:
invalidate_from_clobbers	cse.c	/^invalidate_from_clobbers (x)$/;"	f	file:
invalidate_loops_containing_label	loop.c	/^invalidate_loops_containing_label (label)$/;"	f	file:
invalidate_memory	cse.c	/^invalidate_memory ()$/;"	f	file:
invalidate_mems_from_autoinc	flow.c	/^invalidate_mems_from_autoinc (pbi, insn)$/;"	f	file:
invalidate_mems_from_set	flow.c	/^invalidate_mems_from_set (pbi, exp)$/;"	f	file:
invalidate_nonnull_info	gcse.c	/^invalidate_nonnull_info (x, setter, data)$/;"	f	file:
invalidate_skipped_block	cse.c	/^invalidate_skipped_block (start)$/;"	f	file:
invalidate_skipped_set	cse.c	/^invalidate_skipped_set (dest, set, data)$/;"	f	file:
inverse_dfs_map	df.h	/^  int * inverse_dfs_map; \/* block number -> DFS order *\/$/;"	m	struct:df
inverse_rc_map	df.h	/^  int * inverse_rc_map; \/* block number -> reverse completion order *\/$/;"	m	struct:df
inverse_rts_map	df.h	/^  int * inverse_rts_map; \/* block number -> reverse top-sort order *\/$/;"	m	struct:df
invert_br_probabilities	predict.c	/^invert_br_probabilities (insn)$/;"	f
invert_exp	jump.c	/^invert_exp (insn)$/;"	f	file:
invert_exp_1	jump.c	/^invert_exp_1 (insn)$/;"	f	file:
invert_jump	jump.c	/^invert_jump (jump, nlabel, delete_unused)$/;"	f
invert_jump_1	jump.c	/^invert_jump_1 (jump, nlabel)$/;"	f
invert_mod2n	expmed.c	/^invert_mod2n (x, n)$/;"	f	file:
invert_tree_comparison	fold-const.c	/^invert_tree_comparison (code)$/;"	f	file:
invert_truthvalue	fold-const.c	/^invert_truthvalue (arg)$/;"	f
ior_hard_reg_set	reload1.c	/^ior_hard_reg_set (set1, set2)$/;"	f	file:
ior_optab	optabs.h	176;"	d
ior_reg_cond	flow.c	/^ior_reg_cond (old, x, add)$/;"	f	file:
is	safe-ctype.c	40;"	d	file:
is_2	simplify-rtx.c	/^  bool is_2;$/;"	m	struct:simplify_binary_is2orm1_args	file:
is_address	recog.h	/^  unsigned int is_address:1;$/;"	m	struct:operand_alternative
is_addressof	function.c	/^is_addressof (rtl, data)$/;"	f	file:
is_aligning_offset	expr.c	/^is_aligning_offset (offset, exp)$/;"	f	file:
is_attribute_p	tree.c	/^is_attribute_p (attr, ident)$/;"	f
is_base_type	dwarf2out.c	/^is_base_type (type)$/;"	f	file:
is_based_loc	dwarf2out.c	/^is_based_loc (rtl)$/;"	f	file:
is_body_block	stmt.c	/^is_body_block (stmt)$/;"	f
is_c_family	dwarf2out.c	/^is_c_family ()$/;"	f	file:
is_caller_save_insn	reload.h	/^  unsigned int is_caller_save_insn:1;$/;"	m	struct:insn_chain
is_cfg_nonregular	sched-rgn.c	/^is_cfg_nonregular ()$/;"	f	file:
is_class_name	c-lang.c	/^is_class_name (arg)$/;"	f
is_comdat_die	dwarf2out.c	/^is_comdat_die (c)$/;"	f	file:
is_conditionally_protected	sched-rgn.c	/^is_conditionally_protected (load_insn, bb_src, bb_trg)$/;"	f	file:
is_const	cse.c	/^  char is_const;$/;"	m	struct:table_elt	file:
is_cxx	dwarf2out.c	/^is_cxx ()$/;"	f	file:
is_equiv	loop.c	/^  unsigned int is_equiv : 1;	\/* 1 means a REG_EQUIV is present on INSN.  *\/$/;"	m	struct:movable	file:
is_exception_free	sched-rgn.c	/^is_exception_free (insn, bb_src, bb_trg)$/;"	f	file:
is_fortran	dwarf2out.c	/^is_fortran ()$/;"	f	file:
is_hspace	cpphash.h	342;"	d
is_idchar	cpphash.h	338;"	d
is_idstart	cpphash.h	340;"	d
is_int	combine.c	/^  int is_int;$/;"	m	struct:undo	file:
is_java	dwarf2out.c	/^is_java ()$/;"	f	file:
is_load_insn	sched-int.h	/^  unsigned int is_load_insn : 1;$/;"	m	struct:haifa_insn_data
is_m1	simplify-rtx.c	/^  bool is_m1;$/;"	m	struct:simplify_binary_is2orm1_args	file:
is_nspace	cpplib.c	/^  int is_nspace;$/;"	m	struct:pragma_entry	file:
is_numchar	cpphash.h	339;"	d
is_numstart	cpphash.h	341;"	d
is_nvspace	cpphash.h	344;"	d
is_pending_size	stor-layout.c	/^is_pending_size (expr)$/;"	f
is_pfree	sched-rgn.c	/^is_pfree (load_insn, bb_src, bb_trg)$/;"	f	file:
is_prisky	sched-rgn.c	/^is_prisky (load_insn, bb_src, bb_trg)$/;"	f	file:
is_pseudo_reg	dwarf2out.c	/^is_pseudo_reg (rtl)$/;"	f	file:
is_pseudo_reg	dwarfout.c	/^is_pseudo_reg (rtl)$/;"	f	file:
is_redundant_typedef	dwarf2out.c	/^is_redundant_typedef (decl)$/;"	f	file:
is_redundant_typedef	dwarfout.c	/^is_redundant_typedef (decl)$/;"	f	file:
is_space	cpphash.h	345;"	d
is_speculative	sched-rgn.c	/^  char is_speculative;$/;"	m	struct:__anon31	file:
is_starting_newline	diagnostic.c	48;"	d	file:
is_symbol_die	dwarf2out.c	/^is_symbol_die (c)$/;"	f	file:
is_tagged_type	dwarf2out.c	/^is_tagged_type (type)$/;"	f	file:
is_tagged_type	dwarfout.c	/^is_tagged_type (type)$/;"	f	file:
is_thunk	function.h	/^  unsigned int is_thunk : 1;$/;"	m	struct:function
is_type_die	dwarf2out.c	/^is_type_die (die)$/;"	f	file:
is_valid	sched-rgn.c	/^  char is_valid;$/;"	m	struct:__anon31	file:
is_valid_printf_arglist	c-common.c	/^is_valid_printf_arglist (arglist)$/;"	f	file:
is_vspace	cpphash.h	343;"	d
is_zeros_p	expr.c	/^is_zeros_p (exp)$/;"	f	file:
issue_rate	haifa-sched.c	/^static int issue_rate;$/;"	v	file:
issue_rate	target.h	/^    int (* issue_rate) PARAMS ((void));$/;"	m	struct:gcc_target::sched
issued_this_cycle	i386.c	/^    int issued_this_cycle;$/;"	m	struct:__anon64::ppro_sched_data	file:
iteration_var	loop.h	/^  rtx iteration_var;$/;"	m	struct:loop_info
iterative_dataflow_bitmap	df.c	/^iterative_dataflow_bitmap (in, out, gen, kill, blocks, $/;"	f
iterative_dataflow_sbitmap	df.c	/^iterative_dataflow_sbitmap (in, out, gen, kill, blocks, $/;"	f
itk_char	tree.h	/^  itk_char,$/;"	e	enum:integer_type_kind
itk_int	tree.h	/^  itk_int,$/;"	e	enum:integer_type_kind
itk_long	tree.h	/^  itk_long,$/;"	e	enum:integer_type_kind
itk_long_long	tree.h	/^  itk_long_long,$/;"	e	enum:integer_type_kind
itk_none	tree.h	/^  itk_none$/;"	e	enum:integer_type_kind
itk_short	tree.h	/^  itk_short,$/;"	e	enum:integer_type_kind
itk_signed_char	tree.h	/^  itk_signed_char,$/;"	e	enum:integer_type_kind
itk_unsigned_char	tree.h	/^  itk_unsigned_char,$/;"	e	enum:integer_type_kind
itk_unsigned_int	tree.h	/^  itk_unsigned_int,$/;"	e	enum:integer_type_kind
itk_unsigned_long	tree.h	/^  itk_unsigned_long,$/;"	e	enum:integer_type_kind
itk_unsigned_long_long	tree.h	/^  itk_unsigned_long_long,$/;"	e	enum:integer_type_kind
itk_unsigned_short	tree.h	/^  itk_unsigned_short,$/;"	e	enum:integer_type_kind
itype	c-parse.c	/^typedef union {long itype; tree ttype; enum tree_code code;$/;"	m	union:__anon52	file:
iv	loop.h	/^  struct iv_class *iv;$/;"	m	struct:loop_info	typeref:struct:loop_info::iv_class
iv	loop.h	/^  } iv;$/;"	m	struct:iv	typeref:union:iv::__anon35
iv	loop.h	/^struct iv$/;"	s
iv_add_mult_cost	loop.c	/^iv_add_mult_cost (b, m, a, reg)$/;"	f	file:
iv_class	loop.h	/^struct iv_class$/;"	s
iv_mode	loop.h	/^enum iv_mode$/;"	g
ivs	loop.h	/^  struct loop_ivs ivs;$/;"	m	struct:loop_info	typeref:struct:loop_info::loop_ivs
ix86_GOT_alias_set	i386.c	/^ix86_GOT_alias_set ()$/;"	f	file:
ix86_address	i386.c	/^struct ix86_address$/;"	s	file:
ix86_address_cost	i386.c	/^ix86_address_cost (x)$/;"	f
ix86_adjust_cost	i386.c	/^ix86_adjust_cost (insn, link, dep_insn, cost)$/;"	f	file:
ix86_adjust_counter	i386.c	/^ix86_adjust_counter (countreg, value)$/;"	f	file:
ix86_agi_dependant	i386.c	/^ix86_agi_dependant (insn, dep_insn, insn_type)$/;"	f	file:
ix86_align_funcs_string	i386.c	/^const char *ix86_align_funcs_string;$/;"	v
ix86_align_jumps_string	i386.c	/^const char *ix86_align_jumps_string;$/;"	v
ix86_align_loops_string	i386.c	/^const char *ix86_align_loops_string;$/;"	v
ix86_arch	i386.c	/^int ix86_arch;$/;"	v
ix86_arch_string	i386.c	/^const char *ix86_arch_string;		\/* for -march=<xxx> *\/$/;"	v
ix86_args	i386.h	/^typedef struct ix86_args {$/;"	s
ix86_asm_dialect	i386.c	/^enum asm_dialect ix86_asm_dialect = ASM_ATT;$/;"	v	typeref:enum:asm_dialect
ix86_asm_file_end	i386.c	/^ix86_asm_file_end (file)$/;"	f
ix86_asm_string	i386.c	/^const char *ix86_asm_string;$/;"	v
ix86_attr_length_address_default	i386.c	/^ix86_attr_length_address_default (insn)$/;"	f
ix86_attr_length_immediate_default	i386.c	/^ix86_attr_length_immediate_default (insn, shortform)$/;"	f
ix86_attribute_table	i386.c	/^const struct attribute_spec ix86_attribute_table[] =$/;"	v	typeref:struct:attribute_spec
ix86_attribute_table	i386.c	/^const struct attribute_spec ix86_attribute_table[];$/;"	v	typeref:struct:attribute_spec
ix86_binary_operator_ok	i386.c	/^ix86_binary_operator_ok (code, mode, operands)$/;"	f
ix86_branch_cost	i386.c	/^int ix86_branch_cost;$/;"	v
ix86_branch_cost_string	i386.c	/^const char *ix86_branch_cost_string;$/;"	v
ix86_build_va_list	i386.c	/^ix86_build_va_list ()$/;"	f
ix86_builtins	i386.h	/^enum ix86_builtins$/;"	g
ix86_can_use_return_insn_p	i386.c	/^ix86_can_use_return_insn_p ()$/;"	f
ix86_cc_mode	i386.c	/^ix86_cc_mode (code, op0, op1)$/;"	f
ix86_cmodel	i386.c	/^enum cmodel ix86_cmodel;$/;"	v	typeref:enum:cmodel
ix86_cmodel_string	i386.c	/^const char *ix86_cmodel_string;$/;"	v
ix86_comp_type_attributes	i386.c	/^ix86_comp_type_attributes (type1, type2)$/;"	f	file:
ix86_compare_op0	i386.c	/^rtx ix86_compare_op0 = NULL_RTX;$/;"	v
ix86_compare_op1	i386.c	/^rtx ix86_compare_op1 = NULL_RTX;$/;"	v
ix86_comparison_operator	i386.c	/^ix86_comparison_operator (op, mode)$/;"	f
ix86_compute_frame_layout	i386.c	/^ix86_compute_frame_layout (frame)$/;"	f	file:
ix86_constant_alignment	i386.c	/^ix86_constant_alignment (exp, align)$/;"	f
ix86_cost	i386.c	/^const struct processor_costs *ix86_cost = &pentium_cost;$/;"	v	typeref:struct:processor_costs
ix86_cpu	i386.c	/^enum processor_type ix86_cpu;$/;"	v	typeref:enum:processor_type
ix86_cpu_string	i386.c	/^const char *ix86_cpu_string;		\/* for -mcpu=<xxx> *\/$/;"	v
ix86_data_alignment	i386.c	/^ix86_data_alignment (type, align)$/;"	f
ix86_debug_addr_string	i386.c	/^const char *ix86_debug_arg_string, *ix86_debug_addr_string;$/;"	v
ix86_debug_arg_string	i386.c	/^const char *ix86_debug_arg_string, *ix86_debug_addr_string;$/;"	v
ix86_decompose_address	i386.c	/^ix86_decompose_address (addr, out)$/;"	f	file:
ix86_dump_ppro_packet	i386.c	/^ix86_dump_ppro_packet (dump)$/;"	f	file:
ix86_emit_restore_regs_using_mov	i386.c	/^ix86_emit_restore_regs_using_mov (pointer, offset, maybe_eh_return)$/;"	f	file:
ix86_emit_save_regs	i386.c	/^ix86_emit_save_regs ()$/;"	f	file:
ix86_emit_save_regs_using_mov	i386.c	/^ix86_emit_save_regs_using_mov (pointer, offset)$/;"	f	file:
ix86_expand_aligntest	i386.c	/^ix86_expand_aligntest (variable, value)$/;"	f	file:
ix86_expand_binary_operator	i386.c	/^ix86_expand_binary_operator (code, mode, operands)$/;"	f
ix86_expand_binop_builtin	i386.c	/^ix86_expand_binop_builtin (icode, arglist, target)$/;"	f	file:
ix86_expand_branch	i386.c	/^ix86_expand_branch (code, label)$/;"	f
ix86_expand_builtin	i386.c	/^ix86_expand_builtin (exp, target, subtarget, mode, ignore)$/;"	f
ix86_expand_clear	i386.c	/^ix86_expand_clear (dest)$/;"	f
ix86_expand_clrstr	i386.c	/^ix86_expand_clrstr (src, count_exp, align_exp)$/;"	f
ix86_expand_compare	i386.c	/^ix86_expand_compare (code, second_test, bypass_test)$/;"	f
ix86_expand_epilogue	i386.c	/^ix86_expand_epilogue (style)$/;"	f
ix86_expand_fp_compare	i386.c	/^ix86_expand_fp_compare (code, op0, op1, scratch, second_test, bypass_test)$/;"	f	file:
ix86_expand_fp_movcc	i386.c	/^ix86_expand_fp_movcc (operands)$/;"	f
ix86_expand_int_compare	i386.c	/^ix86_expand_int_compare (code, op0, op1)$/;"	f	file:
ix86_expand_int_movcc	i386.c	/^ix86_expand_int_movcc (operands)$/;"	f
ix86_expand_move	i386.c	/^ix86_expand_move (mode, operands)$/;"	f
ix86_expand_movstr	i386.c	/^ix86_expand_movstr (dst, src, count_exp, align_exp)$/;"	f
ix86_expand_prologue	i386.c	/^ix86_expand_prologue ()$/;"	f
ix86_expand_setcc	i386.c	/^ix86_expand_setcc (code, dest)$/;"	f
ix86_expand_sse_comi	i386.c	/^ix86_expand_sse_comi (d, arglist, target)$/;"	f	file:
ix86_expand_sse_compare	i386.c	/^ix86_expand_sse_compare (d, arglist, target)$/;"	f	file:
ix86_expand_store_builtin	i386.c	/^ix86_expand_store_builtin (icode, arglist)$/;"	f	file:
ix86_expand_strlen	i386.c	/^ix86_expand_strlen (out, src, eoschar, align)$/;"	f
ix86_expand_strlensi_unroll_1	i386.c	/^ix86_expand_strlensi_unroll_1 (out, align_rtx)$/;"	f	file:
ix86_expand_timode_binop_builtin	i386.c	/^ix86_expand_timode_binop_builtin (icode, arglist, target)$/;"	f	file:
ix86_expand_unary_operator	i386.c	/^ix86_expand_unary_operator (code, mode, operands)$/;"	f
ix86_expand_unop1_builtin	i386.c	/^ix86_expand_unop1_builtin (icode, arglist, target)$/;"	f	file:
ix86_expand_unop_builtin	i386.c	/^ix86_expand_unop_builtin (icode, arglist, target, do_load)$/;"	f	file:
ix86_expand_vector_move	i386.c	/^ix86_expand_vector_move (mode, operands)$/;"	f
ix86_find_base_term	i386.c	/^ix86_find_base_term (x)$/;"	f
ix86_flags_dependant	i386.c	/^ix86_flags_dependant (insn, dep_insn, insn_type)$/;"	f	file:
ix86_flags_rtx	reg-stack.c	/^static rtx ix86_flags_rtx;$/;"	v	file:
ix86_force_to_memory	i386.c	/^ix86_force_to_memory (mode, operand)$/;"	f
ix86_fp_compare_code_to_integer	i386.c	/^ix86_fp_compare_code_to_integer (code)$/;"	f	file:
ix86_fp_compare_mode	i386.c	/^ix86_fp_compare_mode (code)$/;"	f
ix86_fp_comparison_arithmetics_cost	i386.c	/^ix86_fp_comparison_arithmetics_cost (code)$/;"	f	file:
ix86_fp_comparison_codes	i386.c	/^ix86_fp_comparison_codes (code, bypass_code, first_code, second_code)$/;"	f	file:
ix86_fp_comparison_cost	i386.c	/^ix86_fp_comparison_cost (code)$/;"	f	file:
ix86_fp_comparison_fcomi_cost	i386.c	/^ix86_fp_comparison_fcomi_cost (code)$/;"	f	file:
ix86_fp_comparison_sahf_cost	i386.c	/^ix86_fp_comparison_sahf_cost (code)$/;"	f	file:
ix86_fp_jump_nontrivial_p	i386.c	/^ix86_fp_jump_nontrivial_p (code)$/;"	f
ix86_fpmath	i386.c	/^enum fpmath_unit ix86_fpmath;$/;"	v	typeref:enum:fpmath_unit
ix86_fpmath_string	i386.c	/^const char *ix86_fpmath_string;		\/* for -mfpmath=<xxx> *\/$/;"	v
ix86_frame	i386.c	/^struct ix86_frame$/;"	s	file:
ix86_frame_pointer_required	i386.c	/^ix86_frame_pointer_required ()$/;"	f
ix86_free_from_memory	i386.c	/^ix86_free_from_memory (mode)$/;"	f
ix86_free_machine_status	i386.c	/^ix86_free_machine_status (p)$/;"	f	file:
ix86_function_arg_boundary	i386.c	/^ix86_function_arg_boundary (mode, type)$/;"	f
ix86_function_arg_regno_p	i386.c	/^ix86_function_arg_regno_p (regno)$/;"	f
ix86_function_value	i386.c	/^ix86_function_value (valtype)$/;"	f
ix86_function_value_regno_p	i386.c	/^ix86_function_value_regno_p (regno)$/;"	f
ix86_handle_cdecl_attribute	i386.c	/^ix86_handle_cdecl_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
ix86_handle_regparm_attribute	i386.c	/^ix86_handle_regparm_attribute (node, name, args, flags, no_add_attrs)$/;"	f	file:
ix86_hard_regno_mode_ok	i386.c	/^ix86_hard_regno_mode_ok (regno, mode)$/;"	f
ix86_init_builtins	i386.c	/^ix86_init_builtins ()$/;"	f
ix86_init_machine_status	i386.c	/^ix86_init_machine_status (p)$/;"	f	file:
ix86_init_mmx_sse_builtins	i386.c	/^ix86_init_mmx_sse_builtins ()$/;"	f	file:
ix86_initial_elimination_offset	i386.c	/^ix86_initial_elimination_offset (from, to)$/;"	f
ix86_issue_rate	i386.c	/^ix86_issue_rate ()$/;"	f	file:
ix86_libcall_value	i386.c	/^ix86_libcall_value (mode)$/;"	f
ix86_local_alignment	i386.c	/^ix86_local_alignment (type, align)$/;"	f
ix86_mark_machine_status	i386.c	/^ix86_mark_machine_status (p)$/;"	f	file:
ix86_match_ccmode	i386.c	/^ix86_match_ccmode (insn, req_mode)$/;"	f
ix86_memory_move_cost	i386.c	/^ix86_memory_move_cost (mode, class, in)$/;"	f
ix86_nsaved_regs	i386.c	/^ix86_nsaved_regs ()$/;"	f	file:
ix86_osf_output_function_prologue	i386.c	/^ix86_osf_output_function_prologue (file, size)$/;"	f	file:
ix86_output_addr_diff_elt	i386.c	/^ix86_output_addr_diff_elt (file, value, rel)$/;"	f
ix86_output_addr_vec_elt	i386.c	/^ix86_output_addr_vec_elt (file, value)$/;"	f
ix86_pent_find_pair	i386.c	/^ix86_pent_find_pair (e_ready, ready, type, first)$/;"	f	file:
ix86_preferred_reload_class	i386.c	/^ix86_preferred_reload_class (x, class)$/;"	f
ix86_preferred_stack_boundary	i386.c	/^int ix86_preferred_stack_boundary;$/;"	v
ix86_preferred_stack_boundary_string	i386.c	/^const char *ix86_preferred_stack_boundary_string;$/;"	v
ix86_prepare_fp_compare_args	i386.c	/^ix86_prepare_fp_compare_args (code, pop0, pop1)$/;"	f	file:
ix86_register_move_cost	i386.c	/^ix86_register_move_cost (mode, class1, class2)$/;"	f
ix86_regparm	i386.c	/^int ix86_regparm;$/;"	v
ix86_regparm_string	i386.c	/^const char *ix86_regparm_string;$/;"	v
ix86_reorder_insn	i386.c	/^ix86_reorder_insn (insnp, slot)$/;"	f	file:
ix86_return_in_memory	i386.c	/^ix86_return_in_memory (type)$/;"	f
ix86_return_pops_args	i386.c	/^ix86_return_pops_args (fundecl, funtype, size)$/;"	f
ix86_safe_length	i386.c	/^ix86_safe_length (insn)$/;"	f	file:
ix86_safe_length_prefix	i386.c	/^ix86_safe_length_prefix (insn)$/;"	f	file:
ix86_safe_memory	i386.c	/^ix86_safe_memory (insn)$/;"	f	file:
ix86_safe_pent_pair	i386.c	/^ix86_safe_pent_pair (insn)$/;"	f	file:
ix86_safe_ppro_uops	i386.c	/^ix86_safe_ppro_uops (insn)$/;"	f	file:
ix86_save_reg	i386.c	/^ix86_save_reg (regno, maybe_eh_return)$/;"	f	file:
ix86_save_varrargs_registers	i386.c	552;"	d	file:
ix86_sched_data	i386.c	/^} ix86_sched_data;$/;"	v	typeref:union:__anon64	file:
ix86_sched_init	i386.c	/^ix86_sched_init (dump, sched_verbose, veclen)$/;"	f	file:
ix86_sched_reorder	i386.c	/^ix86_sched_reorder (dump, sched_verbose, ready, n_readyp, clock_var)$/;"	f	file:
ix86_sched_reorder_pentium	i386.c	/^ix86_sched_reorder_pentium (ready, e_ready)$/;"	f	file:
ix86_sched_reorder_ppro	i386.c	/^ix86_sched_reorder_ppro (ready, e_ready)$/;"	f	file:
ix86_secondary_memory_needed	i386.c	/^ix86_secondary_memory_needed (class1, class2, mode, strict)$/;"	f
ix86_set_move_mem_attrs	i386.c	/^ix86_set_move_mem_attrs (insns, dstref, srcref, dstreg, srcreg)$/;"	f
ix86_set_move_mem_attrs_1	i386.c	/^ix86_set_move_mem_attrs_1 (x, dstref, srcref, dstreg, srcreg)$/;"	f	file:
ix86_setup_frame_addresses	i386.c	/^ix86_setup_frame_addresses ()$/;"	f
ix86_setup_incoming_varargs	i386.c	/^ix86_setup_incoming_varargs (cum, mode, type, pretend_size, no_rtl)$/;"	f
ix86_split_ashldi	i386.c	/^ix86_split_ashldi (operands, scratch)$/;"	f
ix86_split_ashrdi	i386.c	/^ix86_split_ashrdi (operands, scratch)$/;"	f
ix86_split_fp_branch	i386.c	/^ix86_split_fp_branch (code, op1, op2, target1, target2, tmp)$/;"	f
ix86_split_long_move	i386.c	/^ix86_split_long_move (operands)$/;"	f
ix86_split_lshrdi	i386.c	/^ix86_split_lshrdi (operands, scratch)$/;"	f
ix86_split_to_parts	i386.c	/^ix86_split_to_parts (operand, parts, mode)$/;"	f	file:
ix86_stack_locals	i386.c	551;"	d	file:
ix86_svr3_asm_out_constructor	i386.c	/^ix86_svr3_asm_out_constructor (symbol, priority)$/;"	f	file:
ix86_unary_operator_ok	i386.c	/^ix86_unary_operator_ok (code, mode, operands)$/;"	f
ix86_use_fcomi_compare	i386.c	/^ix86_use_fcomi_compare (code)$/;"	f
ix86_va_arg	i386.c	/^ix86_va_arg (valist, type)$/;"	f
ix86_va_start	i386.c	/^ix86_va_start (stdarg_p, valist, nextarg)$/;"	f
ix86_variable_issue	i386.c	/^ix86_variable_issue (dump, sched_verbose, insn, can_issue_more)$/;"	f	file:
ix86_zero_extend_to_Pmode	i386.c	/^ix86_zero_extend_to_Pmode (exp)$/;"	f
jump	ifcvt.c	/^  rtx jump, cond, cond_earliest;$/;"	m	struct:noce_if_info	file:
jump	rtl.h	/^  unsigned int jump : 1;$/;"	m	struct:rtx_def
jumpif	expr.c	/^jumpif (exp, label)$/;"	f
jumpifnot	expr.c	/^jumpifnot (exp, label)$/;"	f
k6_alu_unit_blockage	insn-attrtab.c	/^k6_alu_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
k6_alu_unit_blockage_range	insn-attrtab.c	/^k6_alu_unit_blockage_range (insn)$/;"	f
k6_alu_unit_conflict_cost	insn-attrtab.c	/^k6_alu_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
k6_alu_unit_ready_cost	insn-attrtab.c	/^k6_alu_unit_ready_cost (insn)$/;"	f
k6_alux_unit_blockage	insn-attrtab.c	/^k6_alux_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
k6_alux_unit_blockage_range	insn-attrtab.c	/^k6_alux_unit_blockage_range (insn)$/;"	f
k6_alux_unit_conflict_cost	insn-attrtab.c	/^k6_alux_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
k6_alux_unit_ready_cost	insn-attrtab.c	/^k6_alux_unit_ready_cost (insn)$/;"	f
k6_branch_unit_ready_cost	insn-attrtab.c	/^k6_branch_unit_ready_cost (insn)$/;"	f
k6_cost	i386.c	/^struct processor_costs k6_cost = {$/;"	v	typeref:struct:processor_costs	file:
k6_fpu_unit_blockage	insn-attrtab.c	/^k6_fpu_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
k6_fpu_unit_blockage_range	insn-attrtab.c	/^k6_fpu_unit_blockage_range (insn)$/;"	f
k6_fpu_unit_conflict_cost	insn-attrtab.c	/^k6_fpu_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
k6_fpu_unit_ready_cost	insn-attrtab.c	/^k6_fpu_unit_ready_cost (insn)$/;"	f
k6_load_unit_blockage	insn-attrtab.c	/^k6_load_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
k6_load_unit_blockage_range	insn-attrtab.c	/^k6_load_unit_blockage_range (insn)$/;"	f
k6_load_unit_conflict_cost	insn-attrtab.c	/^k6_load_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
k6_load_unit_ready_cost	insn-attrtab.c	/^k6_load_unit_ready_cost (insn)$/;"	f
k6_store_unit_blockage	insn-attrtab.c	/^k6_store_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
k6_store_unit_blockage_range	insn-attrtab.c	/^k6_store_unit_blockage_range (insn)$/;"	f
k6_store_unit_conflict_cost	insn-attrtab.c	/^k6_store_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
k6_store_unit_ready_cost	insn-attrtab.c	/^k6_store_unit_ready_cost (insn)$/;"	f
k_and_r_decls	c-aux-info.c	/^  k_and_r_decls$/;"	e	enum:formals_style_enum	file:
k_and_r_names	c-aux-info.c	/^  k_and_r_names,$/;"	e	enum:formals_style_enum	file:
keep	c-decl.c	/^    char keep;$/;"	m	struct:binding_level	file:
keep	function.c	/^  int keep;$/;"	m	struct:temp_slot	file:
keep_if_subblocks	c-decl.c	/^    char keep_if_subblocks;$/;"	m	struct:binding_level	file:
keep_next_if_subblocks	c-decl.c	/^static int keep_next_if_subblocks;$/;"	v	file:
keep_next_level	c-decl.c	/^keep_next_level ()$/;"	f
keep_next_level_flag	c-decl.c	/^static int keep_next_level_flag;$/;"	v	file:
keep_stack_depressed	function.c	/^keep_stack_depressed (seq)$/;"	f	file:
keep_tokens	cpphash.h	/^  unsigned int keep_tokens;$/;"	m	struct:cpp_reader
keep_with_call_p	cfganal.c	/^keep_with_call_p (insn)$/;"	f	file:
kept_level_p	c-decl.c	/^kept_level_p ()$/;"	f
key	dominance.c	/^  TBB *key;$/;"	m	struct:dom_info	file:
key	fibheap.h	/^  fibheapkey_t key;$/;"	m	struct:fibnode
key	hash.h	/^  hash_table_key key;$/;"	m	struct:hash_entry
key	splay-tree.h	/^  splay_tree_key key;$/;"	m	struct:splay_tree_node_s
kill_autoinc_value	regrename.c	/^kill_autoinc_value (px, data)$/;"	f	file:
kill_clobbered_value	regrename.c	/^kill_clobbered_value (x, set, data)$/;"	f	file:
kill_set_value	regrename.c	/^kill_set_value (x, set, data)$/;"	f	file:
kill_value	regrename.c	/^kill_value (x, vd)$/;"	f	file:
kill_value_regno	regrename.c	/^kill_value_regno (regno, vd)$/;"	f	file:
kind	c-typeck.c	/^  int kind;$/;"	m	struct:spelling	file:
kind	varasm.c	/^enum kind { RTX_UNKNOWN, RTX_DOUBLE, RTX_INT, RTX_VECTOR, RTX_UNSPEC };$/;"	g	file:
known_cond	combine.c	/^known_cond (x, cond, reg, val)$/;"	f	file:
l	cppexp.c	/^  const unsigned char l;$/;"	m	struct:suffix	file:
l	varray.h	/^  long			 l[1];$/;"	m	union:varray_data_tag
label	debug.h	/^  void (* label) PARAMS ((rtx));$/;"	m	struct:gcc_debug_hooks
label	dwarf2out.c	/^  char *label;$/;"	m	struct:indirect_string_node	file:
label	except.c	/^  rtx label;$/;"	m	struct:eh_region	file:
label	except.c	/^  rtx label;$/;"	m	struct:ehl_map_entry	file:
label	stmt.c	/^  tree label;$/;"	m	struct:label_chain	file:
label	varasm.c	/^  const char *label;$/;"	m	struct:constant_descriptor	file:
label	varasm.c	/^  const char *label;$/;"	m	struct:deferred_string	file:
label_align	final.c	/^static struct label_alignment *label_align;$/;"	v	typeref:struct:label_alignment	file:
label_alignment	final.c	/^struct label_alignment$/;"	s	file:
label_chain	stmt.c	/^	  struct label_chain *label_chain;$/;"	m	struct:nesting::__anon67::__anon70	typeref:struct:nesting::__anon67::__anon70::label_chain	file:
label_chain	stmt.c	/^struct label_chain$/;"	s	file:
label_for_bb	cfglayout.c	/^label_for_bb (bb)$/;"	f	file:
label_is_jump_target_p	cfgcleanup.c	/^label_is_jump_target_p (label, jump_insn)$/;"	f	file:
label_level_chain	c-decl.c	/^static struct binding_level *label_level_chain;$/;"	v	typeref:struct:binding_level	file:
label_map	integrate.h	/^  rtx *label_map;$/;"	m	struct:inline_remap
label_num	emit-rtl.c	/^static int label_num = 1;$/;"	v	file:
label_rtx	stmt.c	/^label_rtx (label)$/;"	f
label_tick	combine.c	/^static int label_tick;$/;"	v	file:
label_to_alignment	final.c	/^label_to_alignment (label)$/;"	f
label_value	c-tree.h	/^  tree global_value, local_value, label_value, implicit_decl;$/;"	m	struct:lang_identifier
label_value_list	cfgrtl.c	/^rtx label_value_list;$/;"	v
labelno	varasm.c	/^  int labelno;$/;"	m	struct:deferred_constant	file:
labelno	varasm.c	/^  int labelno;$/;"	m	struct:deferred_string	file:
labelno	varasm.c	/^  int labelno;$/;"	m	struct:pool_constant	file:
labels_in_range_p	loop.c	/^labels_in_range_p (insn, end)$/;"	f	file:
landing_pad	except.c	/^    rtx landing_pad;$/;"	m	struct:eh_status::call_site_record	file:
landing_pad	except.c	/^  rtx landing_pad;$/;"	m	struct:eh_region	file:
lang	cpplib.h	/^  enum c_lang lang;$/;"	m	struct:cpp_options	typeref:enum:cpp_options::c_lang
lang_adjust_rli	stor-layout.c	/^void (*lang_adjust_rli) PARAMS ((record_layout_info)) = 0;$/;"	v
lang_attribute_common	attribs.c	/^int lang_attribute_common = 1;$/;"	v
lang_attribute_table	attribs.c	/^const struct attribute_spec *lang_attribute_table = empty_attribute_table;$/;"	v	typeref:struct:attribute_spec
lang_decl	c-tree.h	/^struct lang_decl$/;"	s
lang_decl	tree.c	/^  lang_decl,$/;"	e	enum:__anon88	file:
lang_defaults	cppinit.c	/^static const struct lang_flags lang_defaults[] =$/;"	v	typeref:struct:lang_flags	file:
lang_dependent_init	toplev.c	/^lang_dependent_init (name)$/;"	f	file:
lang_eh_runtime_type	except.c	/^tree (*lang_eh_runtime_type) PARAMS ((tree));$/;"	v
lang_eh_type_covers	except.c	/^int (*lang_eh_type_covers) PARAMS ((tree a, tree b));$/;"	v
lang_expand_decl_stmt	c-semantics.c	/^void (*lang_expand_decl_stmt) PARAMS ((tree));$/;"	v
lang_expand_expr	toplev.c	/^lang_expand_expr_t lang_expand_expr = 0;$/;"	v
lang_expand_expr_t	toplev.c	/^typedef rtx (*lang_expand_expr_t)$/;"	t	file:
lang_expand_function_end	c-common.c	/^void (*lang_expand_function_end)       PARAMS ((void));$/;"	v
lang_expand_stmt	c-semantics.c	/^void (*lang_expand_stmt) PARAMS ((tree));$/;"	v
lang_flag_0	tree.h	/^  unsigned lang_flag_0 : 1;$/;"	m	struct:tree_common
lang_flag_0	tree.h	/^  unsigned lang_flag_0 : 1;$/;"	m	struct:tree_decl
lang_flag_0	tree.h	/^  unsigned lang_flag_0 : 1;$/;"	m	struct:tree_type
lang_flag_1	tree.h	/^  unsigned lang_flag_1 : 1;$/;"	m	struct:tree_common
lang_flag_1	tree.h	/^  unsigned lang_flag_1 : 1;$/;"	m	struct:tree_decl
lang_flag_1	tree.h	/^  unsigned lang_flag_1 : 1;$/;"	m	struct:tree_type
lang_flag_2	tree.h	/^  unsigned lang_flag_2 : 1;$/;"	m	struct:tree_common
lang_flag_2	tree.h	/^  unsigned lang_flag_2 : 1;$/;"	m	struct:tree_decl
lang_flag_2	tree.h	/^  unsigned lang_flag_2 : 1;$/;"	m	struct:tree_type
lang_flag_3	tree.h	/^  unsigned lang_flag_3 : 1;$/;"	m	struct:tree_common
lang_flag_3	tree.h	/^  unsigned lang_flag_3 : 1;$/;"	m	struct:tree_decl
lang_flag_3	tree.h	/^  unsigned lang_flag_3 : 1;$/;"	m	struct:tree_type
lang_flag_4	tree.h	/^  unsigned lang_flag_4 : 1;$/;"	m	struct:tree_common
lang_flag_4	tree.h	/^  unsigned lang_flag_4 : 1;$/;"	m	struct:tree_decl
lang_flag_4	tree.h	/^  unsigned lang_flag_4 : 1;$/;"	m	struct:tree_type
lang_flag_5	tree.h	/^  unsigned lang_flag_5 : 1;$/;"	m	struct:tree_common
lang_flag_5	tree.h	/^  unsigned lang_flag_5 : 1;$/;"	m	struct:tree_decl
lang_flag_5	tree.h	/^  unsigned lang_flag_5 : 1;$/;"	m	struct:tree_type
lang_flag_6	tree.h	/^  unsigned lang_flag_6 : 1;$/;"	m	struct:tree_common
lang_flag_6	tree.h	/^  unsigned lang_flag_6 : 1;$/;"	m	struct:tree_decl
lang_flag_6	tree.h	/^  unsigned lang_flag_6 : 1;$/;"	m	struct:tree_type
lang_flag_7	tree.h	/^  unsigned lang_flag_7 : 1;$/;"	m	struct:tree_decl
lang_flags	cppinit.c	/^struct lang_flags$/;"	s	file:
lang_hooks	c-lang.c	/^const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;$/;"	v	typeref:struct:lang_hooks
lang_hooks	langhooks.h	/^struct lang_hooks$/;"	s
lang_hooks_for_tree_dump	langhooks.h	/^struct lang_hooks_for_tree_dump$/;"	s
lang_hooks_for_tree_inlining	langhooks.h	/^struct lang_hooks_for_tree_inlining$/;"	s
lang_identifier	c-tree.h	/^struct lang_identifier$/;"	s
lang_independent_init	toplev.c	/^lang_independent_init ()$/;"	f	file:
lang_independent_options	toplev.c	/^lang_independent_options;$/;"	t	typeref:struct:__anon61	file:
lang_independent_params	toplev.c	/^static const param_info lang_independent_params[] = {$/;"	v	file:
lang_mark_false_label_stack	ggc-common.c	/^void (*lang_mark_false_label_stack) PARAMS ((struct label_node *));$/;"	v
lang_mark_tree	c-decl.c	/^lang_mark_tree (t)$/;"	f
lang_missing_noreturn_ok_p	flow.c	/^int (*lang_missing_noreturn_ok_p) PARAMS ((tree));$/;"	v
lang_opt	toplev.c	/^static const struct lang_opt$/;"	s	file:
lang_print_tree_hook	langhooks.h	/^typedef void (*lang_print_tree_hook) PARAMS ((FILE *, tree, int indent));$/;"	t
lang_protect_cleanup_actions	except.c	/^tree (*lang_protect_cleanup_actions) PARAMS ((void));$/;"	v
lang_set_decl_assembler_name	tree.c	/^void (*lang_set_decl_assembler_name)     PARAMS ((tree));$/;"	v
lang_specific	tree.h	/^  struct lang_decl *lang_specific;$/;"	m	struct:tree_decl	typeref:struct:tree_decl::lang_decl
lang_specific	tree.h	/^  struct lang_type *lang_specific;$/;"	m	struct:tree_type	typeref:struct:tree_type::lang_type
lang_statement_code_p	c-common.c	/^int (*lang_statement_code_p)           PARAMS ((enum tree_code));$/;"	v
lang_type	c-tree.h	/^struct lang_type$/;"	s
lang_type	tree.c	/^  lang_type,$/;"	e	enum:__anon88	file:
lang_type_class	typeclass.h	/^  lang_type_class$/;"	e	enum:type_class
lang_type_promotes_to	builtins.c	/^tree (*lang_type_promotes_to) PARAMS ((tree));$/;"	v
lang_unsafe_for_reeval	tree.c	/^int (*lang_unsafe_for_reeval) PARAMS ((tree));$/;"	v
lang_unsave	tree.c	/^void (*lang_unsave) PARAMS ((tree *));$/;"	v
lang_unsave_expr_now	tree.c	/^void (*lang_unsave_expr_now) PARAMS ((tree));$/;"	v
language	function.h	/^  struct language_function *language;$/;"	m	struct:function	typeref:struct:function::language_function
language_attribute	dwarfout.c	/^language_attribute (language_code)$/;"	f	file:
language_function	c-common.h	/^struct language_function {$/;"	s
large_insn	i386.h	/^  const int large_insn;		\/* insns larger than this cost more *\/$/;"	m	struct:processor_costs
larger	conflict.c	/^  int larger;$/;"	m	struct:conflict_graph_arc_def	file:
larger_next	conflict.c	/^  struct conflict_graph_arc_def *larger_next;$/;"	m	struct:conflict_graph_arc_def	typeref:struct:conflict_graph_arc_def::conflict_graph_arc_def	file:
larger_than_size	toplev.c	/^HOST_WIDE_INT larger_than_size;$/;"	v
last	basic-block.h	/^  basic_block last;$/;"	m	struct:loop
last	cpphash.h	/^  union utoken last;$/;"	m	struct:cpp_context	typeref:union:cpp_context::utoken
last	cse.c	/^  rtx last;$/;"	m	struct:cse_basic_block_data	file:
last	function.h	/^  rtx first, last;$/;"	m	struct:sequence_stack
last	loop.h	/^  struct movable *last;$/;"	m	struct:loop_movables	typeref:struct:loop_movables::movable
last_Wtrigraphs	cpphash.h	/^  const unsigned char *last_Wtrigraphs;$/;"	m	struct:cpp_buffer
last_active_insn_p	ifcvt.c	/^last_active_insn_p (bb, insn)$/;"	f	file:
last_alloca_header	alloca.c	/^static header *last_alloca_header = NULL;	\/* -> last alloca header.  *\/$/;"	v	file:
last_assemble_variable_decl	varasm.c	/^tree last_assemble_variable_decl;$/;"	v
last_bb	gcse.c	/^  int last_bb;$/;"	m	struct:reg_avail_info	file:
last_bb_file_name	profile.c	/^static char *last_bb_file_name;$/;"	v	file:
last_call_cuid	combine.c	/^static int last_call_cuid;$/;"	v	file:
last_catch	except.c	/^      struct eh_region *last_catch;$/;"	m	struct:eh_region::__anon21::__anon22	typeref:struct:eh_region::__anon21::__anon22::eh_region	file:
last_cc0_value	integrate.h	/^  rtx last_cc0_value;$/;"	m	struct:inline_remap
last_cleanup_this_contour	stmt.c	/^last_cleanup_this_contour ()$/;"	f
last_clock_var	haifa-sched.c	/^static int last_clock_var;$/;"	v	file:
last_error_function	diagnostic.c	/^static tree last_error_function = NULL;$/;"	v	file:
last_error_tick	diagnostic.c	/^static int last_error_tick;$/;"	v	file:
last_expr_filename	c-common.h	304;"	d
last_expr_type	c-common.h	300;"	d
last_expr_type	stmt.c	389;"	d	file:
last_expr_value	stmt.c	390;"	d	file:
last_filename	emit-rtl.c	175;"	d	file:
last_filename	final.c	/^static const char *last_filename;$/;"	v	file:
last_function_call	sched-int.h	/^  rtx last_function_call;$/;"	m	struct:deps
last_function_parm_tags	c-decl.c	/^static tree last_function_parm_tags;$/;"	v	file:
last_function_parms	c-decl.c	/^static tree last_function_parms;$/;"	v	file:
last_ignored_compare	final.c	/^static rtx last_ignored_compare = 0;$/;"	v	file:
last_insn	emit-rtl.c	172;"	d	file:
last_jump_equiv_class	cse.c	/^static struct table_elt *last_jump_equiv_class;$/;"	v	typeref:struct:table_elt	file:
last_label_num	emit-rtl.c	/^static int last_label_num;$/;"	v	file:
last_linenum	emit-rtl.c	174;"	d	file:
last_linenum	final.c	/^static int last_linenum;$/;"	v	file:
last_listed	line-map.h	/^  int last_listed;$/;"	m	struct:line_maps
last_lookup_index	dwarf2out.c	/^  unsigned last_lookup_index;$/;"	m	struct:file_table	file:
last_loop_beg_note	cfgrtl.c	/^last_loop_beg_note (insn)$/;"	f	file:
last_note_uid	regs.h	/^  int last_note_uid;		\/* UID of last note to use (REG n) *\/$/;"	m	struct:reg_info_def
last_parm_insn	function.h	535;"	d
last_pc_value	integrate.h	/^  rtx last_pc_value;$/;"	m	struct:inline_remap
last_pending_memory_flush	sched-int.h	/^  rtx last_pending_memory_flush;$/;"	m	struct:deps
last_pool	varasm.c	106;"	d	file:
last_reg	cse.c	/^  unsigned int first_reg, last_reg;$/;"	m	struct:qty_table_elem	file:
last_reg_save_label	dwarf2out.c	/^static const char *last_reg_save_label;$/;"	v	file:
last_region_number	except.c	/^  int last_region_number;$/;"	m	struct:eh_status	file:
last_scheduled_insn	haifa-sched.c	/^static rtx last_scheduled_insn;$/;"	v	file:
last_set	gcse.c	/^  int last_set;$/;"	m	struct:reg_avail_info	file:
last_spill_reg	reload1.c	/^static int last_spill_reg;$/;"	v	file:
last_token	c-parse.c	/^static enum cpp_ttype last_token;$/;"	v	typeref:enum:cpp_ttype	file:
last_tree	c-common.h	296;"	d
last_uid	regs.h	/^  int last_uid;			\/* UID of last insn to use (REG n) *\/$/;"	m	struct:reg_info_def
last_unconditional_cleanup	stmt.c	/^	  rtx last_unconditional_cleanup;$/;"	m	struct:nesting::__anon67::__anon70	file:
last_use	loop.h	/^  rtx last_use;			\/* For a giv made from a biv increment, this is$/;"	m	struct:induction
last_use_this_basic_block	loop.c	/^last_use_this_basic_block (reg, insn)$/;"	f	file:
last_was_jump	sched-rgn.c	/^static int last_was_jump;$/;"	v	file:
lastfile	dbxout.c	/^static const char *lastfile;$/;"	v	file:
latch	basic-block.h	/^  basic_block latch;$/;"	m	struct:loop
lattice_val	ssa-ccp.c	/^  latticevalue lattice_val;$/;"	m	struct:__anon75	file:
latticevalue	ssa-ccp.c	/^} latticevalue;$/;"	t	typeref:enum:__anon74	file:
layout_array_type	c-decl.c	/^layout_array_type (t)$/;"	f	file:
layout_decl	stor-layout.c	/^layout_decl (decl, known_align)$/;"	f
layout_type	stor-layout.c	/^layout_type (type)$/;"	f
lbasename	lbasename.c	/^lbasename (name)$/;"	f
lc_reason	line-map.h	/^enum lc_reason {LC_ENTER = 0, LC_LEAVE, LC_RENAME};$/;"	g
lds	Makefile	/^lds := linker.lds$/;"	m
ldst_entry	gcse.c	/^ldst_entry (x)$/;"	f	file:
le	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
lea	i386.h	/^  const int lea;		\/* cost of a lea instruction *\/$/;"	m	struct:processor_costs
leaf_function_p	final.c	/^leaf_function_p ()$/;"	f
leaf_reg_map	integrate.h	/^  rtx leaf_reg_map[FIRST_PSEUDO_REGISTER][NUM_MACHINE_MODES];$/;"	m	struct:inline_remap
leaf_renumber_regs	final.c	/^leaf_renumber_regs (first)$/;"	f	file:
leaf_renumber_regs_insn	final.c	/^leaf_renumber_regs_insn (in_rtx)$/;"	f
ledf2_libfunc	libfuncs.h	204;"	d
left	c-typeck.c	/^  struct init_node *left, *right;$/;"	m	struct:init_node	typeref:struct:init_node::init_node	file:
left	fibheap.h	/^  struct fibnode *left;$/;"	m	struct:fibnode	typeref:struct:fibnode::fibnode
left	splay-tree.h	/^  splay_tree_node left;$/;"	m	struct:splay_tree_node_s
left	stmt.c	/^  struct case_node	*left;	\/* Left son in binary tree *\/$/;"	m	struct:case_node	typeref:struct:case_node::case_node	file:
left_precision_char	c-format.c	/^  const int left_precision_char;$/;"	m	struct:__anon43	file:
left_shift	cppexp.c	/^left_shift (pfile, a, unsignedp, b)$/;"	f	file:
legitimate_address_p	i386.c	/^legitimate_address_p (mode, addr, strict)$/;"	f
legitimate_pic_address_disp_p	i386.c	/^legitimate_pic_address_disp_p (disp)$/;"	f
legitimize_address	i386.c	/^legitimize_address (x, oldx, mode)$/;"	f
legitimize_pic_address	i386.c	/^legitimize_pic_address (orig, reg)$/;"	f
lehf2_libfunc	libfuncs.h	188;"	d
len	c-tree.h	/^  int len;$/;"	m	struct:lang_type
len	cpphash.h	/^  unsigned int len;$/;"	m	struct:search_path
len	cppinit.c	/^  unsigned int len;$/;"	m	struct:named_op	file:
len	cppinit.c	/^  unsigned short len;$/;"	m	struct:builtin	file:
len	cpplib.h	/^  unsigned int len;$/;"	m	struct:cpp_string
len	expr.c	/^  unsigned HOST_WIDE_INT len;$/;"	m	struct:move_by_pieces	file:
len	expr.c	/^  unsigned HOST_WIDE_INT len;$/;"	m	struct:store_by_pieces	file:
len	hashtable.h	/^  unsigned int len;$/;"	m	struct:ht_identifier
length	cpplib.c	/^  unsigned short length;	\/* Length of name.  *\/$/;"	m	struct:directive	file:
length	dwarf2out.c	/^  int length;		\/* Length of entire string.  *\/$/;"	m	struct:file_info	file:
length	dwarf2out.c	/^  int length;		\/* Path length.  *\/$/;"	m	struct:dir_info	file:
length	dwarf2out.c	/^  unsigned length;$/;"	m	struct:dw_fp_struct	file:
length	ssa-dce.c	/^  int length;$/;"	m	struct:__anon15	file:
length	tree.h	/^  int length;$/;"	m	struct:tree_string
length	tree.h	/^  int length;$/;"	m	struct:tree_vec
length_char_specs	c-format.c	/^  const format_length_info *const length_char_specs;$/;"	m	struct:__anon43	file:
length_code_char	c-format.c	/^  const int length_code_char;$/;"	m	struct:__anon43	file:
length_unit_log	insn-attrtab.c	/^int length_unit_log = 0;$/;"	v
lesf2_libfunc	libfuncs.h	196;"	d
letf2_libfunc	libfuncs.h	220;"	d
level	basic-block.h	/^  int level;$/;"	m	struct:loop
level	function.c	/^  int level;$/;"	m	struct:temp_slot	file:
level_chain	c-decl.c	/^    struct binding_level *level_chain;$/;"	m	struct:binding_level	typeref:struct:binding_level::binding_level	file:
levels	basic-block.h	/^  int levels;$/;"	m	struct:loops
lex	cppexp.c	/^lex (pfile, skip_evaluation)$/;"	f	file:
lex_charconst	c-lex.c	/^lex_charconst (token)$/;"	f	file:
lex_expansion_token	cppmacro.c	/^lex_expansion_token (pfile, macro)$/;"	f	file:
lex_macro_node	cpplib.c	/^lex_macro_node (pfile)$/;"	f	file:
lex_number	c-lex.c	/^lex_number (str, len)$/;"	f	file:
lex_string	c-lex.c	/^lex_string (str, len, wide)$/;"	f	file:
lexer_state	cpphash.h	/^struct lexer_state$/;"	s
lexf2_libfunc	libfuncs.h	212;"	d
lexing_comment	cpphash.h	/^  unsigned char lexing_comment;$/;"	m	struct:lexer_state
lflag	c-lex.c	/^  int lflag;$/;"	m	struct:pf_args	file:
lg_pagesize	ggc-page.c	/^  size_t lg_pagesize;$/;"	m	struct:globals	file:
lhd_clear_binding_stack	langhooks.c	/^lhd_clear_binding_stack ()$/;"	f
lhd_decode_option	langhooks.c	/^lhd_decode_option (argc, argv)$/;"	f
lhd_do_nothing	langhooks.c	/^lhd_do_nothing ()$/;"	f
lhd_get_alias_set	langhooks.c	/^lhd_get_alias_set (t)$/;"	f
lhd_print_tree_nothing	langhooks.c	/^lhd_print_tree_nothing (file, node, indent)$/;"	f
lhd_return_tree	langhooks.c	/^lhd_return_tree (t)$/;"	f
lhd_safe_from_p	langhooks.c	/^lhd_safe_from_p (x, exp)$/;"	f
lhd_set_yydebug	langhooks.c	/^lhd_set_yydebug (value)$/;"	f
lhd_staticp	langhooks.c	/^lhd_staticp (exp)$/;"	f
lhd_tree_dump_dump_tree	langhooks.c	/^lhd_tree_dump_dump_tree (di, t)$/;"	f
lhd_tree_dump_type_quals	langhooks.c	/^lhd_tree_dump_type_quals (t)$/;"	f
lhd_tree_inlining_add_pending_fn_decls	langhooks.c	/^lhd_tree_inlining_add_pending_fn_decls (vafnp, pfn)$/;"	f
lhd_tree_inlining_anon_aggr_type_p	langhooks.c	/^lhd_tree_inlining_anon_aggr_type_p (t)$/;"	f
lhd_tree_inlining_auto_var_in_fn_p	langhooks.c	/^lhd_tree_inlining_auto_var_in_fn_p (var, fn)$/;"	f
lhd_tree_inlining_cannot_inline_tree_fn	langhooks.c	/^lhd_tree_inlining_cannot_inline_tree_fn (fnp)$/;"	f
lhd_tree_inlining_convert_parm_for_inlining	langhooks.c	/^lhd_tree_inlining_convert_parm_for_inlining (parm, value, fndecl)$/;"	f
lhd_tree_inlining_copy_res_decl_for_inlining	langhooks.c	/^lhd_tree_inlining_copy_res_decl_for_inlining (res, fn, caller,$/;"	f
lhd_tree_inlining_disregard_inline_limits	langhooks.c	/^lhd_tree_inlining_disregard_inline_limits (fn)$/;"	f
lhd_tree_inlining_end_inlining	langhooks.c	/^lhd_tree_inlining_end_inlining (fn)$/;"	f
lhd_tree_inlining_start_inlining	langhooks.c	/^lhd_tree_inlining_start_inlining (fn)$/;"	f
lhd_tree_inlining_tree_chain_matters_p	langhooks.c	/^lhd_tree_inlining_tree_chain_matters_p (t)$/;"	f
lhd_tree_inlining_walk_subtrees	langhooks.c	/^lhd_tree_inlining_walk_subtrees (tp,subtrees,func,data,htab)$/;"	f
libc_dir	Makefile	/^libc_dir := \/home\/tmac\/workspace\/sgx-driver\/enclave$/;"	m
libc_files	Makefile	/^libc_files := $(libc_dir)\/init.o $(libc_dir)\/enclave_tls.o $(libc_dir)\/build\/libc.a$/;"	m
libcall_benefit	loop.c	/^libcall_benefit (last)$/;"	f	file:
libcall_dead_p	flow.c	/^libcall_dead_p (pbi, note, insn)$/;"	f	file:
libcall_other_reg	loop.c	/^libcall_other_reg (insn, equiv)$/;"	f
libcall_type	rtl.h	/^enum libcall_type$/;"	g
libfunc	optabs.h	/^    rtx libfunc;$/;"	m	struct:optab::__anon14
libfunc_index	libfuncs.h	/^enum libfunc_index$/;"	g
libfunc_table	optabs.c	/^rtx libfunc_table[LTI_MAX];$/;"	v
libiberty_concat_ptr	concat.c	/^char *libiberty_concat_ptr;$/;"	v
libiberty_len	c-aux-info.c	/^unsigned long libiberty_len;$/;"	v
libiberty_nptr	c-aux-info.c	/^char *libiberty_nptr;$/;"	v
libiberty_optr	c-aux-info.c	/^const char *libiberty_optr;$/;"	v
life_analysis	flow.c	/^life_analysis (f, file, flags)$/;"	f
life_data_ok	ifcvt.c	/^static bool life_data_ok;$/;"	v	file:
lifetime	df.h	/^  int lifetime;$/;"	m	struct:reg_info
lifetime	loop.c	/^  short lifetime;		\/* lifetime of that register;$/;"	m	struct:movable	file:
lifetime	loop.h	/^  int lifetime;			\/* Length of life of this giv *\/$/;"	m	struct:induction
limbo_die_list	dwarf2out.c	/^static limbo_die_node *limbo_die_list = 0;$/;"	v	file:
limbo_die_node	dwarf2out.c	/^limbo_die_node;$/;"	t	typeref:struct:limbo_die_struct	file:
limbo_die_struct	dwarf2out.c	/^typedef struct limbo_die_struct$/;"	s	file:
limbo_value	c-tree.h	/^  tree error_locus, limbo_value;$/;"	m	struct:lang_identifier
limit	cpphash.h	/^  cpp_token *base, *limit;$/;"	m	struct:tokenrun
limit	cpphash.h	/^  unsigned char *base, *cur, *limit;$/;"	m	struct:_cpp_buff
limit	obstack.h	/^  char  *limit;			\/* 1 past end of this chunk *\/$/;"	m	struct:_obstack_chunk
limit_stack	function.h	/^  unsigned int limit_stack : 1;$/;"	m	struct:function
line	c-common.c	/^  int line;$/;"	m	struct:__anon72	file:
line	cpphash.h	/^  unsigned int line;$/;"	m	struct:cpp_reader
line	cpplib.c	/^  unsigned int line;		\/* Line where condition started.  *\/$/;"	m	struct:if_stack	file:
line	cpplib.h	/^  unsigned int line;		\/* Logical line of first char of token.  *\/$/;"	m	struct:cpp_token
line	cppmacro.c	/^  unsigned int line;		\/* Starting line number.  *\/$/;"	m	struct:cpp_macro	file:
line	diagnostic.h	/^  int line;$/;"	m	struct:diagnostic_context
line	input.h	/^    int line;$/;"	m	struct:file_stack
line_base	cpphash.h	/^  const unsigned char *line_base; \/* start of current line *\/$/;"	m	struct:cpp_buffer
line_change	cpplib.h	/^  void (*line_change) PARAMS ((cpp_reader *, const cpp_token *, int));$/;"	m	struct:cpp_callbacks
line_info_table	dwarf2out.c	/^static dw_line_info_ref line_info_table;$/;"	v	file:
line_info_table	vmsdbgout.c	/^static dst_line_info_ref line_info_table;$/;"	v	file:
line_info_table_allocated	dwarf2out.c	/^static unsigned line_info_table_allocated;$/;"	v	file:
line_info_table_allocated	vmsdbgout.c	/^static unsigned int line_info_table_allocated;$/;"	v	file:
line_info_table_in_use	dwarf2out.c	/^static unsigned line_info_table_in_use;$/;"	v	file:
line_info_table_in_use	vmsdbgout.c	/^static unsigned int line_info_table_in_use;$/;"	v	file:
line_length	diagnostic.h	/^  int line_length;$/;"	m	struct:output_buffer
line_map	line-map.h	/^struct line_map$/;"	s
line_maps	cpphash.h	/^  struct line_maps line_maps;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::line_maps
line_maps	line-map.h	/^struct line_maps$/;"	s
line_note	sched-int.h	/^  rtx line_note;$/;"	m	struct:haifa_insn_data
line_note_exists	final.c	/^static char *line_note_exists;$/;"	v	file:
line_note_head	haifa-sched.c	/^static rtx *line_note_head;$/;"	v	file:
line_number_status	stmt.c	/^	  int line_number_status;$/;"	m	struct:nesting::__anon67::__anon71	file:
line_wrap_cutoff	diagnostic.c	50;"	d	file:
linemarker_dir	cpplib.c	/^static const directive linemarker_dir =$/;"	v	file:
lineno	c-parse.c	/^	const char *filename; int lineno; } YYSTYPE;$/;"	m	union:__anon52	file:
lineno	toplev.c	/^int lineno;$/;"	v
linenum	tree.h	/^  int linenum;$/;"	m	struct:tree_decl
link	alloca.c	/^    long link;			\/* Address of trailer block of previous$/;"	m	struct:stk_trailer	file:
link_cc0_insns	emit-rtl.c	/^link_cc0_insns (insn)$/;"	f
link_loops	dependence.c	/^link_loops ()$/;"	f	file:
link_roots	dominance.c	/^link_roots (di, v, w)$/;"	f	file:
list	loop.h	/^  struct iv_class *list;$/;"	m	struct:loop_ivs	typeref:struct:loop_ivs::iv_class
list	tree.h	/^  struct tree_list list;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_list
list_length	tree.c	/^list_length (t)$/;"	f
listify	tree.c	/^listify (chain)$/;"	f
listing_line_start	vmsdbgout.c	/^  unsigned int listing_line_start;$/;"	m	struct:dst_file_info_struct	file:
literal_codeset	mbchar.c	/^const char *literal_codeset = NULL;$/;"	v
live_before	recog.c	/^  regset live_before;$/;"	m	struct:peep2_insn_data	file:
live_length	global.c	/^  int live_length;$/;"	m	struct:allocno	file:
live_length	regs.h	/^  int live_length;		\/* # of instructions (REG n) is live *\/$/;"	m	struct:reg_info_def
live_range_rtl	tree.h	/^  rtx live_range_rtl;$/;"	m	struct:tree_decl
live_regs	resource.c	/^  HARD_REG_SET live_regs;	\/* Registers live at target.  *\/$/;"	m	struct:target_info	file:
live_relevant_regs	global.c	/^static regset live_relevant_regs;$/;"	v	file:
live_throughout	reload.h	/^  regset_head live_throughout;$/;"	m	struct:insn_chain
ll_symbol	dwarf2out.c	/^  char *ll_symbol; \/* Label for beginning of location list.$/;"	m	struct:dw_loc_list_struct	file:
lo	safe-ctype.c	41;"	d	file:
load_killed_in_block_p	gcse.c	/^load_killed_in_block_p (bb, uid_limit, x, avail_p)$/;"	f	file:
load_kills_store	gcse.c	/^load_kills_store (x, store_pattern)$/;"	f	file:
load_mems	loop.c	/^load_mems (loop)$/;"	f	file:
load_pic_register	i386.c	/^load_pic_register ()$/;"	f
load_register_parameters	calls.c	/^load_register_parameters (args, num_actuals, call_fusage, flags)$/;"	f	file:
loads	gcse.c	/^  rtx loads;			\/* INSN list of loads seen.  *\/$/;"	m	struct:ls_expr	file:
loc	cselib.h	/^  rtx loc;$/;"	m	struct:elt_loc_list
loc	df.h	/^  rtx *loc;			\/* Loc is the location of the reg.  *\/$/;"	m	struct:ref
loc	recog.c	/^  rtx *loc;$/;"	m	struct:change_t	file:
loc	regrename.c	/^  rtx *loc;$/;"	m	struct:du_chain	file:
loc_checksum	dwarf2out.c	/^loc_checksum (loc, ctx)$/;"	f	file:
loc_descriptor	dwarf2out.c	/^loc_descriptor (rtl)$/;"	f	file:
loc_descriptor_from_tree	dwarf2out.c	/^loc_descriptor_from_tree (loc, addressp)$/;"	f	file:
loc_mentioned_in_p	rtlanal.c	/^loc_mentioned_in_p (loc, in)$/;"	f
loc_section_label	dwarf2out.c	/^static char loc_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
local_alloc	local-alloc.c	/^local_alloc ()$/;"	f
local_mb_cur_max	mbchar.c	/^local_mb_cur_max ()$/;"	f
local_mblen	mbchar.c	/^local_mblen (s, n)$/;"	f
local_mbtowc	mbchar.c	/^local_mbtowc (pwc, s, n)$/;"	f
local_reg_freq	global.c	/^static int local_reg_freq[FIRST_PSEUDO_REGISTER];$/;"	v	file:
local_reg_live_length	global.c	/^static int local_reg_live_length[FIRST_PSEUDO_REGISTER];$/;"	v	file:
local_reg_n_refs	global.c	/^static int local_reg_n_refs[FIRST_PSEUDO_REGISTER];$/;"	v	file:
local_return_label	integrate.h	/^  rtx local_return_label;$/;"	m	struct:inline_remap
local_scope_p	dwarf2out.c	/^local_scope_p (context_die)$/;"	f	file:
local_set	basic-block.h	/^  regset local_set;$/;"	m	struct:basic_block_def
local_set	flow.c	/^  regset local_set;$/;"	m	struct:propagate_block_info	file:
local_symbolic_operand	i386.c	/^local_symbolic_operand (op, mode)$/;"	f	file:
local_value	c-tree.h	/^  tree global_value, local_value, label_value, implicit_decl;$/;"	m	struct:lang_identifier
locate_and_pad_parm	function.c	/^locate_and_pad_parm (passed_mode, type, in_regs, fndecl,$/;"	f
location	loop.h	/^  rtx *location;		\/* Place in the insn where this giv occurs.$/;"	m	struct:induction
location_attribute	dwarfout.c	/^location_attribute (rtl)$/;"	f	file:
location_or_const_value_attribute	dwarfout.c	/^location_or_const_value_attribute (decl)$/;"	f	file:
locs	cselib.h	/^  struct elt_loc_list *locs;$/;"	m	struct:cselib_val_struct	typeref:struct:cselib_val_struct::elt_loc_list
log	expmed.c	/^  char log[MAX_BITS_PER_WORD];$/;"	m	struct:algorithm	file:
long_double_type_node	tree.h	1976;"	d
long_integer_type_node	tree.h	2049;"	d
long_long_integer_type_node	tree.h	2051;"	d
long_long_unsigned_type_node	tree.h	2052;"	d
long_memory_operand	i386.c	/^long_memory_operand (op, mode)$/;"	f
long_name	c-format.c	/^  const char *const long_name;$/;"	m	struct:__anon41	file:
long_unsigned_type_node	tree.h	2050;"	d
longjmp_libfunc	libfuncs.h	178;"	d
lookaheads	cpphash.h	/^  unsigned int lookaheads;$/;"	m	struct:cpp_reader
lookup	cse.c	/^lookup (x, hash, mode)$/;"	f	file:
lookup	ggc-page.c	/^  page_table lookup;$/;"	m	struct:globals	file:
lookup_as_function	cse.c	/^lookup_as_function (x, code)$/;"	f	file:
lookup_attribute	tree.c	/^lookup_attribute (attr_name, list)$/;"	f
lookup_cfa	dwarf2out.c	/^lookup_cfa (loc)$/;"	f	file:
lookup_cfa_1	dwarf2out.c	/^lookup_cfa_1 (cfi, loc)$/;"	f	file:
lookup_decl_die	dwarf2out.c	/^lookup_decl_die (decl)$/;"	f	file:
lookup_expr	gcse.c	/^lookup_expr (pat)$/;"	f	file:
lookup_field	c-typeck.c	/^lookup_field (decl, component)$/;"	f	file:
lookup_filename	dwarf2out.c	/^lookup_filename (file_name)$/;"	f	file:
lookup_filename	dwarfout.c	/^lookup_filename (file_name)$/;"	f	file:
lookup_filename	vmsdbgout.c	/^lookup_filename (file_name)$/;"	f	file:
lookup_for_remove	cse.c	/^lookup_for_remove (x, hash, mode)$/;"	f	file:
lookup_interface	c-lang.c	/^lookup_interface (arg)$/;"	f
lookup_key	prefix.c	/^lookup_key (key)$/;"	f	file:
lookup_label	c-decl.c	/^lookup_label (id)$/;"	f
lookup_line	line-map.c	/^lookup_line (set, line)$/;"	f
lookup_name	c-decl.c	/^lookup_name (name)$/;"	f
lookup_name_current_level	c-decl.c	/^lookup_name_current_level (name)$/;"	f
lookup_objc_ivar	c-lang.c	/^lookup_objc_ivar (id)$/;"	f
lookup_page_table_entry	ggc-page.c	/^lookup_page_table_entry(p)$/;"	f	file:
lookup_pragma_entry	cpplib.c	/^lookup_pragma_entry (chain, pragma)$/;"	f	file:
lookup_set	gcse.c	/^lookup_set (regno, pat)$/;"	f	file:
lookup_static_chain	function.c	/^lookup_static_chain (decl)$/;"	f
lookup_tag	c-decl.c	/^lookup_tag (code, name, binding_level, thislevel_only)$/;"	f	file:
lookup_tag_reverse	c-decl.c	/^lookup_tag_reverse (type)$/;"	f	file:
lookup_type_die	dwarf2out.c	/^lookup_type_die (type)$/;"	f	file:
lookup_type_for_runtime	except.c	/^lookup_type_for_runtime (type)$/;"	f	file:
loop	basic-block.h	/^struct loop$/;"	s
loop	dependence.c	/^typedef struct loop$/;"	s	file:
loop	dependence.c	/^} loop;$/;"	t	typeref:struct:loop	file:
loop	stmt.c	/^	} loop;$/;"	m	union:nesting::__anon67	typeref:struct:nesting::__anon67::__anon69	file:
loop_biv_dump	loop.c	/^loop_biv_dump (v, file, verbose)$/;"	f	file:
loop_biv_eliminable_p	loop.c	/^loop_biv_eliminable_p (loop, bl, threshold, insn_count)$/;"	f	file:
loop_bivs_check	loop.c	/^loop_bivs_check (loop)$/;"	f	file:
loop_bivs_find	loop.c	/^loop_bivs_find (loop)$/;"	f	file:
loop_bivs_init_find	loop.c	/^loop_bivs_init_find (loop)$/;"	f	file:
loop_call_insn_emit_before	loop.c	/^loop_call_insn_emit_before (loop, where_bb, where_insn, pattern)$/;"	f	file:
loop_call_insn_hoist	loop.c	/^loop_call_insn_hoist (loop, pattern)$/;"	f	file:
loop_chain	dependence.c	/^static varray_type loop_chain;$/;"	v	file:
loop_delete_insns	loop.c	/^loop_delete_insns (first, last)$/;"	f	file:
loop_depth	basic-block.h	/^  int loop_depth;$/;"	m	struct:basic_block_def
loop_depth	local-alloc.c	/^  int loop_depth;$/;"	m	struct:equivalence	file:
loop_dump_aux	loop.c	/^loop_dump_aux (loop, file, verbose)$/;"	f	file:
loop_dump_stream	loop.c	/^FILE *loop_dump_stream;$/;"	v
loop_find_equiv_value	unroll.c	/^loop_find_equiv_value (loop, reg)$/;"	f	file:
loop_giv_dump	loop.c	/^loop_giv_dump (v, file, verbose)$/;"	f	file:
loop_giv_reduce_benefit	loop.c	/^loop_giv_reduce_benefit (loop, bl, v, test_reg)$/;"	f	file:
loop_givs_check	loop.c	/^loop_givs_check (loop)$/;"	f	file:
loop_givs_dead_check	loop.c	/^loop_givs_dead_check (loop, bl)$/;"	f	file:
loop_givs_find	loop.c	/^loop_givs_find (loop)$/;"	f	file:
loop_givs_reduce	loop.c	/^loop_givs_reduce (loop, bl)$/;"	f	file:
loop_givs_rescan	loop.c	/^loop_givs_rescan (loop, bl, reg_map)$/;"	f	file:
loop_info	loop.h	/^struct loop_info$/;"	s
loop_insn_callback	loop.h	/^typedef rtx (*loop_insn_callback) PARAMS ((struct loop *, rtx, int, int));$/;"	t
loop_insn_emit_after	loop.c	/^loop_insn_emit_after (loop, where_bb, where_insn, pattern)$/;"	f	file:
loop_insn_emit_before	loop.c	/^loop_insn_emit_before (loop, where_bb, where_insn, pattern)$/;"	f
loop_insn_first_p	loop.c	/^loop_insn_first_p (insn, reference)$/;"	f
loop_insn_hoist	loop.c	/^loop_insn_hoist (loop, pattern)$/;"	f
loop_insn_sink	loop.c	/^loop_insn_sink (loop, pattern)$/;"	f
loop_insn_sink_or_swim	loop.c	/^loop_insn_sink_or_swim (loop, pattern)$/;"	f	file:
loop_invariant_p	loop.c	/^loop_invariant_p (loop, x)$/;"	f
loop_iterations	unroll.c	/^loop_iterations (loop)$/;"	f
loop_iv_add_mult_emit_before	loop.c	/^loop_iv_add_mult_emit_before (loop, b, m, a, reg, before_bb, before_insn)$/;"	f
loop_iv_add_mult_hoist	loop.c	/^loop_iv_add_mult_hoist (loop, b, m, a, reg)$/;"	f
loop_iv_add_mult_sink	loop.c	/^loop_iv_add_mult_sink (loop, b, m, a, reg)$/;"	f
loop_iv_class_dump	loop.c	/^loop_iv_class_dump (bl, file, verbose)$/;"	f	file:
loop_ivs	loop.h	/^struct loop_ivs$/;"	s
loop_ivs_dump	loop.c	/^loop_ivs_dump (loop, file, verbose)$/;"	f	file:
loop_ivs_free	loop.c	/^loop_ivs_free (loop)$/;"	f	file:
loop_max_reg	loop.c	/^static int loop_max_reg;$/;"	v	file:
loop_mem_info	loop.h	/^typedef struct loop_mem_info$/;"	s
loop_mem_info	loop.h	/^} loop_mem_info;$/;"	t	typeref:struct:loop_mem_info
loop_movables	loop.h	/^struct loop_movables$/;"	s
loop_movables_add	loop.c	/^loop_movables_add (movables, m)$/;"	f	file:
loop_movables_free	loop.c	/^loop_movables_free (movables)$/;"	f	file:
loop_optimize	loop.c	/^loop_optimize (f, dumpfile, flags)$/;"	f
loop_reg	loop.h	/^struct loop_reg$/;"	s
loop_reg_used_before_p	loop.c	/^loop_reg_used_before_p (loop, set, insn)$/;"	f	file:
loop_regs	loop.h	/^struct loop_regs$/;"	s
loop_regs_scan	loop.c	/^loop_regs_scan (loop, extra_size)$/;"	f	file:
loop_regs_update	loop.c	/^loop_regs_update (loop, seq)$/;"	f	file:
loop_replace_args	loop.c	/^typedef struct loop_replace_args$/;"	s	file:
loop_replace_args	loop.c	/^} loop_replace_args;$/;"	t	typeref:struct:loop_replace_args	file:
loop_stack	stmt.c	384;"	d	file:
loop_status_type	dependence.c	/^enum loop_status_type {normal, unnormal};$/;"	g	file:
loops	basic-block.h	/^struct loops$/;"	s
losing_caller_save_reg_set	regclass.c	/^HARD_REG_SET losing_caller_save_reg_set;$/;"	v
low	dwarf2out.c	/^  unsigned long low;$/;"	m	struct:dw_long_long_struct	file:
low	stmt.c	/^  tree			low;	\/* Lowest index value for this label *\/$/;"	m	struct:case_node	file:
low	tree.h	/^    unsigned HOST_WIDE_INT low;$/;"	m	struct:tree_int_cst::__anon16
low	varasm.c	/^    struct {HOST_WIDE_INT high, low;} di;$/;"	m	struct:rtx_const::__anon81::__anon82	file:
low_bound	dependence.c	/^  int  low_bound;$/;"	m	struct:induction	file:
low_cuid	cse.c	/^  int low_cuid;$/;"	m	struct:cse_basic_block_data	file:
low_pc_attribute	dwarfout.c	/^low_pc_attribute (asm_low_label)$/;"	f	file:
lr_def	df.h	/^  bitmap lr_def;$/;"	m	struct:bb_info
lr_in	df.h	/^  bitmap lr_in;$/;"	m	struct:bb_info
lr_out	df.h	/^  bitmap lr_out;$/;"	m	struct:bb_info
lr_use	df.h	/^  bitmap lr_use;$/;"	m	struct:bb_info
lr_valid	df.h	/^  int lr_valid;$/;"	m	struct:bb_info
lrotate_double	fold-const.c	/^lrotate_double (l1, h1, count, prec, lv, hv)$/;"	f
ls_expr	gcse.c	/^struct ls_expr$/;"	s	file:
lshift_double	fold-const.c	/^lshift_double (l1, h1, count, prec, lv, hv, arith)$/;"	f
lshift_value	expmed.c	/^lshift_value (mode, value, bitpos, bitsize)$/;"	f	file:
lshr_optab	optabs.h	179;"	d
lt	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
ltdf2_libfunc	libfuncs.h	203;"	d
lthf2_libfunc	libfuncs.h	187;"	d
ltoe	real.c	/^ltoe (lp, y)$/;"	f	file:
ltsf2_libfunc	libfuncs.h	195;"	d
lttf2_libfunc	libfuncs.h	219;"	d
ltxf2_libfunc	libfuncs.h	211;"	d
luid	df.h	/^  int luid;			\/* Logical UID.  *\/$/;"	m	struct:insn_info
luid	sched-int.h	/^  int luid;$/;"	m	struct:haifa_insn_data
lvalue_or_else	c-typeck.c	/^lvalue_or_else (ref, msgid)$/;"	f
lvalue_p	c-typeck.c	/^lvalue_p (ref)$/;"	f
m16m	real.c	/^m16m (a, b, c)$/;"	f	file:
m_386	i386.c	350;"	d	file:
m_486	i386.c	351;"	d	file:
m_ATHLON	i386.c	355;"	d	file:
m_K6	i386.c	354;"	d	file:
m_PENT	i386.c	352;"	d	file:
m_PENT4	i386.c	356;"	d	file:
m_PPRO	i386.c	353;"	d	file:
mac_info_attribute	dwarfout.c	/^mac_info_attribute (mac_info_start_label)$/;"	f	file:
machine	function.h	/^  struct machine_function *machine;$/;"	m	struct:function	typeref:struct:function::machine_function
machine_function	i386.c	/^struct machine_function$/;"	s	file:
machine_mode	machmode.h	/^enum machine_mode {$/;"	g
macinfo_section_label	dwarf2out.c	/^static char macinfo_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
macro	cpphash.h	/^  cpp_hashnode *macro;$/;"	m	struct:cpp_context
macro	cpplib.h	/^    cpp_macro *macro;			\/* If a macro.  *\/$/;"	m	union:cpp_hashnode::__anon87
macro_arg	cppmacro.c	/^struct macro_arg$/;"	s	file:
macro_arg	cppmacro.c	/^typedef struct macro_arg macro_arg;$/;"	t	typeref:struct:macro_arg	file:
macro_buffer	cpphash.h	/^  unsigned char *macro_buffer;$/;"	m	struct:cpp_reader
macro_buffer_len	cpphash.h	/^  unsigned int macro_buffer_len;$/;"	m	struct:cpp_reader
main	concat.c	/^main ()$/;"	f
main	main.c	/^main (argc, argv)$/;"	f
main	vasprintf.c	/^main ()$/;"	f
main_identifier_node	tree.h	1998;"	d
main_input_filename	toplev.c	/^const char *main_input_filename;$/;"	v
main_variant	tree.h	/^  tree main_variant;$/;"	m	struct:tree_type
make_binding_level	c-decl.c	/^make_binding_level ()$/;"	f	file:
make_bit_field_ref	fold-const.c	/^make_bit_field_ref (inner, type, bitsize, bitpos, unsignedp)$/;"	f	file:
make_call_insn_raw	emit-rtl.c	/^make_call_insn_raw (pattern)$/;"	f	file:
make_compound_operation	combine.c	/^make_compound_operation (x, in_code)$/;"	f	file:
make_decl_one_only	varasm.c	/^make_decl_one_only (decl)$/;"	f
make_decl_rtl	varasm.c	/^make_decl_rtl (decl, asmspec)$/;"	f
make_edge	cfg.c	/^make_edge (src, dest, flags)$/;"	f
make_edges	cfgbuild.c	/^make_edges (label_value_list, min, max, update_p)$/;"	f	file:
make_eh_edge	cfgbuild.c	/^make_eh_edge (edge_cache, src, insn)$/;"	f	file:
make_equivalent_phi_alternatives_equivalent	ssa.c	/^make_equivalent_phi_alternatives_equivalent (bb, reg_partition)$/;"	f	file:
make_extraction	combine.c	/^make_extraction (mode, inner, pos, pos_rtx, len,$/;"	f	file:
make_field_assignment	combine.c	/^make_field_assignment (x)$/;"	f	file:
make_fname_decl	c-common.c	/^tree (*make_fname_decl)                PARAMS ((tree, int));$/;"	v
make_insn_raw	emit-rtl.c	/^make_insn_raw (pattern)$/;"	f
make_jump_insn_raw	emit-rtl.c	/^make_jump_insn_raw (pattern)$/;"	f	file:
make_label_edge	cfgbuild.c	/^make_label_edge (edge_cache, src, label, flags)$/;"	f	file:
make_lang_type	tree.c	/^make_lang_type (code)$/;"	f
make_lang_type_fn	tree.c	/^tree (*make_lang_type_fn) PARAMS ((enum tree_code)) = make_node;$/;"	v
make_memloc	reload.c	/^make_memloc (ad, regno)$/;"	f	file:
make_nan	real.c	/^make_nan (nan, sign, mode)$/;"	f	file:
make_new_qty	cse.c	/^make_new_qty (reg, mode)$/;"	f	file:
make_node	tree.c	/^make_node (code)$/;"	f
make_pointer_declarator	c-parse.c	/^make_pointer_declarator (type_quals_attrs, target)$/;"	f
make_preds_opaque	lcm.c	/^make_preds_opaque (b, j)$/;"	f	file:
make_range	fold-const.c	/^make_range (exp, pin_p, plow, phigh)$/;"	f	file:
make_regs_equivalent_over_bad_edges	ssa.c	/^make_regs_equivalent_over_bad_edges (bb, reg_partition)$/;"	f	file:
make_regs_eqv	cse.c	/^make_regs_eqv (new, old)$/;"	f	file:
make_reorder_chain	bb-reorder.c	/^make_reorder_chain ()$/;"	f	file:
make_reorder_chain_1	bb-reorder.c	/^make_reorder_chain_1 (bb, prev)$/;"	f	file:
make_return_insns	reorg.c	/^make_return_insns (first)$/;"	f	file:
make_rtl_for_local_static	c-semantics.c	/^make_rtl_for_local_static (decl)$/;"	f
make_safe_from	emit-rtl.c	/^make_safe_from (x, other)$/;"	f
make_signed_type	stor-layout.c	/^make_signed_type (precision)$/;"	f
make_single_succ_edge	cfg.c	/^make_single_succ_edge (src, dest, flags)$/;"	f
make_tree	expmed.c	/^make_tree (type, x)$/;"	f
make_tree_vec	tree.c	/^make_tree_vec (len)$/;"	f
make_unsigned_type	stor-layout.c	/^make_unsigned_type (precision)$/;"	f
make_var_volatile	varasm.c	/^make_var_volatile (var)$/;"	f
make_vector	tree.c	/^make_vector (mode, innertype, unsignedp)$/;"	f	file:
malloc	system.h	590;"	d
malloc_flag	tree.h	/^  unsigned malloc_flag : 1;$/;"	m	struct:tree_decl
map	c-lex.c	/^static const struct line_map *map;$/;"	v	typeref:struct:line_map	file:
map	cpphash.h	/^  const struct line_map *map;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::line_map
map_from	cppfiles.c	/^  char *map_from;$/;"	m	struct:file_name_map	file:
map_list	cpplib.h	/^  struct file_name_map_list *map_list;$/;"	m	struct:cpp_options	typeref:struct:cpp_options::file_name_map_list
map_list_map	cppfiles.c	/^  struct file_name_map *map_list_map;$/;"	m	struct:file_name_map_list	typeref:struct:file_name_map_list::file_name_map	file:
map_list_name	cppfiles.c	/^  char *map_list_name;$/;"	m	struct:file_name_map_list	file:
map_list_next	cppfiles.c	/^  struct file_name_map_list *map_list_next;$/;"	m	struct:file_name_map_list	typeref:struct:file_name_map_list::file_name_map_list	file:
map_next	cppfiles.c	/^  struct file_name_map *map_next;$/;"	m	struct:file_name_map	typeref:struct:file_name_map::file_name_map	file:
map_to	cppfiles.c	/^  char *map_to;$/;"	m	struct:file_name_map	file:
mapped	cppfiles.c	/^  unsigned char mapped;		\/* file buffer is mmapped *\/$/;"	m	struct:include_file	file:
maps	line-map.h	/^  struct line_map *maps;$/;"	m	struct:line_maps	typeref:struct:line_maps::line_map
mark	fibheap.h	/^  unsigned int mark : 1;$/;"	m	struct:fibnode
mark	ggc-common.c	/^  ggc_htab_mark mark;$/;"	m	struct:d_htab_root	file:
mark	varasm.c	/^  int mark;$/;"	m	struct:pool_constant	file:
mark_addressable	c-typeck.c	/^mark_addressable (exp)$/;"	f
mark_align_stack	c-pragma.c	/^mark_align_stack (p)$/;"	f	file:
mark_all_insn_unnecessary	ssa-dce.c	/^mark_all_insn_unnecessary ()$/;"	f	file:
mark_all_labels	jump.c	/^mark_all_labels (f)$/;"	f	file:
mark_all_temps_used	function.c	/^mark_all_temps_used ()$/;"	f
mark_binding_level	c-decl.c	/^mark_binding_level (arg)$/;"	f	file:
mark_block_nesting	stmt.c	/^mark_block_nesting (n)$/;"	f	file:
mark_c_function_context	c-decl.c	/^mark_c_function_context (f)$/;"	f
mark_c_language_function	c-common.c	/^mark_c_language_function (f)$/;"	f
mark_call	gcse.c	/^mark_call (insn)$/;"	f	file:
mark_case_nesting	stmt.c	/^mark_case_nesting (n)$/;"	f	file:
mark_case_node	stmt.c	/^mark_case_node (c)$/;"	f	file:
mark_clobber	gcse.c	/^mark_clobber (pat, insn)$/;"	f	file:
mark_cond_nesting	stmt.c	/^mark_cond_nesting (n)$/;"	f	file:
mark_const_hash_entry	varasm.c	/^mark_const_hash_entry (ptr)$/;"	f	file:
mark_const_str_htab	varasm.c	/^mark_const_str_htab (htab)$/;"	f	file:
mark_const_str_htab_1	varasm.c	/^mark_const_str_htab_1 (x, data)$/;"	f	file:
mark_constant	varasm.c	/^mark_constant (current_rtx, data)$/;"	f	file:
mark_constant_function	alias.c	/^mark_constant_function ()$/;"	f
mark_constant_pool	varasm.c	/^mark_constant_pool ()$/;"	f	file:
mark_constants	varasm.c	/^mark_constants (x)$/;"	f	file:
mark_dfs_back_edges	cfganal.c	/^mark_dfs_back_edges ()$/;"	f
mark_dies	dwarf2out.c	/^mark_dies (die)$/;"	f	file:
mark_effect	cfgcleanup.c	/^mark_effect (exp, nonequal)$/;"	f	file:
mark_eh_region	except.c	/^mark_eh_region (region)$/;"	f	file:
mark_eh_status	except.c	/^mark_eh_status (eh)$/;"	f
mark_ehl_map	except.c	/^mark_ehl_map (pp)$/;"	f	file:
mark_ehl_map_entry	except.c	/^mark_ehl_map_entry (pentry, data)$/;"	f	file:
mark_elimination	global.c	/^mark_elimination (from, to)$/;"	f
mark_emit_status	emit-rtl.c	/^mark_emit_status (es)$/;"	f
mark_end_of_function_resources	resource.c	/^mark_end_of_function_resources (trial, include_delayed_effects)$/;"	f
mark_expr_status	expr.c	/^mark_expr_status (p)$/;"	f
mark_flags_life_zones	regmove.c	/^mark_flags_life_zones (flags)$/;"	f	file:
mark_function_status	function.c	/^mark_function_status (p)$/;"	f	file:
mark_goto_fixup	stmt.c	/^mark_goto_fixup (g)$/;"	f	file:
mark_hard_reg_initial_vals	integrate.c	/^mark_hard_reg_initial_vals (fun)$/;"	f
mark_home_live	reload1.c	/^mark_home_live (regno)$/;"	f
mark_ident	stringpool.c	/^mark_ident (pfile, h, v)$/;"	f	file:
mark_ident_hash	stringpool.c	/^mark_ident_hash (arg)$/;"	f	file:
mark_indirect_pool	dwarf2asm.c	/^mark_indirect_pool (arg)$/;"	f	file:
mark_indirect_pool_entry	dwarf2asm.c	/^mark_indirect_pool_entry (node, data)$/;"	f	file:
mark_jump_label	jump.c	/^mark_jump_label (x, insn, in_mem)$/;"	f
mark_label_nuses	emit-rtl.c	/^mark_label_nuses(x)$/;"	f	file:
mark_lang_status	function.c	/^void (*mark_lang_status) PARAMS ((struct function *));$/;"	v
mark_life	local-alloc.c	/^mark_life (regno, mode, life)$/;"	f	file:
mark_limbo_die_list	dwarf2out.c	/^mark_limbo_die_list (ptr)$/;"	f	file:
mark_loop_jump	loop.c	/^mark_loop_jump (x, loop)$/;"	f	file:
mark_loop_nesting	stmt.c	/^mark_loop_nesting (n)$/;"	f	file:
mark_machine_status	function.c	/^void (*mark_machine_status) PARAMS ((struct function *));$/;"	v
mark_named_operators	cppinit.c	/^mark_named_operators (pfile)$/;"	f	file:
mark_not_eliminable	reload1.c	/^mark_not_eliminable (dest, x, data)$/;"	f	file:
mark_oprs_set	gcse.c	/^mark_oprs_set (insn)$/;"	f	file:
mark_optab	optabs.c	/^mark_optab (arg)$/;"	f
mark_phi_and_copy_regs	ssa.c	/^mark_phi_and_copy_regs (phi_set)$/;"	f	file:
mark_pool_constant	varasm.c	/^mark_pool_constant (pc)$/;"	f	file:
mark_read	regrename.c	/^  mark_read,$/;"	e	enum:scan_actions	file:
mark_referenced_regs	caller-save.c	/^mark_referenced_regs (x)$/;"	f	file:
mark_referenced_resources	resource.c	/^mark_referenced_resources (x, res, include_delayed_effects)$/;"	f
mark_references	ssa-ccp.c	/^mark_references (current_rtx, data)$/;"	f	file:
mark_reg	conflict.c	/^mark_reg (reg, setter, data)$/;"	f	file:
mark_reg	flow.c	/^mark_reg (reg, xset)$/;"	f	file:
mark_reg_clobber	global.c	/^mark_reg_clobber (reg, setter, data)$/;"	f	file:
mark_reg_conflicts	global.c	/^mark_reg_conflicts (reg)$/;"	f	file:
mark_reg_death	global.c	/^mark_reg_death (reg)$/;"	f	file:
mark_reg_in_phi	ssa.c	/^mark_reg_in_phi (ptr, data)$/;"	f	file:
mark_reg_live_nc	global.c	/^mark_reg_live_nc (regno, mode)$/;"	f	file:
mark_reg_pointer	emit-rtl.c	/^mark_reg_pointer (reg, align)$/;"	f
mark_reg_store	global.c	/^mark_reg_store (reg, setter, data)$/;"	f	file:
mark_regno_cond_dead	flow.c	/^mark_regno_cond_dead (pbi, regno, cond)$/;"	f	file:
mark_regs_live_at_end	flow.c	/^mark_regs_live_at_end (set)$/;"	f	file:
mark_reload_reg_in_use	reload1.c	/^mark_reload_reg_in_use (regno, opnum, type, mode)$/;"	f	file:
mark_resource_type	resource.h	/^enum mark_resource_type$/;"	g
mark_seen_cases	stmt.c	/^mark_seen_cases (type, cases_seen, count, sparseness)$/;"	f
mark_sequence_stack	emit-rtl.c	/^mark_sequence_stack (ss)$/;"	f	file:
mark_set	gcse.c	/^mark_set (pat, insn)$/;"	f	file:
mark_set_1	flow.c	/^mark_set_1 (pbi, code, reg, cond, insn, flags)$/;"	f	file:
mark_set_regs	caller-save.c	/^mark_set_regs (reg, setter, data)$/;"	f	file:
mark_set_regs	flow.c	/^mark_set_regs (pbi, x, insn)$/;"	f	file:
mark_set_resources	resource.c	/^mark_set_resources (x, res, in_dest, mark_type)$/;"	f
mark_stmt_status	stmt.c	/^mark_stmt_status (p)$/;"	f
mark_stmt_tree	c-common.c	/^mark_stmt_tree (p)$/;"	f
mark_stores	integrate.c	/^mark_stores (dest, x, data)$/;"	f	file:
mark_target_live_regs	resource.c	/^mark_target_live_regs (insns, target, res)$/;"	f
mark_temp_addr_taken	function.c	/^mark_temp_addr_taken (x)$/;"	f
mark_tree_hashtable	tree.c	/^mark_tree_hashtable (arg)$/;"	f
mark_tree_hashtable_entry	tree.c	/^mark_tree_hashtable_entry (entry, data)$/;"	f	file:
mark_used_reg	flow.c	/^mark_used_reg (pbi, reg, cond, insn)$/;"	f	file:
mark_used_regs	flow.c	/^mark_used_regs (pbi, x, cond, insn)$/;"	f	file:
mark_used_regs_combine	combine.c	/^mark_used_regs_combine (x)$/;"	f	file:
mark_user_reg	emit-rtl.c	/^mark_user_reg (reg)$/;"	f
mark_varargs	function.c	/^mark_varargs ()$/;"	f
mark_varasm_status	varasm.c	/^mark_varasm_status (p)$/;"	f
mark_weak	varasm.c	/^mark_weak (decl)$/;"	f	file:
mark_write	regrename.c	/^  mark_write$/;"	e	enum:scan_actions	file:
marked_p	ggc-common.c	/^  ggc_htab_marked_p marked_p;$/;"	m	struct:d_htab_root	file:
mask	i386.c	/^  const unsigned int mask;$/;"	m	struct:builtin_description	file:
mask_rtx	expmed.c	/^mask_rtx (mode, bitpos, bitsize, complement)$/;"	f	file:
match	df.c	/^  rtx match;$/;"	m	struct:replace_args	file:
match	loop.c	/^  rtx match;$/;"	m	struct:loop_replace_args	file:
match	loop.c	/^  struct movable *match;	\/* First entry for same value *\/$/;"	m	struct:movable	typeref:struct:movable::movable	file:
match	regmove.c	/^struct match {$/;"	s	file:
matched	recog.h	/^  int matched;$/;"	m	struct:operand_alternative
matches	recog.h	/^  int matches;$/;"	m	struct:operand_alternative
max	ucbqsort.c	30;"	d	file:
max_after_base	rtl.h	/^  unsigned max_after_base: 1; \/* maximum address target label is$/;"	m	struct:__anon7
max_after_vec	rtl.h	/^  unsigned max_after_vec: 1;  \/* maximum address target label is$/;"	m	struct:__anon7
max_alignment	ggc-page.c	/^struct max_alignment {$/;"	s	file:
max_allocno	global.c	/^static int max_allocno;$/;"	v	file:
max_blockage	insn-attr.h	/^  const int max_blockage;$/;"	m	struct:function_unit_desc
max_cuid	gcse.c	/^static int max_cuid;$/;"	v	file:
max_elements_made	cse.c	/^static int max_elements_made;$/;"	v	file:
max_entries	integrate.c	/^  int max_entries;$/;"	m	struct:initial_value_struct	file:
max_gcse_regno	gcse.c	/^static unsigned int max_gcse_regno;$/;"	v	file:
max_include_len	cpphash.h	/^  unsigned int max_include_len;$/;"	m	struct:cpp_reader
max_index	c-typeck.c	/^  tree max_index;$/;"	m	struct:constructor_stack	file:
max_index	regclass.c	/^  size_t max_index;		\/* maximum index # *\/$/;"	m	struct:reg_info_data	file:
max_insn_uid	cse.c	/^static int max_insn_uid;$/;"	v	file:
max_insnno	integrate.h	/^  int min_insnno, max_insnno;$/;"	m	struct:inline_remap
max_issue_delay	insn-attr.h	/^  const int max_issue_delay;$/;"	m	struct:function_unit_desc
max_label_num	emit-rtl.c	/^max_label_num ()$/;"	f
max_labelno	final.c	/^static int min_labelno, max_labelno;$/;"	v	file:
max_length	tree.h	/^  const int max_length;$/;"	m	struct:attribute_spec
max_line	vmsdbgout.c	/^  unsigned int max_line;$/;"	m	struct:dst_file_info_struct	file:
max_loop_num	loop.c	/^static int max_loop_num;$/;"	v	file:
max_luid	loop.c	/^static int max_luid;$/;"	v	file:
max_parallel	regclass.c	/^int max_parallel;$/;"	v
max_parm_reg	function.h	523;"	d
max_parm_reg_num	function.c	/^max_parm_reg_num ()$/;"	f
max_qty	cse.c	/^static int max_qty;$/;"	v	file:
max_reg	cse.c	/^static int max_reg;$/;"	v	file:
max_reg	gcse.c	/^  unsigned int max_reg;$/;"	m	struct:null_pointer_info	file:
max_reg	sched-int.h	/^  int max_reg;$/;"	m	struct:deps
max_reg_before_loop	loop.c	/^unsigned int max_reg_before_loop;$/;"	v
max_reg_num	emit-rtl.c	/^max_reg_num ()$/;"	f
max_regno	flow.c	/^int max_regno;$/;"	v
max_set_parallel	regclass.c	/^static int max_set_parallel;$/;"	v	file:
max_skip	final.c	/^  short max_skip;$/;"	m	struct:label_alignment	file:
max_uid	cse.c	/^static int max_uid;$/;"	v	file:
max_uid	gcse.c	/^static int max_uid;$/;"	v	file:
max_uid	reorg.c	/^static int max_uid;$/;"	v	file:
max_uid_cuid	combine.c	/^static int max_uid_cuid;$/;"	v	file:
max_uid_for_loop	loop.c	/^int max_uid_for_loop;$/;"	v
max_value_regs	cselib.c	/^static unsigned int max_value_regs;$/;"	v	file:
max_value_regs	regrename.c	/^  unsigned int max_value_regs;$/;"	m	struct:value_data	file:
maxc	alloca.c	/^    long maxc;			\/* Amount of contiguous space which would$/;"	m	struct:stk_stat	file:
maximum_field_alignment	stor-layout.c	/^unsigned int maximum_field_alignment;$/;"	v
maximum_length	diagnostic.h	/^  int maximum_length;$/;"	m	struct:__anon12
maxs	alloca.c	/^    long maxs;			\/* Maximum number of stack segments so far.  *\/$/;"	m	struct:stk_stat	file:
maxval	tree.h	/^  tree maxval;$/;"	m	struct:tree_type
may_move_in_cost	regclass.c	/^static int may_move_in_cost[MAX_MACHINE_MODE][N_REG_CLASSES][N_REG_CLASSES];$/;"	v	file:
may_move_out_cost	regclass.c	/^static int may_move_out_cost[MAX_MACHINE_MODE][N_REG_CLASSES][N_REG_CLASSES];$/;"	v	file:
may_not_optimize	loop.h	/^  char may_not_optimize;$/;"	m	struct:loop_reg
may_trap_exp	sched-rgn.c	/^may_trap_exp (x, is_store)$/;"	f	file:
may_trap_p	rtlanal.c	/^may_trap_p (x)$/;"	f
maybe_apply_pragma_weak	c-pragma.c	/^maybe_apply_pragma_weak (decl)$/;"	f
maybe_apply_renaming_pragma	c-pragma.c	/^maybe_apply_renaming_pragma (decl, asmname)$/;"	f
maybe_build_cleanup	c-decl.c	/^maybe_build_cleanup (decl)$/;"	f
maybe_building_objc_message_expr	c-lang.c	/^maybe_building_objc_message_expr ()$/;"	f
maybe_dead	loop.h	/^  unsigned maybe_dead : 1;	\/* 1 if this giv might be dead.  In that case,$/;"	m	struct:induction
maybe_eliminate_biv	loop.c	/^maybe_eliminate_biv (loop, bl, eliminate_p, threshold, insn_count)$/;"	f	file:
maybe_eliminate_biv_1	loop.c	/^maybe_eliminate_biv_1 (loop, x, insn, bl, eliminate_p, where_bb, where_insn)$/;"	f	file:
maybe_empty_object	obstack.h	/^  unsigned maybe_empty_object:1;\/* There is a possibility that the current$/;"	m	struct:obstack
maybe_fix_stack_asms	reload1.c	/^maybe_fix_stack_asms ()$/;"	f	file:
maybe_get_identifier	stringpool.c	/^maybe_get_identifier (text)$/;"	f
maybe_mark_struct_function	function.c	/^maybe_mark_struct_function (arg)$/;"	f	file:
maybe_multiple	loop.h	/^  unsigned maybe_multiple : 1;	\/* Only used for a biv and  1 if this biv$/;"	m	struct:induction
maybe_objc_check_decl	c-lang.c	/^maybe_objc_check_decl (decl)$/;"	f
maybe_objc_comptypes	c-lang.c	/^maybe_objc_comptypes (lhs, rhs, reflexive)$/;"	f
maybe_read_dollar_number	c-format.c	/^maybe_read_dollar_number (status, format, dollar_needed, params, param_ptr,$/;"	f	file:
maybe_read_ucs	cpplex.c	/^maybe_read_ucs (pfile, pstr, limit, pc)$/;"	f	file:
maybe_remove_eh_handler	except.c	/^maybe_remove_eh_handler (label)$/;"	f
maybe_set_unchanging	explow.c	/^maybe_set_unchanging (ref, t)$/;"	f
maybe_vaarg	i386.h	/^  int maybe_vaarg;		\/* true for calls to possibly vardic fncts.  *\/$/;"	m	struct:ix86_args
maybe_wrap_text	diagnostic.c	/^maybe_wrap_text (buffer, start, end)$/;"	f	file:
md5_buffer	md5.c	/^md5_buffer (buffer, len, resblock)$/;"	f
md5_ctx	md5.h	/^struct md5_ctx$/;"	s
md5_finish_ctx	md5.c	/^md5_finish_ctx (ctx, resbuf)$/;"	f
md5_init_ctx	md5.c	/^md5_init_ctx (ctx)$/;"	f
md5_process_block	md5.c	/^md5_process_block (buffer, len, ctx)$/;"	f
md5_process_bytes	md5.c	/^md5_process_bytes (buffer, len, ctx)$/;"	f
md5_read_ctx	md5.c	/^md5_read_ctx (ctx, resbuf)$/;"	f
md5_stream	md5.c	/^md5_stream (stream, resblock)$/;"	f
md5_uint32	md5.h	/^     typedef unsigned long md5_uint32;$/;"	t
md5_uint32	md5.h	/^    typedef unsigned short md5_uint32;$/;"	t
md5_uint32	md5.h	/^   typedef unsigned int md5_uint32;$/;"	t
md5_uint32	md5.h	/^typedef u_int32_t md5_uint32;$/;"	t
md_constant	rtl.h	/^struct md_constant { char *name, *value; };$/;"	s
md_finish	target.h	/^    void (* md_finish) PARAMS ((FILE *, int));$/;"	m	struct:gcc_target::sched
md_init	target.h	/^    void (* md_init) PARAMS ((FILE *, int, int));$/;"	m	struct:gcc_target::sched
mdep	conditions.h	/^typedef struct {int flags; rtx value1, value2; CC_STATUS_MDEP mdep;} CC_STATUS;$/;"	m	struct:__anon46
mem	loop.h	/^  rtx mem;			\/* For DEST_ADDR, the memory object.  *\/$/;"	m	struct:induction
mem	loop.h	/^  rtx mem;      \/* The MEM itself.  *\/$/;"	m	struct:loop_mem_info
mem	regmove.c	/^  rtx insn, *mem;$/;"	m	struct:csa_memlist	file:
mem_address	loop.c	/^  rtx mem_address;$/;"	m	struct:check_store_data	file:
mem_attrs	rtl.h	/^} mem_attrs;$/;"	t	typeref:struct:__anon8
mem_attrs_htab	emit-rtl.c	/^static htab_t mem_attrs_htab;$/;"	v	file:
mem_attrs_htab_eq	emit-rtl.c	/^mem_attrs_htab_eq (x, y)$/;"	f	file:
mem_attrs_htab_hash	emit-rtl.c	/^mem_attrs_htab_hash (x)$/;"	f	file:
mem_attrs_mark	emit-rtl.c	/^mem_attrs_mark (x)$/;"	f	file:
mem_cost	regclass.c	/^  int mem_cost;$/;"	m	struct:costs	file:
mem_for_const_double	varasm.c	/^mem_for_const_double (x)$/;"	f
mem_last_set	combine.c	/^static int mem_last_set;$/;"	v	file:
mem_loc_descriptor	dwarf2out.c	/^mem_loc_descriptor (rtl, mode)$/;"	f	file:
mem_report	toplev.c	/^int mem_report = 0;$/;"	v
mem_set_list	flow.c	/^  rtx mem_set_list;$/;"	m	struct:propagate_block_info	file:
mem_set_list_len	flow.c	/^  int mem_set_list_len;$/;"	m	struct:propagate_block_info	file:
mem_write	loop.c	/^  int mem_write;$/;"	m	struct:check_store_data	file:
member_attribute	dwarfout.c	/^member_attribute (context)$/;"	f	file:
member_declared_type	dwarf2out.c	/^member_declared_type (member)$/;"	f	file:
member_declared_type	dwarfout.c	/^member_declared_type (member)$/;"	f	file:
memcmp_libfunc	libfuncs.h	170;"	d
memcpy	md5.c	33;"	d	file:
memcpy_libfunc	libfuncs.h	167;"	d
memlist	regmove.c	/^  struct csa_memlist *memlist;$/;"	m	struct:record_stack_memrefs_data	typeref:struct:record_stack_memrefs_data::csa_memlist	file:
memmove_libfunc	libfuncs.h	168;"	d
memory	hash.h	/^  struct obstack memory;$/;"	m	struct:hash_table	typeref:struct:hash_table::obstack
memory	resource.h	/^  char memory;		\/* Insn sets or needs a memory location.  *\/$/;"	m	struct:resources
memory_address	explow.c	/^memory_address (mode, x)$/;"	f
memory_address_length	i386.c	/^memory_address_length (addr)$/;"	f	file:
memory_address_noforce	explow.c	/^memory_address_noforce (mode, x)$/;"	f
memory_address_p	recog.c	/^memory_address_p (mode, addr)$/;"	f
memory_displacement_operand	i386.c	/^memory_displacement_operand (op, mode)$/;"	f
memory_extend_rtx	cse.c	/^static rtx memory_extend_rtx;$/;"	v	file:
memory_move_secondary_cost	regclass.c	/^memory_move_secondary_cost (mode, class, in)$/;"	f
memory_ok	recog.h	/^  unsigned int memory_ok:1;  $/;"	m	struct:operand_alternative
memory_operand	recog.c	/^memory_operand (op, mode)$/;"	f
memref_referenced_p	local-alloc.c	/^memref_referenced_p (memref, x)$/;"	f	file:
memref_used_between_p	local-alloc.c	/^memref_used_between_p (memref, start, end)$/;"	f	file:
memrefs_conflict_p	alias.c	/^memrefs_conflict_p (xsize, x, ysize, y, c)$/;"	f	file:
mems	loop.h	/^  loop_mem_info *mems;$/;"	m	struct:loop_info
mems_allocated	loop.h	/^  int mems_allocated;$/;"	m	struct:loop_info
mems_conflict_for_gcse_p	gcse.c	/^mems_conflict_for_gcse_p (dest, setter, data)$/;"	f	file:
mems_idx	loop.h	/^  int mems_idx;$/;"	m	struct:loop_info
mems_in_disjoint_alias_sets_p	alias.c	/^mems_in_disjoint_alias_sets_p (mem1, mem2)$/;"	f	file:
memset_libfunc	libfuncs.h	172;"	d
mention_regs	cse.c	/^mention_regs (x)$/;"	f	file:
merge_assigned_reloads	reload1.c	/^merge_assigned_reloads (insn)$/;"	f	file:
merge_attributes	tree.c	/^merge_attributes (a1, a2)$/;"	f
merge_blocks	cfgcleanup.c	/^merge_blocks (e, b, c, mode)$/;"	f	file:
merge_blocks_move_predecessor_nojumps	cfgcleanup.c	/^merge_blocks_move_predecessor_nojumps (a, b)$/;"	f	file:
merge_blocks_move_successor_nojumps	cfgcleanup.c	/^merge_blocks_move_successor_nojumps (a, b)$/;"	f	file:
merge_blocks_nomove	cfgrtl.c	/^merge_blocks_nomove (a, b)$/;"	f
merge_classes	i386.c	/^merge_classes (class1, class2)$/;"	f	file:
merge_decl_attributes	target.h	/^  tree (* merge_decl_attributes) PARAMS ((tree, tree));$/;"	m	struct:gcc_target
merge_decl_attributes	tree.c	/^merge_decl_attributes (olddecl, newdecl)$/;"	f
merge_dependencies	dependence.c	/^merge_dependencies (direction, distance, loop_count, subscript_count)$/;"	f	file:
merge_dllimport_decl_attributes	tree.c	/^merge_dllimport_decl_attributes (old, new)$/;"	f
merge_equiv_classes	cse.c	/^merge_equiv_classes (class1, class2)$/;"	f	file:
merge_if_block	ifcvt.c	/^merge_if_block (test_bb, then_bb, else_bb, join_bb)$/;"	f	file:
merge_include_chains	cppinit.c	/^merge_include_chains (pfile)$/;"	f	file:
merge_outer_ops	combine.c	/^merge_outer_ops (pop0, pconst0, op1, const1, mode, pcomp_p)$/;"	f	file:
merge_overlapping_regs	regrename.c	/^merge_overlapping_regs (b, pset, chain)$/;"	f	file:
merge_ranges	fold-const.c	/^merge_ranges (pin_p, plow, phigh, in0_p, low0, high0, in1_p, low1, high1)$/;"	f	file:
merge_tlist	c-common.c	/^merge_tlist (to, add, copy)$/;"	f	file:
merge_type_attributes	target.h	/^  tree (* merge_type_attributes) PARAMS ((tree, tree));$/;"	m	struct:gcc_target
merge_type_attributes	tree.c	/^merge_type_attributes (t1, t2)$/;"	f
merge_weak	varasm.c	/^merge_weak (newdecl, olddecl)$/;"	f
mergeable_constant_section	varasm.c	/^mergeable_constant_section (mode, align, flags)$/;"	f
mergeable_string_section	varasm.c	/^mergeable_string_section (decl, align, flags)$/;"	f
merror	real.c	/^int merror = 0;$/;"	v
mesg_implicit_function_declaration	c-decl.c	/^int mesg_implicit_function_declaration = -1;$/;"	v
message	diagnostic.h	/^  const char *message;$/;"	m	struct:diagnostic_context
method_type_class	typeclass.h	/^  function_type_class, method_type_class,$/;"	e	enum:type_class
mi_cmacro	cpphash.h	/^  const cpp_hashnode *mi_cmacro;$/;"	m	struct:cpp_reader
mi_cmacro	cpplib.c	/^  const cpp_hashnode *mi_cmacro;\/* macro name for #ifndef around entire file *\/$/;"	m	struct:if_stack	file:
mi_ind_cmacro	cpphash.h	/^  const cpp_hashnode *mi_ind_cmacro;$/;"	m	struct:cpp_reader
mi_valid	cpphash.h	/^  bool mi_valid;$/;"	m	struct:cpp_reader
migrate_files	Makefile	/^migrate_files := $(libc_dir)\/migration.o$/;"	m
min	fibheap.h	/^  struct fibnode *min;$/;"	m	struct:fibheap	typeref:struct:fibheap::fibnode
min	ucbqsort.c	29;"	d	file:
min_after_base	rtl.h	/^  unsigned min_after_base: 1; \/* minimum address target label is$/;"	m	struct:__anon7
min_after_vec	rtl.h	/^  unsigned min_after_vec: 1;  \/* minimum address target label is$/;"	m	struct:__anon7
min_align	rtl.h	/^  unsigned min_align: 8;$/;"	m	struct:__anon7
min_align	varasm.c	/^min_align (a, b)$/;"	f	file:
min_class	local-alloc.c	/^  enum reg_class min_class;$/;"	m	struct:qty	typeref:enum:qty::reg_class	file:
min_index	regclass.c	/^  size_t min_index;		\/* minimum index # *\/$/;"	m	struct:reg_info_data	file:
min_insnno	integrate.h	/^  int min_insnno, max_insnno;$/;"	m	struct:inline_remap
min_labelno	final.c	/^static int min_labelno, max_labelno;$/;"	v	file:
min_length	tree.h	/^  const int min_length;$/;"	m	struct:attribute_spec
min_precision	c-common.c	/^min_precision (value, unsignedp)$/;"	f
min_reg	gcse.c	/^  unsigned int min_reg;$/;"	m	struct:null_pointer_info	file:
minval	tree.h	/^  tree minval;$/;"	m	struct:tree_type
mirror_conflicts	global.c	/^mirror_conflicts ()$/;"	f	file:
missing_braces_mentioned	c-typeck.c	/^static int missing_braces_mentioned;$/;"	v	file:
miv	dependence.c	/^		      weak_crossing_siv, miv};$/;"	e	enum:complexity_type	file:
mkdir	system.h	448;"	d
mls_col	cpphash.h	/^  unsigned int mls_col;$/;"	m	struct:cpp_reader
mls_line	cpphash.h	/^  unsigned int mls_line;$/;"	m	struct:cpp_reader
mmx_load	i386.h	/^  const int mmx_load[2];	\/* cost of loading MMX register$/;"	m	struct:processor_costs
mmx_move	i386.h	/^  const int mmx_move;		\/* cost of moving MMX register.  *\/$/;"	m	struct:processor_costs
mmx_reg_operand	i386.c	/^mmx_reg_operand (op, mode)$/;"	f
mmx_store	i386.h	/^  const int mmx_store[2];	\/* cost of storing MMX register$/;"	m	struct:processor_costs
mmxsse_to_integer	i386.h	/^  const int mmxsse_to_integer;	\/* cost of moving mmxsse register to$/;"	m	struct:processor_costs
mod_fund_type_attribute	dwarfout.c	/^mod_fund_type_attribute (type, decl_const, decl_volatile)$/;"	f	file:
mod_u_d_type_attribute	dwarfout.c	/^mod_u_d_type_attribute (type, decl_const, decl_volatile)$/;"	f	file:
mode	calls.c	/^  enum machine_mode mode;$/;"	m	struct:arg_data	typeref:enum:arg_data::machine_mode	file:
mode	cse.c	/^  enum machine_mode mode;$/;"	m	struct:check_dependence_data	typeref:enum:check_dependence_data::machine_mode	file:
mode	cse.c	/^  enum machine_mode mode;$/;"	m	struct:qty_table_elem	typeref:enum:qty_table_elem::machine_mode	file:
mode	cse.c	/^  enum machine_mode mode;$/;"	m	struct:set	typeref:enum:set::machine_mode	file:
mode	cse.c	/^  enum machine_mode mode;$/;"	m	struct:table_elt	typeref:enum:table_elt::machine_mode	file:
mode	fold-const.c	/^  enum machine_mode mode;$/;"	m	struct:exact_real_inverse_args	typeref:enum:exact_real_inverse_args::machine_mode	file:
mode	lcm.c	/^  int mode;$/;"	m	struct:seginfo	file:
mode	local-alloc.c	/^  enum machine_mode mode;$/;"	m	struct:qty	typeref:enum:qty::machine_mode	file:
mode	loop.h	/^  enum machine_mode mode;	\/* The mode of this biv or giv *\/$/;"	m	struct:induction	typeref:enum:induction::machine_mode
mode	recog.h	/^  const ENUM_BITFIELD(machine_mode) mode : 16;$/;"	m	struct:insn_operand_data
mode	regrename.c	/^  enum machine_mode mode;$/;"	m	struct:value_data_entry	typeref:enum:value_data_entry::machine_mode	file:
mode	reload.c	/^  enum machine_mode mode;	\/* mode it must have *\/$/;"	m	struct:replacement	typeref:enum:replacement::machine_mode	file:
mode	reload.h	/^  enum machine_mode mode;$/;"	m	struct:reload	typeref:enum:reload::machine_mode
mode	rtl.h	/^  ENUM_BITFIELD(machine_mode) mode : 8;$/;"	m	struct:rtx_def
mode	simplify-rtx.c	/^  enum machine_mode mode;$/;"	m	struct:simplify_binary_real_args	typeref:enum:simplify_binary_real_args::machine_mode	file:
mode	simplify-rtx.c	/^  enum machine_mode mode;$/;"	m	struct:simplify_unary_real_args	typeref:enum:simplify_unary_real_args::machine_mode	file:
mode	tree.h	/^  ENUM_BITFIELD(machine_mode) mode : 7;$/;"	m	struct:tree_type
mode	tree.h	/^  ENUM_BITFIELD(machine_mode) mode : 8;$/;"	m	struct:tree_decl
mode	varasm.c	/^  enum machine_mode mode;$/;"	m	struct:pool_constant	typeref:enum:pool_constant::machine_mode	file:
mode_bitsize	rtl.c	/^const unsigned short mode_bitsize[NUM_MACHINE_MODES] = {$/;"	v
mode_change_ok	regrename.c	/^mode_change_ok (orig_mode, new_mode, regno)$/;"	f	file:
mode_class	machmode.h	/^enum mode_class { MODE_RANDOM, MODE_INT, MODE_FLOAT, MODE_PARTIAL_INT, MODE_CC,$/;"	g
mode_class	rtl.c	/^const enum mode_class mode_class[NUM_MACHINE_MODES] = {$/;"	v	typeref:enum:mode_class
mode_dependent_address_p	recog.c	/^mode_dependent_address_p (addr)$/;"	f
mode_for_extraction	expmed.c	/^mode_for_extraction (pattern, opno)$/;"	f
mode_for_size	stor-layout.c	/^mode_for_size (size, class, limit)$/;"	f
mode_for_size_tree	stor-layout.c	/^mode_for_size_tree (size, class, limit)$/;"	f
mode_independent_operand	recog.c	/^mode_independent_operand (op, mode)$/;"	f
mode_mask_array	rtl.c	/^const unsigned HOST_WIDE_INT mode_mask_array[NUM_MACHINE_MODES] = {$/;"	v
mode_name	rtl.c	/^const char * const mode_name[NUM_MACHINE_MODES] = {$/;"	v
mode_size	rtl.c	/^const unsigned char mode_size[NUM_MACHINE_MODES] = {$/;"	v
mode_unit_size	rtl.c	/^const unsigned char mode_unit_size[NUM_MACHINE_MODES] = {$/;"	v
mode_wider_mode	rtl.c	/^const unsigned char mode_wider_mode[NUM_MACHINE_MODES] = {$/;"	v
modified	df.c	/^  int modified;$/;"	m	struct:replace_args	file:
modified	function.h	/^  rtx modified;$/;"	m	struct:var_refs_queue
modified_between_p	rtlanal.c	/^modified_between_p (x, start, end)$/;"	f
modified_in_p	rtlanal.c	/^modified_in_p (x, insn)$/;"	f
modified_type_die	dwarf2out.c	/^modified_type_die (type, is_const_type, is_volatile_type, context_die)$/;"	f	file:
modifier_chars	c-format.c	/^  const char *const modifier_chars;$/;"	m	struct:__anon43	file:
modify_mem_list	gcse.c	/^static rtx * modify_mem_list;$/;"	v	file:
modify_mem_list_set	gcse.c	/^bitmap modify_mem_list_set;$/;"	v
module_language	vmsdbgout.c	/^static unsigned int module_language;$/;"	v	file:
module_producer	vmsdbgout.c	/^static char *module_producer;$/;"	v	file:
monetary_char_table	c-format.c	/^static const format_char_info monetary_char_table[] =$/;"	v	file:
monthnames	cppmacro.c	/^static const char * const monthnames[] =$/;"	v	file:
mostly_true_jump	reorg.c	/^mostly_true_jump (jump_insn, condition)$/;"	f	file:
mostly_zeros_p	expr.c	/^mostly_zeros_p (exp)$/;"	f	file:
mov_optab	optabs.h	188;"	d
movable	loop.c	/^struct movable$/;"	s	file:
movables	loop.h	/^  struct loop_movables movables;$/;"	m	struct:loop_info	typeref:struct:loop_info::loop_movables
movcc_gen_code	optabs.c	/^enum insn_code movcc_gen_code[NUM_MACHINE_MODES];$/;"	v	typeref:enum:insn_code
move2add_last_label_luid	reload1.c	/^static int move2add_last_label_luid;$/;"	v	file:
move2add_luid	reload1.c	/^static int move2add_luid;$/;"	v	file:
move2add_note_store	reload1.c	/^move2add_note_store (dst, set, data)$/;"	f	file:
move_block_from_reg	expr.c	/^move_block_from_reg (regno, x, nregs, size)$/;"	f
move_block_to_reg	expr.c	/^move_block_to_reg (regno, x, nregs, mode)$/;"	f
move_by_pieces	expr.c	/^move_by_pieces (to, from, len, align)$/;"	f
move_by_pieces	expr.c	/^struct move_by_pieces$/;"	s	file:
move_by_pieces_1	expr.c	/^move_by_pieces_1 (genfun, mode, data)$/;"	f	file:
move_by_pieces_ninsns	expr.c	/^move_by_pieces_ninsns (l, align)$/;"	f	file:
move_cleanups_up	stmt.c	/^move_cleanups_up ()$/;"	f
move_cost	regclass.c	/^static int move_cost[MAX_MACHINE_MODE][N_REG_CLASSES][N_REG_CLASSES];$/;"	v	file:
move_deaths	combine.c	/^move_deaths (x, maybe_kill_insn, from_cuid, to_insn, pnotes)$/;"	f	file:
move_for_stack_reg	reg-stack.c	/^move_for_stack_reg (insn, regstack, pat)$/;"	f	file:
move_insn	haifa-sched.c	/^move_insn (insn, last)$/;"	f	file:
move_insn	loop.c	/^  unsigned int move_insn : 1;	\/* 1 means that we call emit_move_insn to$/;"	m	struct:movable	file:
move_insn1	haifa-sched.c	/^move_insn1 (insn, last)$/;"	f	file:
move_insn_first	loop.c	/^  unsigned int move_insn_first:1;\/* Same as above, if this is necessary for the$/;"	m	struct:movable	file:
move_movables	loop.c	/^move_movables (loop, movables, threshold, insn_count)$/;"	f	file:
move_ratio	i386.h	/^  const int move_ratio;		\/* The threshold of number of scalar$/;"	m	struct:processor_costs
move_replacements	reload.c	/^move_replacements (x, y)$/;"	f
moved_once	loop.h	/^  char moved_once;$/;"	m	struct:loop_reg
movstr_optab	expr.c	/^enum insn_code movstr_optab[NUM_MACHINE_MODES];$/;"	v	typeref:enum:insn_code
movstrict_optab	optabs.h	189;"	d
movsx	i386.h	/^  int movsx;			\/* The cost of movsx operation.  *\/$/;"	m	struct:processor_costs
movzbl_load	i386.h	/^  const int movzbl_load;	\/* cost of loading using movzbl *\/$/;"	m	struct:processor_costs
movzx	i386.h	/^  int movzx;			\/* The cost of movzx operation.  *\/$/;"	m	struct:processor_costs
ms_bitfield_layout_p	target.h	/^  bool (* ms_bitfield_layout_p) PARAMS ((tree record_type));$/;"	m	struct:gcc_target
msg	cppinit.c	/^  const char *msg;$/;"	m	struct:cl_option	file:
mtherr	real.c	/^mtherr (name, code)$/;"	f	file:
mthresh	ucbqsort.c	/^static  int		mthresh;		\/* MTHRESHold in chars *\/$/;"	v	file:
mul_cost	expmed.c	/^static int mul_cost[NUM_MACHINE_MODES];$/;"	v	file:
mul_double	fold-const.c	/^mul_double (l1, h1, l2, h2, lv, hv)$/;"	f
mul_highpart_cost	expmed.c	/^static int mul_highpart_cost[NUM_MACHINE_MODES];$/;"	v	file:
mul_widen_cost	expmed.c	/^static int mul_widen_cost[NUM_MACHINE_MODES];$/;"	v	file:
mult_bit	i386.h	/^  const int mult_bit;		\/* cost of multiply per each bit set *\/$/;"	m	struct:processor_costs
mult_init	i386.h	/^  const int mult_init;		\/* cost of starting a multiply *\/$/;"	m	struct:processor_costs
mult_operator	i386.c	/^mult_operator (op, mode)$/;"	f
mult_val	loop.h	/^  rtx mult_val;			\/* Multiplicative factor for src_reg.  *\/$/;"	m	struct:induction
multiple_of_p	fold-const.c	/^multiple_of_p (type, top, bottom)$/;"	f	file:
multiple_sets	rtlanal.c	/^multiple_sets (insn)$/;"	f
multiple_uses	loop.h	/^  int multiple_uses;		\/* Nonzero if a reg has multiple uses.  *\/$/;"	m	struct:loop_regs
multiplicity	insn-attr.h	/^  const int multiplicity;$/;"	m	struct:function_unit_desc
munge	mkdeps.c	/^munge (filename)$/;"	f	file:
n	cpphash.h	/^     size_t n;$/;"	v
n__STRICT_ANSI__	cpphash.h	/^  cpp_hashnode *n__STRICT_ANSI__;	\/* STDC_0_IN_SYSTEM_HEADERS *\/$/;"	m	struct:spec_nodes
n__VA_ARGS__	cpphash.h	/^  cpp_hashnode *n__VA_ARGS__;		\/* C99 vararg macros *\/$/;"	m	struct:spec_nodes
n_aligned_regs	calls.c	/^  int n_aligned_regs;$/;"	m	struct:arg_data	file:
n_alternatives	recog.h	/^  char n_alternatives;$/;"	m	struct:recog_data
n_alternatives	recog.h	/^  const char n_alternatives;$/;"	m	struct:insn_data
n_basic_blocks	cfg.c	/^int n_basic_blocks;$/;"	v
n_bbs	df.h	/^  unsigned int n_bbs;		\/* Number of basic blocks.  *\/$/;"	m	struct:df
n_bits	sbitmap.h	/^  unsigned int n_bits;		\/* Number of bits.  *\/$/;"	m	struct:simple_bitmap_def
n_calls_crossed	local-alloc.c	/^  int n_calls_crossed;$/;"	m	struct:qty	file:
n_defined	cpphash.h	/^  cpp_hashnode *n_defined;		\/* defined operator *\/$/;"	m	struct:spec_nodes
n_defs	df.h	/^  int n_defs;$/;"	m	struct:reg_info
n_defs	df.h	/^  unsigned int n_defs;		\/* Size of def bitmaps.  *\/$/;"	m	struct:df
n_deleted	hashtab.h	/^  size_t n_deleted;$/;"	m	struct:htab
n_dups	recog.h	/^  char n_dups;$/;"	m	struct:recog_data
n_dups	recog.h	/^  const char n_dups;$/;"	m	struct:insn_data
n_earlyclobbers	reload.c	/^int n_earlyclobbers;$/;"	v
n_edges	cfg.c	/^int n_edges;$/;"	v
n_elements	hashtab.h	/^  size_t n_elements;$/;"	m	struct:htab
n_elements_made	cse.c	/^static int n_elements_made;$/;"	v	file:
n_exprs	gcse.c	/^static int n_exprs;$/;"	v	file:
n_false	cpphash.h	/^  cpp_hashnode *n_false;		\/* C++ keyword false *\/$/;"	m	struct:spec_nodes
n_function_calls	stmt.c	/^	  int n_function_calls;$/;"	m	struct:nesting::__anon67::__anon70	file:
n_incomplete	c-decl.c	/^    int n_incomplete;$/;"	m	struct:binding_level	file:
n_iterations	loop.h	/^  unsigned HOST_WIDE_INT n_iterations;$/;"	m	struct:loop_info
n_non_fixed_regs	regclass.c	/^int n_non_fixed_regs;$/;"	v
n_occurrences	combine.c	/^static int n_occurrences;$/;"	v	file:
n_occurrences	stmt.c	/^n_occurrences (c, s)$/;"	f	file:
n_operands	recog.h	/^  char n_operands;$/;"	m	struct:recog_data
n_operands	recog.h	/^  const char n_operands;$/;"	m	struct:insn_data
n_ready	haifa-sched.c	/^  int n_ready;$/;"	m	struct:ready_list	file:
n_refs	global.c	/^  int n_refs;$/;"	m	struct:allocno	file:
n_refs	local-alloc.c	/^  int n_refs;$/;"	m	struct:qty	file:
n_regs	df.h	/^  unsigned int n_regs;		\/* Number of regs.  *\/$/;"	m	struct:df
n_regs	loop.h	/^  unsigned int n_regs;$/;"	m	struct:loop_ivs
n_regs_saved	caller-save.c	/^static int n_regs_saved;$/;"	v	file:
n_regs_set	global.c	/^static int n_regs_set;$/;"	v	file:
n_reloads	reload.c	/^int n_reloads;$/;"	v
n_reloads	reload.h	/^  int n_reloads;$/;"	m	struct:insn_chain
n_replacements	reload.c	/^static int n_replacements;$/;"	v	file:
n_sets	gcse.c	/^static int n_sets;$/;"	v	file:
n_spills	reload1.c	/^static int n_spills;$/;"	v	file:
n_times_set	loop.h	/^  int n_times_set;$/;"	m	struct:loop_reg
n_true	cpphash.h	/^  cpp_hashnode *n_true;			\/* C++ keyword true *\/$/;"	m	struct:spec_nodes
n_useless_values	cselib.c	/^static int n_useless_values;$/;"	v	file:
n_uses	df.h	/^  int n_uses;$/;"	m	struct:reg_info
n_uses	df.h	/^  unsigned int n_uses;		\/* Size of use bitmaps.  *\/$/;"	m	struct:df
n_vis_no_unit	sched-vis.c	/^int n_vis_no_unit;$/;"	v
n_visual_lines	sched-vis.c	/^int n_visual_lines;$/;"	v
name	c-common.c	/^  const char *name;$/;"	m	struct:disabled_builtin	file:
name	c-format.c	/^  const char *const name;$/;"	m	struct:__anon38	file:
name	c-format.c	/^  const char *const name;$/;"	m	struct:__anon41	file:
name	c-format.c	/^  const char *const name;$/;"	m	struct:__anon43	file:
name	c-format.c	/^  const char *name;$/;"	m	struct:__anon39	file:
name	c-format.c	/^  const char *name;$/;"	m	struct:format_wanted_type	file:
name	cppfiles.c	/^  const char *name;		\/* actual path name of file *\/$/;"	m	struct:include_file	file:
name	cpphash.h	/^  const char *name;$/;"	m	struct:search_path
name	cppinit.c	/^  const U_CHAR *name;$/;"	m	struct:builtin	file:
name	cppinit.c	/^  const U_CHAR *name;$/;"	m	struct:named_op	file:
name	cpplex.c	/^  const unsigned char *name;$/;"	m	struct:token_spelling	file:
name	cpplib.c	/^  const U_CHAR *name;		\/* Name of directive.  *\/$/;"	m	struct:directive	file:
name	dwarf2out.c	/^  char *name;$/;"	m	struct:pubname_struct	file:
name	dwarfout.c	/^  const char *	name;$/;"	m	struct:filename_entry	file:
name	function.h	/^  const char *name;$/;"	m	struct:function
name	i386.c	/^  const char *const name;$/;"	m	struct:builtin_description	file:
name	input.h	/^    const char *name;$/;"	m	struct:file_stack
name	insn-attr.h	/^  const char *const name;$/;"	m	struct:function_unit_desc
name	langhooks.h	/^  const char *name;$/;"	m	struct:lang_hooks
name	predict.c	/^  const char *const name;	\/* Name used in the debugging dumps.  *\/$/;"	m	struct:predictor_info	file:
name	recog.h	/^  const char *const name;$/;"	m	struct:insn_data
name	rtl.h	/^struct md_constant { char *name, *value; };$/;"	m	struct:md_constant
name	sdbout.c	/^  const char *name;$/;"	m	struct:sdb_file	file:
name	timevar.c	/^  const char *name;$/;"	m	struct:timevar_def	file:
name	toplev.c	/^  const char *const name;$/;"	m	struct:__anon62	file:
name	tree-dump.c	/^  const char *const name;	\/* the name of the value *\/$/;"	m	struct:dump_option_value_info	file:
name	tree.h	/^  const char *const name;$/;"	m	struct:attribute_spec
name	tree.h	/^  tree name;$/;"	m	struct:tree_decl
name	tree.h	/^  tree name;$/;"	m	struct:tree_type
name	varasm.c	/^  const char *name;$/;"	m	struct:in_named_entry	file:
name	varray.h	/^  const char   *name;		\/* name of the varray for reporting errors *\/$/;"	m	struct:varray_head_tag
name	xmalloc.c	/^static const char *name = "";$/;"	v	file:
name_and_src_coords_attributes	dwarfout.c	/^name_and_src_coords_attributes (decl)$/;"	f	file:
name_attribute	dwarfout.c	/^name_attribute (name_string)$/;"	f	file:
name_map	cpphash.h	/^  struct file_name_map *name_map;$/;"	m	struct:search_path	typeref:struct:search_path::file_name_map
name_p	cpplex.c	/^name_p (pfile, string)$/;"	f	file:
named_labels	c-decl.c	/^  tree named_labels;$/;"	m	struct:c_language_function	file:
named_labels	c-decl.c	/^static tree named_labels;$/;"	v	file:
named_op	cppinit.c	/^static const struct named_op$/;"	s	file:
named_section	target.h	/^    void (* named_section) PARAMS ((const char *, unsigned int));$/;"	m	struct:gcc_target::asm_out
named_section	varasm.c	/^named_section (decl, name, reloc)$/;"	f
named_section_first_declaration	varasm.c	/^named_section_first_declaration (name)$/;"	f
named_section_flags	varasm.c	/^named_section_flags (name, flags)$/;"	f
names	c-decl.c	/^    tree names;$/;"	m	struct:binding_level	file:
nan	reg-stack.c	/^static rtx nan;$/;"	v	file:
ndeps	mkdeps.c	/^  unsigned int ndeps;$/;"	m	struct:deps	file:
nedf2_libfunc	libfuncs.h	200;"	d
need	reload.h	/^  struct needs need;$/;"	m	struct:insn_chain	typeref:struct:insn_chain::needs
need_caller_save_reg	regrename.c	/^  unsigned int need_caller_save_reg:1;$/;"	m	struct:du_chain	file:
need_elim	reload.h	/^  unsigned int need_elim:1;$/;"	m	struct:insn_chain
need_fake_edge_p	cfganal.c	/^need_fake_edge_p (insn)$/;"	f	file:
need_func_profiler	profile.c	/^static int need_func_profiler = 0;$/;"	v	file:
need_newline_p	diagnostic.h	/^  bool need_newline_p;$/;"	m	struct:__anon12
need_operand_change	reload.h	/^  unsigned int need_operand_change:1;$/;"	m	struct:insn_chain
need_refresh	combine.c	/^static int need_refresh;$/;"	v	file:
need_reload	reload.h	/^  unsigned int need_reload:1;$/;"	m	struct:insn_chain
needs	reload.h	/^struct needs$/;"	s
needs_constructing_flag	tree.h	/^  unsigned needs_constructing_flag : 1;$/;"	m	struct:tree_type
needs_context	function.h	/^  unsigned int needs_context : 1;$/;"	m	struct:function
needs_warning	c-common.c	/^  int needs_warning;$/;"	m	struct:__anon72	file:
neg	simplify-rtx.c	/^  int neg;$/;"	m	struct:simplify_plus_minus_op_data	file:
neg_const_int	simplify-rtx.c	/^neg_const_int (mode, i)$/;"	f	file:
neg_double	fold-const.c	/^neg_double (l1, h1, lv, hv)$/;"	f
neg_optab	optabs.h	191;"	d
negate_cost	expmed.c	/^static int add_cost, negate_cost, zero_cost;$/;"	v	file:
negate_expr	fold-const.c	/^negate_expr (t)$/;"	f	file:
negate_rtx	expmed.c	/^negate_rtx (mode, x)$/;"	f
negv_optab	optabs.h	192;"	d
nehf2_libfunc	libfuncs.h	184;"	d
neighbor_heads	conflict.c	/^  conflict_graph_arc *neighbor_heads;$/;"	m	struct:conflict_graph_def	file:
nelements	hashtable.h	/^  unsigned int nelements;	\/* Number of live elements.  *\/$/;"	m	struct:ht
nelt	ggc-common.c	/^  int nelt;$/;"	m	struct:ggc_root	file:
nesf2_libfunc	libfuncs.h	192;"	d
nesting	stmt.c	/^struct nesting$/;"	s	file:
nesting_depth	stmt.c	387;"	d	file:
nesting_stack	stmt.c	386;"	d	file:
netf2_libfunc	libfuncs.h	216;"	d
never_reached_warning	jump.c	/^never_reached_warning (avoided_insn, finish)$/;"	f
new	function.c	/^  rtx new;$/;"	m	struct:fixup_replacement	file:
new_alias_set	alias.c	/^new_alias_set ()$/;"	f
new_basic_block	cse.c	/^new_basic_block ()$/;"	f	file:
new_block	final.c	/^static int new_block = 1;$/;"	v	file:
new_buff	cpplex.c	/^new_buff (len)$/;"	f	file:
new_cfi	dwarf2out.c	/^new_cfi ()$/;"	f	file:
new_cselib_val	cselib.c	/^new_cselib_val (value, mode)$/;"	f	file:
new_die	dwarf2out.c	/^new_die (tag_value, parent_die, t)$/;"	f	file:
new_edge	sched-rgn.c	/^new_edge (source, target)$/;"	f	file:
new_elt_list	cselib.c	/^new_elt_list (next, elt)$/;"	f	file:
new_elt_loc_list	cselib.c	/^new_elt_loc_list (next, loc)$/;"	f	file:
new_insn_chain	reload1.c	/^new_insn_chain ()$/;"	f
new_loc_descr	dwarf2out.c	/^new_loc_descr (op, oprnd1, oprnd2)$/;"	f	file:
new_loc_list	dwarf2out.c	/^new_loc_list (expr, begin, end, section, gensym)$/;"	f	file:
new_number_token	cppmacro.c	/^new_number_token (pfile, number)$/;"	f	file:
new_optab	optabs.c	/^new_optab ()$/;"	f	file:
new_pending_directive	cppinit.c	/^new_pending_directive (pend, text, handler)$/;"	f	file:
new_ready	sched-ebb.c	/^new_ready (next)$/;"	f	file:
new_ready	sched-int.h	/^  int (*new_ready) PARAMS ((rtx));$/;"	m	struct:sched_info
new_ready	sched-rgn.c	/^new_ready (next)$/;"	f	file:
new_reg	loop.h	/^  rtx new_reg;			\/* New register, containing strength reduced$/;"	m	struct:induction
new_reg	ssa.c	/^  rtx new_reg;$/;"	m	struct:rename_set_data	file:
new_reg_base_value	alias.c	/^static rtx *new_reg_base_value;$/;"	v	file:
new_renames	ssa.c	/^  struct rename_set_data *new_renames;$/;"	m	struct:rename_context	typeref:struct:rename_context::rename_set_data	file:
new_seginfo	lcm.c	/^new_seginfo (mode, insn, bb, regs_live)$/;"	f	file:
new_set	flow.c	/^  regset new_set;$/;"	m	struct:propagate_block_info	file:
new_sp_equiv_reg	function.c	/^  rtx new_sp_equiv_reg;		\/* REG to be used at end of insn.  *\/$/;"	m	struct:epi_info	file:
new_sp_offset	function.c	/^  HOST_WIDE_INT new_sp_offset;	\/* Offset to be used at end of insn.  *\/$/;"	m	struct:epi_info	file:
new_spill_reg_store	reload1.c	/^static rtx new_spill_reg_store[FIRST_PSEUDO_REGISTER];$/;"	v	file:
new_string_token	cppmacro.c	/^new_string_token (pfile, text, len)$/;"	f	file:
new_tlist	c-common.c	/^new_tlist (next, t, writer)$/;"	f	file:
newfunc	hash.h	/^  struct hash_entry *(*newfunc) PARAMS ((struct hash_entry *,$/;"	m	struct:hash_table	typeref:struct:hash_table::newfunc
newpat_used_regs	combine.c	/^static HARD_REG_SET newpat_used_regs;$/;"	v	file:
nexf2_libfunc	libfuncs.h	208;"	d
next	alloca.c	/^      union hdr *next;		\/* For chaining headers.  *\/$/;"	m	struct:hdr::__anon3	typeref:union:hdr::__anon3::hdr	file:
next	basic-block.h	/^  struct loop *next;$/;"	m	struct:loop	typeref:struct:loop::loop
next	bitmap.h	/^  struct bitmap_element_def *next;		\/* Next element.  *\/$/;"	m	struct:bitmap_element_def	typeref:struct:bitmap_element_def::bitmap_element_def
next	c-common.c	/^  struct disabled_builtin *next;$/;"	m	struct:disabled_builtin	typeref:struct:disabled_builtin::disabled_builtin	file:
next	c-common.c	/^  struct tlist *next;$/;"	m	struct:tlist	typeref:struct:tlist::tlist	file:
next	c-common.c	/^  struct tlist_cache *next;$/;"	m	struct:tlist_cache	typeref:struct:tlist_cache::tlist_cache	file:
next	c-format.c	/^  struct format_wanted_type *next;$/;"	m	struct:format_wanted_type	typeref:struct:format_wanted_type::format_wanted_type	file:
next	c-typeck.c	/^  struct c_switch *next;$/;"	m	struct:c_switch	typeref:struct:c_switch::c_switch	file:
next	c-typeck.c	/^  struct constructor_range_stack *next, *prev;$/;"	m	struct:constructor_range_stack	typeref:struct:constructor_range_stack::constructor_range_stack	file:
next	c-typeck.c	/^  struct constructor_stack *next;$/;"	m	struct:constructor_stack	typeref:struct:constructor_stack::constructor_stack	file:
next	c-typeck.c	/^  struct initializer_stack *next;$/;"	m	struct:initializer_stack	typeref:struct:initializer_stack::initializer_stack	file:
next	cfglayout.h	/^  basic_block next;$/;"	m	struct:reorder_block_def
next	combine.c	/^  struct undo *next;$/;"	m	struct:undo	typeref:struct:undo::undo	file:
next	cpphash.h	/^  cpp_context *next, *prev;$/;"	m	struct:cpp_context
next	cpphash.h	/^  struct _cpp_buff *next;$/;"	m	struct:_cpp_buff	typeref:struct:_cpp_buff::_cpp_buff
next	cpphash.h	/^  struct search_path *next;$/;"	m	struct:search_path	typeref:struct:search_path::search_path
next	cpphash.h	/^  tokenrun *next, *prev;$/;"	m	struct:tokenrun
next	cppinit.c	/^  struct pending_option *next;$/;"	m	struct:pending_option	typeref:struct:pending_option::pending_option	file:
next	cpplib.c	/^  struct answer *next;$/;"	m	struct:answer	typeref:struct:answer::answer	file:
next	cpplib.c	/^  struct if_stack *next;$/;"	m	struct:if_stack	typeref:struct:if_stack::if_stack	file:
next	cpplib.c	/^  struct pragma_entry *next;$/;"	m	struct:pragma_entry	typeref:struct:pragma_entry::pragma_entry	file:
next	cse.c	/^  int next, prev;$/;"	m	struct:reg_eqv_elem	file:
next	cse.c	/^  struct cse_reg_info *next;$/;"	m	struct:cse_reg_info	typeref:struct:cse_reg_info::cse_reg_info	file:
next	cselib.h	/^  struct elt_list *next;$/;"	m	struct:elt_list	typeref:struct:elt_list::elt_list
next	cselib.h	/^  struct elt_loc_list *next;$/;"	m	struct:elt_loc_list	typeref:struct:elt_loc_list::elt_loc_list
next	dbxout.c	/^  struct dbx_file *next;$/;"	m	struct:dbx_file	typeref:struct:dbx_file::dbx_file	file:
next	dependence.c	/^  struct def_use *next;$/;"	m	struct:def_use	typeref:struct:def_use::def_use	file:
next	dependence.c	/^  struct dependence *next;$/;"	m	struct:dependence	typeref:struct:dependence::dependence	file:
next	dependence.c	/^  struct induction *next;$/;"	m	struct:induction	typeref:struct:induction::induction	file:
next	dependence.c	/^  struct subscript *next;$/;"	m	struct:subscript	typeref:struct:subscript::subscript	file:
next	df.h	/^  struct df_link *next;$/;"	m	struct:df_link	typeref:struct:df_link::df_link
next	dwarf2out.c	/^  struct limbo_die_struct *next;$/;"	m	struct:limbo_die_struct	typeref:struct:limbo_die_struct::limbo_die_struct	file:
next	dwarf2out.c	/^  struct queued_reg_save *next;$/;"	m	struct:queued_reg_save	typeref:struct:queued_reg_save::queued_reg_save	file:
next	except.c	/^  int next;$/;"	m	struct:action_record	file:
next	function.c	/^  struct fixup_replacement *next;$/;"	m	struct:fixup_replacement	typeref:struct:fixup_replacement::fixup_replacement	file:
next	function.c	/^  struct temp_slot *next;$/;"	m	struct:temp_slot	typeref:struct:temp_slot::temp_slot	file:
next	function.h	/^  struct sequence_stack *next;$/;"	m	struct:sequence_stack	typeref:struct:sequence_stack::sequence_stack
next	function.h	/^  struct simple_obstack_stack *next;$/;"	m	struct:simple_obstack_stack	typeref:struct:simple_obstack_stack::simple_obstack_stack
next	function.h	/^  struct var_refs_queue *next;$/;"	m	struct:var_refs_queue	typeref:struct:var_refs_queue::var_refs_queue
next	gcse.c	/^  struct ls_expr * next;	\/* Next in the list.  *\/$/;"	m	struct:ls_expr	typeref:struct:ls_expr::ls_expr	file:
next	gcse.c	/^  struct occr *next;$/;"	m	struct:occr	typeref:struct:occr::occr	file:
next	gcse.c	/^  struct reg_set *next;$/;"	m	struct:reg_set	typeref:struct:reg_set::reg_set	file:
next	ggc-common.c	/^  struct d_htab_root *next;$/;"	m	struct:d_htab_root	typeref:struct:d_htab_root::d_htab_root	file:
next	ggc-common.c	/^  struct ggc_root *next;$/;"	m	struct:ggc_root	typeref:struct:ggc_root::ggc_root	file:
next	ggc-page.c	/^  struct page_entry *next;$/;"	m	struct:page_entry	typeref:struct:page_entry::page_entry	file:
next	ggc-page.c	/^  struct page_group *next;$/;"	m	struct:page_group	typeref:struct:page_group::page_group	file:
next	ggc-page.c	/^  struct page_table_chain *next;$/;"	m	struct:page_table_chain	typeref:struct:page_table_chain::page_table_chain	file:
next	hash.h	/^  struct hash_entry *next;$/;"	m	struct:hash_entry	typeref:struct:hash_entry::hash_entry
next	input.h	/^    struct file_stack *next;$/;"	m	struct:file_stack	typeref:struct:file_stack::file_stack
next	lcm.c	/^  struct seginfo *next;$/;"	m	struct:seginfo	typeref:struct:seginfo::seginfo	file:
next	loop.c	/^  struct movable *next;$/;"	m	struct:movable	typeref:struct:movable::movable	file:
next	loop.h	/^  struct iv_class *next;	\/* Links all class structures together.  *\/$/;"	m	struct:iv_class	typeref:struct:iv_class::iv_class
next	partition.h	/^  struct partition_elem* next;$/;"	m	struct:partition_elem	typeref:struct:partition_elem::partition_elem
next	predict.c	/^  basic_block next;$/;"	m	struct:block_info_def	file:
next	print-tree.c	/^  struct bucket *next;$/;"	m	struct:bucket	typeref:struct:bucket::bucket	file:
next	regclass.c	/^  struct reg_info_data *next;	\/* next set of reg_info structures *\/$/;"	m	struct:reg_info_data	typeref:struct:reg_info_data::reg_info_data	file:
next	regmove.c	/^  struct csa_memlist *next;$/;"	m	struct:csa_memlist	typeref:struct:csa_memlist::csa_memlist	file:
next	reload.h	/^  struct insn_chain *next, *prev;$/;"	m	struct:insn_chain	typeref:struct:insn_chain::insn_chain
next	resource.c	/^  struct target_info *next;	\/* Next info for same hash bucket.  *\/$/;"	m	struct:target_info	typeref:struct:target_info::target_info	file:
next	sdbout.c	/^  struct sdb_file *next;$/;"	m	struct:sdb_file	typeref:struct:sdb_file::sdb_file	file:
next	ssa.c	/^  struct rename_set_data *next;$/;"	m	struct:rename_set_data	typeref:struct:rename_set_data::rename_set_data	file:
next	stmt.c	/^  struct goto_fixup *next;$/;"	m	struct:goto_fixup	typeref:struct:goto_fixup::goto_fixup	file:
next	stmt.c	/^  struct label_chain *next;$/;"	m	struct:label_chain	typeref:struct:label_chain::label_chain	file:
next	stmt.c	/^  struct nesting *next;$/;"	m	struct:nesting	typeref:struct:nesting::nesting	file:
next	timevar.c	/^  struct timevar_stack_def *next;$/;"	m	struct:timevar_stack_def	typeref:struct:timevar_stack_def::timevar_stack_def	file:
next	tree-dump.h	/^  struct dump_queue *next;$/;"	m	struct:dump_queue	typeref:struct:dump_queue::dump_queue
next	varasm.c	/^  struct constant_descriptor *next;$/;"	m	struct:constant_descriptor	typeref:struct:constant_descriptor::constant_descriptor	file:
next	varasm.c	/^  struct deferred_constant *next;$/;"	m	struct:deferred_constant	typeref:struct:deferred_constant::deferred_constant	file:
next	varasm.c	/^  struct pool_constant *next, *next_sym;$/;"	m	struct:pool_constant	typeref:struct:pool_constant::pool_constant	file:
next_active_insn	emit-rtl.c	/^next_active_insn (insn)$/;"	f
next_bit_hint	ggc-page.c	/^  unsigned short next_bit_hint;$/;"	m	struct:page_entry	file:
next_block_index	function.c	/^static int next_block_index = 2;$/;"	v	file:
next_bucket	dominance.c	/^  TBB *next_bucket;$/;"	m	struct:dom_info	file:
next_catch	except.c	/^      struct eh_region *next_catch;$/;"	m	struct:eh_region::__anon21::__anon23	typeref:struct:eh_region::__anon21::__anon23::eh_region	file:
next_cc0_user	emit-rtl.c	/^next_cc0_user (insn)$/;"	f
next_chain	regrename.c	/^  struct du_chain *next_chain;$/;"	m	struct:du_chain	typeref:struct:du_chain::du_chain	file:
next_context	cppmacro.c	/^next_context (pfile)$/;"	f	file:
next_decl_uid	tree.c	/^static int next_decl_uid;$/;"	v	file:
next_die_offset	dwarf2out.c	/^static unsigned long next_die_offset;$/;"	v	file:
next_file_number	dbxout.c	/^static int next_file_number;$/;"	v	file:
next_flags_user	reg-stack.c	/^next_flags_user (insn)$/;"	f	file:
next_free	cselib.h	/^    struct cselib_val_struct *next_free;$/;"	m	union:cselib_val_struct::__anon65	typeref:struct:cselib_val_struct::__anon65::cselib_val_struct
next_free	obstack.h	/^  char	*next_free;		\/* where to add next char to current object *\/$/;"	m	struct:obstack
next_in	sched-rgn.c	/^  int next_in;$/;"	m	struct:__anon28	file:
next_insn	emit-rtl.c	/^next_insn (insn)$/;"	f
next_insn_in_loop	loop.c	/^next_insn_in_loop (loop, insn)$/;"	f	file:
next_insn_no_annul	resource.c	/^next_insn_no_annul (insn)$/;"	f	file:
next_insn_tests_no_inequality	recog.c	/^next_insn_tests_no_inequality (insn)$/;"	f
next_iv	loop.h	/^  struct induction *next_iv;	\/* For givs, links together all givs that are$/;"	m	struct:induction	typeref:struct:induction::induction
next_label	emit-rtl.c	/^next_label (insn)$/;"	f
next_label	stmt.c	/^	  rtx next_label;$/;"	m	struct:nesting::__anon67::__anon68	file:
next_ls_expr	gcse.c	/^next_ls_expr (ptr)$/;"	f	file:
next_need_reload	reload.h	/^  struct insn_chain *next_need_reload;$/;"	m	struct:insn_chain	typeref:struct:insn_chain::insn_chain
next_nest	dependence.c	/^  struct loop *next_nest;$/;"	m	struct:loop	typeref:struct:loop::loop	file:
next_nondeleted_insn	jump.c	/^next_nondeleted_insn (insn)$/;"	f
next_nonnote_insn	emit-rtl.c	/^next_nonnote_insn (insn)$/;"	f
next_out	sched-rgn.c	/^  int next_out;$/;"	m	struct:__anon28	file:
next_peer	except.c	/^  struct eh_region *next_peer;$/;"	m	struct:eh_region	typeref:struct:eh_region::eh_region	file:
next_pubname_number	dwarfout.c	/^static int next_pubname_number = 0;$/;"	v	file:
next_qty	cse.c	/^static int next_qty;$/;"	v	file:
next_qty	local-alloc.c	/^static int next_qty;$/;"	v	file:
next_real_insn	emit-rtl.c	/^next_real_insn (insn)$/;"	f
next_regno	regrename.c	/^  unsigned int next_regno;$/;"	m	struct:value_data_entry	file:
next_same_hash	cse.c	/^  struct table_elt *next_same_hash;$/;"	m	struct:table_elt	typeref:struct:table_elt::table_elt	file:
next_same_hash	gcse.c	/^  struct expr *next_same_hash;$/;"	m	struct:expr	typeref:struct:expr::expr	file:
next_same_value	cse.c	/^  struct table_elt *next_same_value;$/;"	m	struct:table_elt	typeref:struct:table_elt::table_elt	file:
next_set	gcse.c	/^next_set (regno, expr)$/;"	f	file:
next_sym	varasm.c	/^  struct pool_constant *next, *next_sym;$/;"	m	struct:pool_constant	typeref:struct:pool_constant::	file:
next_tail	sched-int.h	/^  rtx prev_head, next_tail;$/;"	m	struct:sched_info
next_tokenrun	cpplex.c	/^next_tokenrun (run)$/;"	f	file:
next_type_number	dbxout.c	/^  int next_type_number;$/;"	m	struct:dbx_file	file:
next_type_number	dbxout.c	/^static int next_type_number;$/;"	v	file:
next_type_uid	tree.c	/^static int next_type_uid = 1;$/;"	v	file:
next_unknown_value	cselib.c	/^static unsigned int next_unknown_value;$/;"	v	file:
next_unused_dienum	dwarfout.c	/^static unsigned next_unused_dienum = 1;$/;"	v	file:
next_use	regrename.c	/^  struct du_chain *next_use;$/;"	m	struct:du_chain	typeref:struct:du_chain::du_chain	file:
next_variant	tree.h	/^  tree next_variant;$/;"	m	struct:tree_type
nnodes	cfganal.c	/^    unsigned nnodes;$/;"	m	struct:dfst_node	file:
no_arg	cppinit.c	1180;"	d	file:
no_asm_to_stream	final.c	/^no_asm_to_stream (file)$/;"	f
no_ass	cppinit.c	1181;"	d	file:
no_conflict_p	local-alloc.c	/^no_conflict_p (insn, r0, r1)$/;"	f	file:
no_const_addval	loop.h	/^  unsigned no_const_addval : 1; \/* 1 if add_val does not contain a const.  *\/$/;"	m	struct:induction
no_debugging_symbols	function.h	/^  int no_debugging_symbols;$/;"	m	struct:function
no_dir	cppinit.c	1182;"	d	file:
no_equiv	local-alloc.c	/^no_equiv (reg, store, data)$/;"	f	file:
no_fil	cppinit.c	1183;"	d	file:
no_force_blk_flag	tree.h	/^  unsigned no_force_blk_flag : 1;$/;"	m	struct:tree_type
no_global_alloc_regs	global.c	/^static HARD_REG_SET no_global_alloc_regs;$/;"	v	file:
no_global_reg_vars	regclass.c	/^static int no_global_reg_vars = 0;$/;"	v	file:
no_graph	flags.h	/^  no_graph = 0,$/;"	e	enum:graph_dump_types
no_instrument_function_entry_exit	tree.h	/^  unsigned no_instrument_function_entry_exit : 1;$/;"	m	struct:tree_decl
no_jumps_between_p	rtlanal.c	/^no_jumps_between_p (beg, end)$/;"	f
no_labels_between_p	rtlanal.c	/^no_labels_between_p (beg, end)$/;"	f
no_limit_stack	tree.h	/^  unsigned no_limit_stack : 1;$/;"	m	struct:tree_decl
no_line_commands	cpplib.h	/^  unsigned char no_line_commands;$/;"	m	struct:cpp_options
no_line_numbers	emit-rtl.c	/^static int no_line_numbers;$/;"	v	file:
no_mac	cppinit.c	1184;"	d	file:
no_new_pseudos	toplev.c	/^int no_new_pseudos;$/;"	v
no_num	cppinit.c	1186;"	d	file:
no_output	cpplib.h	/^  unsigned char no_output;$/;"	m	struct:cpp_options
no_pth	cppinit.c	1185;"	d	file:
no_real_insns_p	haifa-sched.c	/^no_real_insns_p (head, tail)$/;"	f
no_section	varasm.c	/^static enum in_section { no_section, in_text, in_data, in_named$/;"	e	enum:in_section	file:
no_standard_cplusplus_includes	cpplib.h	/^  unsigned char no_standard_cplusplus_includes;$/;"	m	struct:cpp_options
no_standard_includes	cpplib.h	/^  unsigned char no_standard_includes;$/;"	m	struct:cpp_options
no_tgt	cppinit.c	1187;"	d	file:
no_type_class	typeclass.h	/^  no_type_class = -1,$/;"	e	enum:type_class
noce_emit_cmove	ifcvt.c	/^noce_emit_cmove (if_info, x, code, cmp_a, cmp_b, vfalse, vtrue)$/;"	f	file:
noce_emit_move_insn	ifcvt.c	/^noce_emit_move_insn (x, y)$/;"	f	file:
noce_emit_store_flag	ifcvt.c	/^noce_emit_store_flag (if_info, x, reversep, normalize)$/;"	f	file:
noce_get_alt_condition	ifcvt.c	/^noce_get_alt_condition (if_info, target, earliest)$/;"	f	file:
noce_get_condition	ifcvt.c	/^noce_get_condition (jump, earliest)$/;"	f	file:
noce_if_info	ifcvt.c	/^struct noce_if_info$/;"	s	file:
noce_operand_ok	ifcvt.c	/^noce_operand_ok (op)$/;"	f	file:
noce_process_if_block	ifcvt.c	/^noce_process_if_block (test_bb, then_bb, else_bb, join_bb)$/;"	f	file:
noce_try_abs	ifcvt.c	/^noce_try_abs (if_info)$/;"	f	file:
noce_try_cmove	ifcvt.c	/^noce_try_cmove (if_info)$/;"	f	file:
noce_try_cmove_arith	ifcvt.c	/^noce_try_cmove_arith (if_info)$/;"	f	file:
noce_try_minmax	ifcvt.c	/^noce_try_minmax (if_info)$/;"	f	file:
noce_try_store_flag	ifcvt.c	/^noce_try_store_flag (if_info)$/;"	f	file:
noce_try_store_flag_constants	ifcvt.c	/^noce_try_store_flag_constants (if_info)$/;"	f	file:
noce_try_store_flag_inc	ifcvt.c	/^noce_try_store_flag_inc (if_info)$/;"	f	file:
noce_try_store_flag_mask	ifcvt.c	/^noce_try_store_flag_mask (if_info)$/;"	f	file:
nocombine	reload.h	/^  unsigned int nocombine:1;$/;"	m	struct:reload
node	c-common.h	/^  struct cpp_hashnode node;$/;"	m	struct:c_common_identifier	typeref:struct:c_common_identifier::cpp_hashnode
node	cfganal.c	/^    struct dfst_node **node;$/;"	m	struct:dfst_node	typeref:struct:dfst_node::dfst_node	file:
node	cpplib.h	/^    cpp_hashnode *node;		\/* An identifier.  *\/$/;"	m	union:cpp_token::__anon85
node	print-tree.c	/^  tree node;$/;"	m	struct:bucket	file:
node	tree-dump.h	/^  splay_tree_node node;$/;"	m	struct:dump_queue
node	tree-dump.h	/^  tree node;$/;"	m	struct:dump_info
node_data	graph.c	/^node_data (fp, tmp_rtx)$/;"	f	file:
node_has_high_bound	stmt.c	/^node_has_high_bound (node, index_type)$/;"	f	file:
node_has_low_bound	stmt.c	/^node_has_low_bound (node, index_type)$/;"	f	file:
node_is_bounded	stmt.c	/^node_is_bounded (node, index_type)$/;"	f	file:
node_type	cpplib.h	/^enum node_type$/;"	g
nodes	basic-block.h	/^  sbitmap nodes;$/;"	m	struct:loop
nodes	dominance.c	/^  unsigned int nodes;$/;"	m	struct:dom_info	file:
nodes	fibheap.h	/^  size_t nodes;$/;"	m	struct:fibheap
nodes	tree-dump.h	/^  splay_tree nodes;$/;"	m	struct:dump_info
nominal_type	stmt.c	/^	  tree nominal_type;$/;"	m	struct:nesting::__anon67::__anon71	file:
non_addr_const_p	tree.h	/^  unsigned non_addr_const_p : 1;$/;"	m	struct:tree_decl
non_addressable	tree.h	/^  unsigned non_addressable : 1;$/;"	m	struct:tree_decl
non_lvalue	fold-const.c	/^non_lvalue (x)$/;"	f
non_q_regs_operand	i386.c	/^non_q_regs_operand (op, mode)$/;"	f
none	expr.h	/^enum direction {none, upward, downward};  \/* Value has this type.  *\/$/;"	e	enum:direction
nongroup	reload.h	/^  unsigned int nongroup:1;$/;"	m	struct:reload
nonimmediate_operand	recog.c	/^nonimmediate_operand (op, mode)$/;"	f
nonlocal_flag	tree.h	/^  unsigned nonlocal_flag : 1;$/;"	m	struct:tree_decl
nonlocal_goto_handler_labels	function.h	545;"	d
nonlocal_goto_handler_slots	function.h	544;"	d
nonlocal_goto_stack_level	function.h	546;"	d
nonlocal_labels	function.h	543;"	d
nonlocal_mentioned_p	alias.c	/^nonlocal_mentioned_p (x)$/;"	f	file:
nonmemory_no_elim_operand	i386.c	/^nonmemory_no_elim_operand (op, mode)$/;"	f
nonmemory_operand	recog.c	/^nonmemory_operand (op, mode)$/;"	f
nonneg	loop.h	/^  unsigned nonneg : 1;		\/* 1 if we added a REG_NONNEG note for$/;"	m	struct:iv_class
nonnull_killed	gcse.c	/^  sbitmap *nonnull_killed;$/;"	m	struct:null_pointer_info	file:
nonnull_local	gcse.c	/^  sbitmap *nonnull_local;$/;"	m	struct:null_pointer_info	file:
nonoffmem_ok	recog.h	/^  unsigned int nonoffmem_ok:1;$/;"	m	struct:operand_alternative
nonoverlapping_component_refs_p	alias.c	/^nonoverlapping_component_refs_p (x, y)$/;"	f	file:
nonoverlapping_memrefs_p	alias.c	/^nonoverlapping_memrefs_p (x, y)$/;"	f	file:
nonzero_bits	combine.c	/^nonzero_bits (x, mode)$/;"	f	file:
nonzero_bits_mode	combine.c	/^static enum machine_mode nonzero_bits_mode;$/;"	v	typeref:enum:machine_mode	file:
nonzero_sign_valid	combine.c	/^static int nonzero_sign_valid;$/;"	v	file:
noop_move_p	rtlanal.c	/^noop_move_p (insn)$/;"	f
normal	dependence.c	/^enum loop_status_type {normal, unnormal};$/;"	e	enum:loop_status_type	file:
normalize_coefficients	dependence.c	/^normalize_coefficients (coefficients, loop_ptr, count)$/;"	f	file:
normalize_offset	stor-layout.c	/^normalize_offset (poffset, pbitpos, off_align)$/;"	f
normalize_rli	stor-layout.c	/^normalize_rli (rli)$/;"	f
not_reg_cond	flow.c	/^not_reg_cond (x)$/;"	f	file:
not_replaceable	loop.h	/^  unsigned not_replaceable : 1;	\/* Used to prevent duplicating work.  This is$/;"	m	struct:induction
note_addr_stored	loop.c	/^note_addr_stored (x, y, data)$/;"	f	file:
note_delay_statistics	reorg.c	/^note_delay_statistics (slots_filled, index)$/;"	f	file:
note_inherently_necessary_set	ssa-dce.c	/^note_inherently_necessary_set (dest, set, data)$/;"	f	file:
note_insn	loop.c	/^static rtx note_insn;$/;"	v	file:
note_insn_name	rtl.c	/^const char * const note_insn_name[NOTE_INSN_MAX - NOTE_INSN_BIAS] =$/;"	v
note_list	haifa-sched.c	/^static rtx note_list;$/;"	v	file:
note_modified_parmregs	integrate.c	/^note_modified_parmregs (reg, x, data)$/;"	f	file:
note_reg_stored	loop.c	/^note_reg_stored (x, setter, arg)$/;"	f	file:
note_reg_stored_arg	loop.c	/^struct note_reg_stored_arg$/;"	s	file:
note_set_pseudo_multiple_uses	loop.c	/^note_set_pseudo_multiple_uses (x, y, data)$/;"	f	file:
note_sets	regrename.c	/^note_sets (x, set, data)$/;"	f	file:
note_stores	rtlanal.c	/^note_stores (x, fun, data)$/;"	f
note_uses	rtlanal.c	/^note_uses (pbody, fun, data)$/;"	f
nothrow	dwarf2out.c	/^  unsigned nothrow : 1;$/;"	m	struct:dw_fde_struct	file:
nothrow_flag	tree.h	/^  unsigned nothrow_flag : 1;$/;"	m	struct:tree_common
nothrow_function_p	except.c	/^nothrow_function_p ()$/;"	f
notice_new_block	cfgcleanup.c	/^notice_new_block (bb)$/;"	f	file:
notice_source_line	final.c	/^notice_source_line (insn)$/;"	f	file:
notice_stack_pointer_modification	flow.c	/^notice_stack_pointer_modification (f)$/;"	f	file:
notice_stack_pointer_modification_1	flow.c	/^notice_stack_pointer_modification_1 (x, pat, data)$/;"	f	file:
notreg_cost	cse.c	/^notreg_cost (x, outer)$/;"	f	file:
now	alloca.c	/^    long now;			\/* Current total stack size.  *\/$/;"	m	struct:stk_stat	file:
npredecessors	predict.c	/^  int npredecessors;$/;"	m	struct:block_info_def	file:
nr_edges	sched-rgn.c	/^static int nr_edges;$/;"	v	file:
nr_inter	sched-rgn.c	/^static int nr_inter, nr_spec;$/;"	v	file:
nr_members	sched-rgn.c	/^  int nr_members;		\/* The number of members of the bit list.  *\/$/;"	m	struct:__anon30	file:
nr_regions	sched-rgn.c	/^static int nr_regions;$/;"	v	file:
nr_spec	sched-rgn.c	/^static int nr_inter, nr_spec;$/;"	v	file:
nregs	i386.c	/^  int nregs;$/;"	m	struct:ix86_frame	file:
nregs	i386.h	/^  int nregs;			\/* # registers available for passing *\/$/;"	m	struct:ix86_args
nregs	reload.h	/^  unsigned int nregs;$/;"	m	struct:reload
nregs	rtlanal.c	/^  int nregs;$/;"	m	struct:parms_set_data	file:
nreverse	tree.c	/^nreverse (t)$/;"	f
nsets	cse.c	/^  int nsets;$/;"	m	struct:cse_basic_block_data	file:
nslots	hashtable.h	/^  unsigned int nslots;		\/* Total slots in the entries array.  *\/$/;"	m	struct:ht
ntargets	mkdeps.c	/^  unsigned int ntargets;	\/* number of slots actually occupied *\/$/;"	m	struct:deps	file:
null_pointer_info	gcse.c	/^struct null_pointer_info$/;"	s	file:
null_pointer_node	tree.h	1972;"	d
num	basic-block.h	/^  int num;$/;"	m	struct:loop
num	basic-block.h	/^  int num;$/;"	m	struct:loops
num	loop.h	/^  int num;			\/* Number of regs used in table.  *\/$/;"	m	struct:loop_regs
num_blocks	basic-block.h	/^  int num_blocks;$/;"	m	struct:edge_list
num_changes	recog.c	/^static int num_changes = 0;$/;"	v	file:
num_compiler_params	params.c	/^static size_t num_compiler_params;$/;"	v	file:
num_edges	basic-block.h	/^  int num_edges;$/;"	m	struct:edge_list
num_elem	rtl.h	/^  int num_elem;		\/* number of elements *\/$/;"	m	struct:rtvec_def
num_elements	partition.h	/^  int num_elements;$/;"	m	struct:partition_def
num_elements	varray.h	/^  size_t	num_elements;	\/* maximum element number allocated *\/$/;"	m	struct:varray_head_tag
num_eliminable	reload1.c	/^static int num_eliminable;$/;"	v	file:
num_eliminable_invariants	reload1.c	/^static int num_eliminable_invariants;$/;"	v	file:
num_entries	basic-block.h	/^  int num_entries;$/;"	m	struct:loop
num_entries	integrate.c	/^  int num_entries;$/;"	m	struct:initial_value_struct	file:
num_exits	basic-block.h	/^  int num_exits;$/;"	m	struct:loop
num_filled_delays	reorg.c	/^static int num_filled_delays[NUM_REORG_FUNCTIONS][MAX_DELAY_HISTOGRAM+1][MAX_REORG_PASSES];$/;"	v	file:
num_free_objects	ggc-page.c	/^  unsigned short num_free_objects;$/;"	m	struct:page_entry	file:
num_insns_needing_delays	reorg.c	/^static int num_insns_needing_delays[NUM_REORG_FUNCTIONS][MAX_REORG_PASSES];$/;"	v	file:
num_labels	reload1.c	/^static int num_labels;$/;"	v	file:
num_mem_sets	loop.h	/^  int num_mem_sets;$/;"	m	struct:loop_info
num_nodes	basic-block.h	/^  int num_nodes;$/;"	m	struct:loop
num_not_at_initial_offset	reload1.c	/^int num_not_at_initial_offset;$/;"	v
num_possible_if_blocks	ifcvt.c	/^static int num_possible_if_blocks;$/;"	v	file:
num_pre_header_edges	basic-block.h	/^  int num_pre_header_edges;$/;"	m	struct:loop
num_pushes	c-pragma.c	/^  unsigned int         num_pushes;$/;"	m	struct:align_stack	file:
num_regs	conflict.c	/^  int num_regs;$/;"	m	struct:conflict_graph_def	file:
num_removed_blocks	ifcvt.c	/^static int num_removed_blocks;$/;"	v	file:
num_rtxs	ggc.h	/^  unsigned num_rtxs[256];$/;"	m	struct:ggc_statistics
num_sets	integrate.h	/^  int num_sets;$/;"	m	struct:inline_remap
num_sign_bit_copies	combine.c	/^num_sign_bit_copies (x, mode)$/;"	f	file:
num_sign_bit_copies	combine.c	7946;"	d	file:
num_sign_bit_copies	combine.c	8388;"	d	file:
num_stores	gcse.c	/^static int num_stores;$/;"	v	file:
num_trees	ggc.h	/^  unsigned num_trees[256];$/;"	m	struct:ggc_statistics
num_unmoved_movables	loop.c	/^num_unmoved_movables (loop)$/;"	f	file:
num_updated_if_blocks	ifcvt.c	/^static int num_updated_if_blocks;$/;"	v	file:
num_validated_changes	recog.c	/^num_validated_changes ()$/;"	f
number	dwarfout.c	/^  unsigned	number;$/;"	m	struct:filename_entry	file:
number_blocks	function.c	/^number_blocks (fn)$/;"	f
number_dollar_extra_args	c-format.c	/^  int number_dollar_extra_args;$/;"	m	struct:__anon44	file:
number_empty	c-format.c	/^  int number_empty;$/;"	m	struct:__anon44	file:
number_extra_args	c-format.c	/^  int number_extra_args;$/;"	m	struct:__anon44	file:
number_non_literal	c-format.c	/^  int number_non_literal;$/;"	m	struct:__anon44	file:
number_other	c-format.c	/^  int number_other;$/;"	m	struct:__anon44	file:
number_unterminated	c-format.c	/^  int number_unterminated;$/;"	m	struct:__anon44	file:
number_wide	c-format.c	/^  int number_wide;$/;"	m	struct:__anon44	file:
nv	safe-ctype.c	42;"	d	file:
objc	cppinit.c	/^  char objc;$/;"	m	struct:lang_flags	file:
objc	cpplib.h	/^  unsigned char objc;$/;"	m	struct:cpp_options
object	recog.c	/^  rtx object;$/;"	m	struct:change_t	file:
object_base	obstack.h	/^  char	*object_base;		\/* address of object we are building *\/$/;"	m	struct:obstack
object_size_table	ggc-page.c	/^static size_t object_size_table[NUM_ORDERS];$/;"	v	file:
objects_must_conflict_p	alias.c	/^objects_must_conflict_p (t1, t2)$/;"	f
objects_per_page_table	ggc-page.c	/^static unsigned objects_per_page_table[NUM_ORDERS];$/;"	v	file:
obstack	diagnostic.h	/^  struct obstack obstack;$/;"	m	struct:output_buffer	typeref:struct:output_buffer::obstack
obstack	function.h	/^  struct obstack *obstack;$/;"	m	struct:simple_obstack_stack	typeref:struct:simple_obstack_stack::obstack
obstack	obstack.h	/^struct obstack		\/* control current object in current chunk *\/$/;"	s
obstack_1grow	obstack.h	409;"	d
obstack_1grow	obstack.h	531;"	d
obstack_1grow_fast	obstack.h	346;"	d
obstack_alignment_mask	obstack.h	291;"	d
obstack_alloc	obstack.h	450;"	d
obstack_alloc	obstack.h	555;"	d
obstack_alloc_failed_handler	obstack.c	/^void (*obstack_alloc_failed_handler) () = print_and_abort;$/;"	v
obstack_alloc_failed_handler	obstack.c	/^void (*obstack_alloc_failed_handler) (void) = print_and_abort;$/;"	v
obstack_alloc_rtx	genrtl.c	11;"	d	file:
obstack_base	obstack.h	279;"	d
obstack_begin	obstack.h	301;"	d
obstack_begin	obstack.h	326;"	d
obstack_blank	obstack.h	441;"	d
obstack_blank	obstack.h	549;"	d
obstack_blank_fast	obstack.h	348;"	d
obstack_chunk_alloc	conflict.c	37;"	d	file:
obstack_chunk_alloc	df.c	198;"	d	file:
obstack_chunk_alloc	diagnostic.c	38;"	d	file:
obstack_chunk_alloc	flow.c	143;"	d	file:
obstack_chunk_alloc	gcse.c	167;"	d	file:
obstack_chunk_alloc	hash.c	29;"	d	file:
obstack_chunk_alloc	integrate.c	48;"	d	file:
obstack_chunk_alloc	loop.c	186;"	d	file:
obstack_chunk_alloc	regrename.c	39;"	d	file:
obstack_chunk_alloc	reload1.c	283;"	d	file:
obstack_chunk_alloc	reorg.c	146;"	d	file:
obstack_chunk_alloc	stmt.c	57;"	d	file:
obstack_chunk_alloc	tree.c	50;"	d	file:
obstack_chunk_alloc	varasm.c	69;"	d	file:
obstack_chunk_free	conflict.c	38;"	d	file:
obstack_chunk_free	df.c	199;"	d	file:
obstack_chunk_free	diagnostic.c	39;"	d	file:
obstack_chunk_free	flow.c	144;"	d	file:
obstack_chunk_free	gcse.c	168;"	d	file:
obstack_chunk_free	hash.c	30;"	d	file:
obstack_chunk_free	integrate.c	49;"	d	file:
obstack_chunk_free	loop.c	187;"	d	file:
obstack_chunk_free	regrename.c	40;"	d	file:
obstack_chunk_free	reload1.c	284;"	d	file:
obstack_chunk_free	reorg.c	147;"	d	file:
obstack_chunk_free	stmt.c	58;"	d	file:
obstack_chunk_free	tree.c	51;"	d	file:
obstack_chunk_size	obstack.h	283;"	d
obstack_chunkfun	obstack.h	314;"	d
obstack_chunkfun	obstack.h	338;"	d
obstack_copy	obstack.h	456;"	d
obstack_copy	obstack.h	558;"	d
obstack_copy0	obstack.h	462;"	d
obstack_copy0	obstack.h	561;"	d
obstack_empty_p	obstack.h	383;"	d
obstack_empty_p	obstack.h	502;"	d
obstack_exit_failure	obstack.c	/^int obstack_exit_failure = EXIT_FAILURE;$/;"	v
obstack_finish	obstack.h	470;"	d
obstack_finish	obstack.h	564;"	d
obstack_free	obstack.c	/^obstack_free (h, obj)$/;"	f
obstack_free	obstack.c	365;"	d	file:
obstack_free	obstack.h	486;"	d
obstack_free	obstack.h	579;"	d
obstack_free	obstack.h	586;"	d
obstack_freefun	obstack.h	317;"	d
obstack_freefun	obstack.h	341;"	d
obstack_grow	obstack.h	388;"	d
obstack_grow	obstack.h	516;"	d
obstack_grow0	obstack.h	398;"	d
obstack_grow0	obstack.h	523;"	d
obstack_init	obstack.h	297;"	d
obstack_init	obstack.h	322;"	d
obstack_int_grow	obstack.h	430;"	d
obstack_int_grow	obstack.h	541;"	d
obstack_int_grow_fast	obstack.h	439;"	d
obstack_int_grow_fast	obstack.h	547;"	d
obstack_make_room	obstack.h	375;"	d
obstack_make_room	obstack.h	511;"	d
obstack_memory_used	obstack.h	350;"	d
obstack_next_free	obstack.h	287;"	d
obstack_object_size	obstack.h	365;"	d
obstack_object_size	obstack.h	496;"	d
obstack_ptr_grow	obstack.h	421;"	d
obstack_ptr_grow	obstack.h	536;"	d
obstack_ptr_grow_fast	obstack.h	438;"	d
obstack_ptr_grow_fast	obstack.h	546;"	d
obstack_room	obstack.h	370;"	d
obstack_room	obstack.h	499;"	d
obstack_specify_allocation	obstack.h	305;"	d
obstack_specify_allocation	obstack.h	330;"	d
obstack_specify_allocation_with_arg	obstack.h	309;"	d
obstack_specify_allocation_with_arg	obstack.h	334;"	d
occr	gcse.c	/^struct occr$/;"	s	file:
off_align	tree.h	/^    struct {unsigned int align : 24; unsigned int off_align : 8;} a;$/;"	m	struct:tree_decl::__anon18::__anon19
offmem_ok	recog.h	/^  unsigned int offmem_ok:1;  $/;"	m	struct:operand_alternative
offset	c-typeck.c	/^  int offset;$/;"	m	struct:constructor_stack	file:
offset	calls.c	/^  struct args_size offset;$/;"	m	struct:arg_data	typeref:struct:arg_data::args_size	file:
offset	dependence.c	/^  int offset;$/;"	m	struct:subscript	file:
offset	dwarf2out.c	/^  long offset;$/;"	m	struct:cfa_loc	file:
offset	except.c	/^  int offset;$/;"	m	struct:action_record	file:
offset	expr.c	/^  HOST_WIDE_INT offset;$/;"	m	struct:move_by_pieces	file:
offset	expr.c	/^  HOST_WIDE_INT offset;$/;"	m	struct:store_by_pieces	file:
offset	reload1.c	/^    rtx offset;$/;"	m	struct:__anon1	file:
offset	reload1.c	/^  int offset;			\/* Current offset between the two regs.  *\/$/;"	m	struct:elim_table	file:
offset	rtl.h	/^  rtx offset;			\/* Offset from start of DECL, as CONST_INT.  *\/$/;"	m	struct:__anon8
offset	tree.h	/^  tree offset;$/;"	m	struct:record_layout_info_s
offset	varasm.c	/^  HOST_WIDE_INT offset;$/;"	m	struct:addr_const	file:
offset	varasm.c	/^  HOST_WIDE_INT offset;$/;"	m	struct:pool_constant	file:
offset_address	emit-rtl.c	/^offset_address (memref, offset, pow2)$/;"	f
offset_align	tree.h	/^  unsigned int offset_align;$/;"	m	struct:record_layout_info_s
offset_type_class	typeclass.h	/^  pointer_type_class, reference_type_class, offset_type_class,$/;"	e	enum:type_class
offset_unsigned	rtl.h	/^  unsigned offset_unsigned: 1; \/* offsets have to be treated as unsigned.  *\/$/;"	m	struct:__anon7
offsetof	system.h	518;"	d
offsets_at	reload1.c	/^static int (*offsets_at)[NUM_ELIMINABLE_REGS];$/;"	v	file:
offsets_known_at	reload1.c	/^static char *offsets_known_at;$/;"	v	file:
offsettable_address_p	recog.c	/^offsettable_address_p (strictp, mode, y)$/;"	f
offsettable_memref_p	recog.c	/^offsettable_memref_p (op)$/;"	f
offsettable_nonstrict_memref_p	recog.c	/^offsettable_nonstrict_memref_p (op)$/;"	f
old	df.h	/^  rtx old;$/;"	m	struct:df_map
old	function.c	/^  rtx old;$/;"	m	struct:fixup_replacement	file:
old	recog.c	/^  rtx old;$/;"	m	struct:change_t	file:
old_args_size	dwarf2out.c	/^static long old_args_size;$/;"	v	file:
old_code	recog.c	/^  int old_code;$/;"	m	struct:change_t	file:
old_contents	combine.c	/^  union {rtx r; unsigned int i;} old_contents;$/;"	m	struct:undo	typeref:union:undo::__anon33	file:
old_max_uid	haifa-sched.c	/^static int old_max_uid;$/;"	v	file:
old_reg	ssa.c	/^  rtx old_reg;$/;"	m	struct:rename_set_data	file:
oldest_regno	regrename.c	/^  unsigned int oldest_regno;$/;"	m	struct:value_data_entry	file:
omit_one_operand	fold-const.c	/^omit_one_operand (type, result, omitted)$/;"	f	file:
on_tree	profile.c	/^    unsigned int on_tree : 1;$/;"	m	struct:edge_info	file:
on_value	toplev.c	/^  const int on_value;$/;"	m	struct:__anon61	file:
one_classic_gcse_pass	gcse.c	/^one_classic_gcse_pass (pass)$/;"	f	file:
one_cmpl_optab	optabs.h	195;"	d
one_code_hoisting_pass	gcse.c	/^one_code_hoisting_pass ()$/;"	f	file:
one_cprop_pass	gcse.c	/^one_cprop_pass (pass, alter_jumps)$/;"	f	file:
one_pre_gcse_pass	gcse.c	/^one_pre_gcse_pass (pass)$/;"	f	file:
only_leaf_regs_used	final.c	/^only_leaf_regs_used ()$/;"	f
only_sets_cc0_p	jump.c	/^only_sets_cc0_p (x)$/;"	f
onlyjump_p	jump.c	/^onlyjump_p (insn)$/;"	f
op	cppexp.c	/^  enum cpp_ttype op;$/;"	m	struct:op	typeref:enum:op::cpp_ttype	file:
op	cppexp.c	/^struct op$/;"	s	file:
op	expmed.c	/^  enum alg_code op[MAX_BITS_PER_WORD];$/;"	m	struct:algorithm	typeref:enum:algorithm::alg_code	file:
op	simplify-rtx.c	/^  rtx op;$/;"	m	struct:simplify_plus_minus_op_data	file:
op0	simplify-rtx.c	/^  rtx op0, op1;			\/* Input *\/$/;"	m	struct:cfc_args	file:
op0lt	simplify-rtx.c	/^  int equal, op0lt, op1lt;	\/* Output *\/$/;"	m	struct:cfc_args	file:
op1	simplify-rtx.c	/^  rtx op0, op1;			\/* Input *\/$/;"	m	struct:cfc_args	file:
op1lt	simplify-rtx.c	/^  int equal, op0lt, op1lt;	\/* Output *\/$/;"	m	struct:cfc_args	file:
op_as_text	cppexp.c	/^op_as_text (pfile, op)$/;"	f	file:
op_to_prio	cppexp.c	/^op_to_prio[] =$/;"	v	file:
op_type	recog.h	/^enum op_type {$/;"	g
open_chains	regrename.c	/^static struct du_chain *open_chains;$/;"	v	typeref:struct:du_chain	file:
open_dump_file	toplev.c	/^open_dump_file (index, decl)$/;"	f	file:
open_file	cppfiles.c	/^open_file (pfile, filename)$/;"	f	file:
open_paren	target.h	/^    const char *open_paren, *close_paren;$/;"	m	struct:gcc_target::asm_out
operand	recog.h	/^  const struct insn_operand_data *const operand;$/;"	m	struct:insn_data
operand	recog.h	/^  rtx operand[MAX_RECOG_OPERANDS];$/;"	m	struct:recog_data
operand	simplify-rtx.c	/^  rtx operand;$/;"	m	struct:simplify_unary_real_args	file:
operand_alternative	recog.h	/^struct operand_alternative$/;"	s
operand_data	insn-output.c	/^static const struct insn_operand_data operand_data[] = $/;"	v	typeref:struct:insn_operand_data	file:
operand_equal_for_comparison_p	fold-const.c	/^operand_equal_for_comparison_p (arg0, arg1, other)$/;"	f	file:
operand_equal_p	fold-const.c	/^operand_equal_p (arg0, arg1, only_const)$/;"	f
operand_loc	recog.h	/^  rtx *operand_loc[MAX_RECOG_OPERANDS];$/;"	m	struct:recog_data
operand_mode	recog.h	/^  enum machine_mode operand_mode[MAX_RECOG_OPERANDS];$/;"	m	struct:recog_data	typeref:enum:recog_data::machine_mode
operand_reload_insns	reload1.c	/^static rtx operand_reload_insns = 0;$/;"	v	file:
operand_subword	emit-rtl.c	/^operand_subword (op, offset, validate_address, mode)$/;"	f
operand_subword_force	emit-rtl.c	/^operand_subword_force (op, offset, mode)$/;"	f
operand_type	recog.h	/^  enum op_type operand_type[MAX_RECOG_OPERANDS];$/;"	m	struct:recog_data	typeref:enum:recog_data::op_type
operands	insn-attrtab.c	17;"	d	file:
operands	insn-peep.c	20;"	d	file:
operands	tree.h	/^  tree operands[1];$/;"	m	struct:tree_exp
operands_match_p	reload.c	/^operands_match_p (x, y)$/;"	f
operator	cpplib.h	/^    enum cpp_ttype operator;		\/* Code for a named operator.  *\/$/;"	m	union:cpp_hashnode::__anon87	typeref:enum:cpp_hashnode::__anon87::cpp_ttype
operator_array	cppinit.c	/^} operator_array[] = {$/;"	v	typeref:struct:named_op	file:
operator_names	cpplib.h	/^  unsigned char operator_names;$/;"	m	struct:cpp_options
opnum	reload.h	/^  int opnum;$/;"	m	struct:reload
oprs_anticipatable_p	gcse.c	/^oprs_anticipatable_p (x, insn)$/;"	f	file:
oprs_available_p	gcse.c	/^oprs_available_p (x, insn)$/;"	f	file:
oprs_not_set_p	gcse.c	/^oprs_not_set_p (x, insn)$/;"	f	file:
oprs_unchanged_p	gcse.c	/^oprs_unchanged_p (x, insn, avail_p)$/;"	f	file:
ops	expmed.c	/^  short ops;$/;"	m	struct:algorithm	file:
opt_code	cppinit.c	/^  enum opt_code opt_code;$/;"	m	struct:cl_option	typeref:enum:cl_option::opt_code	file:
opt_code	cppinit.c	/^enum opt_code$/;"	g	file:
opt_comp	cppinit.c	/^opt_comp (p1, p2)$/;"	f	file:
opt_len	cppinit.c	/^  size_t opt_len;$/;"	m	struct:cl_option	file:
opt_text	cppinit.c	/^  const char *opt_text;$/;"	m	struct:cl_option	file:
optab	optabs.h	/^typedef struct optab$/;"	s
optab	optabs.h	/^} * optab;$/;"	t	typeref:struct:optab
optab_index	optabs.h	/^enum optab_index$/;"	g
optab_methods	expr.h	/^enum optab_methods$/;"	g
optab_table	optabs.c	/^optab optab_table[OTI_MAX];$/;"	v
optimization_options	i386.c	/^optimization_options (level, size)$/;"	f
optimize	loop.h	/^  int optimize; \/* Nonzero if we can optimize access to this MEM.  *\/$/;"	m	struct:loop_mem_info
optimize	toplev.c	/^int optimize = 3;	\/* MJP *\/$/;"	v
optimize_bit_field	function.c	/^optimize_bit_field (body, insn, equiv_mem)$/;"	f	file:
optimize_bit_field_compare	fold-const.c	/^optimize_bit_field_compare (code, compare_type, lhs, rhs)$/;"	f	file:
optimize_inline_calls	tree-inline.c	/^optimize_inline_calls (fn)$/;"	f
optimize_minmax_comparison	fold-const.c	/^optimize_minmax_comparison (t)$/;"	f	file:
optimize_mode_switching	lcm.c	/^optimize_mode_switching (file)$/;"	f
optimize_reg_copy_1	regmove.c	/^optimize_reg_copy_1 (insn, dest, src)$/;"	f	file:
optimize_reg_copy_2	regmove.c	/^optimize_reg_copy_2 (insn, dest, src)$/;"	f	file:
optimize_reg_copy_3	regmove.c	/^optimize_reg_copy_3 (insn, dest, src)$/;"	f	file:
optimize_save_area_alloca	explow.c	/^optimize_save_area_alloca (insns)$/;"	f
optimize_sibling_and_tail_recursive_calls	sibcall.c	/^optimize_sibling_and_tail_recursive_calls ()$/;"	f
optimize_size	toplev.c	/^int optimize_size = 0;$/;"	v
optimize_skip	reorg.c	/^optimize_skip (insn)$/;"	f	file:
optimize_tail_recursion	stmt.c	/^optimize_tail_recursion (arguments, last_insn)$/;"	f
optimize_unexecutable_edges	ssa-ccp.c	/^optimize_unexecutable_edges (edges, executable_edges)$/;"	f	file:
option	params.h	/^  const char *const option;$/;"	m	struct:param_info
option	toplev.c	/^  const char *const option;$/;"	m	struct:lang_opt	file:
optional	reload.h	/^  unsigned int optional:1;$/;"	m	struct:reload
opts	cpphash.h	/^  struct cpp_options opts;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::cpp_options
order	ggc-page.c	/^  unsigned char order;$/;"	m	struct:page_entry	file:
order_regs_for_reload	reload1.c	/^order_regs_for_reload (chain)$/;"	f	file:
ordering_attribute	dwarfout.c	/^ordering_attribute (ordering)$/;"	f	file:
orig_asm_constraints_vector	emit-rtl.c	/^static rtvec orig_asm_constraints_vector;$/;"	v	file:
orig_asm_operands_vector	emit-rtl.c	/^static rtvec orig_asm_operands_vector;$/;"	v	file:
orig_asm_operands_vector	integrate.h	/^  rtvec orig_asm_operands_vector;$/;"	m	struct:inline_remap
orig_condition	flow.c	/^  rtx orig_condition;$/;"	m	struct:reg_cond_life_info	file:
orig_src	cse.c	/^  rtx orig_src;$/;"	m	struct:set	file:
origin	cpplib.c	/^  unsigned char origin;		\/* Origin of directive.  *\/$/;"	m	struct:directive	file:
original	ssa.c	/^  rtx original;$/;"	m	struct:__anon2	file:
original_arg_vector	function.h	/^  void *original_arg_vector;$/;"	m	struct:function
original_decl_initial	function.h	/^  tree original_decl_initial;$/;"	m	struct:function
original_register	ssa.c	/^original_register (regno)$/;"	f	file:
other	recog.c	/^  int this, other;$/;"	m	struct:funny_match	file:
other_input_address_reload_insns	reload1.c	/^static rtx other_input_address_reload_insns = 0;$/;"	v	file:
other_input_reload_insns	reload1.c	/^static rtx other_input_reload_insns = 0;$/;"	v	file:
other_insn	combine.c	/^  rtx other_insn;$/;"	m	struct:undobuf	file:
other_operand_reload_insns	reload1.c	/^static rtx other_operand_reload_insns = 0;$/;"	v	file:
other_output_reload_insns	reload1.c	/^static rtx other_output_reload_insns[MAX_RECOG_OPERANDS];$/;"	v	file:
our_hashtable	cpphash.h	/^  unsigned char our_hashtable;$/;"	m	struct:cpp_reader
out	reload.h	/^  rtx out;$/;"	m	struct:reload
out_arg_offset	function.c	/^static int out_arg_offset;$/;"	v	file:
out_edges	sched-rgn.c	/^static int *out_edges;$/;"	v	file:
out_fname	cpplib.h	/^  const char *out_fname;$/;"	m	struct:cpp_options
out_reg	reload.h	/^  rtx out_reg;$/;"	m	struct:reload
out_reg_set	reg-stack.c	/^  HARD_REG_SET out_reg_set;	\/* Stack regs live on output.  *\/$/;"	m	struct:block_info_def	file:
outaddr_address_reload_insns	reload1.c	/^static rtx outaddr_address_reload_insns[MAX_RECOG_OPERANDS];$/;"	v	file:
outer	basic-block.h	/^  struct loop *outer;$/;"	m	struct:loop	typeref:struct:loop::loop
outer	c-typeck.c	/^  char outer;$/;"	m	struct:constructor_stack	file:
outer	except.c	/^  struct eh_region *outer;$/;"	m	struct:eh_region	typeref:struct:eh_region::eh_region	file:
outer	function.h	/^  struct function *outer;$/;"	m	struct:function	typeref:struct:function::function
outer_cleanups	stmt.c	/^	  tree outer_cleanups;$/;"	m	struct:nesting::__anon67::__anon70	file:
outer_function_chain	function.c	/^static struct function *outer_function_chain;$/;"	v	typeref:struct:function	file:
outer_loop	dependence.c	/^  tree outer_loop;$/;"	m	struct:def_use	file:
outer_loop	dependence.c	/^  tree outer_loop;$/;"	m	struct:loop	file:
outfile	print-rtl.c	/^static FILE *outfile;$/;"	v	file:
outgoing_args_size	function.h	/^  int outgoing_args_size;$/;"	m	struct:function
outgoing_arguments_size	i386.c	/^  int outgoing_arguments_size;$/;"	m	struct:ix86_frame	file:
outgoing_edges_match	cfgcleanup.c	/^outgoing_edges_match (mode, bb1, bb2)$/;"	f	file:
outlining_inline_function	debug.h	/^  void (* outlining_inline_function) PARAMS ((tree decl));$/;"	m	struct:gcc_debug_hooks
outmode	reload.h	/^  enum machine_mode outmode;$/;"	m	struct:reload	typeref:enum:reload::machine_mode
output	recog.h	/^  const PTR output;$/;"	m	struct:insn_data
output_0	insn-output.c	/^static const char * const output_0[] = {$/;"	v	file:
output_100	insn-output.c	/^output_100 (operands, insn)$/;"	f	file:
output_101	insn-output.c	/^output_101 (operands, insn)$/;"	f	file:
output_102	insn-output.c	/^output_102 (operands, insn)$/;"	f	file:
output_103	insn-output.c	/^output_103 (operands, insn)$/;"	f	file:
output_104	insn-output.c	/^output_104 (operands, insn)$/;"	f	file:
output_105	insn-output.c	/^output_105 (operands, insn)$/;"	f	file:
output_106	insn-output.c	/^output_106 (operands, insn)$/;"	f	file:
output_116	insn-output.c	/^static const char * const output_116[] = {$/;"	v	file:
output_117	insn-output.c	/^static const char * const output_117[] = {$/;"	v	file:
output_118	insn-output.c	/^static const char * const output_118[] = {$/;"	v	file:
output_120	insn-output.c	/^static const char * const output_120[] = {$/;"	v	file:
output_123	insn-output.c	/^output_123 (operands, insn)$/;"	f	file:
output_124	insn-output.c	/^output_124 (operands, insn)$/;"	f	file:
output_125	insn-output.c	/^output_125 (operands, insn)$/;"	f	file:
output_133	insn-output.c	/^output_133 (operands, insn)$/;"	f	file:
output_135	insn-output.c	/^output_135 (operands, insn)$/;"	f	file:
output_136	insn-output.c	/^output_136 (operands, insn)$/;"	f	file:
output_137	insn-output.c	/^output_137 (operands, insn)$/;"	f	file:
output_138	insn-output.c	/^output_138 (operands, insn)$/;"	f	file:
output_139	insn-output.c	/^output_139 (operands, insn)$/;"	f	file:
output_140	insn-output.c	/^output_140 (operands, insn)$/;"	f	file:
output_141	insn-output.c	/^output_141 (operands, insn)$/;"	f	file:
output_142	insn-output.c	/^output_142 (operands, insn)$/;"	f	file:
output_144	insn-output.c	/^output_144 (operands, insn)$/;"	f	file:
output_145	insn-output.c	/^output_145 (operands, insn)$/;"	f	file:
output_146	insn-output.c	/^output_146 (operands, insn)$/;"	f	file:
output_147	insn-output.c	/^output_147 (operands, insn)$/;"	f	file:
output_148	insn-output.c	/^output_148 (operands, insn)$/;"	f	file:
output_149	insn-output.c	/^output_149 (operands, insn)$/;"	f	file:
output_150	insn-output.c	/^output_150 (operands, insn)$/;"	f	file:
output_151	insn-output.c	/^output_151 (operands, insn)$/;"	f	file:
output_154	insn-output.c	/^output_154 (operands, insn)$/;"	f	file:
output_159	insn-output.c	/^output_159 (operands, insn)$/;"	f	file:
output_164	insn-output.c	/^output_164 (operands, insn)$/;"	f	file:
output_167	insn-output.c	/^static const char * const output_167[] = {$/;"	v	file:
output_168	insn-output.c	/^static const char * const output_168[] = {$/;"	v	file:
output_170	insn-output.c	/^static const char * const output_170[] = {$/;"	v	file:
output_171	insn-output.c	/^static const char * const output_171[] = {$/;"	v	file:
output_173	insn-output.c	/^static const char * const output_173[] = {$/;"	v	file:
output_174	insn-output.c	/^static const char * const output_174[] = {$/;"	v	file:
output_176	insn-output.c	/^static const char * const output_176[] = {$/;"	v	file:
output_177	insn-output.c	/^static const char * const output_177[] = {$/;"	v	file:
output_179	insn-output.c	/^static const char * const output_179[] = {$/;"	v	file:
output_18	insn-output.c	/^output_18 (operands, insn)$/;"	f	file:
output_180	insn-output.c	/^static const char * const output_180[] = {$/;"	v	file:
output_181	insn-output.c	/^static const char * const output_181[] = {$/;"	v	file:
output_182	insn-output.c	/^static const char * const output_182[] = {$/;"	v	file:
output_183	insn-output.c	/^static const char * const output_183[] = {$/;"	v	file:
output_184	insn-output.c	/^static const char * const output_184[] = {$/;"	v	file:
output_19	insn-output.c	/^output_19 (operands, insn)$/;"	f	file:
output_20	insn-output.c	/^output_20 (operands, insn)$/;"	f	file:
output_202	insn-output.c	/^output_202 (operands, insn)$/;"	f	file:
output_203	insn-output.c	/^output_203 (operands, insn)$/;"	f	file:
output_204	insn-output.c	/^output_204 (operands, insn)$/;"	f	file:
output_205	insn-output.c	/^output_205 (operands, insn)$/;"	f	file:
output_206	insn-output.c	/^output_206 (operands, insn)$/;"	f	file:
output_207	insn-output.c	/^output_207 (operands, insn)$/;"	f	file:
output_208	insn-output.c	/^output_208 (operands, insn)$/;"	f	file:
output_209	insn-output.c	/^output_209 (operands, insn)$/;"	f	file:
output_21	insn-output.c	/^output_21 (operands, insn)$/;"	f	file:
output_210	insn-output.c	/^output_210 (operands, insn)$/;"	f	file:
output_211	insn-output.c	/^output_211 (operands, insn)$/;"	f	file:
output_212	insn-output.c	/^output_212 (operands, insn)$/;"	f	file:
output_213	insn-output.c	/^output_213 (operands, insn)$/;"	f	file:
output_214	insn-output.c	/^output_214 (operands, insn)$/;"	f	file:
output_215	insn-output.c	/^output_215 (operands, insn)$/;"	f	file:
output_216	insn-output.c	/^output_216 (operands, insn)$/;"	f	file:
output_217	insn-output.c	/^output_217 (operands, insn)$/;"	f	file:
output_218	insn-output.c	/^output_218 (operands, insn)$/;"	f	file:
output_219	insn-output.c	/^output_219 (operands, insn)$/;"	f	file:
output_22	insn-output.c	/^output_22 (operands, insn)$/;"	f	file:
output_220	insn-output.c	/^output_220 (operands, insn)$/;"	f	file:
output_221	insn-output.c	/^output_221 (operands, insn)$/;"	f	file:
output_222	insn-output.c	/^output_222 (operands, insn)$/;"	f	file:
output_223	insn-output.c	/^output_223 (operands, insn)$/;"	f	file:
output_224	insn-output.c	/^output_224 (operands, insn)$/;"	f	file:
output_225	insn-output.c	/^output_225 (operands, insn)$/;"	f	file:
output_226	insn-output.c	/^output_226 (operands, insn)$/;"	f	file:
output_227	insn-output.c	/^output_227 (operands, insn)$/;"	f	file:
output_228	insn-output.c	/^output_228 (operands, insn)$/;"	f	file:
output_23	insn-output.c	/^output_23 (operands, insn)$/;"	f	file:
output_24	insn-output.c	/^output_24 (operands, insn)$/;"	f	file:
output_249	insn-output.c	/^static const char * const output_249[] = {$/;"	v	file:
output_25	insn-output.c	/^output_25 (operands, insn)$/;"	f	file:
output_250	insn-output.c	/^static const char * const output_250[] = {$/;"	v	file:
output_251	insn-output.c	/^static const char * const output_251[] = {$/;"	v	file:
output_252	insn-output.c	/^static const char * const output_252[] = {$/;"	v	file:
output_26	insn-output.c	/^output_26 (operands, insn)$/;"	f	file:
output_27	insn-output.c	/^output_27 (operands, insn)$/;"	f	file:
output_28	insn-output.c	/^output_28 (operands, insn)$/;"	f	file:
output_280	insn-output.c	/^static const char * const output_280[] = {$/;"	v	file:
output_283	insn-output.c	/^output_283 (operands, insn)$/;"	f	file:
output_290	insn-output.c	/^output_290 (operands, insn)$/;"	f	file:
output_291	insn-output.c	/^static const char * const output_291[] = {$/;"	v	file:
output_292	insn-output.c	/^output_292 (operands, insn)$/;"	f	file:
output_296	insn-output.c	/^output_296 (operands, insn)$/;"	f	file:
output_298	insn-output.c	/^static const char * const output_298[] = {$/;"	v	file:
output_3	insn-output.c	/^static const char * const output_3[] = {$/;"	v	file:
output_300	insn-output.c	/^output_300 (operands, insn)$/;"	f	file:
output_32	insn-output.c	/^output_32 (operands, insn)$/;"	f	file:
output_320	insn-output.c	/^static const char * const output_320[] = {$/;"	v	file:
output_325	insn-output.c	/^static const char * const output_325[] = {$/;"	v	file:
output_326	insn-output.c	/^static const char * const output_326[] = {$/;"	v	file:
output_33	insn-output.c	/^output_33 (operands, insn)$/;"	f	file:
output_338	insn-output.c	/^static const char * const output_338[] = {$/;"	v	file:
output_34	insn-output.c	/^output_34 (operands, insn)$/;"	f	file:
output_35	insn-output.c	/^output_35 (operands, insn)$/;"	f	file:
output_36	insn-output.c	/^output_36 (operands, insn)$/;"	f	file:
output_37	insn-output.c	/^output_37 (operands, insn)$/;"	f	file:
output_387_binary_op	i386.c	/^output_387_binary_op (insn, operands)$/;"	f
output_401	insn-output.c	/^static const char * const output_401[] = {$/;"	v	file:
output_403	insn-output.c	/^output_403 (operands, insn)$/;"	f	file:
output_404	insn-output.c	/^output_404 (operands, insn)$/;"	f	file:
output_407	insn-output.c	/^static const char * const output_407[] = {$/;"	v	file:
output_408	insn-output.c	/^output_408 (operands, insn)$/;"	f	file:
output_409	insn-output.c	/^output_409 (operands, insn)$/;"	f	file:
output_410	insn-output.c	/^output_410 (operands, insn)$/;"	f	file:
output_411	insn-output.c	/^output_411 (operands, insn)$/;"	f	file:
output_412	insn-output.c	/^output_412 (operands, insn)$/;"	f	file:
output_413	insn-output.c	/^output_413 (operands, insn)$/;"	f	file:
output_414	insn-output.c	/^output_414 (operands, insn)$/;"	f	file:
output_415	insn-output.c	/^output_415 (operands, insn)$/;"	f	file:
output_416	insn-output.c	/^output_416 (operands, insn)$/;"	f	file:
output_417	insn-output.c	/^output_417 (operands, insn)$/;"	f	file:
output_418	insn-output.c	/^static const char * const output_418[] = {$/;"	v	file:
output_420	insn-output.c	/^static const char * const output_420[] = {$/;"	v	file:
output_425	insn-output.c	/^static const char * const output_425[] = {$/;"	v	file:
output_426	insn-output.c	/^static const char * const output_426[] = {$/;"	v	file:
output_427	insn-output.c	/^static const char * const output_427[] = {$/;"	v	file:
output_430	insn-output.c	/^static const char * const output_430[] = {$/;"	v	file:
output_431	insn-output.c	/^static const char * const output_431[] = {$/;"	v	file:
output_437	insn-output.c	/^static const char * const output_437[] = {$/;"	v	file:
output_44	insn-output.c	/^output_44 (operands, insn)$/;"	f	file:
output_441	insn-output.c	/^static const char * const output_441[] = {$/;"	v	file:
output_445	insn-output.c	/^static const char * const output_445[] = {$/;"	v	file:
output_45	insn-output.c	/^output_45 (operands, insn)$/;"	f	file:
output_452	insn-output.c	/^static const char * const output_452[] = {$/;"	v	file:
output_453	insn-output.c	/^static const char * const output_453[] = {$/;"	v	file:
output_459	insn-output.c	/^static const char * const output_459[] = {$/;"	v	file:
output_46	insn-output.c	/^static const char * const output_46[] = {$/;"	v	file:
output_463	insn-output.c	/^static const char * const output_463[] = {$/;"	v	file:
output_467	insn-output.c	/^static const char * const output_467[] = {$/;"	v	file:
output_47	insn-output.c	/^static const char * const output_47[] = {$/;"	v	file:
output_470	insn-output.c	/^static const char * const output_470[] = {$/;"	v	file:
output_471	insn-output.c	/^static const char * const output_471[] = {$/;"	v	file:
output_473	insn-output.c	/^static const char * const output_473[] = {$/;"	v	file:
output_475	insn-output.c	/^static const char * const output_475[] = {$/;"	v	file:
output_477	insn-output.c	/^static const char * const output_477[] = {$/;"	v	file:
output_480	insn-output.c	/^static const char * const output_480[] = {$/;"	v	file:
output_481	insn-output.c	/^static const char * const output_481[] = {$/;"	v	file:
output_483	insn-output.c	/^static const char * const output_483[] = {$/;"	v	file:
output_485	insn-output.c	/^static const char * const output_485[] = {$/;"	v	file:
output_49	insn-output.c	/^static const char * const output_49[] = {$/;"	v	file:
output_507	insn-output.c	/^output_507 (operands, insn)$/;"	f	file:
output_508	insn-output.c	/^output_508 (operands, insn)$/;"	f	file:
output_509	insn-output.c	/^output_509 (operands, insn)$/;"	f	file:
output_51	insn-output.c	/^output_51 (operands, insn)$/;"	f	file:
output_510	insn-output.c	/^output_510 (operands, insn)$/;"	f	file:
output_511	insn-output.c	/^output_511 (operands, insn)$/;"	f	file:
output_512	insn-output.c	/^output_512 (operands, insn)$/;"	f	file:
output_518	insn-output.c	/^output_518 (operands, insn)$/;"	f	file:
output_519	insn-output.c	/^output_519 (operands, insn)$/;"	f	file:
output_52	insn-output.c	/^static const char * const output_52[] = {$/;"	v	file:
output_525	insn-output.c	/^output_525 (operands, insn)$/;"	f	file:
output_526	insn-output.c	/^output_526 (operands, insn)$/;"	f	file:
output_527	insn-output.c	/^output_527 (operands, insn)$/;"	f	file:
output_528	insn-output.c	/^output_528 (operands, insn)$/;"	f	file:
output_529	insn-output.c	/^output_529 (operands, insn)$/;"	f	file:
output_53	insn-output.c	/^static const char * const output_53[] = {$/;"	v	file:
output_530	insn-output.c	/^output_530 (operands, insn)$/;"	f	file:
output_531	insn-output.c	/^output_531 (operands, insn)$/;"	f	file:
output_532	insn-output.c	/^output_532 (operands, insn)$/;"	f	file:
output_533	insn-output.c	/^output_533 (operands, insn)$/;"	f	file:
output_534	insn-output.c	/^output_534 (operands, insn)$/;"	f	file:
output_535	insn-output.c	/^output_535 (operands, insn)$/;"	f	file:
output_536	insn-output.c	/^output_536 (operands, insn)$/;"	f	file:
output_537	insn-output.c	/^output_537 (operands, insn)$/;"	f	file:
output_538	insn-output.c	/^output_538 (operands, insn)$/;"	f	file:
output_539	insn-output.c	/^output_539 (operands, insn)$/;"	f	file:
output_540	insn-output.c	/^output_540 (operands, insn)$/;"	f	file:
output_541	insn-output.c	/^output_541 (operands, insn)$/;"	f	file:
output_542	insn-output.c	/^output_542 (operands, insn)$/;"	f	file:
output_543	insn-output.c	/^output_543 (operands, insn)$/;"	f	file:
output_544	insn-output.c	/^output_544 (operands, insn)$/;"	f	file:
output_545	insn-output.c	/^output_545 (operands, insn)$/;"	f	file:
output_546	insn-output.c	/^output_546 (operands, insn)$/;"	f	file:
output_547	insn-output.c	/^output_547 (operands, insn)$/;"	f	file:
output_548	insn-output.c	/^output_548 (operands, insn)$/;"	f	file:
output_549	insn-output.c	/^output_549 (operands, insn)$/;"	f	file:
output_550	insn-output.c	/^output_550 (operands, insn)$/;"	f	file:
output_551	insn-output.c	/^output_551 (operands, insn)$/;"	f	file:
output_552	insn-output.c	/^output_552 (operands, insn)$/;"	f	file:
output_553	insn-output.c	/^output_553 (operands, insn)$/;"	f	file:
output_554	insn-output.c	/^output_554 (operands, insn)$/;"	f	file:
output_555	insn-output.c	/^output_555 (operands, insn)$/;"	f	file:
output_556	insn-output.c	/^output_556 (operands, insn)$/;"	f	file:
output_557	insn-output.c	/^output_557 (operands, insn)$/;"	f	file:
output_558	insn-output.c	/^output_558 (operands, insn)$/;"	f	file:
output_559	insn-output.c	/^static const char * const output_559[] = {$/;"	v	file:
output_562	insn-output.c	/^static const char * const output_562[] = {$/;"	v	file:
output_58	insn-output.c	/^static const char * const output_58[] = {$/;"	v	file:
output_6	insn-output.c	/^static const char * const output_6[] = {$/;"	v	file:
output_60	insn-output.c	/^output_60 (operands, insn)$/;"	f	file:
output_614	insn-output.c	/^static const char * const output_614[] = {$/;"	v	file:
output_616	insn-output.c	/^static const char * const output_616[] = {$/;"	v	file:
output_617	insn-output.c	/^static const char * const output_617[] = {$/;"	v	file:
output_618	insn-output.c	/^static const char * const output_618[] = {$/;"	v	file:
output_619	insn-output.c	/^static const char * const output_619[] = {$/;"	v	file:
output_620	insn-output.c	/^static const char * const output_620[] = {$/;"	v	file:
output_621	insn-output.c	/^static const char * const output_621[] = {$/;"	v	file:
output_622	insn-output.c	/^static const char * const output_622[] = {$/;"	v	file:
output_635	insn-output.c	/^output_635 (operands, insn)$/;"	f	file:
output_636	insn-output.c	/^output_636 (operands, insn)$/;"	f	file:
output_651	insn-output.c	/^output_651 (operands, insn)$/;"	f	file:
output_652	insn-output.c	/^output_652 (operands, insn)$/;"	f	file:
output_653	insn-output.c	/^output_653 (operands, insn)$/;"	f	file:
output_654	insn-output.c	/^output_654 (operands, insn)$/;"	f	file:
output_655	insn-output.c	/^output_655 (operands, insn)$/;"	f	file:
output_656	insn-output.c	/^output_656 (operands, insn)$/;"	f	file:
output_658	insn-output.c	/^output_658 (operands, insn)$/;"	f	file:
output_66	insn-output.c	/^output_66 (operands, insn)$/;"	f	file:
output_67	insn-output.c	/^output_67 (operands, insn)$/;"	f	file:
output_672	insn-output.c	/^static const char * const output_672[] = {$/;"	v	file:
output_673	insn-output.c	/^static const char * const output_673[] = {$/;"	v	file:
output_674	insn-output.c	/^static const char * const output_674[] = {$/;"	v	file:
output_675	insn-output.c	/^static const char * const output_675[] = {$/;"	v	file:
output_68	insn-output.c	/^static const char * const output_68[] = {$/;"	v	file:
output_69	insn-output.c	/^static const char * const output_69[] = {$/;"	v	file:
output_71	insn-output.c	/^output_71 (operands, insn)$/;"	f	file:
output_72	insn-output.c	/^output_72 (operands, insn)$/;"	f	file:
output_728	insn-output.c	/^output_728 (operands, insn)$/;"	f	file:
output_730	insn-output.c	/^output_730 (operands, insn)$/;"	f	file:
output_77	insn-output.c	/^static const char * const output_77[] = {$/;"	v	file:
output_805	insn-output.c	/^output_805 (operands, insn)$/;"	f	file:
output_82	insn-output.c	/^output_82 (operands, insn)$/;"	f	file:
output_83	insn-output.c	/^static const char * const output_83[] = {$/;"	v	file:
output_832	insn-output.c	/^output_832 (operands, insn)$/;"	f	file:
output_833	insn-output.c	/^output_833 (operands, insn)$/;"	f	file:
output_84	insn-output.c	/^output_84 (operands, insn)$/;"	f	file:
output_85	insn-output.c	/^static const char * const output_85[] = {$/;"	v	file:
output_86	insn-output.c	/^static const char * const output_86[] = {$/;"	v	file:
output_88	insn-output.c	/^output_88 (operands, insn)$/;"	f	file:
output_89	insn-output.c	/^output_89 (operands, insn)$/;"	f	file:
output_9	insn-output.c	/^static const char * const output_9[] = {$/;"	v	file:
output_90	insn-output.c	/^output_90 (operands, insn)$/;"	f	file:
output_91	insn-output.c	/^output_91 (operands, insn)$/;"	f	file:
output_92	insn-output.c	/^output_92 (operands, insn)$/;"	f	file:
output_93	insn-output.c	/^output_93 (operands, insn)$/;"	f	file:
output_94	insn-output.c	/^output_94 (operands, insn)$/;"	f	file:
output_95	insn-output.c	/^output_95 (operands, insn)$/;"	f	file:
output_96	insn-output.c	/^output_96 (operands, insn)$/;"	f	file:
output_97	insn-output.c	/^output_97 (operands, insn)$/;"	f	file:
output_98	insn-output.c	/^output_98 (operands, insn)$/;"	f	file:
output_99	insn-output.c	/^output_99 (operands, insn)$/;"	f	file:
output_abbrev_section	dwarf2out.c	/^output_abbrev_section ()$/;"	f	file:
output_add_character	diagnostic.c	/^output_add_character (buffer, c)$/;"	f
output_add_newline	diagnostic.c	/^output_add_newline (buffer)$/;"	f
output_add_space	diagnostic.c	/^output_add_space (buffer)$/;"	f
output_add_string	diagnostic.c	/^output_add_string (buffer, str)$/;"	f
output_addr_const	final.c	/^output_addr_const (file, x)$/;"	f
output_address	final.c	/^output_address (x)$/;"	f
output_address_reload_insns	reload1.c	/^static rtx output_address_reload_insns[MAX_RECOG_OPERANDS];$/;"	v	file:
output_addressed_constants	varasm.c	/^output_addressed_constants (exp)$/;"	f	file:
output_after_function_constants	varasm.c	/^output_after_function_constants ()$/;"	f	file:
output_append	diagnostic.c	/^output_append (buffer, start, end)$/;"	f
output_append_r	diagnostic.c	/^output_append_r (buffer, start, length)$/;"	f	file:
output_aranges	dwarf2out.c	/^output_aranges ()$/;"	f	file:
output_array_type_die	dwarfout.c	/^output_array_type_die (arg)$/;"	f	file:
output_asm_insn	final.c	/^output_asm_insn (template, operands)$/;"	f
output_asm_label	final.c	/^output_asm_label (x)$/;"	f
output_asm_name	final.c	/^output_asm_name ()$/;"	f	file:
output_asm_operand_names	final.c	/^output_asm_operand_names (operands, oporder, nops)$/;"	f	file:
output_block	dwarfout.c	/^output_block (stmt, depth)$/;"	f	file:
output_bound_representation	dwarfout.c	/^output_bound_representation (bound, dim_num, u_or_l)$/;"	f	file:
output_buffer	diagnostic.h	/^struct output_buffer$/;"	s
output_buffer	diagnostic.h	/^typedef struct output_buffer output_buffer;$/;"	t	typeref:struct:output_buffer
output_buffer_attached_stream	diagnostic.h	139;"	d
output_buffer_format_args	diagnostic.h	147;"	d
output_buffer_ptr_to_format_args	diagnostic.c	52;"	d	file:
output_buffer_state	diagnostic.h	135;"	d
output_buffer_text_cursor	diagnostic.h	143;"	d
output_buffer_to_stream	diagnostic.c	/^output_buffer_to_stream (buffer)$/;"	f	file:
output_call_frame_info	dwarf2out.c	/^output_call_frame_info (for_eh)$/;"	f	file:
output_cfa_loc	dwarf2out.c	/^output_cfa_loc (cfi)$/;"	f	file:
output_cfi	dwarf2out.c	/^output_cfi (cfi, fde, for_eh)$/;"	f	file:
output_clear	diagnostic.c	/^output_clear (buffer)$/;"	f
output_clear_message_text	diagnostic.c	/^output_clear_message_text (buffer)$/;"	f
output_comp_unit	dwarf2out.c	/^output_comp_unit (die)$/;"	f	file:
output_compilation_unit_header	dwarf2out.c	/^output_compilation_unit_header ()$/;"	f	file:
output_compile_unit_die	dwarfout.c	/^output_compile_unit_die (arg)$/;"	f	file:
output_constant	varasm.c	/^output_constant (exp, size, align)$/;"	f
output_constant_def	varasm.c	/^output_constant_def (exp, defer)$/;"	f
output_constant_def_contents	varasm.c	/^output_constant_def_contents (exp, reloc, labelno)$/;"	f	file:
output_constant_pool	varasm.c	/^output_constant_pool (fnname, fndecl)$/;"	f
output_constructor	varasm.c	/^output_constructor (exp, size, align)$/;"	f	file:
output_decimal	diagnostic.c	/^output_decimal (buffer, i)$/;"	f
output_decl	dwarfout.c	/^output_decl (decl, containing_scope)$/;"	f	file:
output_decls_for_scope	dwarfout.c	/^output_decls_for_scope (stmt, depth)$/;"	f	file:
output_deferred_addressed_constants	varasm.c	/^output_deferred_addressed_constants ()$/;"	f
output_dependence	alias.c	/^output_dependence (mem, x)$/;"	f
output_dependency_cache	sched-deps.c	/^static sbitmap *output_dependency_cache;$/;"	v	file:
output_deps	cppinit.c	/^output_deps (pfile)$/;"	f	file:
output_destroy_prefix	diagnostic.c	/^output_destroy_prefix (buffer)$/;"	f
output_die	dwarf2out.c	/^output_die (die)$/;"	f	file:
output_die	dwarfout.c	/^output_die (die_specific_output_function, param)$/;"	f	file:
output_die_symbol	dwarf2out.c	/^output_die_symbol (die)$/;"	f	file:
output_do_printf	diagnostic.c	/^output_do_printf (buffer, msg)$/;"	f	file:
output_do_verbatim	diagnostic.c	/^output_do_verbatim (buffer, msgid, args_ptr)$/;"	f	file:
output_emit_prefix	diagnostic.c	/^output_emit_prefix (buffer)$/;"	f
output_enumeral_list	dwarfout.c	/^output_enumeral_list (link)$/;"	f	file:
output_enumeration_type_die	dwarfout.c	/^output_enumeration_type_die (arg)$/;"	f	file:
output_file_directive	toplev.c	/^output_file_directive (asm_file, input_name)$/;"	f
output_file_names	dwarf2out.c	/^output_file_names ()$/;"	f	file:
output_finalize_message	diagnostic.c	/^output_finalize_message (buffer)$/;"	f
output_fix_trunc	i386.c	/^output_fix_trunc (insn, operands)$/;"	f
output_formal_parameter_die	dwarfout.c	/^output_formal_parameter_die (arg)$/;"	f	file:
output_formal_types	dwarfout.c	/^output_formal_types (function_or_method_type)$/;"	f	file:
output_format	diagnostic.c	/^output_format (buffer)$/;"	f	file:
output_format	recog.h	/^  const char output_format;$/;"	m	struct:insn_data
output_formatted_integer	diagnostic.c	41;"	d	file:
output_fp_compare	i386.c	/^output_fp_compare (insn, operands, eflags_p, unordered_p)$/;"	f
output_func_start_profiler	profile.c	/^output_func_start_profiler ()$/;"	f
output_function_exception_table	except.c	/^output_function_exception_table ()$/;"	f
output_gcov_string	profile.c	/^output_gcov_string (string, delimiter)$/;"	f	file:
output_get_prefix	diagnostic.c	/^output_get_prefix (buffer)$/;"	f
output_global_subroutine_die	dwarfout.c	/^output_global_subroutine_die (arg)$/;"	f	file:
output_global_variable_die	dwarfout.c	/^output_global_variable_die (arg)$/;"	f	file:
output_hexadecimal	diagnostic.c	/^output_hexadecimal (buffer, i)$/;"	f	file:
output_indent	diagnostic.c	/^output_indent (buffer)$/;"	f	file:
output_indentation	diagnostic.h	154;"	d
output_indirect_string	dwarf2out.c	/^output_indirect_string (pfile, h, v)$/;"	f	file:
output_inheritance_die	dwarfout.c	/^output_inheritance_die (arg)$/;"	f	file:
output_init_element	c-typeck.c	/^output_init_element (value, type, field, pending)$/;"	f	file:
output_inline_function	integrate.c	/^output_inline_function (fndecl)$/;"	f
output_inlined_enumeration_type_die	dwarfout.c	/^output_inlined_enumeration_type_die (arg)$/;"	f	file:
output_inlined_structure_type_die	dwarfout.c	/^output_inlined_structure_type_die (arg)$/;"	f	file:
output_inlined_subroutine_die	dwarfout.c	/^output_inlined_subroutine_die (arg)$/;"	f	file:
output_inlined_union_type_die	dwarfout.c	/^output_inlined_union_type_die (arg)$/;"	f	file:
output_is_line_wrapping	diagnostic.c	/^output_is_line_wrapping (buffer)$/;"	f
output_label_die	dwarfout.c	/^output_label_die (arg)$/;"	f	file:
output_last_position	diagnostic.c	/^output_last_position (buffer)$/;"	f
output_lexical_block_die	dwarfout.c	/^output_lexical_block_die (arg)$/;"	f	file:
output_line_info	dwarf2out.c	/^output_line_info ()$/;"	f	file:
output_loc_descriptor	dwarfout.c	/^output_loc_descriptor (rtl)$/;"	f	file:
output_loc_list	dwarf2out.c	/^output_loc_list (list_head)$/;"	f	file:
output_loc_operands	dwarf2out.c	/^output_loc_operands (loc)$/;"	f	file:
output_loc_sequence	dwarf2out.c	/^output_loc_sequence (loc)$/;"	f	file:
output_local_subroutine_die	dwarfout.c	/^output_local_subroutine_die (arg)$/;"	f	file:
output_local_variable_die	dwarfout.c	/^output_local_variable_die (arg)$/;"	f	file:
output_location_lists	dwarf2out.c	/^output_location_lists (die)$/;"	f	file:
output_long_decimal	diagnostic.c	/^output_long_decimal (buffer, i)$/;"	f	file:
output_long_hexadecimal	diagnostic.c	/^output_long_hexadecimal (buffer, i)$/;"	f	file:
output_long_octal	diagnostic.c	/^output_long_octal (buffer, i)$/;"	f	file:
output_long_unsigned_decimal	diagnostic.c	/^output_long_unsigned_decimal (buffer, i)$/;"	f	file:
output_mem_loc_descriptor	dwarfout.c	/^output_mem_loc_descriptor (rtl)$/;"	f	file:
output_member_die	dwarfout.c	/^output_member_die (arg)$/;"	f	file:
output_message_text	diagnostic.h	157;"	d
output_needs_newline	diagnostic.h	151;"	d
output_octal	diagnostic.c	/^output_octal (buffer, i)$/;"	f	file:
output_operand	final.c	/^output_operand (x, code)$/;"	f	file:
output_operand_lossage	final.c	/^output_operand_lossage VPARAMS ((const char *msgid, ...))$/;"	f
output_padded_null_die	dwarfout.c	/^output_padded_null_die (arg)$/;"	f	file:
output_pending_init_elements	c-typeck.c	/^output_pending_init_elements (all)$/;"	f	file:
output_pending_types_for_scope	dwarfout.c	/^output_pending_types_for_scope (containing_scope)$/;"	f	file:
output_pic_addr_const	i386.c	/^output_pic_addr_const (file, x, code)$/;"	f	file:
output_prefix	diagnostic.c	49;"	d	file:
output_printf	diagnostic.c	/^output_printf VPARAMS ((struct output_buffer *buffer, const char *msgid, ...))$/;"	f
output_ptr_to_mbr_type_die	dwarfout.c	/^output_ptr_to_mbr_type_die (arg)$/;"	f	file:
output_pubnames	dwarf2out.c	/^output_pubnames ()$/;"	f	file:
output_quoted_string	toplev.c	/^output_quoted_string (asm_file, string)$/;"	f
output_ranges	dwarf2out.c	/^output_ranges ()$/;"	f	file:
output_reg_number	dwarfout.c	/^output_reg_number (rtl)$/;"	f	file:
output_reload_insns	reload1.c	/^static rtx output_reload_insns[MAX_RECOG_OPERANDS];$/;"	v	file:
output_reloadnum	reload.c	/^static int output_reloadnum;$/;"	v	file:
output_set_maximum_length	diagnostic.c	/^output_set_maximum_length (buffer, length)$/;"	f
output_set_prefix	diagnostic.c	/^output_set_prefix (buffer, prefix)$/;"	f
output_set_type_die	dwarfout.c	/^output_set_type_die (arg)$/;"	f	file:
output_space_left	diagnostic.c	/^output_space_left (buffer)$/;"	f
output_state	diagnostic.h	/^} output_state;$/;"	t	typeref:struct:__anon12
output_string_type_die	dwarfout.c	/^output_string_type_die (arg)$/;"	f	file:
output_structure_type_die	dwarfout.c	/^output_structure_type_die (arg)$/;"	f	file:
output_subroutine_type_die	dwarfout.c	/^output_subroutine_type_die (arg)$/;"	f	file:
output_tagged_type_instantiation	dwarfout.c	/^output_tagged_type_instantiation (type)$/;"	f	file:
output_text_length	diagnostic.c	47;"	d	file:
output_type	dwarfout.c	/^output_type (type, containing_scope)$/;"	f	file:
output_typedef_die	dwarfout.c	/^output_typedef_die (arg)$/;"	f	file:
output_union_type_die	dwarfout.c	/^output_union_type_die (arg)$/;"	f	file:
output_unsigned_decimal	diagnostic.c	/^output_unsigned_decimal (buffer, i)$/;"	f	file:
output_unspecified_parameters_die	dwarfout.c	/^output_unspecified_parameters_die (arg)$/;"	f	file:
output_value_format	dwarf2out.c	/^output_value_format (a)$/;"	f	file:
output_verbatim	diagnostic.c	/^output_verbatim VPARAMS ((output_buffer *buffer, const char *msgid, ...))$/;"	f
overflow_warning	c-common.c	/^overflow_warning (value)$/;"	f
overflows	alloca.c	/^    long overflows;		\/* Number of stack overflow ($STKOFEN) calls.  *\/$/;"	m	struct:stk_stat	file:
override_options	i386.c	/^override_options ()$/;"	f
own_thread_p	reorg.c	/^own_thread_p (thread, label, allow_fallthrough)$/;"	f	file:
p	cpplex.c	/^    int *p;$/;"	m	union:dummy::__anon73	file:
p	ssa.c	/^  partition p;$/;"	m	struct:phi_coalesce_context	file:
packed_flag	tree.h	/^  unsigned packed_flag : 1;$/;"	m	struct:tree_type
packed_maybe_necessary	tree.h	/^  int packed_maybe_necessary;$/;"	m	struct:record_layout_info_s
pad_below	function.c	/^pad_below (offset_ptr, passed_mode, sizetree)$/;"	f	file:
pad_size	alloca.c	/^    long pad_size;		\/* Stack pad size.  *\/$/;"	m	struct:stk_stat	file:
pad_to_arg_alignment	function.c	/^pad_to_arg_alignment (offset_ptr, boundary, alignment_pad)$/;"	f	file:
padding1	i386.c	/^  int padding1;$/;"	m	struct:ix86_frame	file:
padding2	i386.c	/^  int padding2;$/;"	m	struct:ix86_frame	file:
padding_token	cppmacro.c	/^padding_token (pfile, source)$/;"	f	file:
page	ggc-page.c	/^  char *page;$/;"	m	struct:page_entry	file:
page_entry	ggc-page.c	/^typedef struct page_entry $/;"	s	file:
page_entry	ggc-page.c	/^} page_entry;$/;"	t	typeref:struct:page_entry	file:
page_group	ggc-page.c	/^typedef struct page_group$/;"	s	file:
page_group	ggc-page.c	/^} page_group;$/;"	t	typeref:struct:page_group	file:
page_group_index	ggc-page.c	/^page_group_index (allocation, page)$/;"	f	file:
page_groups	ggc-page.c	/^  page_group *page_groups;$/;"	m	struct:globals	file:
page_table	ggc-page.c	/^typedef page_entry **page_table[PAGE_L1_SIZE];$/;"	t	file:
page_table	ggc-page.c	/^} *page_table;$/;"	t	typeref:struct:page_table_chain	file:
page_table_chain	ggc-page.c	/^typedef struct page_table_chain$/;"	s	file:
page_tails	ggc-page.c	/^  page_entry *page_tails[NUM_ORDERS];$/;"	m	struct:globals	file:
pages	ggc-page.c	/^  page_entry *pages[NUM_ORDERS];$/;"	m	struct:globals	file:
pagesize	ggc-page.c	/^  size_t pagesize;$/;"	m	struct:globals	file:
param	c-format.c	/^  tree param;$/;"	m	struct:format_wanted_type	file:
param_info	params.h	/^typedef struct param_info$/;"	s
param_info	params.h	/^} param_info;$/;"	t	typeref:struct:param_info
paramc	cppmacro.c	/^  unsigned short paramc;	\/* Number of parameters.  *\/$/;"	m	struct:cpp_macro	file:
params	cppmacro.c	/^  cpp_hashnode **params;	\/* Parameters, if any.  *\/$/;"	m	struct:cpp_macro	file:
parent	c-typeck.c	/^  struct init_node *parent;$/;"	m	struct:init_node	typeref:struct:init_node::init_node	file:
parent	fibheap.h	/^  struct fibnode *parent;$/;"	m	struct:fibnode	typeref:struct:fibnode::fibnode
parent	stmt.c	/^  struct case_node	*parent; \/* Parent of node in binary tree *\/$/;"	m	struct:case_node	typeref:struct:case_node::case_node	file:
parm_birth_insn	function.h	529;"	d
parm_flag	c-decl.c	/^    char parm_flag;$/;"	m	struct:binding_level	file:
parm_order	c-decl.c	/^    tree parm_order;$/;"	m	struct:binding_level	file:
parm_reg_stack_loc	function.h	524;"	d
parmdecl_map	integrate.c	/^static tree *parmdecl_map;$/;"	v	file:
parmlist_tags_warning	c-decl.c	/^parmlist_tags_warning ()$/;"	f
parms_set	rtlanal.c	/^parms_set (x, pat, data)$/;"	f	file:
parms_set_data	rtlanal.c	/^struct parms_set_data$/;"	s	file:
parse_answer	cpplib.c	/^parse_answer (pfile, answerp, type)$/;"	f	file:
parse_assertion	cpplib.c	/^parse_assertion (pfile, answerp, type)$/;"	f	file:
parse_defined	cppexp.c	/^parse_defined (pfile)$/;"	f	file:
parse_float	c-lex.c	/^parse_float (data)$/;"	f	file:
parse_identifier	cpplex.c	/^parse_identifier (pfile)$/;"	f	file:
parse_identifier_slow	cpplex.c	/^parse_identifier_slow (pfile, cur)$/;"	f	file:
parse_in	c-common.c	/^cpp_reader *parse_in;		\/* Declared in c-lex.h.  *\/$/;"	v
parse_include	cpplib.c	/^parse_include (pfile)$/;"	f	file:
parse_input_constraint	stmt.c	/^parse_input_constraint (constraint_p, input_num, ninputs, noutputs, ninout,$/;"	f	file:
parse_number	cppexp.c	/^parse_number (pfile, tok)$/;"	f	file:
parse_number	cpplex.c	/^parse_number (pfile, number, c, leading_period)$/;"	f	file:
parse_option	cppinit.c	/^parse_option (input)$/;"	f	file:
parse_options_and_default_flags	toplev.c	/^parse_options_and_default_flags (argc, argv)$/;"	f	file:
parse_output_constraint	stmt.c	/^parse_output_constraint (constraint_p, operand_num, ninputs, noutputs,$/;"	f
parse_params	cppmacro.c	/^parse_params (pfile, macro)$/;"	f	file:
parse_string	cpplex.c	/^parse_string (pfile, token, terminator)$/;"	f	file:
parser_build_binary_op	c-typeck.c	/^parser_build_binary_op (code, arg1, arg2)$/;"	f
parsing_args	cpphash.h	/^  unsigned char parsing_args;$/;"	m	struct:lexer_state
partial	calls.c	/^  int partial;$/;"	m	struct:arg_data	file:
partial	loop.c	/^  unsigned int partial : 1;	\/* 1 means this reg is used for zero-extending.$/;"	m	struct:movable	file:
partition	partition.h	/^} *partition;$/;"	t	typeref:struct:partition_def
partition_def	partition.h	/^typedef struct partition_def $/;"	s
partition_delete	partition.c	/^partition_delete (part)$/;"	f
partition_elem	partition.h	/^struct partition_elem$/;"	s
partition_find	partition.h	78;"	d
partition_new	partition.c	/^partition_new (num_elements)$/;"	f
partition_print	partition.c	/^partition_print (part, fp)$/;"	f
partition_union	partition.c	/^partition_union (part, elem1, elem2)$/;"	f
pass	function.c	/^  int pass;$/;"	m	struct:insns_for_mem_walk_info	file:
pass_on_stack	calls.c	/^  int pass_on_stack;$/;"	m	struct:arg_data	file:
paste_all_tokens	cppmacro.c	/^paste_all_tokens (pfile, lhs)$/;"	f	file:
paste_tokens	cppmacro.c	/^paste_tokens (pfile, plhs, rhs)$/;"	f	file:
pat	rtlanal.c	/^    rtx pat;$/;"	m	struct:set_of_data	file:
path	cse.c	/^    } path[PATHLENGTH];$/;"	m	struct:cse_basic_block_data	typeref:struct:cse_basic_block_data::branch_path	file:
path	dwarf2out.c	/^  char *path;		\/* Complete file name.  *\/$/;"	m	struct:file_info	file:
path	dwarf2out.c	/^  char *path;		\/* Path including directory name.  *\/$/;"	m	struct:dir_info	file:
path_include	cppinit.c	/^path_include (pfile, list, path)$/;"	f	file:
path_min	dominance.c	/^  TBB *path_min;$/;"	m	struct:dom_info	file:
path_size	cse.c	/^  int path_size;$/;"	m	struct:cse_basic_block_data	file:
pattern	gcse.c	/^  rtx pattern;			\/* Pattern of this mem.  *\/$/;"	m	struct:ls_expr	file:
pc_rtx	rtl.h	1621;"	d
pc_set	jump.c	/^pc_set (insn)$/;"	f
pedantic	cpplib.h	/^  unsigned char pedantic;$/;"	m	struct:cpp_options
pedantic	toplev.c	/^int pedantic = 0;$/;"	v
pedantic_error_kind	diagnostic.h	42;"	d
pedantic_errors	cpplib.h	/^  unsigned char pedantic_errors;$/;"	m	struct:cpp_options
pedantic_lvalue_warning	c-typeck.c	/^pedantic_lvalue_warning (code)$/;"	f	file:
pedantic_lvalues	fold-const.c	/^int pedantic_lvalues;$/;"	v
pedantic_non_lvalue	fold-const.c	/^pedantic_non_lvalue (x)$/;"	f
pedantic_omit_one_operand	fold-const.c	/^pedantic_omit_one_operand (type, result, omitted)$/;"	f	file:
pedwarn	diagnostic.c	/^pedwarn VPARAMS ((const char *msgid, ...))$/;"	f
pedwarn_c99	c-errors.c	/^pedwarn_c99 VPARAMS ((const char *msgid, ...))$/;"	f
pedwarn_init	c-typeck.c	/^pedwarn_init (msgid)$/;"	f
pedwarn_with_decl	diagnostic.c	/^pedwarn_with_decl VPARAMS ((tree decl, const char *msgid, ...))$/;"	f
pedwarn_with_file_and_line	diagnostic.c	/^pedwarn_with_file_and_line VPARAMS ((const char *file, int line,$/;"	f
peep2_current	recog.c	/^static int peep2_current;$/;"	v	file:
peep2_find_free_register	recog.c	/^peep2_find_free_register (from, to, class_str, mode, reg_set)$/;"	f
peep2_insn_data	recog.c	/^static struct peep2_insn_data peep2_insn_data[MAX_INSNS_PER_PEEP2 + 1];$/;"	v	typeref:struct:peep2_insn_data	file:
peep2_insn_data	recog.c	/^struct peep2_insn_data$/;"	s	file:
peep2_next_insn	recog.c	/^peep2_next_insn (n)$/;"	f
peep2_reg_dead_p	recog.c	/^peep2_reg_dead_p (ofs, reg)$/;"	f
peep2_regno_dead_p	recog.c	/^peep2_regno_dead_p (ofs, regno)$/;"	f
peep_operand	insn-peep.c	/^rtx peep_operand[2];$/;"	v
peephole	insn-peep.c	/^peephole (ins1)$/;"	f
peephole2_1	insn-recog.c	/^peephole2_1 (x0, insn, _pmatch_len)$/;"	f	file:
peephole2_2	insn-recog.c	/^peephole2_2 (x0, insn, _pmatch_len)$/;"	f	file:
peephole2_insns	insn-recog.c	/^peephole2_insns (x0, insn, _pmatch_len)$/;"	f
peephole2_optimize	recog.c	/^peephole2_optimize (dump_file)$/;"	f
pend_type	dwarfout.c	/^pend_type (type)$/;"	f	file:
pending	cpplib.h	/^  struct cpp_pending *pending;$/;"	m	struct:cpp_options	typeref:struct:cpp_options::cpp_pending
pending_chain	function.h	168;"	d
pending_dead_regs	resource.c	/^static HARD_REG_SET pending_dead_regs;$/;"	v	file:
pending_elts	c-typeck.c	/^  struct init_node *pending_elts;$/;"	m	struct:constructor_stack	typeref:struct:constructor_stack::init_node	file:
pending_flush_length	sched-int.h	/^  int pending_flush_length;$/;"	m	struct:deps
pending_invalid_xref	c-decl.c	/^tree pending_invalid_xref;$/;"	v
pending_invalid_xref_file	c-decl.c	/^const char *pending_invalid_xref_file;$/;"	v
pending_invalid_xref_line	c-decl.c	/^int pending_invalid_xref_line;$/;"	v
pending_lang_change	c-lex.c	/^int pending_lang_change; \/* If we need to switch languages - C++ only *\/$/;"	v
pending_lists_length	sched-int.h	/^  int pending_lists_length;$/;"	m	struct:deps
pending_option	cppinit.c	/^struct pending_option$/;"	s	file:
pending_read_insns	sched-int.h	/^  rtx pending_read_insns;$/;"	m	struct:deps
pending_read_mems	sched-int.h	/^  rtx pending_read_mems;$/;"	m	struct:deps
pending_redefine_extname	c-pragma.c	/^static tree pending_redefine_extname;$/;"	v	file:
pending_sibling_stack	dwarfout.c	/^static unsigned *pending_sibling_stack;$/;"	v	file:
pending_siblings	dwarfout.c	/^static unsigned pending_siblings;$/;"	v	file:
pending_siblings_allocated	dwarfout.c	/^static unsigned pending_siblings_allocated;$/;"	v	file:
pending_sizes	c-tree.h	/^  tree pending_sizes;$/;"	m	struct:lang_decl
pending_sizes	stor-layout.c	/^static tree pending_sizes;$/;"	v	file:
pending_stack_adjust	function.h	163;"	d
pending_statics	tree.h	/^  tree pending_statics;$/;"	m	struct:record_layout_info_s
pending_types	dwarfout.c	/^static unsigned pending_types;$/;"	v	file:
pending_types_allocated	dwarfout.c	/^static unsigned pending_types_allocated;$/;"	v	file:
pending_types_list	dwarfout.c	/^static tree *pending_types_list;$/;"	v	file:
pending_weaks	c-pragma.c	/^static tree pending_weaks;$/;"	v	file:
pending_write_insns	sched-int.h	/^  rtx pending_write_insns;$/;"	m	struct:deps
pending_write_mems	sched-int.h	/^  rtx pending_write_mems;$/;"	m	struct:deps
pending_xref_error	c-decl.c	/^pending_xref_error ()$/;"	f
pent_mul_unit_blockage	insn-attrtab.c	/^pent_mul_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
pent_mul_unit_blockage_range	insn-attrtab.c	/^pent_mul_unit_blockage_range (insn)$/;"	f
pent_mul_unit_conflict_cost	insn-attrtab.c	/^pent_mul_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
pent_mul_unit_ready_cost	insn-attrtab.c	/^pent_mul_unit_ready_cost (insn)$/;"	f
pent_np_unit_blockage	insn-attrtab.c	/^pent_np_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
pent_np_unit_blockage_range	insn-attrtab.c	/^pent_np_unit_blockage_range (insn)$/;"	f
pent_np_unit_conflict_cost	insn-attrtab.c	/^pent_np_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
pent_np_unit_ready_cost	insn-attrtab.c	/^pent_np_unit_ready_cost (insn)$/;"	f
pent_u_unit_blockage	insn-attrtab.c	/^pent_u_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
pent_u_unit_blockage_range	insn-attrtab.c	/^pent_u_unit_blockage_range (insn)$/;"	f
pent_u_unit_conflict_cost	insn-attrtab.c	/^pent_u_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
pent_u_unit_ready_cost	insn-attrtab.c	/^pent_u_unit_ready_cost (insn)$/;"	f
pent_uv_unit_blockage	insn-attrtab.c	/^pent_uv_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
pent_uv_unit_blockage_range	insn-attrtab.c	/^pent_uv_unit_blockage_range (insn)$/;"	f
pent_uv_unit_conflict_cost	insn-attrtab.c	/^pent_uv_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
pent_uv_unit_ready_cost	insn-attrtab.c	/^pent_uv_unit_ready_cost (insn)$/;"	f
pent_v_unit_ready_cost	insn-attrtab.c	/^pent_v_unit_ready_cost (insn)$/;"	f
pentium4_cost	i386.c	/^struct processor_costs pentium4_cost = {$/;"	v	typeref:struct:processor_costs	file:
pentium_cost	i386.c	/^struct processor_costs pentium_cost = {$/;"	v	typeref:struct:processor_costs	file:
pentiumpro_cost	i386.c	/^struct processor_costs pentiumpro_cost = {$/;"	v	typeref:struct:processor_costs	file:
perhaps_ends_bb_p	regmove.c	/^static int perhaps_ends_bb_p (insn)$/;"	f	file:
perm_calloc	tree.c	/^perm_calloc (nelem, size)$/;"	f
perm_list_kind	tree.c	/^  perm_list_kind,$/;"	e	enum:__anon88	file:
permalloc	tree.c	/^permalloc (size)$/;"	f
permanent_obstack	tree.c	/^struct obstack permanent_obstack;$/;"	v	typeref:struct:obstack
pf_args	c-lex.c	/^struct pf_args$/;"	s	file:
pfile	hashtable.h	/^  struct cpp_reader *pfile;$/;"	m	struct:ht	typeref:struct:ht::cpp_reader
phi_alternative	ssa.c	/^phi_alternative (set, c)$/;"	f	file:
phi_coalesce_context	ssa.c	/^struct phi_coalesce_context$/;"	s	file:
phys_reg	local-alloc.c	/^  short phys_reg;$/;"	m	struct:qty	file:
pic_label_name	i386.c	/^static char pic_label_name[32];$/;"	v	file:
pic_offset_table_rtx	emit-rtl.c	/^rtx pic_offset_table_rtx;	\/* (REG:Pmode PIC_OFFSET_TABLE_REGNUM) *\/$/;"	v
pic_symbolic_operand	i386.c	/^pic_symbolic_operand (op, mode)$/;"	f
place_field	stor-layout.c	/^place_field (rli, field)$/;"	f
place_union_field	stor-layout.c	/^place_union_field (rli, field)$/;"	f	file:
placeholder_list	expr.c	/^static tree placeholder_list = 0;$/;"	v	file:
plain_type	sdbout.c	/^plain_type (type)$/;"	f	file:
plain_type_1	sdbout.c	/^plain_type_1 (type, level)$/;"	f	file:
plus_constant	rtl.h	1221;"	d
plus_constant_wide	explow.c	/^plus_constant_wide (x, c)$/;"	f
pmode_register_operand	recog.c	/^pmode_register_operand (op, mode)$/;"	f
pn	safe-ctype.c	43;"	d	file:
pointer	tree.h	/^  const char *pointer;$/;"	m	struct:tree_string
pointer	tree.h	/^  union {int address; char *pointer; } symtab;$/;"	m	union:tree_type::__anon17
pointer_alias_set	tree.h	/^  HOST_WIDE_INT pointer_alias_set;$/;"	m	struct:tree_decl
pointer_count	c-format.c	/^  const int pointer_count;$/;"	m	struct:__anon40	file:
pointer_count	c-format.c	/^  int pointer_count;$/;"	m	struct:format_wanted_type	file:
pointer_depth	tree.h	/^  unsigned pointer_depth : 2;$/;"	m	struct:tree_decl
pointer_depth	tree.h	/^  unsigned pointer_depth : 2;$/;"	m	struct:tree_type
pointer_diff	c-typeck.c	/^pointer_diff (op0, op1)$/;"	f	file:
pointer_int_sum	c-common.c	/^pointer_int_sum (resultcode, ptrop, intop)$/;"	f
pointer_to	tree.h	/^  tree pointer_to;$/;"	m	struct:tree_type
pointer_type_class	typeclass.h	/^  pointer_type_class, reference_type_class, offset_type_class,$/;"	e	enum:type_class
poison_pages	ggc-page.c	/^poison_pages ()$/;"	f	file:
poisoned_ok	cpphash.h	/^  unsigned char poisoned_ok;$/;"	m	struct:lexer_state
pool_constant	varasm.c	/^struct pool_constant$/;"	s	file:
pool_offset	varasm.c	107;"	d	file:
pop_alignment	c-pragma.c	/^pop_alignment (id)$/;"	f	file:
pop_alignment	c-pragma.c	163;"	d	file:
pop_c_function_context	c-decl.c	/^pop_c_function_context (f)$/;"	f
pop_compile_unit	dwarf2out.c	/^pop_compile_unit (old_unit)$/;"	f	file:
pop_decl_scope	dwarf2out.c	/^pop_decl_scope ()$/;"	f	file:
pop_function_context	function.c	/^pop_function_context ()$/;"	f
pop_function_context_from	function.c	/^pop_function_context_from (context)$/;"	f
pop_init_level	c-typeck.c	/^pop_init_level (implicit)$/;"	f
pop_label_level	c-decl.c	/^pop_label_level ()$/;"	f
pop_operand	recog.c	/^pop_operand (op, mode)$/;"	f
pop_srcloc	toplev.c	/^pop_srcloc ()$/;"	f
pop_stack	reg-stack.c	/^pop_stack (regstack, regno)$/;"	f	file:
pop_temp_slots	function.c	/^pop_temp_slots ()$/;"	f
pop_topmost_sequence	emit-rtl.c	/^pop_topmost_sequence ()$/;"	f
poplevel	c-decl.c	/^poplevel (keep, reverse, functionbody)$/;"	f
pops_args	function.h	/^  int pops_args;$/;"	m	struct:function
pos_from_bit	stor-layout.c	/^pos_from_bit (poffset, pbitpos, off_align, pos)$/;"	f
pos_from_byte	stor-layout.c	/^pos_from_byte (poffset, pbitpos, off_align, pos)$/;"	f
position	dependence.c	/^  int position;$/;"	m	struct:subscript	file:
possible_sum_sign	cppexp.c	28;"	d	file:
post_dominators	ifcvt.c	/^static sbitmap *post_dominators;$/;"	v	file:
post_landing_pad	except.c	/^  rtx post_landing_pad;$/;"	m	struct:eh_region	file:
post_mark_life	local-alloc.c	/^post_mark_life (regno, mode, life, birth, death)$/;"	f	file:
post_options	langhooks.h	/^  void (*post_options) PARAMS ((void));$/;"	m	struct:lang_hooks
pot_split	sched-rgn.c	/^static edgeset *pot_split;$/;"	v	file:
potential_hazard	haifa-sched.c	/^potential_hazard (unit, insn, cost)$/;"	f	file:
ppro	i386.c	/^  } ppro;$/;"	m	union:__anon64	typeref:struct:__anon64::ppro_sched_data	file:
ppro_p01_unit_ready_cost	insn-attrtab.c	/^ppro_p01_unit_ready_cost (insn)$/;"	f
ppro_p0_unit_blockage	insn-attrtab.c	/^ppro_p0_unit_blockage (executing_insn, candidate_insn)$/;"	f	file:
ppro_p0_unit_blockage_range	insn-attrtab.c	/^ppro_p0_unit_blockage_range (insn)$/;"	f
ppro_p0_unit_conflict_cost	insn-attrtab.c	/^ppro_p0_unit_conflict_cost (executing_insn, candidate_insn)$/;"	f	file:
ppro_p0_unit_ready_cost	insn-attrtab.c	/^ppro_p0_unit_ready_cost (insn)$/;"	f
ppro_p2_unit_ready_cost	insn-attrtab.c	/^ppro_p2_unit_ready_cost (insn)$/;"	f
ppro_p34_unit_ready_cost	insn-attrtab.c	/^ppro_p34_unit_ready_cost (insn)$/;"	f
ppro_sched_data	i386.c	/^  struct ppro_sched_data$/;"	s	union:__anon64	file:
pr	safe-ctype.c	44;"	d	file:
pragma	cpplib.c	/^  const cpp_hashnode *pragma;	\/* Name and length.  *\/$/;"	m	struct:pragma_entry	file:
pragma_cb	cpplib.c	/^typedef void (*pragma_cb) PARAMS ((cpp_reader *));$/;"	t	file:
pragma_entry	cpplib.c	/^struct pragma_entry$/;"	s	file:
pragma_extern_prefix	c-pragma.c	/^static tree pragma_extern_prefix;$/;"	v	file:
pragmas	cpphash.h	/^  struct pragma_entry *pragmas;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::pragma_entry
pre_delete	gcse.c	/^pre_delete ()$/;"	f	file:
pre_delete_map	gcse.c	/^static sbitmap *pre_delete_map;$/;"	v	file:
pre_edge_insert	gcse.c	/^pre_edge_insert (edge_list, index_map)$/;"	f	file:
pre_edge_lcm	lcm.c	/^pre_edge_lcm (file, n_exprs, transp, avloc, antloc, kill, insert, delete)$/;"	f
pre_edge_rev_lcm	lcm.c	/^pre_edge_rev_lcm (file, n_exprs, transp, st_avloc, st_antloc, kill,$/;"	f
pre_expr_reaches_here_p	gcse.c	/^pre_expr_reaches_here_p (occr_bb, expr, bb)$/;"	f	file:
pre_expr_reaches_here_p_work	gcse.c	/^pre_expr_reaches_here_p_work (occr_bb, expr, bb, visited)$/;"	f	file:
pre_gcse	gcse.c	/^pre_gcse ()$/;"	f	file:
pre_header	basic-block.h	/^  basic_block pre_header;$/;"	m	struct:loop
pre_header_edges	basic-block.h	/^  edge *pre_header_edges;$/;"	m	struct:loop
pre_header_has_call	loop.h	/^  int pre_header_has_call;$/;"	m	struct:loop_info
pre_insert_copies	gcse.c	/^pre_insert_copies ()$/;"	f	file:
pre_insert_copy_insn	gcse.c	/^pre_insert_copy_insn (expr, insn)$/;"	f	file:
pre_insert_map	gcse.c	/^static sbitmap *pre_insert_map;$/;"	v	file:
pre_ldst_mems	gcse.c	/^static struct ls_expr * pre_ldst_mems = NULL;$/;"	v	typeref:struct:ls_expr	file:
pre_optimal	gcse.c	/^static sbitmap *pre_optimal;$/;"	v	file:
pre_redundant	gcse.c	/^static sbitmap *pre_redundant;$/;"	v	file:
pre_redundant_insns	gcse.c	/^static sbitmap pre_redundant_insns;$/;"	v	file:
precision	tree.h	/^  unsigned int precision : 9;$/;"	m	struct:tree_type
precision_char	c-format.c	/^  const int precision_char;$/;"	m	struct:__anon43	file:
precision_type	c-format.c	/^  tree *const precision_type;$/;"	m	struct:__anon43	file:
precompute_arguments	calls.c	/^precompute_arguments (flags, num_actuals, args)$/;"	f	file:
precompute_register_parameters	calls.c	/^precompute_register_parameters (num_actuals, args, reg_parm_seen)$/;"	f	file:
precondition_loop_p	unroll.c	/^precondition_loop_p (loop, initial_value, final_value, increment, mode)$/;"	f
pred	basic-block.h	/^  edge pred, succ;$/;"	m	struct:basic_block_def
pred_count	profile.c	/^    gcov_type pred_count;$/;"	m	struct:bb_info	file:
pred_next	basic-block.h	/^  struct edge_def *pred_next, *succ_next;$/;"	m	struct:edge_def	typeref:struct:edge_def::edge_def
predecessors	reg-stack.c	/^  int predecessors;		\/* Number of predecessors that needs$/;"	m	struct:block_info_def	file:
predicate	c-format.c	/^  const int predicate;$/;"	m	struct:__anon41	file:
predicate	c-format.c	/^  const int predicate;$/;"	m	struct:__anon42	file:
predicate	recog.h	/^  const insn_operand_predicate_fn predicate;$/;"	m	struct:insn_operand_data
predict_edge	predict.c	/^predict_edge (e, predictor, probability)$/;"	f
predict_edge_def	predict.c	/^predict_edge_def (e, predictor, taken)$/;"	f
predict_insn	predict.c	/^predict_insn (insn, predictor, probability)$/;"	f
predict_insn_def	predict.c	/^predict_insn_def (insn, predictor, taken)$/;"	f
prediction	predict.h	/^enum prediction$/;"	g
predictor_info	predict.c	/^static const struct predictor_info predictor_info[]= {$/;"	v	typeref:struct:predictor_info	file:
predictor_info	predict.c	/^struct predictor_info$/;"	s	file:
prefclass	regclass.c	/^  char prefclass;$/;"	m	struct:reg_pref	file:
preferrable	cse.c	/^preferrable (cost_a, regcost_a, cost_b, regcost_b)$/;"	f	file:
preferred_stack_boundary	function.h	/^  int preferred_stack_boundary;$/;"	m	struct:function
prefetch_before_loop	loop.c	/^  unsigned int prefetch_before_loop : 1;$/;"	m	struct:prefetch_info	file:
prefetch_block	i386.h	/^  const int prefetch_block;	\/* bytes moved to cache for prefetch.  *\/$/;"	m	struct:processor_costs
prefetch_in_loop	loop.c	/^  unsigned int prefetch_in_loop : 1;$/;"	m	struct:prefetch_info	file:
prefetch_info	loop.c	/^struct prefetch_info$/;"	s	file:
prefix	diagnostic.h	/^  const char *prefix;$/;"	m	struct:__anon12
prefix	dwarf2out.c	/^  int prefix;		\/* Index of directory entry which is a prefix.  *\/$/;"	m	struct:dir_info	file:
prefix	toplev.c	/^  const char *const prefix;$/;"	m	struct:__anon63	file:
prefix_attributes	c-parse.c	/^static tree prefix_attributes = NULL_TREE;$/;"	v	file:
prefix_was_emitted_for	diagnostic.c	51;"	d	file:
prefixing_rule	diagnostic.h	/^  diagnostic_prefixing_rule_t prefixing_rule;$/;"	m	struct:__anon12
prep_stmt	c-semantics.c	/^prep_stmt (t)$/;"	f
prepare_call_address	calls.c	/^prepare_call_address (funexp, fndecl, call_fusage, reg_parm_seen, sibcallp)$/;"	f
prepare_cmp_insn	optabs.c	/^prepare_cmp_insn (px, py, pcomparison, size, pmode, punsignedp, purpose)$/;"	f	file:
prepare_float_lib_cmp	optabs.c	/^prepare_float_lib_cmp (px, py, pcomparison, pmode, punsignedp)$/;"	f	file:
prepare_function_start	function.c	/^prepare_function_start ()$/;"	f	file:
prepare_operand	optabs.c	/^prepare_operand (icode, x, opnum, mode, wider_mode, unsignedp)$/;"	f
preprocess_constraints	recog.c	/^preprocess_constraints ()$/;"	f
preprocessed	cpplib.h	/^  unsigned char preprocessed;$/;"	m	struct:cpp_options
prescan_loop	loop.c	/^prescan_loop (loop)$/;"	f	file:
preserve_rtl_expr_result	function.c	/^preserve_rtl_expr_result (x)$/;"	f
preserve_subexpressions_p	stmt.c	/^preserve_subexpressions_p ()$/;"	f
preserve_temp_slots	function.c	/^preserve_temp_slots (x)$/;"	f
pretend_args_size	function.h	/^  int pretend_args_size;$/;"	m	struct:function
pretty	c-common.c	/^  const int pretty;	\/* How pretty is it? *\/$/;"	m	struct:fname_var_t	file:
pretty_function_name_decl_node	c-common.h	227;"	d
prev	bitmap.h	/^  struct bitmap_element_def *prev;		\/* Previous element.  *\/$/;"	m	struct:bitmap_element_def	typeref:struct:bitmap_element_def::bitmap_element_def
prev	c-pragma.c	/^  struct align_stack * prev;$/;"	m	struct:align_stack	typeref:struct:align_stack::align_stack	file:
prev	c-typeck.c	/^  struct constructor_range_stack *next, *prev;$/;"	m	struct:constructor_range_stack	typeref:struct:constructor_range_stack::	file:
prev	cpphash.h	/^  cpp_context *next, *prev;$/;"	m	struct:cpp_context
prev	cpphash.h	/^  struct cpp_buffer *prev;$/;"	m	struct:cpp_buffer	typeref:struct:cpp_buffer::cpp_buffer
prev	cpphash.h	/^  tokenrun *next, *prev;$/;"	m	struct:tokenrun
prev	cse.c	/^  int next, prev;$/;"	m	struct:reg_eqv_elem	file:
prev	obstack.h	/^  struct _obstack_chunk *prev;	\/* address of prior chunk or NULL *\/$/;"	m	struct:_obstack_chunk	typeref:struct:_obstack_chunk::_obstack_chunk
prev	reload.h	/^  struct insn_chain *next, *prev;$/;"	m	struct:insn_chain	typeref:struct:insn_chain::
prev_active_insn	emit-rtl.c	/^prev_active_insn (insn)$/;"	f
prev_catch	except.c	/^      struct eh_region *prev_catch;$/;"	m	struct:eh_region::__anon21::__anon23	typeref:struct:eh_region::__anon21::__anon23::eh_region	file:
prev_cc0_setter	emit-rtl.c	/^prev_cc0_setter (insn)$/;"	f
prev_field	tree.h	/^  tree prev_field;$/;"	m	struct:record_layout_info_s
prev_head	sched-int.h	/^  rtx prev_head, next_tail;$/;"	m	struct:sched_info
prev_insn	cse.c	/^static rtx prev_insn;$/;"	v	file:
prev_insn_cc0	cse.c	/^static rtx prev_insn_cc0;$/;"	v	file:
prev_insn_cc0_mode	cse.c	/^static enum machine_mode prev_insn_cc0_mode;$/;"	v	typeref:enum:machine_mode	file:
prev_label	emit-rtl.c	/^prev_label (insn)$/;"	f
prev_nonnote_insn	emit-rtl.c	/^prev_nonnote_insn (insn)$/;"	f
prev_real_insn	emit-rtl.c	/^prev_real_insn (insn)$/;"	f
prev_reg	ssa.c	/^  rtx prev_reg;$/;"	m	struct:rename_set_data	file:
prev_same_hash	cse.c	/^  struct table_elt *prev_same_hash;$/;"	m	struct:table_elt	typeref:struct:table_elt::table_elt	file:
prev_same_value	cse.c	/^  struct table_elt *prev_same_value;$/;"	m	struct:table_elt	typeref:struct:table_elt::table_elt	file:
prev_try	except.c	/^      struct eh_region *prev_try;$/;"	m	struct:eh_region::__anon21::__anon22	typeref:struct:eh_region::__anon21::__anon22::eh_region	file:
prevent_expansion	cpphash.h	/^  unsigned char prevent_expansion;  $/;"	m	struct:lexer_state
previous_insn	emit-rtl.c	/^previous_insn (insn)$/;"	f
previous_offset	reload1.c	/^  int previous_offset;		\/* Offset at end of previous insn.  *\/$/;"	m	struct:elim_table	file:
primary_filename	dwarf2out.c	/^static const char *primary_filename;$/;"	v	file:
primary_filename	dwarfout.c	/^static const char *primary_filename;$/;"	v	file:
primary_filename	vmsdbgout.c	/^static const char *primary_filename;$/;"	v	file:
print_and_abort	obstack.c	/^print_and_abort ()$/;"	f	file:
print_block_visualization	sched-vis.c	/^print_block_visualization (s)$/;"	f
print_char_table	c-format.c	/^static const format_char_info print_char_table[] =$/;"	v	file:
print_conflict	conflict.c	/^print_conflict (reg1, reg2, contextp)$/;"	f	file:
print_containing_files	line-map.c	/^print_containing_files (set, map)$/;"	f
print_context	conflict.c	/^struct print_context$/;"	s	file:
print_decl	langhooks.h	/^  lang_print_tree_hook print_decl;$/;"	m	struct:lang_hooks
print_deps	cpplib.h	/^  unsigned char print_deps;$/;"	m	struct:cpp_options
print_deps_append	cpplib.h	/^  unsigned char print_deps_append;$/;"	m	struct:cpp_options
print_deps_missing_files	cpplib.h	/^  unsigned char print_deps_missing_files;$/;"	m	struct:cpp_options
print_die	dwarf2out.c	/^print_die (die, outfile)$/;"	f	file:
print_dwarf_line_table	dwarf2out.c	/^print_dwarf_line_table (outfile)$/;"	f	file:
print_edge_list	cfganal.c	/^print_edge_list (f, elist)$/;"	f
print_error_function	diagnostic.c	/^void (*print_error_function) PARAMS ((diagnostic_context *, const char *))$/;"	v
print_exp	sched-vis.c	/^print_exp (buf, x, verbose)$/;"	f	file:
print_help	cppinit.c	/^print_help ()$/;"	f	file:
print_identifier	langhooks.h	/^  lang_print_tree_hook print_identifier;$/;"	m	struct:lang_hooks
print_include_names	cpplib.h	/^  unsigned char print_include_names;$/;"	m	struct:cpp_options
print_indent	dwarf2out.c	/^static int print_indent;$/;"	v	file:
print_inline_rtx	print-rtl.c	/^print_inline_rtx (outf, x, ind)$/;"	f
print_insn	sched-ebb.c	/^print_insn (insn, aligned)$/;"	f	file:
print_insn	sched-int.h	/^  const char *(*print_insn) PARAMS ((rtx, int));$/;"	m	struct:sched_info
print_insn	sched-vis.c	/^print_insn (buf, x, verbose)$/;"	f	file:
print_int_cst_octal	dbxout.c	/^print_int_cst_octal (c)$/;"	f	file:
print_ldst_list	gcse.c	/^print_ldst_list (file)$/;"	f	file:
print_location	cpperror.c	/^print_location (pfile, line, col)$/;"	f	file:
print_mem_expr	print-rtl.c	/^print_mem_expr (outfile, expr)$/;"	f
print_node	print-tree.c	/^print_node (file, prefix, node, indent)$/;"	f
print_node_brief	print-tree.c	/^print_node_brief (file, prefix, node, indent)$/;"	f
print_obstack_statistics	tree.c	/^print_obstack_statistics (str, o)$/;"	f
print_octal	dbxout.c	/^print_octal (value, digits)$/;"	f	file:
print_operand	i386.c	/^print_operand (file, x, code)$/;"	f
print_operand_address	i386.c	/^print_operand_address (file, addr)$/;"	f
print_pattern	sched-vis.c	/^print_pattern (buf, x, verbose)$/;"	f	file:
print_reg	i386.c	/^print_reg (x, code, file)$/;"	f
print_rtl	print-rtl.c	/^print_rtl (outf, rtx_first)$/;"	f
print_rtl_graph_with_bb	graph.c	/^print_rtl_graph_with_bb (base, suffix, rtx_first)$/;"	f
print_rtl_single	print-rtl.c	/^print_rtl_single (outf, x)$/;"	f
print_rtl_with_bb	cfgrtl.c	/^print_rtl_with_bb (outf, rtx_first)$/;"	f
print_rtx	print-rtl.c	/^print_rtx (in_rtx)$/;"	f	file:
print_rtx_head	print-rtl.c	/^const char *print_rtx_head = "";$/;"	v
print_simple_rtl	print-rtl.c	/^print_simple_rtl (outf, x)$/;"	f
print_single_switch	toplev.c	/^print_single_switch (file, pos, max, indent, sep, term, type, name)$/;"	f	file:
print_spaces	dwarf2out.c	/^print_spaces (outfile)$/;"	f	file:
print_spelling	c-typeck.c	/^print_spelling (buffer)$/;"	f	file:
print_stack	reg-stack.c	/^print_stack (file, s)$/;"	f	file:
print_statistics	langhooks.h	/^  void (*print_statistics) PARAMS ((void));$/;"	m	struct:lang_hooks
print_switch_values	toplev.c	/^print_switch_values (file, pos, max, indent, sep, term)$/;"	f	file:
print_time	timevar.c	/^print_time (str, total)$/;"	f
print_type	langhooks.h	/^  lang_print_tree_hook print_type;$/;"	m	struct:lang_hooks
print_type_hash_statistics	tree.c	/^print_type_hash_statistics ()$/;"	f	file:
print_value	sched-vis.c	/^print_value (buf, x, verbose)$/;"	f	file:
print_version	cpphash.h	/^  unsigned char print_version;$/;"	m	struct:cpp_reader
print_version	toplev.c	/^print_version (file, indent)$/;"	f	file:
print_wide_int	dbxout.c	/^print_wide_int (c)$/;"	f	file:
print_xnode	langhooks.h	/^  lang_print_tree_hook print_xnode;$/;"	m	struct:lang_hooks
printer_fn	diagnostic.h	/^typedef int (*printer_fn) PARAMS ((output_buffer *));$/;"	t
printf_flag_pairs	c-format.c	/^static const format_flag_pair printf_flag_pairs[] =$/;"	v	file:
printf_flag_specs	c-format.c	/^static const format_flag_spec printf_flag_specs[] =$/;"	v	file:
printf_format_type	c-format.c	/^enum format_type { printf_format_type, scanf_format_type,$/;"	e	enum:format_type	file:
printf_length_specs	c-format.c	/^static const format_length_info printf_length_specs[] =$/;"	v	file:
printname	stmt.c	/^	  const char *printname;$/;"	m	struct:nesting::__anon67::__anon71	file:
prio	cppexp.c	/^  U_CHAR prio;         \/* Priority of op.  *\/$/;"	m	struct:op	file:
priority	haifa-sched.c	/^priority (insn)$/;"	f	file:
priority	sched-int.h	/^  int priority;$/;"	m	struct:haifa_insn_data
priority_known	sched-int.h	/^  unsigned int priority_known : 1;$/;"	m	struct:haifa_insn_data
private_flag	tree.h	/^  unsigned private_flag : 1;$/;"	m	struct:tree_common
prob	sched-rgn.c	/^static float *prob;$/;"	v	file:
probability	basic-block.h	/^  int probability;		\/* biased by REG_BR_PROB_BASE *\/$/;"	m	struct:edge_def
probe_stack_range	explow.c	/^probe_stack_range (first, size)$/;"	f
process_if_block	ifcvt.c	/^process_if_block (test_bb, then_bb, else_bb, join_bb)$/;"	f	file:
process_init_element	c-typeck.c	/^process_init_element (value)$/;"	f
process_insert_insn	gcse.c	/^process_insert_insn (expr)$/;"	f	file:
process_options	toplev.c	/^process_options ()$/;"	f	file:
process_reg_param	integrate.c	/^process_reg_param (map, loc, copy)$/;"	f	file:
processor_costs	i386.h	/^struct processor_costs {$/;"	s
processor_type	i386.h	/^enum processor_type$/;"	g
producer_attribute	dwarfout.c	/^producer_attribute (producer)$/;"	f	file:
product_cheap_p	loop.c	/^product_cheap_p (a, b)$/;"	f	file:
profile	function.h	/^  unsigned int profile : 1;$/;"	m	struct:function
profile_after_prologue	final.c	/^profile_after_prologue (file)$/;"	f	file:
profile_arc_flag	toplev.c	/^int profile_arc_flag = 0;$/;"	v
profile_flag	toplev.c	/^int profile_flag = 0;$/;"	v
profile_function	final.c	/^profile_function (file)$/;"	f	file:
profile_function_entry_libfunc	libfuncs.h	271;"	d
profile_function_exit_libfunc	libfuncs.h	272;"	d
profile_label_no	function.c	/^static int profile_label_no;$/;"	v	file:
profile_label_no	function.h	/^  int profile_label_no;$/;"	m	struct:function
profiler_label	profile.c	/^static rtx profiler_label;$/;"	v	file:
progname	toplev.c	/^const char *progname;$/;"	v
prologue	function.c	/^static varray_type prologue;$/;"	v	file:
prologue_epilogue_contains	function.c	/^prologue_epilogue_contains (insn)$/;"	f
promotable_binary_operator	i386.c	/^promotable_binary_operator (op, mode)$/;"	f
promote_mode	explow.c	/^promote_mode (type, mode, punsignedp, for_call)$/;"	f
promoted_input_arg	function.c	/^promoted_input_arg (regno, pmode, punsignedp)$/;"	f
promoted_mode	function.h	/^  enum machine_mode promoted_mode;$/;"	m	struct:var_refs_queue	typeref:enum:var_refs_queue::machine_mode
propagate_block	flow.c	/^propagate_block (bb, live, local_set, cond_local_set, flags)$/;"	f
propagate_block_delete_insn	flow.c	/^propagate_block_delete_insn (bb, insn)$/;"	f	file:
propagate_block_delete_libcall	flow.c	/^propagate_block_delete_libcall ( insn, note)$/;"	f	file:
propagate_block_info	flow.c	/^struct propagate_block_info$/;"	s	file:
propagate_deps	sched-rgn.c	/^propagate_deps (bb, pred_deps)$/;"	f	file:
propagate_freq	predict.c	/^propagate_freq (head)$/;"	f	file:
propagate_necessity_through_operand	ssa-dce.c	/^propagate_necessity_through_operand (current_rtx, data)$/;"	f	file:
propagate_one_insn	flow.c	/^propagate_one_insn (pbi, insn)$/;"	f
protect_from_queue	expr.c	/^protect_from_queue (x, modify)$/;"	f
protect_list	except.c	/^  tree protect_list;$/;"	m	struct:eh_status	file:
protected_flag	tree.h	/^  unsigned protected_flag : 1;$/;"	m	struct:tree_common
prototyped_attribute	dwarfout.c	/^prototyped_attribute (func_type)$/;"	f	file:
prune_preferences	global.c	/^prune_preferences ()$/;"	f	file:
pseudo	integrate.c	/^  rtx pseudo;$/;"	m	struct:initial_value_pair	file:
pseudo_forbidden_regs	reload1.c	/^static HARD_REG_SET *pseudo_forbidden_regs;$/;"	v	file:
pseudo_previous_regs	reload1.c	/^static HARD_REG_SET *pseudo_previous_regs;$/;"	v	file:
pseudos_counted	reload1.c	/^static regset_head pseudos_counted;$/;"	v	file:
ptoken	cpphash.h	/^  const cpp_token **ptoken;$/;"	m	union:utoken
ptr_mode	emit-rtl.c	/^enum machine_mode ptr_mode;	\/* Mode whose width is POINTER_SIZE.  *\/$/;"	v	typeref:enum:machine_mode
ptr_type_node	tree.h	1985;"	d
ptrdiff_t	xmalloc.c	73;"	d	file:
ptrdiff_type_node	tree.h	1988;"	d
public_flag	tree.h	/^  unsigned public_flag : 1;$/;"	m	struct:tree_common
pubname_entry	dwarf2out.c	/^pubname_entry;$/;"	t	typeref:struct:pubname_struct	file:
pubname_ref	dwarf2out.c	/^typedef struct pubname_struct *pubname_ref;$/;"	t	typeref:struct:pubname_struct	file:
pubname_struct	dwarf2out.c	/^typedef struct pubname_struct$/;"	s	file:
pubname_table	dwarf2out.c	/^static pubname_ref pubname_table;$/;"	v	file:
pubname_table_allocated	dwarf2out.c	/^static unsigned pubname_table_allocated;$/;"	v	file:
pubname_table_in_use	dwarf2out.c	/^static unsigned pubname_table_in_use;$/;"	v	file:
pure_call_p	rtlanal.c	/^pure_call_p (insn)$/;"	f
pure_flag	tree.h	/^  unsigned pure_flag : 1;$/;"	m	struct:tree_decl
pure_or_virtual_attribute	dwarfout.c	/^pure_or_virtual_attribute (func_decl)$/;"	f	file:
purge_addressof	function.c	/^purge_addressof (insns)$/;"	f
purge_addressof_1	function.c	/^purge_addressof_1 (loc, insn, force, store, ht)$/;"	f	file:
purge_addressof_replacements	function.c	/^static rtx purge_addressof_replacements;$/;"	v	file:
purge_all_dead_edges	cfgrtl.c	/^purge_all_dead_edges (update_life_p)$/;"	f
purge_bitfield_addressof_replacements	function.c	/^static rtx purge_bitfield_addressof_replacements;$/;"	v	file:
purge_cache	cppfiles.c	/^purge_cache (inc)$/;"	f	file:
purge_dead_edges	cfgrtl.c	/^purge_dead_edges (bb)$/;"	f
purge_hard_subreg_sets	function.c	/^purge_hard_subreg_sets (insn)$/;"	f
purge_line_number_notes	jump.c	/^purge_line_number_notes (f)$/;"	f
purge_mem_unchanging_flag	sibcall.c	/^purge_mem_unchanging_flag (x)$/;"	f	file:
purge_reg_equiv_notes	sibcall.c	/^purge_reg_equiv_notes ()$/;"	f	file:
purge_single_hard_subreg_set	function.c	/^purge_single_hard_subreg_set (pattern)$/;"	f	file:
purpose	c-typeck.c	/^  tree purpose;$/;"	m	struct:init_node	file:
purpose	tree.h	/^  tree purpose;$/;"	m	struct:tree_list
purpose_member	tree.c	/^purpose_member (elem, list)$/;"	f
push_alignment	c-pragma.c	/^push_alignment (alignment, id)$/;"	f	file:
push_alignment	c-pragma.c	161;"	d	file:
push_array_bounds	c-typeck.c	/^push_array_bounds (bounds)$/;"	f	file:
push_block	expr.c	/^push_block (size, extra, below)$/;"	f
push_c_function_context	c-decl.c	/^push_c_function_context (f)$/;"	f
push_conditional	cpplib.c	/^push_conditional (pfile, skip, type, cmacro)$/;"	f	file:
push_decl_scope	dwarf2out.c	/^push_decl_scope (scope)$/;"	f	file:
push_function_context	function.c	/^push_function_context ()$/;"	f
push_function_context_to	function.c	/^push_function_context_to (context)$/;"	f
push_include	cppinit.c	/^push_include (pfile, p)$/;"	f	file:
push_init_level	c-typeck.c	/^push_init_level (implicit)$/;"	f
push_label_level	c-decl.c	/^push_label_level ()$/;"	f
push_member_name	c-typeck.c	/^push_member_name (decl)$/;"	f	file:
push_new_compile_unit	dwarf2out.c	/^push_new_compile_unit (old_unit, bincl_die)$/;"	f	file:
push_operand	recog.c	/^push_operand (op, mode)$/;"	f
push_optab	optabs.h	210;"	d
push_parm_decl	c-decl.c	/^push_parm_decl (parm)$/;"	f
push_ptoken_context	cppmacro.c	/^push_ptoken_context (pfile, macro, buff, first, count)$/;"	f	file:
push_range_stack	c-typeck.c	/^push_range_stack (range_end)$/;"	f	file:
push_reload	reload.c	/^push_reload (in, out, inloc, outloc, class,$/;"	f
push_replacement	reload.c	/^push_replacement (loc, reloadnum, mode)$/;"	f	file:
push_secondary_reload	reload.c	/^push_secondary_reload (in_p, x, opnum, optional, reload_class, reload_mode,$/;"	f	file:
push_sleb128	except.c	/^push_sleb128 (data_area, value)$/;"	f	file:
push_srcloc	toplev.c	/^push_srcloc (file, line)$/;"	f
push_string	c-typeck.c	/^push_string (string)$/;"	f	file:
push_temp_slots	function.c	/^push_temp_slots ()$/;"	f
push_to_full_sequence	emit-rtl.c	/^push_to_full_sequence (first, last)$/;"	f
push_to_sequence	emit-rtl.c	/^push_to_sequence (first)$/;"	f
push_token_context	cppmacro.c	/^push_token_context (pfile, macro, first, count)$/;"	f	file:
push_topmost_sequence	emit-rtl.c	/^push_topmost_sequence ()$/;"	f
push_uleb128	except.c	/^push_uleb128 (data_area, value)$/;"	f	file:
pushcase	stmt.c	/^pushcase (value, converter, label, duplicate)$/;"	f
pushcase_range	stmt.c	/^pushcase_range (value1, value2, converter, label, duplicate)$/;"	f
pushdecl	c-decl.c	/^pushdecl (x)$/;"	f
pushdecl_top_level	c-decl.c	/^pushdecl_top_level (x)$/;"	f
pushlevel	c-decl.c	/^pushlevel (tag_transparent)$/;"	f
pushtag	c-decl.c	/^pushtag (name, type)$/;"	f
put_addressof_into_stack	function.c	/^put_addressof_into_stack (r, ht)$/;"	f	file:
put_condition_code	i386.c	/^put_condition_code (code, mode, reverse, fp, file)$/;"	f	file:
put_pending_size	stor-layout.c	/^put_pending_size (expr)$/;"	f
put_pending_sizes	stor-layout.c	/^put_pending_sizes (chain)$/;"	f
put_reg_into_stack	function.c	/^put_reg_into_stack (function, reg, type, promoted_mode, decl_mode, volatile_p,$/;"	f	file:
put_var_into_stack	function.c	/^put_var_into_stack (decl)$/;"	f
putc	system.h	73;"	d
putc	system.h	74;"	d
q_ptr	haifa-sched.c	/^static int q_ptr = 0;$/;"	v	file:
q_regs_operand	i386.c	/^q_regs_operand (op, mode)$/;"	f
q_size	haifa-sched.c	/^static int q_size = 0;$/;"	v	file:
qcmp	ucbqsort.c	/^static  int		(*qcmp)();		\/* the comparison routine *\/$/;"	v	file:
qi_high_reg_name	i386.c	/^static const char *const qi_high_reg_name[] = QI_HIGH_REGISTER_NAMES; \/* names for 8 bit regs (high) *\/$/;"	v	file:
qi_reg_name	i386.c	/^static const char *const qi_reg_name[] = QI_REGISTER_NAMES; \/* names for 8 bit regs (low) *\/$/;"	v	file:
qst	ucbqsort.c	/^qst(char *base, char* max)                 \/* changed Kaivalya\/RRH 8\/19\/03 *\/$/;"	f	file:
qsz	ucbqsort.c	/^static  int		qsz;			\/* size of each record *\/$/;"	v	file:
qty	local-alloc.c	/^static struct qty *qty;$/;"	v	typeref:struct:qty	file:
qty	local-alloc.c	/^struct qty$/;"	s	file:
qty_compare	local-alloc.c	/^qty_compare (q1, q2)$/;"	f	file:
qty_compare_1	local-alloc.c	/^qty_compare_1 (q1p, q2p)$/;"	f	file:
qty_phys_copy_sugg	local-alloc.c	/^static HARD_REG_SET *qty_phys_copy_sugg;$/;"	v	file:
qty_phys_num_copy_sugg	local-alloc.c	/^static short *qty_phys_num_copy_sugg;$/;"	v	file:
qty_phys_num_sugg	local-alloc.c	/^static short *qty_phys_num_sugg;$/;"	v	file:
qty_phys_sugg	local-alloc.c	/^static HARD_REG_SET *qty_phys_sugg;$/;"	v	file:
qty_sugg_compare	local-alloc.c	/^qty_sugg_compare (q1, q2)$/;"	f	file:
qty_sugg_compare_1	local-alloc.c	/^qty_sugg_compare_1 (q1p, q2p)$/;"	f	file:
qty_table	cse.c	/^static struct qty_table_elem *qty_table;$/;"	v	typeref:struct:qty_table_elem	file:
qty_table_elem	cse.c	/^struct qty_table_elem$/;"	s	file:
qualify_type	c-typeck.c	/^qualify_type (type, like)$/;"	f	file:
queue	tree-dump.c	/^queue (di, t, flags)$/;"	f	file:
queue	tree-dump.h	/^  dump_queue_p queue;$/;"	m	struct:dump_info
queue_and_dump_index	tree-dump.c	/^queue_and_dump_index (di, field, t, flags)$/;"	f
queue_and_dump_type	tree-dump.c	/^queue_and_dump_type (di, t)$/;"	f
queue_end	tree-dump.h	/^  dump_queue_p queue_end;$/;"	m	struct:dump_info
queue_insn	haifa-sched.c	/^queue_insn (insn, n_cycles)$/;"	f	file:
queue_must_finish_empty	sched-int.h	/^  unsigned int queue_must_finish_empty:1;$/;"	m	struct:sched_info
queue_reg_save	dwarf2out.c	/^queue_reg_save (label, reg, offset)$/;"	f	file:
queue_to_ready	haifa-sched.c	/^queue_to_ready (ready)$/;"	f	file:
queued_reg_save	dwarf2out.c	/^struct queued_reg_save$/;"	s	file:
queued_reg_saves	dwarf2out.c	/^static struct queued_reg_save *queued_reg_saves;$/;"	v	typeref:struct:queued_reg_save	file:
queued_subexp_p	expr.c	/^queued_subexp_p (x)$/;"	f
quiet_flag	toplev.c	/^int quiet_flag = 1;	\/* SPEC_CPU *\/ \/* MJP *\/$/;"	v
quote_head	cppinit.c	/^  struct search_path *quote_head, *quote_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::search_path	file:
quote_include	cpplib.h	/^  struct search_path *quote_include;	\/* "" *\/$/;"	m	struct:cpp_options	typeref:struct:cpp_options::search_path
quote_tail	cppinit.c	/^  struct search_path *quote_head, *quote_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::	file:
r	combine.c	/^  union {rtx *r; unsigned int *i;} where;$/;"	m	union:undo::__anon34	file:
r	combine.c	/^  union {rtx r; unsigned int i;} old_contents;$/;"	m	union:undo::__anon33	file:
r	fold-const.c	/^  REAL_VALUE_TYPE *r;$/;"	m	struct:exact_real_inverse_args	file:
r	real.h	/^    HOST_WIDE_INT r[sizeof (double)\/sizeof (HOST_WIDE_INT)];$/;"	m	struct:__anon79
r	real.h	/^  HOST_WIDE_INT r[(11 + sizeof (HOST_WIDE_INT))\/(sizeof (HOST_WIDE_INT))];$/;"	m	struct:__anon76
r	real.h	/^  HOST_WIDE_INT r[(19 + sizeof (HOST_WIDE_INT))\/(sizeof (HOST_WIDE_INT))];$/;"	m	struct:__anon77
r	real.h	/^  HOST_WIDE_INT r[(7 + sizeof (HOST_WIDE_INT))\/(sizeof (HOST_WIDE_INT))];$/;"	m	struct:__anon78
r	tree.h	/^    rtx r;$/;"	m	union:tree_decl::__anon20
r1	loop.c	/^  rtx r1;$/;"	m	struct:rtx_pair	file:
r2	loop.c	/^  rtx r2;$/;"	m	struct:rtx_pair	file:
r_kind	tree.c	/^  r_kind,$/;"	e	enum:__anon88	file:
range_binop	fold-const.c	/^range_binop (code, type, arg0, upper0_p, arg1, upper1_p)$/;"	f	file:
range_end	c-typeck.c	/^  tree range_end;$/;"	m	struct:constructor_range_stack	file:
range_stack	c-typeck.c	/^  struct constructor_range_stack *range_stack;$/;"	m	struct:constructor_stack	typeref:struct:constructor_stack::constructor_range_stack	file:
range_start	c-typeck.c	/^  tree range_start;$/;"	m	struct:constructor_range_stack	file:
ranges_section_label	dwarf2out.c	/^static char ranges_section_label[2 * MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
ranges_table	dwarf2out.c	/^static dw_ranges_ref ranges_table;$/;"	v	file:
ranges_table_allocated	dwarf2out.c	/^static unsigned ranges_table_allocated;$/;"	v	file:
ranges_table_in_use	dwarf2out.c	/^static unsigned ranges_table_in_use;$/;"	v	file:
rank	sched-ebb.c	/^rank (insn1, insn2)$/;"	f	file:
rank	sched-int.h	/^  int (*rank) PARAMS ((rtx, rtx));$/;"	m	struct:sched_info
rank_for_schedule	haifa-sched.c	/^rank_for_schedule (x, y)$/;"	f	file:
rare_destination	reorg.c	/^rare_destination (insn)$/;"	f	file:
rbit	real.c	/^static UEMUSHORT rbit[NI];$/;"	v	file:
rc_order	basic-block.h	/^    int *rc_order;$/;"	m	struct:loops::cfg
rc_order	df.h	/^  int * rc_order; \/* reverse completion order -> block number *\/$/;"	m	struct:df
rd_gen	df.h	/^  bitmap rd_gen;$/;"	m	struct:bb_info
rd_gen	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
rd_in	df.h	/^  bitmap rd_in;$/;"	m	struct:bb_info
rd_kill	df.h	/^  bitmap rd_kill;$/;"	m	struct:bb_info
rd_kill	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
rd_out	df.h	/^  bitmap rd_out;$/;"	m	struct:bb_info
rd_out	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
rd_valid	df.h	/^  int rd_valid;$/;"	m	struct:bb_info
re	real.c	/^static int re = 0;$/;"	v	file:
reachable_code	except.c	/^enum reachable_code$/;"	g	file:
reachable_handlers	except.c	/^reachable_handlers (insn)$/;"	f
reachable_info	except.c	/^struct reachable_info$/;"	s	file:
reachable_next_level	except.c	/^reachable_next_level (region, type_thrown, info)$/;"	f	file:
reaching_defs	gcse.c	/^static sbitmap *rd_kill, *rd_gen, *reaching_defs, *rd_out;$/;"	v	file:
reaching_reg	gcse.c	/^  rtx reaching_reg;		\/* Register to use when re-writing.  *\/$/;"	m	struct:ls_expr	file:
reaching_reg	gcse.c	/^  rtx reaching_reg;$/;"	m	struct:expr	file:
read_dependence	alias.c	/^read_dependence (mem, x)$/;"	f
read_filename_string	cppfiles.c	/^read_filename_string (ch, f)$/;"	f	file:
read_flag	cpplib.c	/^read_flag (pfile, last)$/;"	f	file:
read_include_file	cppfiles.c	/^read_include_file (pfile, inc)$/;"	f	file:
read_integral_parameter	toplev.c	/^read_integral_parameter (p, pname, defval)$/;"	f
read_modify_subreg_p	df.c	/^read_modify_subreg_p (x)$/;"	f	file:
read_name_map	cppfiles.c	/^read_name_map (pfile, dirname)$/;"	f	file:
read_original_filename	cppinit.c	/^read_original_filename (pfile)$/;"	f	file:
reading_from_flag	c-format.c	/^  int reading_from_flag;$/;"	m	struct:format_wanted_type	file:
readonly_data_section	varasm.c	/^readonly_data_section ()$/;"	f
readonly_fields_p	alias.c	/^readonly_fields_p (type)$/;"	f
readonly_flag	tree.h	/^  unsigned readonly_flag : 1;$/;"	m	struct:tree_common
readonly_warning	c-typeck.c	/^readonly_warning (arg, msgid)$/;"	f
ready_add	haifa-sched.c	/^ready_add (ready, insn)$/;"	f
ready_cost_function	insn-attr.h	/^  int (*const ready_cost_function) PARAMS ((rtx));$/;"	m	struct:function_unit_desc
ready_lastpos	haifa-sched.c	/^ready_lastpos (ready)$/;"	f	file:
ready_list	haifa-sched.c	/^struct ready_list$/;"	s	file:
ready_remove_first	haifa-sched.c	/^ready_remove_first (ready)$/;"	f	file:
ready_sort	haifa-sched.c	/^ready_sort (ready)$/;"	f	file:
real	tree.h	/^  tree real;$/;"	m	struct:tree_complex
real_cst	tree.h	/^  REAL_VALUE_TYPE real_cst;$/;"	m	struct:tree_real_cst
real_cst	tree.h	/^  struct tree_real_cst real_cst;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_real_cst
real_extract	real.h	/^union real_extract $/;"	u
real_hex_to_f	fold-const.c	/^real_hex_to_f (s, mode)$/;"	f
real_onep	tree.c	/^real_onep (expr)$/;"	f
real_region	except.c	/^      struct eh_region *real_region;$/;"	m	struct:eh_region::__anon21::__anon27	typeref:struct:eh_region::__anon21::__anon27::eh_region	file:
real_twop	tree.c	/^real_twop (expr)$/;"	f
real_type_class	typeclass.h	/^  real_type_class, complex_type_class,$/;"	e	enum:type_class
real_value_from_int_cst	tree.c	/^real_value_from_int_cst (type, i)$/;"	f
real_value_truncate	fold-const.c	/^real_value_truncate (mode, arg)$/;"	f
real_value_truncate	real.c	/^real_value_truncate (mode, arg)$/;"	f
real_zerop	tree.c	/^real_zerop (expr)$/;"	f
realloc	system.h	591;"	d
really_call_calloc	system.h	580;"	d
really_call_malloc	system.h	579;"	d
really_call_realloc	system.h	581;"	d
really_constant_p	tree.c	/^really_constant_p (exp)$/;"	f
really_start_incremental_init	c-typeck.c	/^really_start_incremental_init (type)$/;"	f
realvaluetype	real.h	/^  } realvaluetype;$/;"	t	typeref:struct:__anon79
realvaluetype	real.h	/^} realvaluetype;$/;"	t	typeref:struct:__anon76
realvaluetype	real.h	/^} realvaluetype;$/;"	t	typeref:struct:__anon77
realvaluetype	real.h	/^} realvaluetype;$/;"	t	typeref:struct:__anon78
reason	line-map.h	/^  ENUM_BITFIELD (lc_reason) reason : CHAR_BIT;$/;"	m	struct:line_map
rebit	real.c	/^static UEMUSHORT rebit = 0;$/;"	v	file:
rebuild_jump_labels	jump.c	/^rebuild_jump_labels (f)$/;"	f
recog	insn-recog.c	/^recog (x0, insn, pnum_clobbers)$/;"	f
recog_1	insn-recog.c	/^recog_1 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_10	insn-recog.c	/^recog_10 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_11	insn-recog.c	/^recog_11 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_12	insn-recog.c	/^recog_12 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_13	insn-recog.c	/^recog_13 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_14	insn-recog.c	/^recog_14 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_15	insn-recog.c	/^recog_15 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_16	insn-recog.c	/^recog_16 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_17	insn-recog.c	/^recog_17 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_18	insn-recog.c	/^recog_18 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_19	insn-recog.c	/^recog_19 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_2	insn-recog.c	/^recog_2 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_20	insn-recog.c	/^recog_20 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_21	insn-recog.c	/^recog_21 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_22	insn-recog.c	/^recog_22 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_23	insn-recog.c	/^recog_23 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_24	insn-recog.c	/^recog_24 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_25	insn-recog.c	/^recog_25 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_26	insn-recog.c	/^recog_26 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_27	insn-recog.c	/^recog_27 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_28	insn-recog.c	/^recog_28 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_29	insn-recog.c	/^recog_29 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_3	insn-recog.c	/^recog_3 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_30	insn-recog.c	/^recog_30 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_31	insn-recog.c	/^recog_31 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_32	insn-recog.c	/^recog_32 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_4	insn-recog.c	/^recog_4 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_5	insn-recog.c	/^recog_5 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_6	insn-recog.c	/^recog_6 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_7	insn-recog.c	/^recog_7 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_8	insn-recog.c	/^recog_8 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_9	insn-recog.c	/^recog_9 (x0, insn, pnum_clobbers)$/;"	f	file:
recog_data	recog.c	/^struct recog_data recog_data;$/;"	v	typeref:struct:recog_data
recog_data	recog.h	/^struct recog_data$/;"	s
recog_for_combine	combine.c	/^recog_for_combine (pnewpat, insn, pnotes)$/;"	f	file:
recog_memoized	recog.h	24;"	d
recog_memoized_1	recog.c	/^recog_memoized_1 (insn)$/;"	f
recog_op_alt	recog.c	/^struct operand_alternative recog_op_alt[MAX_RECOG_OPERANDS][MAX_RECOG_ALTERNATIVES];$/;"	v	typeref:struct:operand_alternative
recognize_objc_keyword	c-lang.c	/^recognize_objc_keyword ()$/;"	f
recompute_reg_usage	flow.c	/^recompute_reg_usage (f, loop_step)$/;"	f
reconcat	concat.c	/^reconcat VPARAMS ((char *optr, const char *first, ...))$/;"	f
record_address_regs	regclass.c	/^record_address_regs (x, class, scale)$/;"	f	file:
record_alias_subset	alias.c	/^record_alias_subset (superset, subset)$/;"	f
record_align	tree.h	/^  unsigned int record_align;$/;"	m	struct:record_layout_info_s
record_base_value	alias.c	/^record_base_value (regno, val, invariant)$/;"	f
record_biv	loop.c	/^record_biv (loop, v, insn, dest_reg, inc_val, mult_val, location,$/;"	f	file:
record_builtin_type	c-decl.c	/^record_builtin_type (rid_index, name, type)$/;"	f
record_canonical_element_1	ssa.c	/^record_canonical_element_1 (srfp, data)$/;"	f	file:
record_component_aliases	alias.c	/^record_component_aliases (type)$/;"	f
record_conflicts	global.c	/^record_conflicts (allocno_vec, len)$/;"	f	file:
record_constant	varasm.c	/^record_constant (exp)$/;"	f	file:
record_constant_1	varasm.c	/^record_constant_1 (exp)$/;"	f	file:
record_constant_rtx	varasm.c	/^record_constant_rtx (mode, x)$/;"	f	file:
record_dead_and_set_regs	combine.c	/^record_dead_and_set_regs (insn)$/;"	f	file:
record_dead_and_set_regs_1	combine.c	/^record_dead_and_set_regs_1 (dest, setter, data)$/;"	f	file:
record_effective_endpoints	cfglayout.c	/^record_effective_endpoints ()$/;"	f	file:
record_excess_regs	loop.c	/^record_excess_regs (in_this, not_in_this, output)$/;"	f
record_giv	loop.c	/^record_giv (loop, v, insn, src_reg, dest_reg, mult_val, add_val, ext_val,$/;"	f	file:
record_initial	loop.c	/^record_initial (dest, set, data)$/;"	f	file:
record_insns	function.c	/^record_insns (insns, vecp)$/;"	f	file:
record_jump_cond	cse.c	/^record_jump_cond (code, mode, op0, op1, reversed_nonequality)$/;"	f	file:
record_jump_equiv	cse.c	/^record_jump_equiv (insn, taken)$/;"	f	file:
record_label_references	reg-stack.c	/^record_label_references (insn, pat)$/;"	f	file:
record_last_error_function	diagnostic.c	/^record_last_error_function ()$/;"	f
record_last_error_module	diagnostic.c	/^record_last_error_module ()$/;"	f
record_last_mem_set_info	gcse.c	/^record_last_mem_set_info (insn)$/;"	f	file:
record_last_reg_set_info	gcse.c	/^record_last_reg_set_info (insn, regno)$/;"	f	file:
record_last_set_info	gcse.c	/^record_last_set_info (dest, setter, data)$/;"	f	file:
record_layout_info	tree.h	/^} *record_layout_info;$/;"	t	typeref:struct:record_layout_info_s
record_layout_info_s	tree.h	/^typedef struct record_layout_info_s$/;"	s
record_one_conflict	global.c	/^record_one_conflict (regno)$/;"	f	file:
record_one_set	gcse.c	/^record_one_set (regno, insn)$/;"	f	file:
record_one_stack_memref	regmove.c	/^record_one_stack_memref (insn, mem, next_memlist)$/;"	f	file:
record_operand_costs	regclass.c	/^record_operand_costs (insn, op_costs, reg_pref)$/;"	f	file:
record_promoted_value	combine.c	/^record_promoted_value (insn, subreg)$/;"	f	file:
record_reg_classes	regclass.c	/^record_reg_classes (n_alts, n_ops, ops, modes,$/;"	f	file:
record_set	alias.c	/^record_set (dest, set, data)$/;"	f	file:
record_set_info	gcse.c	/^record_set_info (dest, setter, data)$/;"	f	file:
record_stack_memrefs	regmove.c	/^record_stack_memrefs (xp, data)$/;"	f	file:
record_stack_memrefs_data	regmove.c	/^struct record_stack_memrefs_data$/;"	s	file:
record_type_class	typeclass.h	/^  record_type_class, union_type_class,$/;"	e	enum:type_class
record_value_for_reg	combine.c	/^record_value_for_reg (reg, insn, value)$/;"	f	file:
recorded_label_ref	cse.c	/^static int recorded_label_ref;$/;"	v	file:
recorded_label_ref	local-alloc.c	/^static int recorded_label_ref;$/;"	v	file:
red_zone_size	i386.c	/^  int red_zone_size;$/;"	m	struct:ix86_frame	file:
redeclaration_error_message	c-decl.c	/^redeclaration_error_message (newdecl, olddecl)$/;"	f	file:
redirect_edge_and_branch	cfgrtl.c	/^redirect_edge_and_branch (e, target)$/;"	f
redirect_edge_and_branch_force	cfgrtl.c	/^redirect_edge_and_branch_force (e, target)$/;"	f
redirect_edge_pred	cfg.c	/^redirect_edge_pred (e, new_pred)$/;"	f
redirect_edge_succ	cfg.c	/^redirect_edge_succ (e, new_succ)$/;"	f
redirect_edge_succ_nodup	cfg.c	/^redirect_edge_succ_nodup (e, new_succ)$/;"	f
redirect_exp	jump.c	/^redirect_exp (olabel, nlabel, insn)$/;"	f	file:
redirect_exp_1	jump.c	/^redirect_exp_1 (loc, olabel, nlabel, insn)$/;"	f	file:
redirect_jump	jump.c	/^redirect_jump (jump, nlabel, delete_unused)$/;"	f
redirect_jump_1	jump.c	/^redirect_jump_1 (jump, nlabel)$/;"	f
redirect_with_delay_list_safe_p	reorg.c	/^redirect_with_delay_list_safe_p (jump, newlabel, delay_list)$/;"	f	file:
redirect_with_delay_slots_safe_p	reorg.c	/^redirect_with_delay_slots_safe_p (jump, newlabel, seq)$/;"	f	file:
redundant_insn	reorg.c	/^redundant_insn (insn, target, delay_list)$/;"	f	file:
reemit_notes	haifa-sched.c	/^reemit_notes (insn, last)$/;"	f	file:
ref	df.h	/^  struct ref *ref;$/;"	m	struct:df_link	typeref:struct:df_link::ref
ref	df.h	/^struct ref$/;"	s
ref_count	sched-int.h	/^  int ref_count;$/;"	m	struct:haifa_insn_data
ref_outside_mem	reload1.c	/^  int ref_outside_mem;		\/* "to" has been referenced outside a MEM.  *\/$/;"	m	struct:elim_table	file:
refcnt	cppfiles.c	/^  unsigned short refcnt;	\/* number of stacked buffers using this file *\/$/;"	m	struct:include_file	file:
refcount	dwarf2out.c	/^  unsigned int refcount;$/;"	m	struct:indirect_string_node	file:
reference_to	tree.h	/^  tree reference_to;$/;"	m	struct:tree_type
reference_type_class	typeclass.h	/^  pointer_type_class, reference_type_class, offset_type_class,$/;"	e	enum:type_class
reference_types_internal	stor-layout.c	/^static int reference_types_internal = 0;$/;"	v	file:
referenced_regs	caller-save.c	/^static HARD_REG_SET referenced_regs;$/;"	v	file:
references_value_p	cselib.c	/^references_value_p (x, only_useless)$/;"	f
refers_to_mem_for_reload_p	reload.c	/^refers_to_mem_for_reload_p (x)$/;"	f
refers_to_regno_for_reload_p	reload.c	/^refers_to_regno_for_reload_p (regno, endregno, x, loc)$/;"	f
refers_to_regno_p	rtlanal.c	/^refers_to_regno_p (regno, endregno, x, loc)$/;"	f
refresh_blocks	combine.c	/^static sbitmap refresh_blocks;$/;"	v	file:
refs	regs.h	/^  int refs;			\/* # of times (REG n) is used or set *\/$/;"	m	struct:reg_info_def
reg	calls.c	/^  rtx reg;$/;"	m	struct:arg_data	file:
reg	conflict.c	/^  int reg;$/;"	m	struct:print_context	file:
reg	df.h	/^  rtx reg;			\/* The register referenced.  *\/$/;"	m	struct:ref
reg	dwarf2out.c	/^  rtx reg;$/;"	m	struct:queued_reg_save	file:
reg	dwarf2out.c	/^  unsigned long reg;$/;"	m	struct:cfa_loc	file:
reg	global.c	/^  int reg;$/;"	m	struct:allocno	file:
reg	loop.c	/^  rtx reg;$/;"	m	struct:note_reg_stored_arg	file:
reg	loop.h	/^  rtx reg;      \/* Corresponding pseudo, if any.  *\/$/;"	m	struct:loop_mem_info
reg	reg-stack.c	/^  unsigned char reg[REG_STACK_SIZE];\/* register - stack mapping *\/$/;"	m	struct:stack_def	file:
reg	ssa.c	/^  unsigned int reg;$/;"	m	struct:__anon2	file:
reg	varray.h	/^  struct reg_info_def	 *reg[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::reg_info_def
reg_address_cost	loop.c	/^static int reg_address_cost;$/;"	v	file:
reg_alloc_order	regclass.c	/^int reg_alloc_order[FIRST_PSEUDO_REGISTER] = REG_ALLOC_ORDER;$/;"	v
reg_allocno	global.c	/^static int *reg_allocno;$/;"	v	file:
reg_alternate_class	regclass.c	/^reg_alternate_class (regno)$/;"	f
reg_avail_info	gcse.c	/^static struct reg_avail_info *reg_avail_info;$/;"	v	typeref:struct:reg_avail_info	file:
reg_avail_info	gcse.c	/^struct reg_avail_info$/;"	s	file:
reg_base_reg	reload1.c	/^static int reg_base_reg[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_base_value	alias.c	/^static rtx *reg_base_value;$/;"	v	file:
reg_base_value_size	alias.c	/^static unsigned int reg_base_value_size; \/* size of reg_base_value array *\/$/;"	v	file:
reg_becomes_live	global.c	/^reg_becomes_live (reg, setter, regs_set)$/;"	f	file:
reg_becomes_live	lcm.c	/^reg_becomes_live (reg, setter, live)$/;"	f	file:
reg_bitfield_target_p	combine.c	/^reg_bitfield_target_p (x, body)$/;"	f	file:
reg_changes_mode	regclass.c	/^static regset reg_changes_mode;$/;"	v	file:
reg_class	i386.h	/^enum reg_class$/;"	g
reg_class_contents	regclass.c	/^HARD_REG_SET reg_class_contents[N_REG_CLASSES];$/;"	v
reg_class_names	regrename.c	/^static const char *const reg_class_names[] = REG_CLASS_NAMES;$/;"	v	file:
reg_class_names	reload.c	/^static const char * const reg_class_names[] = REG_CLASS_NAMES;$/;"	v	file:
reg_class_size	regclass.c	/^unsigned int reg_class_size[N_REG_CLASSES];$/;"	v
reg_class_subclasses	regclass.c	/^enum reg_class reg_class_subclasses[N_REG_CLASSES][N_REG_CLASSES];$/;"	v	typeref:enum:reg_class
reg_class_subset_p	regclass.c	/^reg_class_subset_p (c1, c2)$/;"	f
reg_class_subunion	regclass.c	/^enum reg_class reg_class_subunion[N_REG_CLASSES][N_REG_CLASSES];$/;"	v	typeref:enum:reg_class
reg_class_superclasses	regclass.c	/^enum reg_class reg_class_superclasses[N_REG_CLASSES][N_REG_CLASSES];$/;"	v	typeref:enum:reg_class
reg_class_superunion	regclass.c	/^enum reg_class reg_class_superunion[N_REG_CLASSES][N_REG_CLASSES];$/;"	v	typeref:enum:reg_class
reg_classes_intersect_p	regclass.c	/^reg_classes_intersect_p (c1, c2)$/;"	f
reg_cond_dead	flow.c	/^  splay_tree reg_cond_dead;$/;"	m	struct:propagate_block_info	file:
reg_cond_life_info	flow.c	/^struct reg_cond_life_info$/;"	s	file:
reg_cond_reg	flow.c	/^  regset reg_cond_reg;$/;"	m	struct:propagate_block_info	file:
reg_dead_after_loop	unroll.c	/^reg_dead_after_loop (loop, reg)$/;"	f	file:
reg_dead_at_p	combine.c	/^reg_dead_at_p (reg, insn)$/;"	f	file:
reg_dead_at_p_1	combine.c	/^reg_dead_at_p_1 (dest, x, data)$/;"	f	file:
reg_dead_endregno	combine.c	/^static unsigned int reg_dead_regno, reg_dead_endregno;$/;"	v	file:
reg_dead_flag	combine.c	/^static int reg_dead_flag;$/;"	v	file:
reg_dead_regno	combine.c	/^static unsigned int reg_dead_regno, reg_dead_endregno;$/;"	v	file:
reg_def_last	df.h	/^  struct ref **reg_def_last;	\/* Indexed by regno.  *\/$/;"	m	struct:df	typeref:struct:df::ref
reg_dies	global.c	/^reg_dies (regno, mode, chain)$/;"	f	file:
reg_dies	lcm.c	/^reg_dies (reg, live)$/;"	f	file:
reg_eliminate	reload1.c	/^static struct elim_table *reg_eliminate = 0;$/;"	v	typeref:struct:elim_table	file:
reg_eliminate_1	reload1.c	/^} reg_eliminate_1[] =$/;"	v	typeref:struct:elim_table_1	file:
reg_equiv	local-alloc.c	/^static struct equivalence *reg_equiv;$/;"	v	typeref:struct:equivalence	file:
reg_equiv_address	reload1.c	/^rtx *reg_equiv_address;$/;"	v
reg_equiv_constant	reload1.c	/^rtx *reg_equiv_constant;$/;"	v
reg_equiv_init	reload1.c	/^static rtx *reg_equiv_init;$/;"	v	file:
reg_equiv_mem	reload1.c	/^rtx *reg_equiv_mem;$/;"	v
reg_equiv_memory_loc	reload1.c	/^rtx *reg_equiv_memory_loc;$/;"	v
reg_eqv_elem	cse.c	/^struct reg_eqv_elem$/;"	s	file:
reg_eqv_table	cse.c	/^static struct reg_eqv_elem *reg_eqv_table;$/;"	v	typeref:struct:reg_eqv_elem	file:
reg_fits_class_p	recog.c	/^reg_fits_class_p (operand, class, offset, mode)$/;"	f
reg_flag	reload.c	/^  int reg_flag;		\/* Nonzero if referencing a register.  *\/$/;"	m	struct:decomposition	file:
reg_has_output_reload	reload1.c	/^static char *reg_has_output_reload;$/;"	v	file:
reg_hash	cse.c	/^static struct cse_reg_info *reg_hash[REGHASH_SIZE];$/;"	v	typeref:struct:cse_reg_info	file:
reg_in_basic_block_p	loop.c	/^reg_in_basic_block_p (insn, reg)$/;"	f	file:
reg_in_table	cse.c	/^  int reg_in_table;$/;"	m	struct:cse_reg_info	file:
reg_info	df.h	/^struct reg_info$/;"	s
reg_info	regs.h	/^} reg_info;$/;"	t	typeref:struct:reg_info_def
reg_info_data	regclass.c	/^struct reg_info_data {$/;"	s	file:
reg_info_def	regs.h	/^typedef struct reg_info_def$/;"	s
reg_info_head	regclass.c	/^static struct reg_info_data *reg_info_head;$/;"	v	typeref:struct:reg_info_data	file:
reg_is_born	local-alloc.c	/^reg_is_born (reg, birth)$/;"	f	file:
reg_is_output_reload	reload1.c	/^static HARD_REG_SET reg_is_output_reload;$/;"	v	file:
reg_is_remote_constant_p	regmove.c	/^reg_is_remote_constant_p (reg, insn, first)$/;"	f	file:
reg_is_set	local-alloc.c	/^reg_is_set (reg, setter, data)$/;"	f	file:
reg_key	prefix.c	/^static HKEY reg_key = (HKEY) INVALID_HANDLE_VALUE;$/;"	v	file:
reg_known_equiv_p	alias.c	/^char *reg_known_equiv_p;$/;"	v
reg_known_value	alias.c	/^rtx *reg_known_value;$/;"	v
reg_known_value_size	alias.c	/^static unsigned int reg_known_value_size;$/;"	v	file:
reg_last	sched-int.h	/^    } *reg_last;$/;"	m	struct:deps	typeref:struct:deps::deps_reg
reg_last_death	combine.c	/^static rtx *reg_last_death;$/;"	v	file:
reg_last_in_use	sched-int.h	/^  regset_head reg_last_in_use;$/;"	m	struct:deps
reg_last_reload_reg	reload1.c	/^static rtx *reg_last_reload_reg;$/;"	v	file:
reg_last_set	combine.c	/^static rtx *reg_last_set;$/;"	v	file:
reg_last_set_invalid	combine.c	/^static char *reg_last_set_invalid;$/;"	v	file:
reg_last_set_label	combine.c	/^static int *reg_last_set_label;$/;"	v	file:
reg_last_set_mode	combine.c	/^static enum machine_mode *reg_last_set_mode;$/;"	v	typeref:enum:machine_mode	file:
reg_last_set_nonzero_bits	combine.c	/^static unsigned HOST_WIDE_INT *reg_last_set_nonzero_bits;$/;"	v	file:
reg_last_set_sign_bit_copies	combine.c	/^static char *reg_last_set_sign_bit_copies;$/;"	v	file:
reg_last_set_table_tick	combine.c	/^static int *reg_last_set_table_tick;$/;"	v	file:
reg_last_set_value	combine.c	/^static rtx *reg_last_set_value;$/;"	v	file:
reg_live	flow.c	/^  regset reg_live;$/;"	m	struct:propagate_block_info	file:
reg_loc	ssa.c	/^  rtx *reg_loc;$/;"	m	struct:rename_set_data	file:
reg_loc_descriptor	dwarf2out.c	/^reg_loc_descriptor (rtl)$/;"	f	file:
reg_map	integrate.h	/^  rtx *reg_map;$/;"	m	struct:inline_remap
reg_max_ref_width	reload1.c	/^static unsigned int *reg_max_ref_width;$/;"	v	file:
reg_may_share	global.c	/^static int *reg_may_share;$/;"	v	file:
reg_meets_class_p	local-alloc.c	/^reg_meets_class_p (reg, class)$/;"	f	file:
reg_mentioned_p	rtlanal.c	/^reg_mentioned_p (reg, in)$/;"	f
reg_mode	reload1.c	/^static enum machine_mode reg_mode[FIRST_PSEUDO_REGISTER];$/;"	v	typeref:enum:machine_mode	file:
reg_n_info	flow.c	/^varray_type reg_n_info;$/;"	v
reg_n_max	regclass.c	/^static unsigned int reg_n_max;$/;"	v	file:
reg_names	print-rtl.c	/^const char * reg_names[] = REGISTER_NAMES;$/;"	v
reg_names	print-rtl.c	48;"	d	file:
reg_names	regclass.c	/^const char * reg_names[] = REGISTER_NAMES;$/;"	v
reg_next_in_qty	local-alloc.c	/^static int *reg_next_in_qty;$/;"	v	file:
reg_next_use	flow.c	/^  rtx *reg_next_use;$/;"	m	struct:propagate_block_info	file:
reg_no_sp_operand	i386.c	/^reg_no_sp_operand (op, mode)$/;"	f
reg_nonzero_bits	combine.c	/^static unsigned HOST_WIDE_INT *reg_nonzero_bits;$/;"	v	file:
reg_note	rtl.h	/^enum reg_note$/;"	g
reg_note_name	rtl.c	/^const char * const reg_note_name[] =$/;"	v
reg_number	dwarf2out.c	/^reg_number (rtl)$/;"	f	file:
reg_offset	local-alloc.c	/^static char *reg_offset;$/;"	v	file:
reg_offset	reload1.c	/^static HOST_WIDE_INT reg_offset[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_old_renumber	reload1.c	/^static short *reg_old_renumber;$/;"	v	file:
reg_overlap_mentioned_for_reload_p	reload.c	/^reg_overlap_mentioned_for_reload_p (x, in)$/;"	f
reg_overlap_mentioned_p	rtlanal.c	/^reg_overlap_mentioned_p (x, in)$/;"	f
reg_partition	ssa.c	/^  partition reg_partition;$/;"	m	struct:ssa_rename_from_hash_table_data	file:
reg_pending_barrier	sched-deps.c	/^static bool reg_pending_barrier;$/;"	v	file:
reg_pending_clobbers	sched-deps.c	/^static regset reg_pending_clobbers;$/;"	v	file:
reg_pending_clobbers_head	sched-deps.c	/^static regset_head reg_pending_clobbers_head;$/;"	v	file:
reg_pending_sets	sched-deps.c	/^static regset reg_pending_sets;$/;"	v	file:
reg_pending_sets_head	sched-deps.c	/^static regset_head reg_pending_sets_head;$/;"	v	file:
reg_pending_uses	sched-deps.c	/^static regset reg_pending_uses;$/;"	v	file:
reg_pending_uses_head	sched-deps.c	/^static regset_head reg_pending_uses_head;$/;"	v	file:
reg_pref	regclass.c	/^static struct reg_pref *reg_pref;$/;"	v	typeref:struct:reg_pref	file:
reg_pref	regclass.c	/^struct reg_pref$/;"	s	file:
reg_pref_buffer	regclass.c	/^static struct reg_pref *reg_pref_buffer;$/;"	v	typeref:struct:reg_pref	file:
reg_preferred_class	regclass.c	/^reg_preferred_class (regno)$/;"	f
reg_qty	cse.c	/^  int reg_qty;$/;"	m	struct:cse_reg_info	file:
reg_qty	local-alloc.c	/^static int *reg_qty;$/;"	v	file:
reg_raw_mode	regclass.c	/^enum machine_mode reg_raw_mode[FIRST_PSEUDO_REGISTER];$/;"	v	typeref:enum:machine_mode
reg_referenced_between_p	rtlanal.c	/^reg_referenced_between_p (reg, from_insn, to_insn)$/;"	f
reg_referenced_p	rtlanal.c	/^reg_referenced_p (x, body)$/;"	f
reg_reloaded_contents	reload1.c	/^static int reg_reloaded_contents[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_reloaded_dead	reload1.c	/^static HARD_REG_SET reg_reloaded_dead;$/;"	v	file:
reg_reloaded_died	reload1.c	/^static HARD_REG_SET reg_reloaded_died;$/;"	v	file:
reg_reloaded_insn	reload1.c	/^static rtx reg_reloaded_insn[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_reloaded_valid	reload1.c	/^static HARD_REG_SET reg_reloaded_valid;$/;"	v	file:
reg_renumber	local-alloc.c	/^short *reg_renumber;$/;"	v
reg_restore_code	caller-save.c	/^  reg_restore_code[FIRST_PSEUDO_REGISTER][MAX_MACHINE_MODE];$/;"	v	file:
reg_rtx	gcse.c	/^struct reg_use {rtx reg_rtx; };$/;"	m	struct:reg_use	file:
reg_rtx	reload.h	/^  rtx reg_rtx;$/;"	m	struct:reload
reg_rtx_no	function.h	111;"	d
reg_save	dwarf2out.c	/^reg_save (label, reg, sreg, offset)$/;"	f	file:
reg_save_code	caller-save.c	/^  reg_save_code[FIRST_PSEUDO_REGISTER][MAX_MACHINE_MODE];$/;"	v	file:
reg_scan	regclass.c	/^reg_scan (f, nregs, repeat)$/;"	f
reg_scan_mark_refs	regclass.c	/^reg_scan_mark_refs (x, insn, note_flag, min_regno)$/;"	f	file:
reg_scan_update	regclass.c	/^reg_scan_update (first, last, old_max_regno)$/;"	f
reg_seen	alias.c	/^static char *reg_seen;$/;"	v	file:
reg_set	gcse.c	/^typedef struct reg_set$/;"	s	file:
reg_set	gcse.c	/^} reg_set;$/;"	t	typeref:struct:reg_set	file:
reg_set	reg-stack.c	/^  HARD_REG_SET reg_set;		\/* set of live registers *\/$/;"	m	struct:stack_def	file:
reg_set_between_p	rtlanal.c	/^reg_set_between_p (reg, from_insn, to_insn)$/;"	f
reg_set_bitmap	gcse.c	/^static regset reg_set_bitmap;$/;"	v	file:
reg_set_in_block	gcse.c	/^static sbitmap *reg_set_in_block;$/;"	v	file:
reg_set_info	gcse.c	/^reg_set_info (dest, setter, data)$/;"	f	file:
reg_set_last	rtlanal.c	/^reg_set_last (x, insn)$/;"	f
reg_set_luid	reload1.c	/^static int reg_set_luid[FIRST_PSEUDO_REGISTER];$/;"	v	file:
reg_set_obstack	gcse.c	/^static struct obstack reg_set_obstack;$/;"	v	typeref:struct:obstack	file:
reg_set_p	rtlanal.c	/^reg_set_p (reg, insn)$/;"	f
reg_set_table	gcse.c	/^static reg_set **reg_set_table;$/;"	v	file:
reg_set_table_size	gcse.c	/^static int reg_set_table_size;$/;"	v	file:
reg_set_to_hard_reg_set	flow.c	/^reg_set_to_hard_reg_set (to, from)$/;"	f
reg_sign_bit_copies	combine.c	/^static unsigned char *reg_sign_bit_copies;$/;"	v	file:
reg_size	df.h	/^  unsigned int reg_size;	\/* Size of regs table.  *\/$/;"	m	struct:df
reg_state	reload1.c	/^  } reg_state[FIRST_PSEUDO_REGISTER];$/;"	v	typeref:struct:__anon1	file:
reg_tick	cse.c	/^  int reg_tick;$/;"	m	struct:cse_reg_info	file:
reg_to_stack	reg-stack.c	/^reg_to_stack (first, file)$/;"	f
reg_use	gcse.c	/^struct reg_use {rtx reg_rtx; };$/;"	s	file:
reg_use	reload1.c	/^    struct reg_use reg_use[RELOAD_COMBINE_MAX_USES];$/;"	m	struct:__anon1	typeref:struct:__anon1::reg_use	file:
reg_use	reload1.c	/^struct reg_use { rtx insn, *usep; };$/;"	s	file:
reg_use_count	gcse.c	/^static int reg_use_count;$/;"	v	file:
reg_use_table	gcse.c	/^static struct reg_use reg_use_table[MAX_USES];$/;"	v	typeref:struct:reg_use	file:
reg_used_between_p	rtlanal.c	/^reg_used_between_p (reg, from_insn, to_insn)$/;"	f
reg_used_in_insn	reload1.c	/^static HARD_REG_SET reg_used_in_insn;$/;"	v	file:
reg_values	cselib.c	/^static varray_type reg_values;$/;"	v	file:
reg_weight	sched-int.h	/^  short reg_weight;$/;"	m	struct:haifa_insn_data
regclass	regclass.c	/^regclass (f, nregs, dump)$/;"	f
regclass_compatible_p	regmove.c	/^regclass_compatible_p (class0, class1)$/;"	f	file:
regclass_init	regclass.c	/^regclass_init ()$/;"	f
regclass_map	i386.c	/^enum reg_class const regclass_map[FIRST_PSEUDO_REGISTER] =$/;"	v
regcost	cse.c	/^  int regcost;$/;"	m	struct:table_elt	file:
regdecl_flag	tree.h	/^  unsigned regdecl_flag : 1;$/;"	m	struct:tree_decl
region	except.c	/^  struct eh_region *region;$/;"	m	struct:ehl_map_entry	typeref:struct:ehl_map_entry::eh_region	file:
region	sched-rgn.c	/^region;$/;"	t	typeref:struct:__anon29	file:
region_array	except.c	/^  struct eh_region **region_array;$/;"	m	struct:eh_status	typeref:struct:eh_status::eh_region	file:
region_number	except.c	/^  int region_number;$/;"	m	struct:eh_region	file:
region_sched_info	sched-rgn.c	/^static struct sched_info region_sched_info =$/;"	v	typeref:struct:sched_info	file:
region_tree	except.c	/^  struct eh_region *region_tree;$/;"	m	struct:eh_status	typeref:struct:eh_status::eh_region	file:
register_operand	recog.c	/^register_operand (op, mode)$/;"	f
regmove_bb_head	regmove.c	/^static int *regmove_bb_head;$/;"	v	file:
regmove_optimize	regmove.c	/^regmove_optimize (f, nregs, regmove_dump_file)$/;"	f
regno	cse.c	/^  unsigned int regno;$/;"	m	struct:cse_reg_info	file:
regno	i386.h	/^  int regno;			\/* next available register number *\/$/;"	m	struct:ix86_args
regno	loop.c	/^  unsigned int regno;		\/* The register it sets *\/$/;"	m	struct:movable	file:
regno	loop.h	/^  unsigned int regno;		\/* Pseudo reg which is the biv.  *\/$/;"	m	struct:iv_class
regno	reload.h	/^  int regno;$/;"	m	struct:reload
regno_allocated	regclass.c	/^static size_t regno_allocated;$/;"	v	file:
regno_clobbered_at_setjmp	flow.c	/^regno_clobbered_at_setjmp (regno)$/;"	f
regno_clobbered_p	reload.c	/^regno_clobbered_p (regno, insn, mode, sets)$/;"	f
regno_decl	function.h	/^  tree *regno_decl;$/;"	m	struct:emit_status
regno_pointer_align	function.h	/^  unsigned char *regno_pointer_align;$/;"	m	struct:emit_status
regno_pointer_align	integrate.h	/^  unsigned char *regno_pointer_align;$/;"	m	struct:inline_remap
regno_pointer_align_length	function.h	/^  int regno_pointer_align_length;$/;"	m	struct:emit_status
regno_reg_rtx	function.h	113;"	d
regno_save_mem	caller-save.c	/^  regno_save_mem[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX \/ MIN_UNITS_PER_WORD + 1];$/;"	v	file:
regno_save_mode	caller-save.c	/^  regno_save_mode[FIRST_PSEUDO_REGISTER][MAX_MOVE_MAX \/ MIN_UNITS_PER_WORD + 1];$/;"	v	typeref:enum:machine_mode	file:
regno_src_regno	regmove.c	/^static int *regno_src_regno;$/;"	v	file:
regno_to_find	flow.c	/^  unsigned regno_to_find;$/;"	m	struct:__anon45	file:
regno_uninitialized	flow.c	/^regno_uninitialized (regno)$/;"	f
regno_use_in	rtlanal.c	/^regno_use_in (regno, x)$/;"	f
regrename_optimize	regrename.c	/^regrename_optimize ()$/;"	f
regs	df.h	/^  struct reg_info *regs;	\/* Regs table, index by regno.  *\/$/;"	m	struct:df	typeref:struct:df::reg_info
regs	loop.h	/^  struct iv *regs;$/;"	m	struct:loop_ivs	typeref:struct:loop_ivs::iv
regs	loop.h	/^  struct loop_regs regs;$/;"	m	struct:loop_info	typeref:struct:loop_info::loop_regs
regs	reload.h	/^  short regs[2][N_REG_CLASSES];$/;"	m	struct:needs
regs	resource.h	/^  HARD_REG_SET regs;	\/* Which registers are set or needed.  *\/$/;"	m	struct:resources
regs	rtlanal.c	/^  HARD_REG_SET regs;$/;"	m	struct:parms_set_data	file:
regs_ever_live	final.c	/^char regs_ever_live[FIRST_PSEUDO_REGISTER];$/;"	v
regs_invalidated_by_call	regclass.c	/^HARD_REG_SET regs_invalidated_by_call;$/;"	v
regs_live	lcm.c	/^  HARD_REG_SET regs_live;$/;"	m	struct:seginfo	file:
regs_live	local-alloc.c	/^static HARD_REG_SET regs_live;$/;"	v	file:
regs_live_at	local-alloc.c	/^static HARD_REG_SET *regs_live_at;$/;"	v	file:
regs_live_at_setjmp	flow.c	/^regset regs_live_at_setjmp;$/;"	v
regs_match_p	loop.c	/^regs_match_p (x, y, movables)$/;"	f	file:
regs_may_share	flow.c	/^rtx regs_may_share;$/;"	v
regs_set	global.c	/^static rtx *regs_set;$/;"	v	file:
regs_set_between_p	rtlanal.c	/^regs_set_between_p (x, start, end)$/;"	f
regs_someone_prefers	global.c	/^  HARD_REG_SET regs_someone_prefers;$/;"	m	struct:allocno	file:
regs_used_so_far	global.c	/^static HARD_REG_SET regs_used_so_far;$/;"	v	file:
regset	basic-block.h	/^typedef bitmap regset;$/;"	t
regset_bytes	flow.c	/^int regset_bytes;$/;"	v
regset_head	basic-block.h	/^typedef bitmap_head regset_head;$/;"	t
regset_release_memory	regclass.c	/^regset_release_memory ()$/;"	f
regset_size	flow.c	/^int regset_size;$/;"	v
regvec	gcse.c	/^static sbitmap * regvec;$/;"	v	file:
rehash_using_reg	cse.c	/^rehash_using_reg (x)$/;"	f	file:
reject	recog.h	/^  unsigned int reject;$/;"	m	struct:operand_alternative
related_value	cse.c	/^  struct table_elt *related_value;$/;"	m	struct:table_elt	typeref:struct:table_elt::table_elt	file:
relax_delay_slots	reorg.c	/^relax_delay_slots (first)$/;"	f	file:
release_pages	ggc-page.c	/^release_pages ()$/;"	f	file:
reload	reload.h	/^struct reload$/;"	s
reload	reload1.c	/^reload (first, global)$/;"	f
reload_as_needed	reload1.c	/^reload_as_needed (live_known)$/;"	f	file:
reload_combine	reload1.c	/^reload_combine ()$/;"	f	file:
reload_combine_note_store	reload1.c	/^reload_combine_note_store (dst, set, data)$/;"	f	file:
reload_combine_note_use	reload1.c	/^reload_combine_note_use (xp, insn)$/;"	f	file:
reload_combine_ruid	reload1.c	/^static int reload_combine_ruid;$/;"	v	file:
reload_completed	recog.c	/^int reload_completed;$/;"	v
reload_cse_delete_noop_set	reload1.c	/^reload_cse_delete_noop_set (insn, value)$/;"	f	file:
reload_cse_move2add	reload1.c	/^reload_cse_move2add (first)$/;"	f	file:
reload_cse_noop_set_p	reload1.c	/^reload_cse_noop_set_p (set)$/;"	f	file:
reload_cse_regs	reload1.c	/^reload_cse_regs (first)$/;"	f
reload_cse_regs_1	reload1.c	/^reload_cse_regs_1 (first)$/;"	f	file:
reload_cse_simplify	reload1.c	/^reload_cse_simplify (insn)$/;"	f	file:
reload_cse_simplify_operands	reload1.c	/^reload_cse_simplify_operands (insn)$/;"	f	file:
reload_cse_simplify_set	reload1.c	/^reload_cse_simplify_set (set, insn)$/;"	f	file:
reload_earlyclobbers	reload.c	/^rtx reload_earlyclobbers[MAX_RECOG_OPERANDS];$/;"	v
reload_first_uid	reload1.c	/^int reload_first_uid;$/;"	v
reload_firstobj	reload1.c	/^char *reload_firstobj;$/;"	v
reload_in_optab	reload1.c	/^enum insn_code reload_in_optab[NUM_MACHINE_MODES];$/;"	v	typeref:enum:insn_code
reload_in_progress	reload1.c	/^int reload_in_progress = 0;$/;"	v
reload_inheritance_insn	reload1.c	/^rtx reload_inheritance_insn[MAX_RELOADS];$/;"	v
reload_inherited	reload1.c	/^char reload_inherited[MAX_RELOADS];$/;"	v
reload_inner_reg_of_subreg	reload.c	/^reload_inner_reg_of_subreg (x, mode)$/;"	f	file:
reload_insn_chain	reload1.c	/^struct insn_chain *reload_insn_chain;$/;"	v	typeref:struct:insn_chain
reload_insn_firstobj	reload1.c	/^static char *reload_insn_firstobj;$/;"	v	file:
reload_n_operands	reload.c	/^int reload_n_operands;$/;"	v
reload_obstack	reload1.c	/^struct obstack reload_obstack;$/;"	v	typeref:struct:obstack
reload_order	reload1.c	/^static short reload_order[MAX_RELOADS];$/;"	v	file:
reload_out_optab	reload1.c	/^enum insn_code reload_out_optab[NUM_MACHINE_MODES];$/;"	v	typeref:enum:insn_code
reload_override_in	reload1.c	/^rtx reload_override_in[MAX_RELOADS];$/;"	v
reload_reg_class_lower	reload1.c	/^reload_reg_class_lower (r1p, r2p)$/;"	f	file:
reload_reg_free_for_value_p	reload1.c	/^reload_reg_free_for_value_p (start_regno, regno, opnum, type, value, out,$/;"	f	file:
reload_reg_free_p	reload1.c	/^reload_reg_free_p (regno, opnum, type)$/;"	f	file:
reload_reg_reaches_end_p	reload1.c	/^reload_reg_reaches_end_p (regno, opnum, type)$/;"	f	file:
reload_reg_unavailable	reload1.c	/^static HARD_REG_SET reload_reg_unavailable;$/;"	v	file:
reload_reg_used	reload1.c	/^static HARD_REG_SET reload_reg_used;$/;"	v	file:
reload_reg_used_at_all	reload1.c	/^static HARD_REG_SET reload_reg_used_at_all;$/;"	v	file:
reload_reg_used_for_inherit	reload1.c	/^static HARD_REG_SET reload_reg_used_for_inherit;$/;"	v	file:
reload_reg_used_in_inpaddr_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_inpaddr_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_input	reload1.c	/^static HARD_REG_SET reload_reg_used_in_input[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_input_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_input_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_insn	reload1.c	/^static HARD_REG_SET reload_reg_used_in_insn;$/;"	v	file:
reload_reg_used_in_op_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_op_addr;$/;"	v	file:
reload_reg_used_in_op_addr_reload	reload1.c	/^static HARD_REG_SET reload_reg_used_in_op_addr_reload;$/;"	v	file:
reload_reg_used_in_other_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_other_addr;$/;"	v	file:
reload_reg_used_in_outaddr_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_outaddr_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_output	reload1.c	/^static HARD_REG_SET reload_reg_used_in_output[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_reg_used_in_output_addr	reload1.c	/^static HARD_REG_SET reload_reg_used_in_output_addr[MAX_RECOG_OPERANDS];$/;"	v	file:
reload_spill_index	reload1.c	/^int reload_spill_index[MAX_RELOADS];$/;"	v
reload_startobj	reload1.c	/^char *reload_startobj;$/;"	v
reload_type	reload.h	/^enum reload_type$/;"	g
reload_when_needed_name	reload.c	/^static const char *const reload_when_needed_name[] =$/;"	v	file:
reloads_conflict	reload1.c	/^reloads_conflict (r1, r2)$/;"	f
reloc	varasm.c	/^  int reloc;$/;"	m	struct:deferred_constant	file:
remap	cpplib.h	/^  unsigned char remap;$/;"	m	struct:cpp_options
remap_block	tree-inline.c	/^remap_block (scope_stmt, decls, id)$/;"	f	file:
remap_decl	tree-inline.c	/^remap_decl (decl, id)$/;"	f	file:
remap_filename	cppfiles.c	/^remap_filename (pfile, name, loc)$/;"	f	file:
remap_save_expr	tree-inline.c	/^remap_save_expr (tp, st_, fn, walk_subtrees)$/;"	f
remap_split_bivs	unroll.c	/^remap_split_bivs (loop, x)$/;"	f	file:
remember_dest_for_dependence	dependence.c	/^remember_dest_for_dependence (node)$/;"	f
remove_AT	dwarf2out.c	/^remove_AT (die, attr_kind)$/;"	f	file:
remove_address_replacements	reload.c	/^remove_address_replacements (in_rtx)$/;"	f
remove_children	dwarf2out.c	/^remove_children (die)$/;"	f	file:
remove_component_p	cppfiles.c	/^remove_component_p (path)$/;"	f	file:
remove_constant_addition	loop.c	/^remove_constant_addition (x)$/;"	f	file:
remove_death	combine.c	/^remove_death (regno, insn)$/;"	f
remove_dependence	sched-deps.c	/^remove_dependence (insn, elem)$/;"	f	file:
remove_dup_dir	cppinit.c	/^remove_dup_dir (pfile, prev)$/;"	f	file:
remove_dup_dirs	cppinit.c	/^remove_dup_dirs (pfile, head)$/;"	f	file:
remove_edge	cfg.c	/^remove_edge (e)$/;"	f
remove_eh_handler	except.c	/^remove_eh_handler (region)$/;"	f	file:
remove_exception_handler_label	except.c	/^remove_exception_handler_label (label)$/;"	f	file:
remove_fake_edges	cfganal.c	/^remove_fake_edges ()$/;"	f
remove_fake_successors	cfganal.c	/^remove_fake_successors (bb)$/;"	f	file:
remove_fixup_regions	except.c	/^remove_fixup_regions ()$/;"	f	file:
remove_from_table	cse.c	/^remove_from_table (elt, hash)$/;"	f	file:
remove_insn	emit-rtl.c	/^remove_insn (insn)$/;"	f
remove_invalid_refs	cse.c	/^remove_invalid_refs (regno)$/;"	f	file:
remove_invalid_subreg_refs	cse.c	/^remove_invalid_subreg_refs (regno, offset, mode)$/;"	f	file:
remove_node_from_expr_list	rtlanal.c	/^remove_node_from_expr_list (node, listp)$/;"	f
remove_note	rtlanal.c	/^remove_note (insn, note)$/;"	f
remove_phi_alternative	ssa.c	/^remove_phi_alternative (set, block)$/;"	f
remove_regno_note	reg-stack.c	/^remove_regno_note (insn, note, regno)$/;"	f	file:
remove_unnecessary_notes	emit-rtl.c	/^remove_unnecessary_notes ()$/;"	f
remove_unreachable_regions	except.c	/^remove_unreachable_regions (insns)$/;"	f	file:
remove_useless_values	cselib.c	/^remove_useless_values ()$/;"	f	file:
rename_block	ssa.c	/^rename_block (bb, idom)$/;"	f	file:
rename_context	ssa.c	/^struct rename_context$/;"	s	file:
rename_equivalent_regs	ssa.c	/^rename_equivalent_regs (reg_partition)$/;"	f	file:
rename_equivalent_regs_in_insn	ssa.c	/^rename_equivalent_regs_in_insn (ptr, data)$/;"	f	file:
rename_insn_1	ssa.c	/^rename_insn_1 (ptr, data)$/;"	f	file:
rename_obstack	regrename.c	/^static struct obstack rename_obstack;$/;"	v	typeref:struct:obstack	file:
rename_registers	ssa.c	/^rename_registers (nregs, idom)$/;"	f	file:
rename_set_data	ssa.c	/^struct rename_set_data$/;"	s	file:
renumber	regclass.c	/^static short *renumber;$/;"	v	file:
renumber_insns	emit-rtl.c	/^renumber_insns (stream)$/;"	f
reorder	target.h	/^    int (* reorder)  PARAMS ((FILE *, int, rtx *, int *, int));$/;"	m	struct:gcc_target::sched
reorder2	target.h	/^    int (* reorder2) PARAMS ((FILE *, int, rtx *, int *, int));$/;"	m	struct:gcc_target::sched
reorder_basic_blocks	bb-reorder.c	/^reorder_basic_blocks ()$/;"	f
reorder_block_def	cfglayout.h	/^typedef struct reorder_block_def$/;"	s
reorder_block_def	cfglayout.h	/^} *reorder_block_def;$/;"	t	typeref:struct:reorder_block_def
reorder_blocks	function.c	/^reorder_blocks ()$/;"	f
reorder_blocks_0	function.c	/^reorder_blocks_0 (block)$/;"	f	file:
reorder_blocks_1	function.c	/^reorder_blocks_1 (insns, current_block, p_block_stack)$/;"	f	file:
reorder_fix_fragments	function.c	/^reorder_fix_fragments (block)$/;"	f	file:
reorder_insns	emit-rtl.c	/^reorder_insns (from, to, after)$/;"	f
reorder_insns_nobb	emit-rtl.c	/^reorder_insns_nobb (from, to, after)$/;"	f
reorder_insns_with_line_notes	emit-rtl.c	/^reorder_insns_with_line_notes (from, to, after)$/;"	f
reorg_pass_number	reorg.c	/^static int reorg_pass_number;$/;"	v	file:
reorg_redirect_jump	reorg.c	/^reorg_redirect_jump (jump, nlabel)$/;"	f	file:
replace	local-alloc.c	/^  char replace;$/;"	m	struct:equivalence	file:
replace_args	cppmacro.c	/^replace_args (pfile, node, args)$/;"	f	file:
replace_args	df.c	/^typedef struct replace_args$/;"	s	file:
replace_args	df.c	/^} replace_args;$/;"	t	typeref:struct:replace_args	file:
replace_call_placeholder	sibcall.c	/^replace_call_placeholder (insn, use)$/;"	f
replace_equiv_address	emit-rtl.c	/^replace_equiv_address (memref, addr)$/;"	f
replace_equiv_address_nv	emit-rtl.c	/^replace_equiv_address_nv (memref, addr)$/;"	f
replace_in_call_usage	regmove.c	/^replace_in_call_usage (loc, dst_reg, src, insn)$/;"	f	file:
replace_label	loop.c	/^replace_label (x, data)$/;"	f	file:
replace_loop_mem	loop.c	/^replace_loop_mem (mem, data)$/;"	f	file:
replace_loop_mems	loop.c	/^replace_loop_mems (insn, mem, reg)$/;"	f	file:
replace_loop_reg	loop.c	/^replace_loop_reg (px, data)$/;"	f	file:
replace_loop_regs	loop.c	/^replace_loop_regs (insn, reg, replacement)$/;"	f	file:
replace_oldest_value_addr	regrename.c	/^replace_oldest_value_addr (loc, class, mode, insn, vd)$/;"	f	file:
replace_oldest_value_mem	regrename.c	/^replace_oldest_value_mem (x, insn, vd)$/;"	f	file:
replace_oldest_value_reg	regrename.c	/^replace_oldest_value_reg (loc, class, insn, vd)$/;"	f	file:
replace_pseudos_in_call_usage	reload1.c	/^replace_pseudos_in_call_usage (loc, mem_mode, usage)$/;"	f	file:
replace_reg	reg-stack.c	/^replace_reg (reg, regno)$/;"	f	file:
replace_regs	rtlanal.c	/^replace_regs (x, reg_map, nregs, replace_dest)$/;"	f
replace_reloads	reload.c	/^static int replace_reloads;$/;"	v	file:
replace_rtx	rtlanal.c	/^replace_rtx (x, from, to)$/;"	f
replace_store_insn	gcse.c	/^replace_store_insn (reg, del, bb)$/;"	f	file:
replaceable	loop.h	/^  unsigned replaceable : 1;	\/* 1 if we can substitute the strength-reduced$/;"	m	struct:induction
replacement	df.c	/^  rtx replacement;$/;"	m	struct:replace_args	file:
replacement	local-alloc.c	/^  rtx replacement;$/;"	m	struct:equivalence	file:
replacement	loop.c	/^  rtx replacement;$/;"	m	struct:loop_replace_args	file:
replacement	reload.c	/^struct replacement$/;"	s	file:
replacement_quality	regmove.c	/^replacement_quality (reg)$/;"	f	file:
replacement_value	c-typeck.c	/^  tree replacement_value;$/;"	m	struct:constructor_stack	file:
replacements	reload.c	/^static struct replacement replacements[MAX_RECOG_OPERANDS * ((MAX_REGS_PER_ADDRESS * 2) + 1)];$/;"	v	typeref:struct:replacement	file:
report_diagnostic	diagnostic.c	/^report_diagnostic (dc)$/;"	f
report_error_function	diagnostic.c	/^report_error_function (file)$/;"	f
report_missing_guard	cppfiles.c	/^report_missing_guard (n, b)$/;"	f	file:
report_problematic_module	diagnostic.c	/^report_problematic_module (buffer)$/;"	f
reposition_prologue_and_epilogue_notes	function.c	/^reposition_prologue_and_epilogue_notes (f)$/;"	f
require_complete_type	c-typeck.c	/^require_complete_type (value)$/;"	f
require_constant_elements	c-typeck.c	/^  char require_constant_elements;$/;"	m	struct:initializer_stack	file:
require_constant_elements	c-typeck.c	/^static int require_constant_elements;$/;"	v	file:
require_constant_value	c-typeck.c	/^  char require_constant_value;$/;"	m	struct:initializer_stack	file:
require_constant_value	c-typeck.c	/^static int require_constant_value;$/;"	v	file:
requires_inout	local-alloc.c	/^requires_inout (p)$/;"	f	file:
reset_opr_set_tables	gcse.c	/^reset_opr_set_tables ()$/;"	f	file:
reset_used_decls	emit-rtl.c	/^reset_used_decls (blk)$/;"	f	file:
reset_used_flags	emit-rtl.c	/^reset_used_flags (x)$/;"	f
resolve_fixup_regions	except.c	/^resolve_fixup_regions ()$/;"	f	file:
resolve_operand_name_1	stmt.c	/^resolve_operand_name_1 (p, outputs, inputs)$/;"	f	file:
resolve_operand_names	stmt.c	/^resolve_operand_names (string, outputs, inputs, pconstraints)$/;"	f	file:
resolve_unique_section	varasm.c	/^resolve_unique_section (decl, reloc, flag_function_or_data_sections)$/;"	f	file:
resource_conflicts_p	reorg.c	/^resource_conflicts_p (res1, res2)$/;"	f	file:
resources	resource.h	/^struct resources$/;"	s
rest_of_compilation	toplev.c	/^rest_of_compilation (decl)$/;"	f
rest_of_decl_compilation	toplev.c	/^rest_of_decl_compilation (decl, asmspec, top_level, at_end)$/;"	f
rest_of_type_compilation	toplev.c	/^rest_of_type_compilation (type, toplev)$/;"	f
restore_emit_status	emit-rtl.c	/^restore_emit_status (p)$/;"	f
restore_fixed_argument_area	calls.c	/^restore_fixed_argument_area (save_area, argblock, high_to_save, low_to_save)$/;"	f	file:
restore_lang_status	function.c	/^void (*restore_lang_status) PARAMS ((struct function *));$/;"	v
restore_line_notes	haifa-sched.c	/^restore_line_notes (head, tail)$/;"	f
restore_line_number_status	emit-rtl.c	/^restore_line_number_status (old_value)$/;"	f
restrict_flag	tree.h	/^  unsigned restrict_flag : 1;$/;"	m	struct:tree_type
result	simplify-rtx.c	/^  rtx result;$/;"	m	struct:simplify_binary_real_args	file:
result	simplify-rtx.c	/^  rtx result;$/;"	m	struct:simplify_unary_real_args	file:
result	tree.h	/^  tree result;	\/* Also used for DECL_BIT_FIELD_TYPE *\/$/;"	m	struct:tree_decl
result_ready_cost	insn-attrtab.c	/^result_ready_cost (insn)$/;"	f
result_vector	builtins.c	/^result_vector (savep, result)$/;"	f	file:
resume	except.c	/^  rtx resume;$/;"	m	struct:eh_region	file:
resword	c-parse.c	/^struct resword$/;"	s	file:
reswords	c-parse.c	/^static const struct resword reswords[] =$/;"	v	typeref:struct:resword	file:
ret_label	tree-inline.c	/^  tree ret_label;$/;"	m	struct:inline_data	file:
retry_global_alloc	global.c	/^retry_global_alloc (regno, forbidden_regs)$/;"	f
retry_incomplete_types	dwarf2out.c	/^retry_incomplete_types ()$/;"	f	file:
retry_incomplete_types	dwarfout.c	/^retry_incomplete_types ()$/;"	f	file:
return_address_pointer_rtx	emit-rtl.c	/^rtx return_address_pointer_rtx;	\/* (REG:Pmode RETURN_ADDRESS_POINTER_REGNUM) *\/$/;"	v
return_allocation_failure	hashtab.h	/^  int return_allocation_failure;$/;"	m	struct:htab
return_at_eof	cpphash.h	/^  bool return_at_eof;$/;"	m	struct:cpp_buffer
return_label	function.h	526;"	d
return_rtx	function.h	/^  rtx return_rtx;$/;"	m	struct:function
return_value_pseudo	sibcall.c	/^static rtx return_value_pseudo;$/;"	v	file:
returnjump_p	jump.c	/^returnjump_p (insn)$/;"	f
returnjump_p_1	jump.c	/^returnjump_p_1 (loc, data)$/;"	f	file:
returns_abnormally	c-decl.c	/^  int returns_abnormally;$/;"	m	struct:c_language_function	file:
returns_null	c-decl.c	/^  int returns_null;$/;"	m	struct:c_language_function	file:
returns_pcc_struct	function.h	/^  unsigned int returns_pcc_struct : 1;$/;"	m	struct:function
returns_pointer	function.h	/^  unsigned int returns_pointer : 1;$/;"	m	struct:function
returns_struct	function.h	/^  unsigned int returns_struct : 1;$/;"	m	struct:function
returns_value	c-decl.c	/^  int returns_value;$/;"	m	struct:c_language_function	file:
retval	flow.c	/^  rtx retval;$/;"	m	struct:__anon45	file:
reverse	expr.c	/^  int reverse;$/;"	m	struct:move_by_pieces	file:
reverse	expr.c	/^  int reverse;$/;"	m	struct:store_by_pieces	file:
reverse_all_dies	dwarf2out.c	/^reverse_all_dies (die)$/;"	f	file:
reverse_comparison	emit-rtl.c	/^reverse_comparison (insn)$/;"	f
reverse_condition	jump.c	/^reverse_condition (code)$/;"	f
reverse_condition_maybe_unordered	jump.c	/^reverse_condition_maybe_unordered (code)$/;"	f
reverse_die_lists	dwarf2out.c	/^reverse_die_lists (die)$/;"	f	file:
reversed	loop.h	/^  unsigned reversed : 1;	\/* 1 if we reversed the loop that this$/;"	m	struct:iv_class
reversed_comparison	combine.c	/^reversed_comparison (exp, mode, op0, op1)$/;"	f	file:
reversed_comparison_code	jump.c	/^reversed_comparison_code (comparison, insn)$/;"	f
reversed_comparison_code_parts	jump.c	/^reversed_comparison_code_parts (code, arg0, arg1, insn)$/;"	f
rfo	vmsdbgout.c	/^  char rfo;$/;"	m	struct:dst_file_info_struct	file:
rgn_bb_table	sched-rgn.c	/^static int *rgn_bb_table;$/;"	v	file:
rgn_blocks	sched-rgn.c	/^  int rgn_blocks;		\/* cblocks in the region (actually index in rgn_bb_table).  *\/$/;"	m	struct:__anon29	file:
rgn_edges	sched-rgn.c	/^static int *rgn_edges;$/;"	v	file:
rgn_nr_blocks	sched-rgn.c	/^  int rgn_nr_blocks;		\/* Number of blocks in region.  *\/$/;"	m	struct:__anon29	file:
rgn_nr_edges	sched-rgn.c	/^static int rgn_nr_edges;$/;"	v	file:
rgn_print_insn	sched-rgn.c	/^rgn_print_insn (insn, aligned)$/;"	f	file:
rgn_rank	sched-rgn.c	/^rgn_rank (insn1, insn2)$/;"	f	file:
rgn_table	sched-rgn.c	/^static region *rgn_table;$/;"	v	file:
rid	c-common.c	/^  const unsigned rid;	\/* RID number for the identifier.  *\/$/;"	m	struct:fname_var_t	file:
rid	c-common.h	/^enum rid$/;"	g
rid_code	cpplib.h	/^  unsigned char rid_code;		\/* Rid code - for front ends.  *\/$/;"	m	struct:cpp_hashnode
rid_to_yy	c-parse.c	/^static const short rid_to_yy[RID_MAX] =$/;"	v	file:
ridpointers	c-common.c	/^tree *ridpointers;$/;"	v
right	c-typeck.c	/^  struct init_node *left, *right;$/;"	m	struct:init_node	typeref:struct:init_node::	file:
right	fibheap.h	/^  struct fibnode *right;$/;"	m	struct:fibnode	typeref:struct:fibnode::fibnode
right	splay-tree.h	/^  splay_tree_node right;$/;"	m	struct:splay_tree_node_s
right	stmt.c	/^  struct case_node	*right;	\/* Right son in binary tree; also node chain *\/$/;"	m	struct:case_node	typeref:struct:case_node::case_node	file:
right_shift	cppexp.c	/^right_shift (pfile, a, unsignedp, b)$/;"	f	file:
rindex	system.h	628;"	d
rlast	real.c	/^static int rlast = -1;$/;"	v	file:
rld	reload.c	/^struct reload rld[MAX_RELOADS];$/;"	v	typeref:struct:reload
rld	reload.h	/^  struct reload *rld;$/;"	m	struct:insn_chain	typeref:struct:insn_chain::reload
rli_size_so_far	stor-layout.c	/^rli_size_so_far (rli)$/;"	f
rli_size_unit_so_far	stor-layout.c	/^rli_size_unit_so_far (rli)$/;"	f
rlimit	cpphash.h	/^  const unsigned char *rlimit; \/* end of valid data *\/$/;"	m	struct:cpp_buffer
rm_line_notes	haifa-sched.c	/^rm_line_notes (head, tail)$/;"	f
rm_other_notes	haifa-sched.c	/^rm_other_notes (head, tail)$/;"	f
rm_redundant_line_notes	haifa-sched.c	/^rm_redundant_line_notes ()$/;"	f
rmbit	real.c	/^static UEMUSHORT rmbit = 0;$/;"	v	file:
rmsk	real.c	/^static UEMUSHORT rmsk = 0;$/;"	v	file:
rndprc	real.c	/^int rndprc = NBITS;$/;"	v
root	fibheap.h	/^  struct fibnode *root;$/;"	m	struct:fibheap	typeref:struct:fibheap::fibnode
root	splay-tree.h	/^  splay_tree_node root;$/;"	m	struct:splay_tree_s
root_type	dwarf2out.c	/^root_type (type)$/;"	f	file:
root_type	dwarfout.c	/^root_type (type)$/;"	f	file:
root_type_1	dwarfout.c	/^root_type_1 (type, count)$/;"	f	file:
roots	ggc-common.c	/^static struct ggc_root *roots;$/;"	v	typeref:struct:ggc_root	file:
rotl_optab	optabs.h	181;"	d
rotr_optab	optabs.h	182;"	d
round_down	stor-layout.c	/^round_down (value, divisor)$/;"	f
round_push	explow.c	/^round_push (size)$/;"	f
round_trampoline_addr	function.c	/^round_trampoline_addr (tramp)$/;"	f	file:
round_up	stor-layout.c	/^round_up (value, divisor)$/;"	f
rrotate_double	fold-const.c	/^rrotate_double (l1, h1, count, prec, lv, hv)$/;"	f
rshift_double	fold-const.c	/^rshift_double (l1, h1, count, prec, lv, hv, arith)$/;"	f
rt_addr_diff_vec_flags	rtl.h	/^  addr_diff_vec_flags rt_addr_diff_vec_flags;$/;"	m	union:rtunion_def
rt_cselib	rtl.h	/^  struct cselib_val_struct *rt_cselib;$/;"	m	union:rtunion_def	typeref:struct:rtunion_def::cselib_val_struct
rtbit	rtl.h	/^  struct bitmap_head_def *rtbit;$/;"	m	union:rtunion_def	typeref:struct:rtunion_def::bitmap_head_def
rtint	rtl.h	/^  int rtint;$/;"	m	union:rtunion_def
rtl	cse.c	/^  rtx rtl;$/;"	m	struct:set	file:
rtl	tree.h	/^  rtx rtl;	\/* RTL representation for object.  *\/$/;"	m	struct:tree_decl
rtl	tree.h	/^  rtx rtl;	\/* acts as link to register transfer language (rtl) info *\/$/;"	m	struct:tree_complex
rtl	tree.h	/^  rtx rtl;	\/* acts as link to register transfer language (rtl) info *\/$/;"	m	struct:tree_real_cst
rtl	tree.h	/^  rtx rtl;	\/* acts as link to register transfer language (rtl) info *\/$/;"	m	struct:tree_string
rtl	tree.h	/^  rtx rtl;	\/* acts as link to register transfer language$/;"	m	struct:tree_int_cst
rtl	tree.h	/^  rtx rtl;$/;"	m	struct:tree_vector
rtl	varasm.c	/^  rtx rtl;$/;"	m	struct:constant_descriptor	file:
rtl_check_failed_bounds	rtl.c	/^rtl_check_failed_bounds (r, n, file, line, func)$/;"	f
rtl_check_failed_code1	rtl.c	/^rtl_check_failed_code1 (r, code, file, line, func)$/;"	f
rtl_check_failed_code2	rtl.c	/^rtl_check_failed_code2 (r, code1, code2, file, line, func)$/;"	f
rtl_check_failed_type1	rtl.c	/^rtl_check_failed_type1 (r, n, c1, file, line, func)$/;"	f
rtl_check_failed_type2	rtl.c	/^rtl_check_failed_type2 (r, n, c1, c2, file, line, func)$/;"	f
rtl_dump_and_exit	toplev.c	/^int rtl_dump_and_exit;$/;"	v
rtl_dump_file	toplev.c	/^FILE *rtl_dump_file = NULL;$/;"	v
rtl_expr	function.c	/^  tree rtl_expr;$/;"	m	struct:temp_slot	file:
rtl_expr_chain	function.h	534;"	d
rtl_expr_nonnegative_p	fold-const.c	/^rtl_expr_nonnegative_p (r)$/;"	f
rtl_for_decl_location	dwarf2out.c	/^rtl_for_decl_location (decl)$/;"	f	file:
rtmem	rtl.h	/^  mem_attrs *rtmem;$/;"	m	union:rtunion_def
rts_order	df.h	/^  int * rts_order; \/* reverse top sort order -> block number *\/$/;"	m	struct:df
rtstr	rtl.h	/^  const char *rtstr;$/;"	m	union:rtunion_def
rttree	rtl.h	/^  tree rttree;$/;"	m	union:rtunion_def
rttype	rtl.h	/^  enum machine_mode rttype;$/;"	m	union:rtunion_def	typeref:enum:rtunion_def::machine_mode
rtuint	rtl.h	/^  unsigned int rtuint;$/;"	m	union:rtunion_def
rtunion	rtl.h	/^} rtunion;$/;"	t	typeref:union:rtunion_def
rtunion_def	rtl.h	/^typedef union rtunion_def$/;"	u
rtvec	config.h	/^typedef struct rtvec_def *rtvec;$/;"	t	typeref:struct:rtvec_def
rtvec	rtl.h	/^  rtvec rtvec;$/;"	m	union:rtunion_def
rtvec	varray.h	/^  struct rtvec_def	 *rtvec[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::rtvec_def
rtvec_alloc	rtl.c	/^rtvec_alloc (n)$/;"	f
rtvec_check_failed_bounds	rtl.c	/^rtvec_check_failed_bounds (r, n, file, line, func)$/;"	f
rtvec_def	rtl.h	/^struct rtvec_def {$/;"	s
rtwint	rtl.h	/^  HOST_WIDE_INT rtwint;$/;"	m	union:rtunion_def
rtx	config.h	/^typedef struct rtx_def *rtx;$/;"	t	typeref:struct:rtx_def
rtx	rtl.h	/^  rtx rtx;$/;"	m	union:rtunion_def
rtx	varray.h	/^  struct rtx_def	 *rtx[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::rtx_def
rtx	varray.h	/^  struct rtx_def *rtx;$/;"	m	struct:const_equiv_data	typeref:struct:const_equiv_data::rtx_def
rtx_addr_can_trap_p	rtlanal.c	/^rtx_addr_can_trap_p (x)$/;"	f
rtx_addr_varies_p	rtlanal.c	/^rtx_addr_varies_p (x, for_alias)$/;"	f
rtx_alloc	rtl.c	/^rtx_alloc (code)$/;"	f
rtx_class	rtl.c	/^const char rtx_class[NUM_RTX_CODE] = {$/;"	v
rtx_code	rtl.h	/^enum rtx_code  {$/;"	g
rtx_const	varasm.c	/^struct rtx_const$/;"	s	file:
rtx_cost	cse.c	/^rtx_cost (x, outer_code)$/;"	f
rtx_def	rtl.h	/^struct rtx_def$/;"	s
rtx_equal_for_cselib_p	cselib.c	/^rtx_equal_for_cselib_p (x, y)$/;"	f
rtx_equal_for_field_assignment_p	combine.c	/^rtx_equal_for_field_assignment_p (x, y)$/;"	f	file:
rtx_equal_for_loop_p	loop.c	/^rtx_equal_for_loop_p (x, y, movables, regs)$/;"	f	file:
rtx_equal_for_memref_p	alias.c	/^rtx_equal_for_memref_p (x, y)$/;"	f	file:
rtx_equal_for_prefetch_p	loop.c	/^rtx_equal_for_prefetch_p (x, y)$/;"	f	file:
rtx_equal_function_value_matters	rtl.c	/^int rtx_equal_function_value_matters;$/;"	v
rtx_equal_p	rtl.c	/^rtx_equal_p (x, y)$/;"	f
rtx_for_function_call	calls.c	/^rtx_for_function_call (fndecl, exp)$/;"	f	file:
rtx_format	rtl.c	/^const char * const rtx_format[NUM_RTX_CODE] = {$/;"	v
rtx_function	rtl.h	/^typedef int (*rtx_function)             PARAMS ((rtx *, void *));$/;"	t
rtx_length	rtl.c	/^const unsigned char rtx_length[NUM_RTX_CODE] = {$/;"	v
rtx_name	rtl.c	/^const char * const rtx_name[NUM_RTX_CODE] = {$/;"	v
rtx_pair	loop.c	/^typedef struct rtx_pair$/;"	s	file:
rtx_pair	loop.c	/^} rtx_pair;$/;"	t	typeref:struct:rtx_pair	file:
rtx_renumbered_equal_p	jump.c	/^rtx_renumbered_equal_p (x, y)$/;"	f
rtx_to_tree_code	explow.c	/^rtx_to_tree_code (code)$/;"	f
rtx_unstable_p	rtlanal.c	/^rtx_unstable_p (x)$/;"	f
rtx_varies_p	rtlanal.c	/^rtx_varies_p (x, for_alias)$/;"	f
rtxfun	optabs.h	/^typedef rtx (*rtxfun) PARAMS ((rtx));$/;"	t
ru_gen	df.h	/^  bitmap ru_gen;$/;"	m	struct:bb_info
ru_in	df.h	/^  bitmap ru_in;$/;"	m	struct:bb_info
ru_kill	df.h	/^  bitmap ru_kill;$/;"	m	struct:bb_info
ru_out	df.h	/^  bitmap ru_out;$/;"	m	struct:bb_info
ru_valid	df.h	/^  int ru_valid;$/;"	m	struct:bb_info
run_directive	cpplib.c	/^run_directive (pfile, dir_no, buf, count)$/;"	f	file:
run_jump_opt_after_gcse	gcse.c	/^static int run_jump_opt_after_gcse;$/;"	v	file:
rw	real.c	/^static int rw = 0;$/;"	v	file:
s	c-typeck.c	/^      const char *s;$/;"	m	union:spelling::__anon36	file:
s	cppexp.c	/^  const unsigned char s[4];$/;"	m	struct:suffix	file:
s	cpphash.h	/^     const U_CHAR *s;$/;"	v
s	cppinit.c	137;"	d	file:
s	cppinit.c	146;"	d	file:
s	cppinit.c	156;"	d	file:
s	varray.h	/^  short			 s[1];$/;"	m	union:varray_data_tag
s1	cpphash.h	/^     const U_CHAR *s1, *s2;$/;"	v
s1	cpphash.h	/^     const U_CHAR *s1;$/;"	v
s2	cpphash.h	/^     const U_CHAR *s1, *s2;$/;"	v
s_kind	tree.c	/^  s_kind,$/;"	e	enum:__anon88	file:
safe	reload.c	/^  int safe;		\/* Nonzero if this can't conflict with anything.  *\/$/;"	m	struct:decomposition	file:
safe_concat	sched-vis.c	/^safe_concat (buf, cur, str)$/;"	f	file:
safe_from_earlyclobber	reload.c	/^safe_from_earlyclobber (op, clobber)$/;"	f
safe_from_p	expr.c	/^safe_from_p (x, exp, top_p)$/;"	f
safe_from_p	langhooks.h	/^  int (*safe_from_p) PARAMS ((rtx, tree));$/;"	m	struct:lang_hooks
safe_hash	cse.c	/^safe_hash (x, mode)$/;"	f	file:
safe_vector_operand	i386.c	/^safe_vector_operand (x, mode)$/;"	f	file:
same	loop.h	/^  struct induction *same;	\/* If this giv has been combined with another$/;"	m	struct:induction	typeref:struct:induction::induction
same_insn	loop.h	/^  struct induction *same_insn;	\/* If there are multiple identical givs in$/;"	m	struct:induction	typeref:struct:induction::induction
save_area	calls.c	/^  rtx save_area;$/;"	m	struct:arg_data	file:
save_argc	toplev.c	/^int save_argc;$/;"	v
save_argv	toplev.c	/^char **save_argv;$/;"	v
save_call_clobbered_regs	caller-save.c	/^save_call_clobbered_regs ()$/;"	f
save_comment	cpplex.c	/^save_comment (pfile, token, from)$/;"	f	file:
save_comments	cpphash.h	/^  unsigned char save_comments;$/;"	m	struct:lexer_state
save_expr	tree.c	/^save_expr (expr)$/;"	f
save_expr_cache	c-common.c	/^static struct tlist_cache *save_expr_cache;$/;"	v	typeref:struct:tlist_cache	file:
save_expr_regs	function.h	527;"	d
save_fixed_argument_area	calls.c	/^save_fixed_argument_area (reg_parm_stack_space, argblock,$/;"	f	file:
save_for_inline	integrate.c	/^save_for_inline (fndecl)$/;"	f
save_in_use_p	ggc-page.c	/^  unsigned long *save_in_use_p;$/;"	m	struct:page_entry	file:
save_lang_status	function.c	/^void (*save_lang_status) PARAMS ((struct function *));$/;"	v
save_level	expr.h	/^enum save_level {SAVE_BLOCK, SAVE_FUNCTION, SAVE_NONLOCAL};$/;"	g
save_line_notes	haifa-sched.c	/^save_line_notes (b, head, tail)$/;"	f
save_parameter	cppmacro.c	/^save_parameter (pfile, macro, node)$/;"	f	file:
save_parm_insns	integrate.c	/^save_parm_insns (insn, first_nonparm_insn)$/;"	f	file:
save_stack_pointer	stmt.c	/^save_stack_pointer ()$/;"	f
save_string	prefix.c	/^save_string (s, len)$/;"	f	file:
save_varrargs_registers	i386.c	/^  int save_varrargs_registers;$/;"	m	struct:machine_function	file:
saved_flags	cpphash.h	/^  unsigned char saved_flags;$/;"	m	struct:cpp_buffer
saved_function_name_decls	c-common.h	229;"	d
saved_tree	tree.h	/^  tree saved_tree;$/;"	m	struct:tree_decl
savemode	loop.c	/^  enum machine_mode savemode;   \/* Nonzero means it is a mode for a low part$/;"	m	struct:movable	typeref:enum:movable::machine_mode	file:
saveregs_value	function.h	165;"	d
savings	loop.c	/^  short savings;		\/* Number of insns we can move for this reg,$/;"	m	struct:movable	file:
sawclose	print-rtl.c	/^static int sawclose = 0;$/;"	v	file:
sbitmap	sbitmap.h	/^} *sbitmap;$/;"	t	typeref:struct:simple_bitmap_def
sbitmap_a_and_b	sbitmap.c	/^sbitmap_a_and_b (dst, a, b)$/;"	f
sbitmap_a_and_b_or_c	sbitmap.c	/^sbitmap_a_and_b_or_c (dst, a, b, c)$/;"	f
sbitmap_a_or_b	sbitmap.c	/^sbitmap_a_or_b (dst, a, b)$/;"	f
sbitmap_a_or_b_and_c	sbitmap.c	/^sbitmap_a_or_b_and_c (dst, a, b, c)$/;"	f
sbitmap_a_subset_b_p	sbitmap.c	/^sbitmap_a_subset_b_p (a, b)$/;"	f
sbitmap_a_xor_b	sbitmap.c	/^sbitmap_a_xor_b (dst, a, b)$/;"	f
sbitmap_alloc	sbitmap.c	/^sbitmap_alloc (n_elms)$/;"	f
sbitmap_copy	sbitmap.c	/^sbitmap_copy (dst, src)$/;"	f
sbitmap_difference	sbitmap.c	/^sbitmap_difference (dst, a, b)$/;"	f
sbitmap_equal	sbitmap.c	/^sbitmap_equal (a, b)$/;"	f
sbitmap_first_set_bit	sbitmap.c	/^sbitmap_first_set_bit (bmap)$/;"	f
sbitmap_free	sbitmap.h	88;"	d
sbitmap_intersect_of_predecessors	sbitmap.h	124;"	d
sbitmap_intersect_of_successors	sbitmap.h	125;"	d
sbitmap_intersection_of_preds	sbitmap.c	/^sbitmap_intersection_of_preds (dst, src, bb)$/;"	f
sbitmap_intersection_of_succs	sbitmap.c	/^sbitmap_intersection_of_succs (dst, src, bb)$/;"	f
sbitmap_last_set_bit	sbitmap.c	/^sbitmap_last_set_bit (bmap)$/;"	f
sbitmap_not	sbitmap.c	/^sbitmap_not (dst, src)$/;"	f
sbitmap_ones	sbitmap.c	/^sbitmap_ones (bmap)$/;"	f
sbitmap_ptr	sbitmap.h	/^typedef SBITMAP_ELT_TYPE *sbitmap_ptr;$/;"	t
sbitmap_union_of_diff	sbitmap.c	/^sbitmap_union_of_diff (dst, a, b, c)$/;"	f
sbitmap_union_of_predecessors	sbitmap.h	129;"	d
sbitmap_union_of_preds	sbitmap.c	/^sbitmap_union_of_preds (dst, src, bb)$/;"	f
sbitmap_union_of_successors	sbitmap.h	130;"	d
sbitmap_union_of_succs	sbitmap.c	/^sbitmap_union_of_succs (dst, src, bb)$/;"	f
sbitmap_vector_alloc	sbitmap.c	/^sbitmap_vector_alloc (n_vecs, n_elms)$/;"	f
sbitmap_vector_free	sbitmap.h	89;"	d
sbitmap_vector_ones	sbitmap.c	/^sbitmap_vector_ones (bmap, n_vecs)$/;"	f
sbitmap_vector_zero	sbitmap.c	/^sbitmap_vector_zero (bmap, n_vecs)$/;"	f
sbitmap_zero	sbitmap.c	/^sbitmap_zero (bmap)$/;"	f
sbitsize_int	tree.h	2447;"	d
sbitsizetype	tree.h	2434;"	d
scale	i386.c	/^  HOST_WIDE_INT scale;$/;"	m	struct:ix86_address	file:
scale	rtl.h	/^  unsigned scale : 8;$/;"	m	struct:__anon7
scan_actions	regrename.c	/^enum scan_actions$/;"	g	file:
scan_actions_name	regrename.c	/^static const char * const scan_actions_name[] =$/;"	v	file:
scan_char_table	c-format.c	/^static const format_char_info scan_char_table[] =$/;"	v	file:
scan_loop	loop.c	/^scan_loop (loop, flags)$/;"	f	file:
scan_one_insn	regclass.c	/^scan_one_insn (insn, pass)$/;"	f	file:
scan_paradoxical_subregs	reload1.c	/^scan_paradoxical_subregs (x)$/;"	f	file:
scan_rtx	regrename.c	/^scan_rtx (insn, loc, class, action, type, earlyclobber)$/;"	f	file:
scan_rtx_address	regrename.c	/^scan_rtx_address (insn, loc, class, action, mode)$/;"	f	file:
scan_rtx_reg	regrename.c	/^scan_rtx_reg (insn, loc, class, action, type, earlyclobber)$/;"	f	file:
scan_start	basic-block.h	/^  rtx scan_start;$/;"	m	struct:loop
scanf_flag_pairs	c-format.c	/^static const format_flag_pair scanf_flag_pairs[] =$/;"	v	file:
scanf_flag_specs	c-format.c	/^static const format_flag_spec scanf_flag_specs[] =$/;"	v	file:
scanf_format_type	c-format.c	/^enum format_type { printf_format_type, scanf_format_type,$/;"	e	enum:format_type	file:
scanf_length_specs	c-format.c	/^static const format_length_info scanf_length_specs[] =$/;"	v	file:
sched	target.h	/^  struct sched$/;"	s	struct:gcc_target
sched	target.h	/^  } sched;$/;"	m	struct:gcc_target	typeref:struct:gcc_target::sched
sched	varray.h	/^  struct sched_info_tag	 *sched[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::sched_info_tag
sched_analyze	sched-deps.c	/^sched_analyze (deps, head, tail)$/;"	f
sched_analyze_1	sched-deps.c	/^sched_analyze_1 (deps, x, insn)$/;"	f	file:
sched_analyze_2	sched-deps.c	/^sched_analyze_2 (deps, x, insn)$/;"	f	file:
sched_analyze_insn	sched-deps.c	/^sched_analyze_insn (deps, x, insn, loop_notes)$/;"	f	file:
sched_before_next_call	sched-int.h	/^  rtx sched_before_next_call;$/;"	m	struct:deps
sched_dump	haifa-sched.c	/^FILE *sched_dump = 0;$/;"	v
sched_emit_insn	haifa-sched.c	/^sched_emit_insn (pat)$/;"	f
sched_finish	haifa-sched.c	/^sched_finish ()$/;"	f
sched_info	sched-int.h	/^struct sched_info$/;"	s
sched_init	haifa-sched.c	/^sched_init (dump_file)$/;"	f
sched_n_insns	sched-ebb.c	/^static int sched_n_insns;$/;"	v	file:
sched_n_insns	sched-rgn.c	/^static int sched_n_insns;$/;"	v	file:
sched_target_n_insns	sched-rgn.c	/^static int sched_target_n_insns;$/;"	v	file:
sched_verbose	haifa-sched.c	/^int sched_verbose = 0;$/;"	v
sched_verbose_param	haifa-sched.c	/^static int sched_verbose_param = 0;$/;"	v	file:
schedule_block	haifa-sched.c	/^schedule_block (b, rgn_n_insns)$/;"	f
schedule_ebb	sched-ebb.c	/^schedule_ebb (head, tail)$/;"	f	file:
schedule_ebbs	sched-ebb.c	/^schedule_ebbs (dump_file)$/;"	f
schedule_fixup_var_refs	function.c	/^schedule_fixup_var_refs (function, reg, type, promoted_mode, ht)$/;"	f	file:
schedule_insn	haifa-sched.c	/^schedule_insn (insn, ready, clock)$/;"	f	file:
schedule_insns	haifa-sched.c	/^schedule_insns (dump_file)$/;"	f
schedule_insns	sched-rgn.c	/^schedule_insns (dump_file)$/;"	f
schedule_more_p	sched-ebb.c	/^schedule_more_p ()$/;"	f	file:
schedule_more_p	sched-int.h	/^  int (*schedule_more_p) PARAMS ((void));$/;"	m	struct:sched_info
schedule_more_p	sched-rgn.c	/^schedule_more_p ()$/;"	f	file:
schedule_region	sched-rgn.c	/^schedule_region (rgn)$/;"	f	file:
schedule_unit	haifa-sched.c	/^schedule_unit (unit, insn, clock)$/;"	f	file:
scope_die_for	dwarf2out.c	/^scope_die_for (t, context_die)$/;"	f	file:
scope_to_insns_finalize	cfglayout.c	/^scope_to_insns_finalize ()$/;"	f
scope_to_insns_initialize	cfglayout.c	/^scope_to_insns_initialize ()$/;"	f
scratch_operand	recog.c	/^scratch_operand (op, mode)$/;"	f
sdb_begin_function_line	sdbout.c	/^int sdb_begin_function_line = -1;$/;"	v
sdb_debug_hooks	sdbout.c	/^struct gcc_debug_hooks sdb_debug_hooks =$/;"	v	typeref:struct:gcc_debug_hooks
sdb_dims	sdbout.c	/^static int sdb_dims[SDB_MAX_DIM];$/;"	v	file:
sdb_file	sdbout.c	/^struct sdb_file$/;"	s	file:
sdb_masks	gsyms.h	/^enum sdb_masks$/;"	g
sdb_n_dims	sdbout.c	/^static int sdb_n_dims = 0;$/;"	v	file:
sdb_storage_class	gsyms.h	/^enum sdb_storage_class$/;"	g
sdb_type	gsyms.h	/^enum sdb_type$/;"	g
sdb_type_class	gsyms.h	/^enum sdb_type_class$/;"	g
sdb_type_size	sdbout.c	/^static int sdb_type_size = -1;$/;"	v	file:
sdbout_begin_block	sdbout.c	/^sdbout_begin_block (line, n)$/;"	f	file:
sdbout_begin_function	sdbout.c	/^sdbout_begin_function (decl)$/;"	f	file:
sdbout_begin_prologue	sdbout.c	/^sdbout_begin_prologue (line, file)$/;"	f	file:
sdbout_block	sdbout.c	/^sdbout_block (block)$/;"	f	file:
sdbout_dequeue_anonymous_types	sdbout.c	/^sdbout_dequeue_anonymous_types ()$/;"	f	file:
sdbout_end_block	sdbout.c	/^sdbout_end_block (line, n)$/;"	f	file:
sdbout_end_epilogue	sdbout.c	/^sdbout_end_epilogue ()$/;"	f	file:
sdbout_end_function	sdbout.c	/^sdbout_end_function (line)$/;"	f	file:
sdbout_end_prologue	sdbout.c	/^sdbout_end_prologue (line)$/;"	f	file:
sdbout_end_source_file	sdbout.c	/^sdbout_end_source_file (line)$/;"	f	file:
sdbout_field_types	sdbout.c	/^sdbout_field_types (type)$/;"	f	file:
sdbout_finish	sdbout.c	/^sdbout_finish (main_filename)$/;"	f	file:
sdbout_global_decl	sdbout.c	/^sdbout_global_decl (decl)$/;"	f	file:
sdbout_init	sdbout.c	/^sdbout_init (input_file_name)$/;"	f	file:
sdbout_label	sdbout.c	/^sdbout_label (insn)$/;"	f	file:
sdbout_one_type	sdbout.c	/^sdbout_one_type (type)$/;"	f	file:
sdbout_parms	sdbout.c	/^sdbout_parms (parms)$/;"	f	file:
sdbout_queue_anonymous_type	sdbout.c	/^sdbout_queue_anonymous_type (type)$/;"	f	file:
sdbout_record_type_name	sdbout.c	/^sdbout_record_type_name (type)$/;"	f	file:
sdbout_reg_parms	sdbout.c	/^sdbout_reg_parms (parms)$/;"	f	file:
sdbout_source_line	sdbout.c	/^sdbout_source_line (line, filename)$/;"	f	file:
sdbout_start_source_file	sdbout.c	/^sdbout_start_source_file (line, filename)$/;"	f	file:
sdbout_symbol	sdbout.c	/^sdbout_symbol (decl, local)$/;"	f
sdbout_syms	sdbout.c	/^sdbout_syms (syms)$/;"	f	file:
sdbout_toplevel_data	sdbout.c	/^sdbout_toplevel_data (decl)$/;"	f	file:
sdbout_type	sdbout.c	/^sdbout_type (type)$/;"	f	file:
sdbout_types	sdbout.c	/^sdbout_types (types)$/;"	f
sdiv_optab	optabs.h	166;"	d
sdiv_pow2_cheap	expmed.c	/^static int sdiv_pow2_cheap, smod_pow2_cheap;$/;"	v	file:
sdivmod_optab	optabs.h	169;"	d
sdivv_optab	optabs.h	168;"	d
search_cached	cpphash.h	/^  unsigned char search_cached;$/;"	m	struct:cpp_buffer
search_dependence	dependence.c	/^search_dependence (node)$/;"	f
search_from	cppfiles.c	/^search_from (pfile, type)$/;"	f	file:
search_path	cpphash.h	/^struct search_path$/;"	s
searches	hashtab.h	/^  unsigned int searches;$/;"	m	struct:htab
searches	hashtable.h	/^  unsigned int searches;$/;"	m	struct:ht
secondary_in_icode	reload.h	/^  enum insn_code secondary_in_icode;$/;"	m	struct:reload	typeref:enum:reload::insn_code
secondary_in_reload	reload.h	/^  int secondary_in_reload;$/;"	m	struct:reload
secondary_memlocs	reload.c	/^static rtx secondary_memlocs[NUM_MACHINE_MODES];$/;"	v	file:
secondary_memlocs_elim	reload.c	/^static rtx secondary_memlocs_elim[NUM_MACHINE_MODES][MAX_RECOG_OPERANDS];$/;"	v	file:
secondary_out_icode	reload.h	/^  enum insn_code secondary_out_icode;$/;"	m	struct:reload	typeref:enum:reload::insn_code
secondary_out_reload	reload.h	/^  int secondary_out_reload;$/;"	m	struct:reload
secondary_p	reload.h	/^  unsigned int secondary_p:1;$/;"	m	struct:reload
section	dwarf2out.c	/^  const char *section; \/* Section this loclist is relative to *\/$/;"	m	struct:dw_loc_list_struct	file:
section_name	tree.h	/^  tree section_name;$/;"	m	struct:tree_decl
section_type_flags	target.h	/^  unsigned int (* section_type_flags) PARAMS ((tree, const char *, int));$/;"	m	struct:gcc_target
seen	dependence.c	/^enum du_status_type {seen, unseen};$/;"	e	enum:du_status_type	file:
seginfo	lcm.c	/^  struct seginfo *seginfo;$/;"	m	struct:bb_info	typeref:struct:bb_info::seginfo	file:
seginfo	lcm.c	/^struct seginfo$/;"	s	file:
segments	alloca.c	/^    long segments;		\/* Current number of stack segments.  *\/$/;"	m	struct:stk_stat	file:
select_reload_regs	reload1.c	/^select_reload_regs ()$/;"	f	file:
self_promoting_args_p	c-common.c	/^self_promoting_args_p (parms)$/;"	f
separate_line_info_table	dwarf2out.c	/^static dw_separate_line_info_ref separate_line_info_table;$/;"	v	file:
separate_line_info_table_allocated	dwarf2out.c	/^static unsigned separate_line_info_table_allocated;$/;"	v	file:
separate_line_info_table_in_use	dwarf2out.c	/^static unsigned separate_line_info_table_in_use;$/;"	v	file:
seq_contains_jump	ifcvt.c	/^seq_contains_jump (insn)$/;"	f	file:
seq_rtl_expr	function.h	112;"	d
seq_stack	function.h	114;"	d
sequence_result	emit-rtl.c	/^static rtx sequence_result[SEQUENCE_RESULT_SIZE];$/;"	v	file:
sequence_rtl_expr	function.h	/^  tree sequence_rtl_expr;$/;"	m	struct:emit_status
sequence_rtl_expr	function.h	/^  tree sequence_rtl_expr;$/;"	m	struct:sequence_stack
sequence_stack	function.h	/^  struct sequence_stack *sequence_stack;$/;"	m	struct:emit_status	typeref:struct:emit_status::sequence_stack
sequence_stack	function.h	/^struct sequence_stack$/;"	s
sequence_uses_addressof	sibcall.c	/^sequence_uses_addressof (seq)$/;"	f	file:
set	cse.c	/^struct set$/;"	s	file:
set	cselib.c	/^struct set$/;"	s	file:
set_AT_ref_external	dwarf2out.c	/^set_AT_ref_external (a, i)$/;"	f	file:
set_Wformat	c-format.c	/^set_Wformat (setting)$/;"	f
set_Wunused	toplev.c	/^set_Wunused (setting)$/;"	f
set_alignment	stor-layout.c	/^unsigned int set_alignment = 0;$/;"	v
set_array_declarator_type	c-decl.c	/^set_array_declarator_type (decl, type, abstract_p)$/;"	f
set_block	c-decl.c	/^set_block (block)$/;"	f
set_block_abstract_flags	integrate.c	/^set_block_abstract_flags (stmt, setting)$/;"	f	file:
set_block_for_insn	cfgrtl.c	/^set_block_for_insn (insn, bb)$/;"	f
set_block_levels	cfglayout.c	/^set_block_levels (block, level)$/;"	f	file:
set_block_origin_self	integrate.c	/^set_block_origin_self (stmt)$/;"	f	file:
set_chain	dominance.c	/^  TBB *set_chain;$/;"	m	struct:dom_info	file:
set_child	dominance.c	/^  TBB *set_child;$/;"	m	struct:dom_info	file:
set_control_dependent_block_to_edge_map_bit	ssa-dce.c	/^set_control_dependent_block_to_edge_map_bit (c, bb, edge_index)$/;"	f	file:
set_decl_abstract_flags	integrate.c	/^set_decl_abstract_flags (decl, setting)$/;"	f
set_decl_assembler_name	tree.c	/^set_decl_assembler_name (decl)$/;"	f
set_decl_origin_self	integrate.c	/^set_decl_origin_self (decl)$/;"	f
set_default_type_attributes	target.h	/^  void (* set_default_type_attributes) PARAMS ((tree type));$/;"	m	struct:gcc_target
set_designator	c-typeck.c	/^set_designator (array)$/;"	f	file:
set_dest	loop.c	/^  rtx set_dest;			\/* The destination of this SET.  *\/$/;"	m	struct:movable	file:
set_diagnostic_context	diagnostic.c	/^set_diagnostic_context (dc, msgid, args_ptr, file, line, warn)$/;"	f
set_dominates_use	unroll.c	/^set_dominates_use (regno, first_uid, last_uid, copy_start, copy_end)$/;"	f
set_fast_math_flags	toplev.c	/^set_fast_math_flags ()$/;"	f
set_file_and_line_for_stmt	stmt.c	/^set_file_and_line_for_stmt (file, line)$/;"	f
set_float_handler	toplev.c	/^set_float_handler (handler)$/;"	f	file:
set_hash_table	gcse.c	/^static struct expr **set_hash_table;$/;"	v	typeref:struct:expr	file:
set_hash_table_size	gcse.c	/^static unsigned int set_hash_table_size;$/;"	v	file:
set_in_loop	loop.h	/^  int set_in_loop;$/;"	m	struct:loop_reg
set_init_index	c-typeck.c	/^set_init_index (first, last)$/;"	f
set_init_label	c-typeck.c	/^set_init_label (fieldname)$/;"	f
set_initial_elim_offsets	reload1.c	/^set_initial_elim_offsets ()$/;"	f	file:
set_initial_label_offsets	reload1.c	/^set_initial_label_offsets ()$/;"	f	file:
set_insn	ssa.c	/^  rtx set_insn;$/;"	m	struct:rename_set_data	file:
set_internal_error_function	diagnostic.c	/^set_internal_error_function (f)$/;"	f
set_label_in_map	integrate.h	169;"	d
set_label_offsets	reload1.c	/^set_label_offsets (x, insn, initial_p)$/;"	f	file:
set_lang	cppinit.c	/^set_lang (pfile, lang)$/;"	f	file:
set_lang_adjust_rli	stor-layout.c	/^set_lang_adjust_rli (f)$/;"	f
set_last_insn	emit-rtl.c	/^set_last_insn (insn)$/;"	f
set_live_p	cse.c	/^set_live_p (set, insn, counts)$/;"	f	file:
set_mem_alias_set	emit-rtl.c	/^set_mem_alias_set (mem, set)$/;"	f
set_mem_align	emit-rtl.c	/^set_mem_align (mem, align)$/;"	f
set_mem_attributes	emit-rtl.c	/^set_mem_attributes (ref, t, objectp)$/;"	f
set_mem_expr	emit-rtl.c	/^set_mem_expr (mem, expr)$/;"	f
set_mem_offset	emit-rtl.c	/^set_mem_offset (mem, offset)$/;"	f
set_named_section_flags	varasm.c	/^set_named_section_flags (section, flags)$/;"	f
set_new_first_and_last_insn	emit-rtl.c	/^set_new_first_and_last_insn (first, last)$/;"	f
set_new_first_and_last_label_num	emit-rtl.c	/^set_new_first_and_last_label_num (first, last)$/;"	f
set_new_last_label_num	emit-rtl.c	/^set_new_last_label_num (last)$/;"	f
set_no_fast_math_flags	toplev.c	/^set_no_fast_math_flags ()$/;"	f
set_nonincremental_init	c-typeck.c	/^set_nonincremental_init ()$/;"	f	file:
set_nonincremental_init_from_string	c-typeck.c	/^set_nonincremental_init_from_string (str)$/;"	f	file:
set_nonzero_bits_and_sign_copies	combine.c	/^set_nonzero_bits_and_sign_copies (x, set, data)$/;"	f	file:
set_noop_p	rtlanal.c	/^set_noop_p (set)$/;"	f
set_of	rtlanal.c	/^set_of (pat, insn)$/;"	f
set_of_1	rtlanal.c	/^set_of_1 (x, pat, data1)$/;"	f	file:
set_of_data	rtlanal.c	/^struct set_of_data$/;"	s	file:
set_offsets_for_label	reload1.c	/^set_offsets_for_label (insn)$/;"	f	file:
set_page_group_in_use	ggc-page.c	/^set_page_group_in_use (group, page)$/;"	f	file:
set_page_table_entry	ggc-page.c	/^set_page_table_entry(p, entry)$/;"	f	file:
set_param_value	params.c	/^set_param_value (name, value)$/;"	f
set_phi_alternative_reg	flow.c	/^set_phi_alternative_reg (insn, dest_regno, src_regno, data)$/;"	f	file:
set_preference	global.c	/^set_preference (dest, src)$/;"	f	file:
set_priorities	haifa-sched.c	/^set_priorities (head, tail)$/;"	f
set_real_maximum_length	diagnostic.c	/^set_real_maximum_length (buffer)$/;"	f	file:
set_reload_reg	reload1.c	/^set_reload_reg (i, r)$/;"	f	file:
set_sched_group_p	sched-deps.c	/^set_sched_group_p (insn)$/;"	f	file:
set_seen	loop.c	/^  int set_seen;$/;"	m	struct:note_reg_stored_arg	file:
set_size	dominance.c	/^  unsigned int *set_size;$/;"	m	struct:dom_info	file:
set_sizetype	stor-layout.c	/^set_sizetype (type)$/;"	f
set_spec_fed	sched-rgn.c	/^set_spec_fed (load_insn)$/;"	f	file:
set_src	loop.c	/^  rtx set_src;			\/* The expression this reg is set from.  *\/$/;"	m	struct:movable	file:
set_stack_check_libfunc	explow.c	/^set_stack_check_libfunc (libfunc)$/;"	f
set_std_prefix	prefix.c	/^set_std_prefix (prefix, len)$/;"	f
set_target_switch	toplev.c	/^set_target_switch (name)$/;"	f	file:
set_type_class	typeclass.h	/^  array_type_class, string_type_class, set_type_class, file_type_class,$/;"	e	enum:type_class
set_type_quals	tree.c	/^set_type_quals (type, type_quals)$/;"	f	file:
set_unique_reg_note	emit-rtl.c	/^set_unique_reg_note (insn, kind, datum)$/;"	f
set_value_regno	regrename.c	/^set_value_regno (regno, mode, vd)$/;"	f	file:
set_yydebug	langhooks.h	/^  void (*set_yydebug) PARAMS ((int));$/;"	m	struct:lang_hooks
setcc_gen_code	optabs.c	/^enum insn_code setcc_gen_code[NUM_RTX_CODE];$/;"	v	typeref:enum:insn_code
setjmp_alias_set	builtins.c	/^static HOST_WIDE_INT setjmp_alias_set = -1;$/;"	v	file:
setjmp_args_warning	function.c	/^setjmp_args_warning ()$/;"	f
setjmp_call_p	calls.c	/^setjmp_call_p (fndecl)$/;"	f
setjmp_libfunc	libfuncs.h	177;"	d
setjmp_protect	function.c	/^setjmp_protect (block)$/;"	f
setjmp_protect_args	function.c	/^setjmp_protect_args ()$/;"	f
setlocale	intl.h	27;"	d
sets	regs.h	/^  int sets;			\/* # of times (REG n) is set *\/$/;"	m	struct:reg_info_def
sets	sched-int.h	/^      rtx sets;$/;"	m	struct:deps::deps_reg
sets_cc0_p	jump.c	/^sets_cc0_p (x)$/;"	f
sets_function_arg_p	combine.c	/^sets_function_arg_p (pat)$/;"	f	file:
sets_likely_spilled	sched-rgn.c	/^sets_likely_spilled (pat)$/;"	f	file:
sets_likely_spilled_1	sched-rgn.c	/^sets_likely_spilled_1 (x, pat, data)$/;"	f	file:
setting_insn	cselib.h	/^  rtx setting_insn;$/;"	m	struct:elt_loc_list
setup_incoming_promotions	combine.c	/^setup_incoming_promotions ()$/;"	f	file:
setup_initial_hard_reg_value_integration	integrate.c	/^setup_initial_hard_reg_value_integration (inl_f, remap)$/;"	f	file:
setup_save_areas	caller-save.c	/^setup_save_areas ()$/;"	f
sext_for_mode	reload1.c	/^sext_for_mode (mode, value)$/;"	f	file:
sf_names_attribute	dwarfout.c	/^sf_names_attribute (sf_names_start_label)$/;"	f	file:
sge_plus	loop.c	/^sge_plus (mode, x, y)$/;"	f	file:
sge_plus_constant	loop.c	/^sge_plus_constant (x, c)$/;"	f	file:
shadow_label	c-decl.c	/^shadow_label (name)$/;"	f
shadow_tag	c-decl.c	/^shadow_tag (declspecs)$/;"	f
shadow_tag_warned	c-decl.c	/^shadow_tag_warned (declspecs, warned)$/;"	f
shadow_warning	c-common.c	/^shadow_warning (msgid, name, decl)$/;"	f
shadowed	c-decl.c	/^    tree shadowed;$/;"	m	struct:binding_level	file:
shadowed_labels	c-decl.c	/^  tree shadowed_labels;$/;"	m	struct:c_language_function	file:
shadowed_labels	c-decl.c	/^static tree shadowed_labels;$/;"	v	file:
shallow_copy_rtx	rtl.c	/^shallow_copy_rtx (orig)$/;"	f
shared	basic-block.h	/^  int shared;$/;"	m	struct:loop
shared	loop.h	/^  unsigned shared : 1;$/;"	m	struct:induction
shared_headers	basic-block.h	/^  sbitmap shared_headers;$/;"	m	struct:loops
shaseg	alloca.c	/^    long shaseg:32;		\/* Size of increments to stack.  *\/$/;"	m	struct:stack_control_header	file:
shgrow	alloca.c	/^    long shgrow:32;		\/* Number of times stack has grown.  *\/$/;"	m	struct:stack_control_header	file:
shhwm	alloca.c	/^    long shhwm:32;		\/* High water mark of stack.  *\/$/;"	m	struct:stack_control_header	file:
shift_const	i386.h	/^  const int shift_const;	\/* constant shift costs *\/$/;"	m	struct:processor_costs
shift_cost	expmed.c	/^static int shift_cost[MAX_BITS_PER_WORD];$/;"	v	file:
shift_var	i386.h	/^  const int shift_var;		\/* variable shift costs *\/$/;"	m	struct:processor_costs
shiftadd_cost	expmed.c	/^static int shiftadd_cost[MAX_BITS_PER_WORD];$/;"	v	file:
shiftdi_operand	i386.c	/^shiftdi_operand (op, mode)$/;"	f
shiftsub_cost	expmed.c	/^static int shiftsub_cost[MAX_BITS_PER_WORD];$/;"	v	file:
short_integer_type_node	tree.h	2045;"	d
short_unsigned_type_node	tree.h	2046;"	d
shorten_branches	final.c	/^shorten_branches (first)$/;"	f
shorten_compare	c-common.c	/^shorten_compare (op0_ptr, op1_ptr, restype_ptr, rescode_ptr)$/;"	f
show_column	cpplib.h	/^  unsigned char show_column;$/;"	m	struct:cpp_options
shsize	alloca.c	/^    long shsize:32;		\/* Current size of stack (all segments).  *\/$/;"	m	struct:stack_control_header	file:
shuffle_filename_entry	dwarfout.c	/^shuffle_filename_entry (new_zeroth)$/;"	f	file:
si	target.h	/^      const char *si;$/;"	m	struct:gcc_target::asm_out::asm_int_op
sibcall_epilogue	function.c	/^static varray_type sibcall_epilogue;$/;"	v	file:
sibcall_epilogue_contains	function.c	/^sibcall_epilogue_contains (insn)$/;"	f
sibcall_use_normal	rtl.h	/^  sibcall_use_normal = 1,$/;"	e	enum:__anon9
sibcall_use_sibcall	rtl.h	/^  sibcall_use_sibcall$/;"	e	enum:__anon9
sibcall_use_t	rtl.h	/^} sibcall_use_t;$/;"	t	typeref:enum:__anon9
sibcall_use_tail_recursion	rtl.h	/^  sibcall_use_tail_recursion,$/;"	e	enum:__anon9
sibling_attribute	dwarfout.c	/^sibling_attribute ()$/;"	f	file:
side_effects_flag	tree.h	/^  unsigned side_effects_flag : 1;$/;"	m	struct:tree_common
side_effects_p	rtlanal.c	/^side_effects_p (x)$/;"	f
sign_expand_binop	optabs.c	/^sign_expand_binop (mode, uoptab, soptab, op0, op1, target, unsignedp, methods)$/;"	f
signed	ansidecl.h	163;"	d
signed	ansidecl.h	200;"	d
signed	ansidecl.h	204;"	d
signed_char	cpplib.h	/^  unsigned char signed_char;$/;"	m	struct:cpp_options
signed_char_type_node	tree.h	2043;"	d
signed_condition	jump.c	/^signed_condition (code)$/;"	f
signed_or_unsigned_type	c-common.c	/^signed_or_unsigned_type (unsignedp, type)$/;"	f
signed_size_type_node	c-common.h	197;"	d
signed_type	c-common.c	/^signed_type (type)$/;"	f
signed_wchar_type_node	c-common.h	193;"	d
significand_size	real.c	/^significand_size (mode)$/;"	f
simple	c-typeck.c	/^  char simple;$/;"	m	struct:constructor_stack	file:
simple_asm_stmt	c-typeck.c	/^simple_asm_stmt (expr)$/;"	f
simple_bitmap_def	sbitmap.h	/^typedef struct simple_bitmap_def$/;"	s
simple_cst_equal	tree.c	/^simple_cst_equal (t1, t2)$/;"	f
simple_cst_list_equal	tree.c	/^simple_cst_list_equal (l1, l2)$/;"	f
simple_field_decl_align_in_bits	dwarf2out.c	/^simple_field_decl_align_in_bits (field)$/;"	f	file:
simple_mem	gcse.c	/^simple_mem (x)$/;"	f	file:
simple_obstack_stack	function.h	/^struct simple_obstack_stack$/;"	s
simple_operand_p	fold-const.c	/^simple_operand_p (exp)$/;"	f	file:
simple_type_align_in_bits	dwarf2out.c	/^simple_type_align_in_bits (type)$/;"	f	file:
simple_type_align_in_bits	dwarfout.c	/^simple_type_align_in_bits (type)$/;"	f	file:
simple_type_promotes_to	c-common.c	/^simple_type_promotes_to (type)$/;"	f
simple_type_size_in_bits	dwarf2out.c	/^simple_type_size_in_bits (type)$/;"	f	file:
simple_type_size_in_bits	dwarfout.c	/^simple_type_size_in_bits (type)$/;"	f	file:
simplejump_p	jump.c	/^simplejump_p (insn)$/;"	f
simplify_and_const_int	combine.c	/^simplify_and_const_int (x, mode, varop, constop)$/;"	f	file:
simplify_binary_is2orm1	simplify-rtx.c	/^simplify_binary_is2orm1 (p)$/;"	f	file:
simplify_binary_is2orm1_args	simplify-rtx.c	/^struct simplify_binary_is2orm1_args$/;"	s	file:
simplify_binary_operation	simplify-rtx.c	/^simplify_binary_operation (code, mode, op0, op1)$/;"	f
simplify_binary_real	simplify-rtx.c	/^simplify_binary_real (p)$/;"	f	file:
simplify_binary_real_args	simplify-rtx.c	/^struct simplify_binary_real_args$/;"	s	file:
simplify_comparison	combine.c	/^simplify_comparison (code, pop0, pop1)$/;"	f	file:
simplify_gen_binary	simplify-rtx.c	/^simplify_gen_binary (code, mode, op0, op1)$/;"	f
simplify_gen_relational	simplify-rtx.c	/^simplify_gen_relational (code, mode, cmp_mode, op0, op1)$/;"	f
simplify_gen_subreg	simplify-rtx.c	/^simplify_gen_subreg (outermode, op, innermode, byte)$/;"	f
simplify_gen_ternary	simplify-rtx.c	/^simplify_gen_ternary (code, mode, op0_mode, op0, op1, op2)$/;"	f
simplify_gen_unary	simplify-rtx.c	/^simplify_gen_unary (code, mode, op, op_mode)$/;"	f
simplify_giv_expr	loop.c	/^simplify_giv_expr (loop, x, ext_val, benefit)$/;"	f	file:
simplify_if_then_else	combine.c	/^simplify_if_then_else (x)$/;"	f	file:
simplify_logical	combine.c	/^simplify_logical (x, last)$/;"	f	file:
simplify_plus_minus	simplify-rtx.c	/^simplify_plus_minus (code, mode, op0, op1, force)$/;"	f	file:
simplify_plus_minus_op_data	simplify-rtx.c	/^struct simplify_plus_minus_op_data$/;"	s	file:
simplify_plus_minus_op_data_cmp	simplify-rtx.c	/^simplify_plus_minus_op_data_cmp (p1, p2)$/;"	f	file:
simplify_relational_operation	simplify-rtx.c	/^simplify_relational_operation (code, mode, op0, op1)$/;"	f
simplify_replace_rtx	simplify-rtx.c	/^simplify_replace_rtx (x, old, new)$/;"	f
simplify_rtx	simplify-rtx.c	/^simplify_rtx (x)$/;"	f
simplify_set	combine.c	/^simplify_set (x)$/;"	f	file:
simplify_shift_const	combine.c	/^simplify_shift_const (x, code, result_mode, varop, orig_count)$/;"	f	file:
simplify_subreg	simplify-rtx.c	/^simplify_subreg (outermode, op, innermode, byte)$/;"	f
simplify_subtraction	varasm.c	/^simplify_subtraction (x)$/;"	f
simplify_ternary_operation	simplify-rtx.c	/^simplify_ternary_operation (code, mode, op0_mode, op0, op1, op2)$/;"	f
simplify_unary_operation	simplify-rtx.c	/^simplify_unary_operation (code, mode, op, op_mode)$/;"	f
simplify_unary_real	simplify-rtx.c	/^simplify_unary_real (p)$/;"	f	file:
simplify_unary_real_args	simplify-rtx.c	/^struct simplify_unary_real_args$/;"	s	file:
simultaneity	insn-attr.h	/^  const int simultaneity;$/;"	m	struct:function_unit_desc
simultaneous_prefetches	i386.h	/^  const int simultaneous_prefetches; \/* number of parallel prefetch$/;"	m	struct:processor_costs
sin_optab	optabs.h	198;"	d
single_set	rtl.h	1442;"	d
single_set_1	rtl.h	1446;"	d
single_set_2	rtlanal.c	/^single_set_2 (insn, pat)$/;"	f
single_set_for_csa	regmove.c	/^single_set_for_csa (insn)$/;"	f	file:
single_usage	loop.h	/^  rtx single_usage;$/;"	m	struct:loop_reg
sink	basic-block.h	/^  rtx sink;$/;"	m	struct:loop
siv_test	dependence.c	/^siv_test (icoefficients, ocoefficients, direction, distance, loop_ptr, sub)$/;"	f	file:
size	calls.c	/^  struct args_size size;$/;"	m	struct:arg_data	typeref:struct:arg_data::args_size	file:
size	function.c	/^  HOST_WIDE_INT size;$/;"	m	struct:temp_slot	file:
size	ggc-common.c	/^  int size;$/;"	m	struct:ggc_root	file:
size	global.c	/^  int size;$/;"	m	struct:allocno	file:
size	hash.h	/^  unsigned int size;$/;"	m	struct:hash_table
size	hashtab.h	/^  size_t size;$/;"	m	struct:htab
size	local-alloc.c	/^  int size;$/;"	m	struct:qty	file:
size	loop.h	/^  int size;			\/* Size of table.  *\/$/;"	m	struct:loop_regs
size	rtl.h	/^  rtx size;			\/* Size in bytes, as a CONST_INT.  *\/$/;"	m	struct:__anon8
size	sbitmap.h	/^  unsigned int size;		\/* Size in elements.  *\/$/;"	m	struct:simple_bitmap_def
size	tree.h	/^  tree size;$/;"	m	struct:tree_decl
size	tree.h	/^  tree size;$/;"	m	struct:tree_type
size_binop	fold-const.c	/^size_binop (code, arg0, arg1)$/;"	f
size_cost	i386.c	/^struct processor_costs size_cost = {	\/* costs for tunning for size *\/$/;"	v	typeref:struct:processor_costs	file:
size_diffop	fold-const.c	/^size_diffop (arg0, arg1)$/;"	f
size_directive_output	varasm.c	/^int size_directive_output;$/;"	v
size_htab_eq	fold-const.c	/^size_htab_eq (x, y)$/;"	f	file:
size_htab_hash	fold-const.c	/^size_htab_hash (x)$/;"	f	file:
size_in_bytes	tree.c	/^size_in_bytes (type)$/;"	f
size_int	tree.h	2444;"	d
size_int_type	tree.h	2443;"	d
size_int_type_wide	fold-const.c	/^size_int_type_wide (number, type)$/;"	f
size_int_wide	fold-const.c	/^size_int_wide (number, kind)$/;"	f
size_lookup	ggc-page.c	/^static unsigned char size_lookup[257] = $/;"	v	file:
size_of_aranges	dwarf2out.c	/^size_of_aranges ()$/;"	f	file:
size_of_die	dwarf2out.c	/^size_of_die (die)$/;"	f	file:
size_of_encoded_value	dwarf2asm.c	/^size_of_encoded_value (encoding)$/;"	f
size_of_loc_descr	dwarf2out.c	/^size_of_loc_descr (loc)$/;"	f	file:
size_of_locs	dwarf2out.c	/^size_of_locs (loc)$/;"	f	file:
size_of_pubnames	dwarf2out.c	/^size_of_pubnames ()$/;"	f	file:
size_of_sleb128	dwarf2asm.c	/^size_of_sleb128 (value)$/;"	f
size_of_uleb128	dwarf2asm.c	/^size_of_uleb128 (value)$/;"	f
size_one_node	tree.h	1967;"	d
size_rtxs	ggc.h	/^  size_t size_rtxs[256];$/;"	m	struct:ggc_statistics
size_t	xmalloc.c	72;"	d	file:
size_trees	ggc.h	/^  size_t size_trees[256];$/;"	m	struct:ggc_statistics
size_type_kind	tree.h	/^enum size_type_kind$/;"	g
size_unit	tree.h	/^  tree size_unit;$/;"	m	struct:tree_decl
size_unit	tree.h	/^  tree size_unit;$/;"	m	struct:tree_type
size_zero_node	tree.h	1966;"	d
sizetype	tree.h	2430;"	d
sizetype_set	stor-layout.c	/^static int sizetype_set;$/;"	v	file:
sizetype_tab	stor-layout.c	/^tree sizetype_tab[(int) TYPE_KIND_LAST];$/;"	v
sjlj_assign_call_site_values	except.c	/^sjlj_assign_call_site_values (dispatch_label, lp_info)$/;"	f	file:
sjlj_build_landing_pads	except.c	/^sjlj_build_landing_pads ()$/;"	f	file:
sjlj_emit_dispatch_table	except.c	/^sjlj_emit_dispatch_table (dispatch_label, lp_info)$/;"	f	file:
sjlj_emit_function_enter	except.c	/^sjlj_emit_function_enter (dispatch_label)$/;"	f	file:
sjlj_emit_function_exit	except.c	/^sjlj_emit_function_exit ()$/;"	f	file:
sjlj_emit_function_exit_after	except.c	/^sjlj_emit_function_exit_after (after)$/;"	f
sjlj_exit_after	except.c	/^  rtx sjlj_exit_after;$/;"	m	struct:eh_status	file:
sjlj_fc	except.c	/^  rtx sjlj_fc;$/;"	m	struct:eh_status	file:
sjlj_fc_call_site_ofs	except.c	/^static int sjlj_fc_call_site_ofs;$/;"	v	file:
sjlj_fc_data_ofs	except.c	/^static int sjlj_fc_data_ofs;$/;"	v	file:
sjlj_fc_jbuf_ofs	except.c	/^static int sjlj_fc_jbuf_ofs;$/;"	v	file:
sjlj_fc_lsda_ofs	except.c	/^static int sjlj_fc_lsda_ofs;$/;"	v	file:
sjlj_fc_personality_ofs	except.c	/^static int sjlj_fc_personality_ofs;$/;"	v	file:
sjlj_fc_type_node	except.c	/^static tree sjlj_fc_type_node;$/;"	v	file:
sjlj_find_directly_reachable_regions	except.c	/^sjlj_find_directly_reachable_regions (lp_info)$/;"	f	file:
sjlj_funcdef_number	except.c	/^static unsigned int sjlj_funcdef_number;$/;"	v	file:
sjlj_lp_info	except.c	/^struct sjlj_lp_info$/;"	s	file:
sjlj_mark_call_sites	except.c	/^sjlj_mark_call_sites (lp_info)$/;"	f	file:
sjlj_output_call_site_table	except.c	/^sjlj_output_call_site_table ()$/;"	f	file:
sjlj_size_of_call_site_table	except.c	/^sjlj_size_of_call_site_table ()$/;"	f	file:
skip_block_comment	cpplex.c	/^skip_block_comment (pfile)$/;"	f	file:
skip_consec_insns	loop.c	/^skip_consec_insns (insn, count)$/;"	f	file:
skip_copy_to_return_value	sibcall.c	/^skip_copy_to_return_value (orig_insn)$/;"	f	file:
skip_elses	cpplib.c	/^  bool skip_elses;		\/* Can future #else \/ #elif be skipped?  *\/$/;"	m	struct:if_stack	file:
skip_escaped_newlines	cpplex.c	/^skip_escaped_newlines (pfile)$/;"	f	file:
skip_evaluation	c-common.c	/^int skip_evaluation;$/;"	v
skip_insns_after_block	cfglayout.c	/^skip_insns_after_block (bb)$/;"	f	file:
skip_jump_insn	sibcall.c	/^skip_jump_insn (orig_insn)$/;"	f	file:
skip_leading_substring	toplev.h	26;"	d
skip_line_comment	cpplex.c	/^skip_line_comment (pfile)$/;"	f	file:
skip_next_char	c-format.c	/^  const int skip_next_char;$/;"	m	struct:__anon41	file:
skip_pic_restore	sibcall.c	/^skip_pic_restore (orig_insn)$/;"	f	file:
skip_rest_of_line	cpplib.c	/^skip_rest_of_line (pfile)$/;"	f	file:
skip_stack_adjustment	sibcall.c	/^skip_stack_adjustment (orig_insn)$/;"	f	file:
skip_unreturned_value	sibcall.c	/^skip_unreturned_value (orig_insn)$/;"	f	file:
skip_use_of_return_value	sibcall.c	/^skip_use_of_return_value (orig_insn, code)$/;"	f	file:
skip_whitespace	cpplex.c	/^skip_whitespace (pfile, c)$/;"	f	file:
skipping	cpphash.h	/^  unsigned char skipping;$/;"	m	struct:lexer_state
slot	function.c	/^  rtx slot;$/;"	m	struct:temp_slot	file:
slot_offset	calls.c	/^  struct args_size slot_offset;$/;"	m	struct:arg_data	typeref:struct:arg_data::args_size	file:
smaller	conflict.c	/^  int smaller;$/;"	m	struct:conflict_graph_arc_def	file:
smaller_next	conflict.c	/^  struct conflict_graph_arc_def *smaller_next;$/;"	m	struct:conflict_graph_arc_def	typeref:struct:conflict_graph_arc_def::conflict_graph_arc_def	file:
smallest_mode_for_size	stor-layout.c	/^smallest_mode_for_size (size, class)$/;"	f
smax_optab	optabs.h	184;"	d
smin_optab	optabs.h	183;"	d
smod_optab	optabs.h	172;"	d
smod_pow2_cheap	expmed.c	/^static int sdiv_pow2_cheap, smod_pow2_cheap;$/;"	v	file:
smul_highpart_optab	optabs.h	162;"	d
smul_optab	optabs.h	159;"	d
smul_widen_optab	optabs.h	164;"	d
smulv_optab	optabs.h	167;"	d
something_needs_elimination	reload1.c	/^static int something_needs_elimination;$/;"	v	file:
something_needs_operands_changed	reload1.c	/^int something_needs_operands_changed;$/;"	v
sorry	diagnostic.c	/^sorry VPARAMS ((const char *msgid, ...))$/;"	f
sorrycount	diagnostic.h	259;"	d
source	cpplib.h	/^    const cpp_token *source;	\/* Inherit padding from this token.  *\/$/;"	m	union:cpp_token::__anon85
source	dependence.c	/^  tree source;$/;"	m	struct:dependence	file:
source	gcov-io.h	/^     char *source;$/;"	v
source_label_number	dbxout.c	/^static int source_label_number = 1;$/;"	v	file:
source_line	debug.h	/^  void (* source_line) PARAMS ((unsigned int line, const char *file));$/;"	m	struct:gcc_debug_hooks
sp	cfganal.c	/^  unsigned int sp;$/;"	m	struct:depth_first_search_dsS	file:
sp	safe-ctype.c	45;"	d	file:
sp_equiv_reg	function.c	/^  rtx sp_equiv_reg;		\/* REG that SP is set from, perhaps SP.  *\/$/;"	m	struct:epi_info	file:
sp_offset	function.c	/^  HOST_WIDE_INT sp_offset;	\/* Offset from SP_EQUIV_REG of present SP.  *\/$/;"	m	struct:epi_info	file:
sp_offset	regmove.c	/^  HOST_WIDE_INT sp_offset;$/;"	m	struct:csa_memlist	file:
space	cpplib.c	/^    struct pragma_entry *space;$/;"	m	union:pragma_entry::__anon47	typeref:struct:pragma_entry::__anon47::pragma_entry	file:
spec_nodes	cpphash.h	/^  struct spec_nodes spec_nodes;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::spec_nodes
spec_nodes	cpphash.h	/^struct spec_nodes$/;"	s
special_function_p	calls.c	/^special_function_p (fndecl, flags)$/;"	f	file:
specqsort	ucbqsort.c	/^void specqsort(base, n, size, compar)$/;"	f
spell_type	cpplex.c	/^enum spell_type$/;"	g	file:
spelling	c-typeck.c	/^  struct spelling *spelling;$/;"	m	struct:initializer_stack	typeref:struct:initializer_stack::spelling	file:
spelling	c-typeck.c	/^static struct spelling *spelling;	\/* Next stack element (unused).  *\/$/;"	v	typeref:struct:spelling	file:
spelling	c-typeck.c	/^struct spelling$/;"	s	file:
spelling_base	c-typeck.c	/^  struct spelling *spelling_base;$/;"	m	struct:initializer_stack	typeref:struct:initializer_stack::spelling	file:
spelling_base	c-typeck.c	/^static struct spelling *spelling_base;	\/* Spelling stack base.  *\/$/;"	v	typeref:struct:spelling	file:
spelling_length	c-typeck.c	/^spelling_length ()$/;"	f	file:
spelling_size	c-typeck.c	/^  int spelling_size;$/;"	m	struct:initializer_stack	file:
spelling_size	c-typeck.c	/^static int spelling_size;		\/* Size of the spelling stack.  *\/$/;"	v	file:
spill_add_cost	reload1.c	/^static int spill_add_cost[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_cost	reload1.c	/^static int spill_cost[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_failure	reload1.c	/^spill_failure (insn, class)$/;"	f	file:
spill_hard_reg	reload1.c	/^spill_hard_reg (regno, cant_eliminate)$/;"	f	file:
spill_indirect_levels	reload1.c	/^static char spill_indirect_levels;$/;"	v	file:
spill_reg_order	reload1.c	/^static short spill_reg_order[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_reg_rtx	reload1.c	/^static rtx spill_reg_rtx[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_reg_store	reload1.c	/^static rtx spill_reg_store[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_reg_stored_to	reload1.c	/^static rtx spill_reg_stored_to[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_regs	reload1.c	/^static short spill_regs[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_stack_slot	reload1.c	/^static rtx spill_stack_slot[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spill_stack_slot_width	reload1.c	/^static unsigned int spill_stack_slot_width[FIRST_PSEUDO_REGISTER];$/;"	v	file:
spilled_pseudos	reload1.c	/^static regset_head spilled_pseudos;$/;"	v	file:
splay_tree	splay-tree.h	/^} *splay_tree;$/;"	t	typeref:struct:splay_tree_s
splay_tree_allocate_fn	splay-tree.h	/^typedef void *(*splay_tree_allocate_fn) PARAMS((int, void *));$/;"	t
splay_tree_compare_fn	splay-tree.h	/^typedef int (*splay_tree_compare_fn) PARAMS((splay_tree_key, splay_tree_key));$/;"	t
splay_tree_compare_ints	splay-tree.c	/^splay_tree_compare_ints (k1, k2)$/;"	f
splay_tree_compare_pointers	splay-tree.c	/^splay_tree_compare_pointers (k1, k2)$/;"	f
splay_tree_deallocate_fn	splay-tree.h	/^typedef void (*splay_tree_deallocate_fn) PARAMS((void *, void *));$/;"	t
splay_tree_delete	splay-tree.c	/^splay_tree_delete (sp)$/;"	f
splay_tree_delete_helper	splay-tree.c	/^splay_tree_delete_helper (sp, node)$/;"	f	file:
splay_tree_delete_key_fn	splay-tree.h	/^typedef void (*splay_tree_delete_key_fn) PARAMS((splay_tree_key));$/;"	t
splay_tree_delete_value_fn	splay-tree.h	/^typedef void (*splay_tree_delete_value_fn) PARAMS((splay_tree_value));$/;"	t
splay_tree_foreach	splay-tree.c	/^splay_tree_foreach (sp, fn, data)$/;"	f
splay_tree_foreach_fn	splay-tree.h	/^typedef int (*splay_tree_foreach_fn) PARAMS((splay_tree_node, void*));$/;"	t
splay_tree_foreach_helper	splay-tree.c	/^splay_tree_foreach_helper (sp, node, fn, data)$/;"	f	file:
splay_tree_insert	splay-tree.c	/^splay_tree_insert (sp, key, value)$/;"	f
splay_tree_key	splay-tree.h	/^typedef unsigned __int64 splay_tree_key;$/;"	t
splay_tree_key	splay-tree.h	/^typedef unsigned long int splay_tree_key;$/;"	t
splay_tree_lookup	splay-tree.c	/^splay_tree_lookup (sp, key)$/;"	f
splay_tree_max	splay-tree.c	/^splay_tree_max (sp)$/;"	f
splay_tree_min	splay-tree.c	/^splay_tree_min (sp)$/;"	f
splay_tree_new	splay-tree.c	/^splay_tree_new (compare_fn, delete_key_fn, delete_value_fn)$/;"	f
splay_tree_new_with_allocator	splay-tree.c	/^splay_tree_new_with_allocator (compare_fn, delete_key_fn, delete_value_fn,$/;"	f
splay_tree_node	splay-tree.h	/^typedef struct splay_tree_node_s *splay_tree_node;$/;"	t	typeref:struct:splay_tree_node_s
splay_tree_node_s	splay-tree.h	/^struct splay_tree_node_s$/;"	s
splay_tree_predecessor	splay-tree.c	/^splay_tree_predecessor (sp, key)$/;"	f
splay_tree_remove	splay-tree.c	/^splay_tree_remove (sp, key)$/;"	f
splay_tree_s	splay-tree.h	/^typedef struct splay_tree_s$/;"	s
splay_tree_splay	splay-tree.c	/^splay_tree_splay (sp, key)$/;"	f	file:
splay_tree_splay_helper	splay-tree.c	/^splay_tree_splay_helper (sp, key, node, parent, grandparent)$/;"	f	file:
splay_tree_successor	splay-tree.c	/^splay_tree_successor (sp, key)$/;"	f
splay_tree_value	splay-tree.h	/^typedef unsigned __int64 splay_tree_value;$/;"	t
splay_tree_value	splay-tree.h	/^typedef unsigned long int splay_tree_value;$/;"	t
splay_tree_xmalloc_allocate	splay-tree.c	/^splay_tree_xmalloc_allocate (size, data)$/;"	f	file:
splay_tree_xmalloc_deallocate	splay-tree.c	/^splay_tree_xmalloc_deallocate (object, data)$/;"	f	file:
splice_child_die	dwarf2out.c	/^splice_child_die (parent, child)$/;"	f	file:
split_1	insn-recog.c	/^split_1 (x0, insn)$/;"	f	file:
split_2	insn-recog.c	/^split_2 (x0, insn)$/;"	f	file:
split_3	insn-recog.c	/^split_3 (x0, insn)$/;"	f	file:
split_4	insn-recog.c	/^split_4 (x0, insn)$/;"	f	file:
split_all_insns	recog.c	/^split_all_insns (upd_life)$/;"	f
split_all_insns_noflow	recog.c	/^split_all_insns_noflow ()$/;"	f
split_bbs	sched-rgn.c	/^  bblst split_bbs;$/;"	m	struct:__anon31	file:
split_block	cfgrtl.c	/^split_block (bb, insn)$/;"	f
split_branch_probability	emit-rtl.c	/^int split_branch_probability = -1;$/;"	v
split_di	i386.c	/^split_di (operands, num, lo_half, hi_half)$/;"	f
split_double	final.c	/^split_double (value, first, second)$/;"	f
split_edge	cfgrtl.c	/^split_edge (edge_in)$/;"	f
split_edges	sched-rgn.c	/^split_edges (bb_src, bb_trg, bl)$/;"	f	file:
split_insn	recog.c	/^split_insn (insn)$/;"	f	file:
split_insns	insn-recog.c	/^split_insns (x0, insn)$/;"	f
split_specs_attrs	attribs.c	/^split_specs_attrs (specs_attrs, declspecs, prefix_attributes)$/;"	f
split_ti	i386.c	/^split_ti (operands, num, lo_half, hi_half)$/;"	f
split_tree	fold-const.c	/^split_tree (in, code, conp, litp, minus_litp, negate_p)$/;"	f	file:
splittable_regs	unroll.c	/^static rtx *splittable_regs;$/;"	v	file:
splittable_regs_updates	unroll.c	/^static int *splittable_regs_updates;$/;"	v	file:
sqrt_optab	optabs.h	197;"	d
squeeze_notes	jump.c	/^squeeze_notes (startp, endp)$/;"	f
src	basic-block.h	/^  struct basic_block_def *src, *dest;$/;"	m	struct:edge_def	typeref:struct:edge_def::basic_block_def
src	cse.c	/^  rtx src;$/;"	m	struct:set	file:
src	cselib.c	/^  rtx src;$/;"	m	struct:set	file:
src_const	cse.c	/^  rtx src_const;$/;"	m	struct:set	file:
src_const_elt	cse.c	/^  struct table_elt *src_const_elt;$/;"	m	struct:set	typeref:struct:set::table_elt	file:
src_const_hash	cse.c	/^  unsigned src_const_hash;$/;"	m	struct:set	file:
src_coords_attribute	dwarfout.c	/^src_coords_attribute (src_fileno, src_lineno)$/;"	f	file:
src_elt	cse.c	/^  struct table_elt *src_elt;$/;"	m	struct:set	typeref:struct:set::table_elt	file:
src_elt	cselib.c	/^  cselib_val *src_elt;$/;"	m	struct:set	file:
src_hash	cse.c	/^  unsigned src_hash;$/;"	m	struct:set	file:
src_in_memory	cse.c	/^  char src_in_memory;$/;"	m	struct:set	file:
src_info_attribute	dwarfout.c	/^src_info_attribute (src_info_start_label)$/;"	f	file:
src_lineno	c-lex.c	/^static unsigned int src_lineno;$/;"	v	file:
src_p	local-alloc.c	/^  rtx *src_p;$/;"	m	struct:equivalence	file:
src_prob	sched-rgn.c	/^  int src_prob;$/;"	m	struct:__anon31	file:
src_reg	loop.h	/^  rtx src_reg;			\/* Biv from which this giv is computed.$/;"	m	struct:induction
src_volatile	cse.c	/^  char src_volatile;$/;"	m	struct:set	file:
srf_trav	ssa.c	/^typedef int (*srf_trav) PARAMS ((int regno, rtx r, sbitmap canonical_elements, partition reg_partition));$/;"	t	file:
ss	alloca.c	/^    long ss[0200];		\/* 0200 overflow words.  *\/$/;"	m	struct:stack_segment_linkage	file:
ssa0	alloca.c	/^    long ssa0;$/;"	m	struct:stack_segment_linkage	file:
ssa1	alloca.c	/^    long ssa1;$/;"	m	struct:stack_segment_linkage	file:
ssa2	alloca.c	/^    long ssa2;$/;"	m	struct:stack_segment_linkage	file:
ssa3	alloca.c	/^    long ssa3;$/;"	m	struct:stack_segment_linkage	file:
ssa4	alloca.c	/^    long ssa4;$/;"	m	struct:stack_segment_linkage	file:
ssa5	alloca.c	/^    long ssa5;$/;"	m	struct:stack_segment_linkage	file:
ssa6	alloca.c	/^    long ssa6;$/;"	m	struct:stack_segment_linkage	file:
ssa7	alloca.c	/^    long ssa7;$/;"	m	struct:stack_segment_linkage	file:
ssa_ccp_df_delete_unreachable_insns	ssa-ccp.c	/^ssa_ccp_df_delete_unreachable_insns ()$/;"	f	file:
ssa_ccp_substitute_constants	ssa-ccp.c	/^ssa_ccp_substitute_constants ()$/;"	f	file:
ssa_const_prop	ssa-ccp.c	/^ssa_const_prop ()$/;"	f
ssa_definition	ssa.c	/^varray_type ssa_definition;$/;"	v
ssa_edges	ssa-ccp.c	/^static sbitmap ssa_edges;$/;"	v	file:
ssa_eliminate_dead_code	ssa-dce.c	/^ssa_eliminate_dead_code ()$/;"	f
ssa_fast_dce	ssa-ccp.c	/^ssa_fast_dce (df)$/;"	f	file:
ssa_max_reg_num	ssa.c	/^static unsigned int ssa_max_reg_num;$/;"	v	file:
ssa_rename_from	ssa.c	/^varray_type ssa_rename_from;$/;"	v
ssa_rename_from_delete	ssa.c	/^ssa_rename_from_delete (srfp)$/;"	f	file:
ssa_rename_from_equal	ssa.c	/^ssa_rename_from_equal (srfp1, srfp2)$/;"	f	file:
ssa_rename_from_free	ssa.c	/^ssa_rename_from_free ()$/;"	f	file:
ssa_rename_from_hash_function	ssa.c	/^ssa_rename_from_hash_function (srfp)$/;"	f	file:
ssa_rename_from_hash_table_data	ssa.c	/^struct ssa_rename_from_hash_table_data {$/;"	s	file:
ssa_rename_from_ht	ssa.c	/^htab_t ssa_rename_from_ht;$/;"	v
ssa_rename_from_initialize	ssa.c	/^ssa_rename_from_initialize ()$/;"	f	file:
ssa_rename_from_insert	ssa.c	/^ssa_rename_from_insert (reg, r)$/;"	f	file:
ssa_rename_from_lookup	ssa.c	/^ssa_rename_from_lookup (reg)$/;"	f	file:
ssa_rename_from_pair	ssa.c	/^} ssa_rename_from_pair;$/;"	t	typeref:struct:__anon2	file:
ssa_rename_from_print	ssa.c	/^ssa_rename_from_print ()$/;"	f
ssa_rename_from_print_1	ssa.c	/^ssa_rename_from_print_1 (slot, data)$/;"	f	file:
ssa_rename_from_traverse	ssa.c	/^ssa_rename_from_traverse (callback_function,$/;"	f	file:
ssa_rename_to_hard	ssa.c	/^static rtx ssa_rename_to_hard[FIRST_PSEUDO_REGISTER][NUM_MACHINE_MODES];$/;"	v	file:
ssa_rename_to_insert	ssa.c	/^ssa_rename_to_insert(reg, r)$/;"	f	file:
ssa_rename_to_lookup	ssa.c	/^ssa_rename_to_lookup (reg)$/;"	f	file:
ssa_rename_to_pseudo	ssa.c	/^static rtx *ssa_rename_to_pseudo;$/;"	v	file:
ssbase	alloca.c	/^    long ssbase:32;		\/* Offset to stack base.  *\/$/;"	m	struct:stack_segment_linkage	file:
sscray	alloca.c	/^    long sscray[7];		\/* Reserved for Cray Research.  *\/$/;"	m	struct:stack_segment_linkage	file:
sscsnm	alloca.c	/^    long sscsnm;		\/* Private control structure number for$/;"	m	struct:stack_segment_linkage	file:
sse_comparison_operator	i386.c	/^sse_comparison_operator (op, mode)$/;"	f
sse_load	i386.h	/^  const int sse_load[3];	\/* cost of loading SSE register$/;"	m	struct:processor_costs
sse_move	i386.h	/^  const int sse_move;		\/* cost of moving SSE register.  *\/$/;"	m	struct:processor_costs
sse_nregs	i386.h	/^  int sse_nregs;		\/* # sse registers available for passing *\/$/;"	m	struct:ix86_args
sse_regno	i386.h	/^  int sse_regno;		\/* next available sse register number *\/$/;"	m	struct:ix86_args
sse_store	i386.h	/^  const int sse_store[3];	\/* cost of storing SSE register$/;"	m	struct:processor_costs
sse_words	i386.h	/^  int sse_words;		\/* # sse words passed so far *\/$/;"	m	struct:ix86_args
ssgvup	alloca.c	/^    long ssgvup;		\/* Pointer to multitasking thread giveup.  *\/$/;"	m	struct:stack_segment_linkage	file:
ssize_int	tree.h	2445;"	d
ssize_t	auto-host.h	84;"	d
ssizetype	tree.h	2432;"	d
sspseg	alloca.c	/^    long sspseg:32;		\/* Offset to linkage control of previous$/;"	m	struct:stack_segment_linkage	file:
sss0	alloca.c	/^    long sss0;$/;"	m	struct:stack_segment_linkage	file:
sss1	alloca.c	/^    long sss1;$/;"	m	struct:stack_segment_linkage	file:
sss2	alloca.c	/^    long sss2;$/;"	m	struct:stack_segment_linkage	file:
sss3	alloca.c	/^    long sss3;$/;"	m	struct:stack_segment_linkage	file:
sss4	alloca.c	/^    long sss4;$/;"	m	struct:stack_segment_linkage	file:
sss5	alloca.c	/^    long sss5;$/;"	m	struct:stack_segment_linkage	file:
sss6	alloca.c	/^    long sss6;$/;"	m	struct:stack_segment_linkage	file:
sss7	alloca.c	/^    long sss7;$/;"	m	struct:stack_segment_linkage	file:
sssize	alloca.c	/^    long sssize:32;		\/* Number of words in this segment.  *\/$/;"	m	struct:stack_segment_linkage	file:
sstcpt	alloca.c	/^    long sstcpt:32;		\/* Pointer to task common address block.  *\/$/;"	m	struct:stack_segment_linkage	file:
sstpid	alloca.c	/^    long sstpid;		\/* Process ID for pid based multi-tasking.  *\/$/;"	m	struct:stack_segment_linkage	file:
ssusr1	alloca.c	/^    long ssusr1;		\/* Reserved for user.  *\/$/;"	m	struct:stack_segment_linkage	file:
ssusr2	alloca.c	/^    long ssusr2;		\/* Reserved for user.  *\/$/;"	m	struct:stack_segment_linkage	file:
st	cppfiles.c	/^  struct stat st;		\/* copy of stat(2) data for file *\/$/;"	m	struct:include_file	typeref:struct:include_file::stat	file:
st_antloc	gcse.c	/^static sbitmap * st_antloc;$/;"	v	file:
stab_to_sclass	xcoffout.c	/^stab_to_sclass (stab)$/;"	f
stabilize	explow.c	/^stabilize (x)$/;"	f
stabilize_reference	tree.c	/^stabilize_reference (ref)$/;"	f
stabilize_reference_1	tree.c	/^stabilize_reference_1 (e)$/;"	f
stabilize_va_list	builtins.c	/^stabilize_va_list (valist, needs_lvalue)$/;"	f	file:
stable_and_no_regs_but_for_p	regmove.c	/^stable_and_no_regs_but_for_p (x, src, dst)$/;"	f	file:
stack	c-typeck.c	/^  struct constructor_stack *stack;$/;"	m	struct:constructor_range_stack	typeref:struct:constructor_range_stack::constructor_stack	file:
stack	calls.c	/^  rtx stack;$/;"	m	struct:arg_data	file:
stack	cfganal.c	/^  basic_block *stack;$/;"	m	struct:depth_first_search_dsS	file:
stack	hashtable.h	/^  struct obstack stack;$/;"	m	struct:ht	typeref:struct:ht::obstack
stack	reg-stack.c	/^} *stack;$/;"	t	typeref:struct:stack_def	file:
stack	timevar.c	/^static struct timevar_stack_def *stack;$/;"	v	typeref:struct:timevar_stack_def	file:
stack_adjust_offset	dwarf2out.c	/^stack_adjust_offset (pattern)$/;"	f	file:
stack_alignment_needed	function.h	/^  int stack_alignment_needed;$/;"	m	struct:function
stack_arg_under_construction	calls.c	/^int stack_arg_under_construction;$/;"	v
stack_block_stack	stmt.c	382;"	d	file:
stack_check_libfunc	explow.c	/^static rtx stack_check_libfunc;$/;"	v	file:
stack_control_header	alloca.c	/^struct stack_control_header$/;"	s	file:
stack_def	reg-stack.c	/^typedef struct stack_def$/;"	s	file:
stack_dir	alloca.c	/^static int stack_dir;		\/* 1 or -1 once known.  *\/$/;"	v	file:
stack_in	reg-stack.c	/^  struct stack_def stack_in;	\/* Input stack configuration.  *\/$/;"	m	struct:block_info_def	typeref:struct:block_info_def::stack_def	file:
stack_include_file	cppfiles.c	/^stack_include_file (pfile, inc)$/;"	f	file:
stack_level	stmt.c	/^	  rtx stack_level;$/;"	m	struct:nesting::__anon67::__anon70	file:
stack_level	stmt.c	/^  rtx stack_level;$/;"	m	struct:goto_fixup	file:
stack_limit_rtx	toplev.c	/^rtx stack_limit_rtx;$/;"	v
stack_locals	i386.c	/^  rtx stack_locals[(int) MAX_MACHINE_MODE][MAX_386_STACK_LOCALS];$/;"	m	struct:machine_function	file:
stack_memref_p	regmove.c	/^stack_memref_p (x)$/;"	f	file:
stack_out	reg-stack.c	/^  struct stack_def stack_out;	\/* Output stack configuration.  *\/$/;"	m	struct:block_info_def	typeref:struct:block_info_def::stack_def	file:
stack_pointer_delta	function.h	169;"	d
stack_pointer_offset	i386.c	/^  HOST_WIDE_INT stack_pointer_offset;$/;"	m	struct:ix86_frame	file:
stack_pointer_rtx	rtl.h	1627;"	d
stack_regs_mentioned	reg-stack.c	/^stack_regs_mentioned (insn)$/;"	f
stack_regs_mentioned_data	reg-stack.c	/^static varray_type stack_regs_mentioned_data;$/;"	v	file:
stack_regs_mentioned_p	reg-stack.c	/^stack_regs_mentioned_p (pat)$/;"	f	file:
stack_result	reg-stack.c	/^stack_result (decl)$/;"	f	file:
stack_segment_linkage	alloca.c	/^struct stack_segment_linkage$/;"	s	file:
stack_slot	calls.c	/^  rtx stack_slot;$/;"	m	struct:arg_data	file:
stack_slot_list	function.h	528;"	d
stack_usage_map	calls.c	/^static char *stack_usage_map;$/;"	v	file:
standalone	timevar.c	/^  unsigned standalone : 1;$/;"	m	struct:timevar_def	file:
standard_80387_constant_p	i386.c	/^standard_80387_constant_p (x)$/;"	f
standard_sse_constant_p	i386.c	/^standard_sse_constant_p (x)$/;"	f
star	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
start	basic-block.h	/^  rtx start;$/;"	m	struct:loop
start	reload.c	/^  HOST_WIDE_INT start;	\/* Starting offset or register number.  *\/$/;"	m	struct:decomposition	file:
start	stmt.c	/^	  rtx start;$/;"	m	struct:nesting::__anon67::__anon71	file:
start_bb	graph.c	/^start_bb (fp, bb)$/;"	f	file:
start_cdtor	c-objc-common.c	/^start_cdtor (method_type)$/;"	f	file:
start_cleanup_deferral	stmt.c	/^start_cleanup_deferral ()$/;"	f
start_decl	c-decl.c	/^start_decl (declarator, declspecs, initialized, attributes)$/;"	f
start_directive	cpplib.c	/^start_directive (pfile)$/;"	f	file:
start_enum	c-decl.c	/^start_enum (name)$/;"	f
start_fct	graph.c	/^start_fct (fp)$/;"	f	file:
start_fname_decls	c-common.c	/^start_fname_decls ()$/;"	f
start_function	c-decl.c	/^start_function (declspecs, declarator, attributes)$/;"	f
start_init	c-typeck.c	/^start_init (decl, asmspec_tree, top_level)$/;"	f
start_inlining	langhooks.h	/^  int (*start_inlining) PARAMS ((union tree_node *));$/;"	m	struct:lang_hooks_for_tree_inlining
start_label	stmt.c	/^	  rtx start_label;$/;"	m	struct:nesting::__anon67::__anon69	file:
start_of_epilogue_needs	resource.c	/^static struct resources start_of_epilogue_needs;$/;"	v	typeref:struct:resources	file:
start_record_layout	stor-layout.c	/^start_record_layout (t)$/;"	f
start_sequence	emit-rtl.c	/^start_sequence ()$/;"	f
start_sequence_for_rtl_expr	emit-rtl.c	/^start_sequence_for_rtl_expr (t)$/;"	f
start_source_file	debug.h	/^  void (* start_source_file) PARAMS ((unsigned int line, const char *file));$/;"	m	struct:gcc_debug_hooks
start_struct	c-decl.c	/^start_struct (code, name)$/;"	f
start_time	timevar.c	/^  struct timevar_time_def start_time;$/;"	m	struct:timevar_def	typeref:struct:timevar_def::timevar_time_def	file:
start_time	timevar.c	/^static struct timevar_time_def start_time;$/;"	v	typeref:struct:timevar_time_def	file:
started	conflict.c	/^  int started;$/;"	m	struct:print_context	file:
state	cfgbuild.c	/^enum state {BLOCK_NEW = 0, BLOCK_ORIGINAL, BLOCK_TO_SPLIT};$/;"	g	file:
state	cpphash.h	/^  struct lexer_state state;$/;"	m	struct:cpp_reader	typeref:struct:cpp_reader::lexer_state
state	diagnostic.h	/^  output_state state;$/;"	m	struct:output_buffer
state	tree-dump.c	/^  int state;			\/* state of play *\/$/;"	m	struct:dump_file_info	file:
statement_code_p	c-common.c	/^statement_code_p (code)$/;"	f
static_chain_incoming_rtx	emit-rtl.c	/^rtx static_chain_incoming_rtx;	\/* (REG:Pmode STATIC_CHAIN_INCOMING_REGNUM) *\/$/;"	v
static_chain_rtx	emit-rtl.c	/^rtx static_chain_rtx;		\/* (REG:Pmode STATIC_CHAIN_REGNUM) *\/$/;"	v
static_ctor_flag	tree.h	/^  unsigned static_ctor_flag : 1;$/;"	m	struct:tree_decl
static_ctors	c-decl.c	/^tree static_ctors, static_dtors;$/;"	v
static_dtor_flag	tree.h	/^  unsigned static_dtor_flag : 1;$/;"	m	struct:tree_decl
static_dtors	c-decl.c	/^tree static_ctors, static_dtors;$/;"	v
static_flag	tree.h	/^  unsigned static_flag : 1;$/;"	m	struct:tree_common
static_reload_reg_p	reload.c	/^static short *static_reload_reg_p;$/;"	v	file:
staticp	langhooks.h	/^  int (*staticp) PARAMS ((tree));$/;"	m	struct:lang_hooks
staticp	tree.c	/^staticp (arg)$/;"	f
status	cse.c	/^      enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	m	struct:cse_basic_block_data::branch_path	typeref:enum:cse_basic_block_data::branch_path::taken	file:
status	dbxout.c	/^  enum typestatus status;$/;"	m	struct:typeinfo	typeref:enum:typeinfo::typestatus	file:
status	dependence.c	/^  enum du_status_type status;$/;"	m	struct:def_use	typeref:enum:def_use::du_status_type	file:
status	dependence.c	/^  enum loop_status_type status;$/;"	m	struct:loop	typeref:enum:loop::loop_status_type	file:
status_warning	c-format.c	/^status_warning VPARAMS ((int *status, const char *msgid, ...))$/;"	f	file:
std	c-format.c	/^  const enum format_std_version std;$/;"	m	struct:__anon38	typeref:enum:__anon38::format_std_version	file:
std	c-format.c	/^  const enum format_std_version std;$/;"	m	struct:__anon40	typeref:enum:__anon40::format_std_version	file:
std	c-format.c	/^  const enum format_std_version std;$/;"	m	struct:__anon41	typeref:enum:__anon41::format_std_version	file:
std	c-format.c	/^  enum format_std_version std;$/;"	m	struct:__anon39	typeref:enum:__anon39::format_std_version	file:
std_expand_builtin_va_arg	builtins.c	/^std_expand_builtin_va_arg (valist, type)$/;"	f
std_expand_builtin_va_start	builtins.c	/^std_expand_builtin_va_start (stdarg_p, valist, nextarg)$/;"	f
std_prefix	prefix.c	/^static const char *std_prefix = PREFIX;$/;"	v	file:
stdarg	function.h	/^  unsigned int stdarg : 1;$/;"	m	struct:function
steal_delay_list_from_fallthrough	reorg.c	/^steal_delay_list_from_fallthrough (insn, condition, seq,$/;"	f	file:
steal_delay_list_from_target	reorg.c	/^steal_delay_list_from_target (insn, condition, seq, delay_list,$/;"	f	file:
stk_stat	alloca.c	/^struct stk_stat$/;"	s	file:
stk_trailer	alloca.c	/^struct stk_trailer$/;"	s	file:
stkm_free	alloca.c	/^    long stkm_free;		\/* Number of deallocations by $STKMRET.  *\/$/;"	m	struct:stk_stat	file:
stko_free	alloca.c	/^    long stko_free;		\/* Number of deallocations by $STKRETN.  *\/$/;"	m	struct:stk_stat	file:
stko_mallocs	alloca.c	/^    long stko_mallocs;		\/* Block allocations by $STKOFEN.  *\/$/;"	m	struct:stk_stat	file:
stmt	function.h	/^  struct stmt_status *stmt;$/;"	m	struct:function	typeref:struct:function::stmt_status
stmt_count	c-parse.c	/^static int stmt_count;$/;"	v	file:
stmt_list_attribute	dwarfout.c	/^stmt_list_attribute (label)$/;"	f	file:
stmt_loop_nest_empty	stmt.c	/^stmt_loop_nest_empty ()$/;"	f
stmt_obstack	stmt.c	/^struct obstack stmt_obstack;$/;"	v	typeref:struct:obstack
stmt_status	stmt.c	/^struct stmt_status$/;"	s	file:
stmt_tree	c-common.h	/^typedef struct stmt_tree_s *stmt_tree;$/;"	t	typeref:struct:stmt_tree_s
stmt_tree_s	c-common.h	/^struct stmt_tree_s {$/;"	s
stmts_are_full_exprs_p	c-common.h	/^  int stmts_are_full_exprs_p;$/;"	m	struct:stmt_tree_s
stmts_are_full_exprs_p	c-decl.c	/^stmts_are_full_exprs_p ()$/;"	f
stop_search_p	reorg.c	/^stop_search_p (insn, labels_p)$/;"	f	file:
store_bit_field	expmed.c	/^store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, total_size)$/;"	f
store_by_pieces	expr.c	/^store_by_pieces (to, len, constfun, constfundata, align)$/;"	f
store_by_pieces	expr.c	/^struct store_by_pieces$/;"	s	file:
store_by_pieces_1	expr.c	/^store_by_pieces_1 (data, align)$/;"	f	file:
store_by_pieces_2	expr.c	/^store_by_pieces_2 (genfun, mode, data)$/;"	f	file:
store_constructor	expr.c	/^store_constructor (exp, target, cleared, size)$/;"	f	file:
store_constructor_field	expr.c	/^store_constructor_field (target, bitsize, bitpos, mode, exp, type, cleared,$/;"	f	file:
store_expr	expr.c	/^store_expr (exp, target, want_value)$/;"	f
store_field	expr.c	/^store_field (target, bitsize, bitpos, mode, exp, value_mode, unsignedp, type,$/;"	f	file:
store_fixed_bit_field	expmed.c	/^store_fixed_bit_field (op0, offset, bitsize, bitpos, value)$/;"	f	file:
store_init_value	c-typeck.c	/^store_init_value (decl, init)$/;"	f
store_killed_after	gcse.c	/^store_killed_after (x, insn, bb)$/;"	f	file:
store_killed_before	gcse.c	/^store_killed_before (x, insn, bb)$/;"	f	file:
store_killed_in_insn	gcse.c	/^store_killed_in_insn (x, insn)$/;"	f	file:
store_mems	loop.h	/^  rtx store_mems;$/;"	m	struct:loop_info
store_motion	gcse.c	/^store_motion ()$/;"	f	file:
store_one_arg	calls.c	/^store_one_arg (arg, argblock, flags, variable_size, reg_parm_stack_space)$/;"	f	file:
store_ops_ok	gcse.c	/^store_ops_ok (x, bb)$/;"	f	file:
store_parm_decls	c-decl.c	/^store_parm_decls ()$/;"	f
store_ruid	reload1.c	/^    int store_ruid;$/;"	m	struct:__anon1	file:
store_split_bit_field	expmed.c	/^store_split_bit_field (op0, bitsize, bitpos, value)$/;"	f	file:
store_unaligned_arguments_into_pseudos	calls.c	/^store_unaligned_arguments_into_pseudos (args, num_actuals)$/;"	f	file:
stored_args_map	calls.c	/^static sbitmap stored_args_map;$/;"	v	file:
storedecls	c-decl.c	/^storedecls (decls)$/;"	f	file:
stores	flow.c	/^  rtx stores;$/;"	m	struct:reg_cond_life_info	file:
stores	gcse.c	/^  rtx stores;			\/* INSN list of stores seen.  *\/$/;"	m	struct:ls_expr	file:
storetags	c-decl.c	/^storetags (tags)$/;"	f	file:
str	c-lex.c	/^  const char *str;$/;"	m	struct:pf_args	file:
str	cpplib.h	/^    struct cpp_string str;	\/* A string, or number.  *\/$/;"	m	union:cpp_token::__anon85	typeref:struct:cpp_token::__anon85::cpp_string
str	hashtable.h	/^  const unsigned char *str;$/;"	m	struct:ht_identifier
straighten_stack	reg-stack.c	/^straighten_stack (insn, regstack)$/;"	f	file:
strcmp	cppfiles.c	77;"	d	file:
strdup	system.h	593;"	d
stream	diagnostic.h	/^  FILE* stream;$/;"	m	struct:output_buffer
stream	tree-dump.h	/^  FILE *stream;$/;"	m	struct:dump_info
strength_reduce	loop.c	/^strength_reduce (loop, flags)$/;"	f	file:
strfmon_flag_pairs	c-format.c	/^static const format_flag_pair strfmon_flag_pairs[] =$/;"	v	file:
strfmon_flag_specs	c-format.c	/^static const format_flag_spec strfmon_flag_specs[] =$/;"	v	file:
strfmon_format_type	c-format.c	/^		   strftime_format_type, strfmon_format_type,$/;"	e	enum:format_type	file:
strfmon_length_specs	c-format.c	/^static const format_length_info strfmon_length_specs[] =$/;"	v	file:
strftime_flag_pairs	c-format.c	/^static const format_flag_pair strftime_flag_pairs[] =$/;"	v	file:
strftime_flag_specs	c-format.c	/^static const format_flag_spec strftime_flag_specs[] =$/;"	v	file:
strftime_format_type	c-format.c	/^		   strftime_format_type, strfmon_format_type,$/;"	e	enum:format_type	file:
strict_low	recog.h	/^  const char strict_low;$/;"	m	struct:insn_operand_data
strict_memory_address_p	reload.c	/^strict_memory_address_p (mode, addr)$/;"	f
stride	loop.c	/^  HOST_WIDE_INT stride;		\/* Prefetch stride in bytes in each$/;"	m	struct:prefetch_info	file:
string	toplev.c	/^  const char *const string;$/;"	m	struct:__anon61	file:
string	tree.h	/^  struct tree_string string;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_string
string_compare	hash.c	/^string_compare (k1, k2)$/;"	f
string_constant	expr.c	/^string_constant (arg, ptr_offset)$/;"	f
string_copy	hash.c	/^string_copy (memory, k)$/;"	f
string_flag	tree.h	/^  unsigned string_flag : 1;$/;"	m	struct:tree_type
string_hash	hash.c	/^string_hash (k)$/;"	f
string_stack	stringpool.c	/^static struct obstack string_stack;$/;"	v	typeref:struct:obstack	file:
string_type_class	typeclass.h	/^  array_type_class, string_type_class, set_type_class, file_type_class,$/;"	e	enum:type_class
string_type_node	c-common.h	215;"	d
stringified	cppmacro.c	/^  const cpp_token *stringified;	\/* Stringified argument.  *\/$/;"	m	struct:macro_arg	file:
stringify_arg	cppmacro.c	/^stringify_arg (pfile, arg)$/;"	f	file:
stringpool_statistics	stringpool.c	/^stringpool_statistics ()$/;"	f
strip_array_types	c-common.c	/^strip_array_types (type)$/;"	f
strip_attrs	attribs.c	/^strip_attrs (specs_attrs)$/;"	f
strip_compound_expr	fold-const.c	/^strip_compound_expr (t, s)$/;"	f	file:
strip_off_ending	toplev.c	/^strip_off_ending (name, len)$/;"	f
strip_reg_name	varasm.c	/^strip_reg_name (name)$/;"	f	file:
stripattributes	dwarf2out.c	/^stripattributes (s)$/;"	f	file:
strlen_optab	optabs.h	205;"	d
strong_siv	dependence.c	/^enum complexity_type {ziv, strong_siv, weak_siv, weak_zero_siv,$/;"	e	enum:complexity_type	file:
strtoul_for_line	cpplib.c	/^strtoul_for_line (str, len, nump)$/;"	f	file:
struct_value_incoming_rtx	emit-rtl.c	/^rtx struct_value_incoming_rtx;	\/* (REG:Pmode STRUCT_VALUE_INCOMING_REGNUM) *\/$/;"	v
struct_value_rtx	emit-rtl.c	/^rtx struct_value_rtx;		\/* (REG:Pmode STRUCT_VALUE_REGNUM) *\/$/;"	v
stub_files	Makefile	/^stub_files := $(libc_dir)\/stub.o$/;"	m
sub_optab	optabs.h	158;"	d
subblocks	tree.h	/^  tree subblocks;$/;"	m	struct:tree_block
subblocks_tag_transparent	c-decl.c	/^    char subblocks_tag_transparent;$/;"	m	struct:binding_level	file:
subflg	real.c	/^static int subflg = 0;$/;"	v	file:
subreg_hard_regno	emit-rtl.c	/^subreg_hard_regno (x, check_mode)$/;"	f
subreg_highpart_offset	emit-rtl.c	/^subreg_highpart_offset (outermode, innermode)$/;"	f
subreg_loc	reload.c	/^  rtx *subreg_loc;		\/* Location of SUBREG if WHERE is inside$/;"	m	struct:replacement	file:
subreg_lowpart_offset	emit-rtl.c	/^subreg_lowpart_offset (outermode, innermode)$/;"	f
subreg_lowpart_p	emit-rtl.c	/^subreg_lowpart_p (x)$/;"	f
subreg_lsb	rtlanal.c	/^subreg_lsb (x)$/;"	f
subreg_realpart_p	emit-rtl.c	/^subreg_realpart_p (x)$/;"	f
subreg_regno	rtlanal.c	/^subreg_regno (x)$/;"	f
subreg_regno_offset	rtlanal.c	/^subreg_regno_offset (xregno, xmode, offset, ymode)$/;"	f
subscript	dependence.c	/^typedef struct subscript$/;"	s	file:
subscript	dependence.c	/^} subscript;$/;"	t	typeref:struct:subscript	file:
subscript_data_attribute	dwarfout.c	/^subscript_data_attribute (type)$/;"	f	file:
subst	combine.c	/^subst (x, from, to, in_dest, unique_copy)$/;"	f	file:
subst_asm_stack_regs	reg-stack.c	/^subst_asm_stack_regs (insn, regstack)$/;"	f	file:
subst_constants	integrate.c	/^subst_constants (loc, insn, map, memonly)$/;"	f	file:
subst_indexed_address	reload.c	/^subst_indexed_address (addr)$/;"	f	file:
subst_insn	combine.c	/^static rtx subst_insn;$/;"	v	file:
subst_low_cuid	combine.c	/^static int subst_low_cuid;$/;"	v	file:
subst_prev_insn	combine.c	/^static rtx subst_prev_insn;$/;"	v	file:
subst_reg_equivs	reload.c	/^subst_reg_equivs (ad, insn)$/;"	f	file:
subst_reg_equivs_changed	reload.c	/^static int subst_reg_equivs_changed;$/;"	v	file:
subst_reloads	reload.c	/^subst_reloads (insn)$/;"	f
subst_stack_regs	reg-stack.c	/^subst_stack_regs (insn, regstack)$/;"	f	file:
subst_stack_regs_pat	reg-stack.c	/^subst_stack_regs_pat (insn, regstack, pat)$/;"	f	file:
substitute_in_expr	tree.c	/^substitute_in_expr (exp, f, r)$/;"	f
subtract_reg_term	unroll.c	/^subtract_reg_term (op, reg)$/;"	f	file:
subv_optab	optabs.h	161;"	d
succ	basic-block.h	/^  edge pred, succ;$/;"	m	struct:basic_block_def
succ_count	profile.c	/^    gcov_type succ_count;$/;"	m	struct:bb_info	file:
succ_next	basic-block.h	/^  struct edge_def *pred_next, *succ_next;$/;"	m	struct:edge_def	typeref:struct:edge_def::
success	fold-const.c	/^  int success;$/;"	m	struct:exact_real_inverse_args	file:
successor_phi_fn	ssa.h	/^typedef int (*successor_phi_fn)         PARAMS ((rtx, int, int, void *));$/;"	t
suffix	cppexp.c	/^struct suffix$/;"	s	file:
suffix	tree-dump.c	/^  const char *const suffix;	\/* suffix to give output file.  *\/$/;"	m	struct:dump_file_info	file:
supercontext	tree.h	/^  tree supercontext;$/;"	m	struct:tree_block
supports_one_only	varasm.c	/^supports_one_only ()$/;"	f
suppression_char	c-format.c	/^  const int suppression_char;$/;"	m	struct:__anon43	file:
svr4_dbx_register_map	i386.c	/^int const svr4_dbx_register_map[FIRST_PSEUDO_REGISTER] =$/;"	v
swap_commutative_operands_p	rtlanal.c	/^swap_commutative_operands_p (x, y)$/;"	f
swap_condition	jump.c	/^swap_condition (code)$/;"	f
swap_rtx_condition	reg-stack.c	/^swap_rtx_condition (insn)$/;"	f	file:
swap_rtx_condition_1	reg-stack.c	/^swap_rtx_condition_1 (pat)$/;"	f	file:
swap_sort	haifa-sched.c	/^swap_sort (a, n)$/;"	f	file:
swap_tree_comparison	fold-const.c	/^swap_tree_comparison (code)$/;"	f	file:
sweep_pages	ggc-page.c	/^sweep_pages ()$/;"	f	file:
switch_stack	c-typeck.c	/^static struct c_switch *switch_stack;$/;"	v	typeref:struct:c_switch	file:
switch_stmt	c-typeck.c	/^  tree switch_stmt;$/;"	m	struct:c_switch	file:
swtch	tree-dump.c	/^  const char *const swtch;	\/* command line switch *\/$/;"	m	struct:dump_file_info	file:
symbolic_operand	i386.c	/^symbolic_operand (op, mode)$/;"	f
symbolic_reference_mentioned_p	i386.c	/^symbolic_reference_mentioned_p (op)$/;"	f
symtab	tree.h	/^  union {int address; char *pointer; } symtab;$/;"	m	struct:tree_type	typeref:union:tree_type::__anon17
synth_mult	expmed.c	/^synth_mult (alg_out, t, cost_limit)$/;"	f	file:
sys	timevar.h	/^  float sys;$/;"	m	struct:timevar_time_def
syshdr	cppmacro.c	/^  unsigned int syshdr   : 1;	\/* If macro defined in system header.  *\/$/;"	m	struct:cpp_macro	file:
sysp	cpphash.h	/^  int sysp;$/;"	m	struct:search_path
sysp	line-map.h	/^  unsigned char sysp;$/;"	m	struct:line_map
systm_head	cppinit.c	/^  struct search_path *systm_head, *systm_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::search_path	file:
systm_tail	cppinit.c	/^  struct search_path *systm_head, *systm_tail;$/;"	m	struct:cpp_pending	typeref:struct:cpp_pending::	file:
t	except.c	/^  tree t;$/;"	m	struct:ttypes_filter	file:
t	fold-const.c	/^  tree t;			\/* Output: constant for result.  *\/$/;"	m	struct:cb_args	file:
t	fold-const.c	/^  tree t;			\/* Output: result of conversion.  *\/$/;"	m	struct:fc_args	file:
t	tree.h	/^    tree t;$/;"	m	union:tree_decl::__anon20
t	tree.h	/^  tree t;$/;"	m	struct:record_layout_info_s
t2r_eq	except.c	/^t2r_eq (pentry, pdata)$/;"	f	file:
t2r_hash	except.c	/^t2r_hash (pentry)$/;"	f	file:
t2r_mark	except.c	/^t2r_mark (addr)$/;"	f	file:
t2r_mark_1	except.c	/^t2r_mark_1 (slot, data)$/;"	f	file:
t_kind	tree.c	/^  t_kind,$/;"	e	enum:__anon88	file:
table	cse.c	/^static struct table_elt *table[HASH_SIZE];$/;"	v	typeref:struct:table_elt	file:
table	dwarf2out.c	/^  char **table;$/;"	m	struct:file_table	file:
table	ggc-page.c	/^  page_entry **table[PAGE_L1_SIZE];$/;"	m	struct:page_table_chain	file:
table	hash.h	/^  struct hash_entry **table;$/;"	m	struct:hash_table	typeref:struct:hash_table::hash_entry
table	print-tree.c	/^static struct bucket **table;$/;"	v	typeref:struct:bucket	file:
table_elt	cse.c	/^struct table_elt$/;"	s	file:
tabstop	cpplib.h	/^  unsigned int tabstop;$/;"	m	struct:cpp_options
tag_transparent	c-decl.c	/^    char tag_transparent;$/;"	m	struct:binding_level	file:
tags	c-decl.c	/^    tree tags;$/;"	m	struct:binding_level	file:
tail	sched-int.h	/^  rtx head, tail;$/;"	m	struct:sched_info
tail_call_reg	calls.c	/^  rtx tail_call_reg;$/;"	m	struct:arg_data	file:
tail_recursion_args	stmt.c	/^tail_recursion_args (actuals, formals)$/;"	f	file:
tail_recursion_label	function.h	531;"	d
tail_recursion_label_list	cfgrtl.c	/^rtx tail_recursion_label_list;$/;"	v
tail_recursion_label_p	cfgcleanup.c	/^tail_recursion_label_p (label)$/;"	f	file:
tail_recursion_reentry	function.h	532;"	d
taken	cse.c	/^      enum taken {TAKEN, NOT_TAKEN, AROUND} status;$/;"	g	struct:cse_basic_block_data::branch_path	file:
target	stmt.c	/^  tree target;$/;"	m	struct:goto_fixup	file:
target_bb	sched-rgn.c	/^static int target_bb;$/;"	v	file:
target_char_cast	builtins.c	/^target_char_cast (cst, p)$/;"	f	file:
target_exprs	tree-inline.c	/^  varray_type target_exprs;$/;"	m	struct:inline_data	file:
target_flags	rtlanal.c	/^int target_flags;$/;"	v
target_hash_table	resource.c	/^static struct target_info **target_hash_table = NULL;$/;"	v	typeref:struct:target_info	file:
target_info	resource.c	/^struct target_info$/;"	s	file:
target_isinf	fold-const.c	/^target_isinf (x)$/;"	f
target_isinf	real.c	/^target_isinf (x)$/;"	f
target_isnan	fold-const.c	/^target_isnan (x)$/;"	f
target_isnan	real.c	/^target_isnan (x)$/;"	f
target_n_insns	sched-ebb.c	/^static int target_n_insns;$/;"	v	file:
target_n_insns	sched-rgn.c	/^static int target_n_insns;$/;"	v	file:
target_negative	fold-const.c	/^target_negative (x)$/;"	f
target_negative	real.c	/^target_negative (x)$/;"	f
target_options	toplev.c	/^target_options [] = TARGET_OPTIONS;$/;"	v	typeref:struct:__anon63	file:
target_rtl	stmt.c	/^  rtx target_rtl;$/;"	m	struct:goto_fixup	file:
target_switches	toplev.c	/^target_switches [] = TARGET_SWITCHES;$/;"	v	typeref:struct:__anon62	file:
target_temp_slot_level	function.h	541;"	d
target_units	sched-vis.c	/^static int target_units = 0;$/;"	v	file:
targetm	i386.c	/^struct gcc_target targetm = TARGET_INITIALIZER;$/;"	v	typeref:struct:gcc_target
targets_size	mkdeps.c	/^  unsigned int targets_size;	\/* amt of allocated space - in words *\/$/;"	m	struct:deps	file:
targetv	mkdeps.c	/^  const char **targetv;$/;"	m	struct:deps	file:
te	varray.h	/^  struct elt_list       *te[1];$/;"	m	union:varray_data_tag	typeref:struct:varray_data_tag::elt_list
temp	obstack.h	/^  PTR_INT_TYPE temp;		\/* Temporary for some macros.  *\/$/;"	m	struct:obstack
temp_list_kind	tree.c	/^  temp_list_kind,$/;"	e	enum:__anon88	file:
temp_slot	function.c	/^struct temp_slot$/;"	s	file:
temp_slot_level	function.h	540;"	d
temp_slots	function.h	539;"	d
template_name_p	sdbout.c	/^template_name_p (name)$/;"	f	file:
terminate_all_read	regrename.c	/^  terminate_all_read,$/;"	e	enum:scan_actions	file:
terminate_dead	regrename.c	/^  terminate_dead,$/;"	e	enum:scan_actions	file:
terminate_overlapping_read	regrename.c	/^  terminate_overlapping_read,$/;"	e	enum:scan_actions	file:
terminate_write	regrename.c	/^  terminate_write,$/;"	e	enum:scan_actions	file:
test_bb	ifcvt.c	/^  basic_block test_bb;$/;"	m	struct:noce_if_info	file:
text	cpplib.h	/^  const unsigned char *text;$/;"	m	struct:cpp_string
text_end_label	dwarf2out.c	/^static char text_end_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
text_end_label	vmsdbgout.c	/^static char text_end_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
text_section	varasm.c	/^text_section ()$/;"	f
text_section_label	dwarf2out.c	/^static char text_section_label[MAX_ARTIFICIAL_LABEL_BYTES];$/;"	v	file:
textdomain	intl.h	44;"	d
textdomain	intl.h	45;"	d
this	recog.c	/^  int this, other;$/;"	m	struct:funny_match	file:
this_address	alloca.c	/^    long this_address;		\/* Address of this block.  *\/$/;"	m	struct:stk_trailer	file:
this_basic_block	combine.c	/^static int this_basic_block;$/;"	v	file:
this_block	c-decl.c	/^    tree this_block;$/;"	m	struct:binding_level	file:
this_insn	cse.c	/^static rtx this_insn;$/;"	v	file:
this_insn	local-alloc.c	/^static rtx this_insn;$/;"	v	file:
this_insn	reload.c	/^static rtx this_insn;$/;"	v	file:
this_insn_is_asm	reload.c	/^static int this_insn_is_asm;$/;"	v	file:
this_insn_number	local-alloc.c	/^static int this_insn_number;$/;"	v	file:
this_insn_sets	caller-save.c	/^static HARD_REG_SET this_insn_sets;$/;"	v	file:
this_is_asm_operands	final.c	/^static rtx this_is_asm_operands;$/;"	v	file:
this_size	alloca.c	/^    long this_size;		\/* Size of this block (does not include$/;"	m	struct:stk_trailer	file:
thread_jump	cfgcleanup.c	/^thread_jump (mode, e, b)$/;"	f	file:
thread_prologue_and_epilogue_insns	function.c	/^thread_prologue_and_epilogue_insns (f)$/;"	f
thresh	ucbqsort.c	/^static  int		thresh;			\/* THRESHold in chars *\/$/;"	v	file:
throw	except.c	/^    } throw;$/;"	m	union:eh_region::__anon21	typeref:struct:eh_region::__anon21::__anon25	file:
ti	target.h	/^      const char *ti;$/;"	m	struct:gcc_target::asm_out::asm_int_op
tick	sched-int.h	/^  int tick;$/;"	m	struct:haifa_insn_data
ticks_to_msec	timevar.c	/^static float ticks_to_msec;$/;"	v	file:
tidy_fallthru_edge	cfgrtl.c	/^tidy_fallthru_edge (e, b, c)$/;"	f
tidy_fallthru_edges	cfgrtl.c	/^tidy_fallthru_edges ()$/;"	f
time	c-common.h	/^  int time;	\/* Time spent in the file.  *\/$/;"	m	struct:c_fileinfo
time	cpphash.h	/^  cpp_token time;$/;"	m	struct:cpp_reader
time_char_table	c-format.c	/^static const format_char_info time_char_table[] =$/;"	v	file:
time_report	toplev.c	/^int time_report = 0;$/;"	v
timevar	timevar.c	/^  struct timevar_def *timevar;$/;"	m	struct:timevar_stack_def	typeref:struct:timevar_stack_def::timevar_def	file:
timevar_accumulate	timevar.c	/^timevar_accumulate (timer, start_time, stop_time)$/;"	f	file:
timevar_def	timevar.c	/^struct timevar_def$/;"	s	file:
timevar_get	timevar.c	/^timevar_get (timevar, elapsed)$/;"	f
timevar_id_t	timevar.h	/^timevar_id_t;$/;"	t	typeref:enum:__anon66
timevar_pop	timevar.c	/^timevar_pop (timevar)$/;"	f
timevar_print	timevar.c	/^timevar_print (fp)$/;"	f
timevar_push	timevar.c	/^timevar_push (timevar)$/;"	f
timevar_stack_def	timevar.c	/^struct timevar_stack_def$/;"	s	file:
timevar_start	timevar.c	/^timevar_start (timevar)$/;"	f
timevar_stop	timevar.c	/^timevar_stop (timevar)$/;"	f
timevar_time_def	timevar.h	/^struct timevar_time_def$/;"	s
timevars	timevar.c	/^static struct timevar_def timevars[TIMEVAR_LAST];$/;"	v	typeref:struct:timevar_def	file:
tlist	c-common.c	/^struct tlist$/;"	s	file:
tlist_cache	c-common.c	/^struct tlist_cache$/;"	s	file:
tlist_firstobj	c-common.c	/^static char *tlist_firstobj = 0;$/;"	v	file:
tlist_obstack	c-common.c	/^static struct obstack tlist_obstack;$/;"	v	typeref:struct:obstack	file:
tms	timevar.c	/^struct tms$/;"	s	file:
tms_cstime	timevar.c	/^  clock_t tms_cstime;$/;"	m	struct:tms	file:
tms_cutime	timevar.c	/^  clock_t tms_cutime;$/;"	m	struct:tms	file:
tms_stime	timevar.c	/^  clock_t tms_stime;$/;"	m	struct:tms	file:
tms_utime	timevar.c	/^  clock_t tms_utime;$/;"	m	struct:tms	file:
to	expr.c	/^  rtx to;$/;"	m	struct:move_by_pieces	file:
to	expr.c	/^  rtx to;$/;"	m	struct:store_by_pieces	file:
to	recog.c	/^  rtx to;			\/* New RTX *\/$/;"	m	struct:validate_replace_src_data	file:
to	reload1.c	/^  const int to;$/;"	m	struct:elim_table_1	file:
to	reload1.c	/^  int to;			\/* Register number used as replacement.  *\/$/;"	m	struct:elim_table	file:
to_addr	expr.c	/^  rtx to_addr;$/;"	m	struct:move_by_pieces	file:
to_addr	expr.c	/^  rtx to_addr;$/;"	m	struct:store_by_pieces	file:
to_allocate	i386.c	/^  HOST_WIDE_INT to_allocate;$/;"	m	struct:ix86_frame	file:
to_block	sched-rgn.c	/^  int to_block;$/;"	m	struct:__anon28	file:
to_file	line-map.h	/^  const char *to_file;$/;"	m	struct:line_map
to_line	line-map.h	/^  unsigned int to_line;$/;"	m	struct:line_map
to_rtx	reload1.c	/^  rtx to_rtx;			\/* REG rtx for the replacement.  *\/$/;"	m	struct:elim_table	file:
toc4x	real.c	/^toc4x (x, y, mode)$/;"	f	file:
todec	real.c	/^todec (x, y)$/;"	f	file:
toe113	real.c	/^toe113 (a, b)$/;"	f	file:
toe24	real.c	/^toe24 (x, y)$/;"	f	file:
toe53	real.c	/^toe53 (x, y)$/;"	f	file:
toe64	real.c	/^toe64 (a, b)$/;"	f	file:
toibm	real.c	/^toibm (x, y, mode)$/;"	f	file:
token	cpphash.h	/^  const cpp_token *token;$/;"	m	union:utoken
token_spelling	cpplex.c	/^struct token_spelling$/;"	s	file:
token_spellings	cpplex.c	/^static const struct token_spelling token_spellings[N_TTYPES] = { TTYPE_TABLE };$/;"	v	typeref:struct:token_spelling	file:
tokenrun	cpphash.h	/^struct tokenrun$/;"	s
tokenrun	cpphash.h	/^typedef struct tokenrun tokenrun;$/;"	t	typeref:struct:tokenrun
too_large	sched-rgn.c	/^too_large (block, num_bbs, num_insns)$/;"	f	file:
top	basic-block.h	/^  rtx top;$/;"	m	struct:loop
top	reg-stack.c	/^  int top;			\/* index to top stack element *\/$/;"	m	struct:stack_def	file:
top_level	c-typeck.c	/^  char top_level;$/;"	m	struct:initializer_stack	file:
top_of_stack	regclass.c	/^static rtx top_of_stack[MAX_MACHINE_MODE];$/;"	v	file:
toplev_main	toplev.c	/^toplev_main (argc, argv)$/;"	f
total	md5.h	/^  md5_uint32 total[2];$/;"	m	struct:md5_ctx
total_attempts	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
total_benefit	loop.c	/^  int total_benefit;$/;"	m	struct:combine_givs_stats	file:
total_benefit	loop.h	/^  int total_benefit;		\/* Sum of BENEFITs of all those givs.  *\/$/;"	m	struct:iv_class
total_bytes	loop.c	/^  unsigned int total_bytes;	\/* Total bytes loop will access in this block.$/;"	m	struct:prefetch_info	file:
total_extras	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
total_hist_br_prob	profile.c	/^static int total_hist_br_prob[20];$/;"	v	file:
total_merges	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
total_num_blocks	profile.c	/^static int total_num_blocks;$/;"	v	file:
total_num_blocks_created	profile.c	/^static int total_num_blocks_created;$/;"	v	file:
total_num_branches	profile.c	/^static int total_num_branches;$/;"	v	file:
total_num_edges	profile.c	/^static int total_num_edges;$/;"	v	file:
total_num_edges_ignored	profile.c	/^static int total_num_edges_ignored;$/;"	v	file:
total_num_edges_instrumented	profile.c	/^static int total_num_edges_instrumented;$/;"	v	file:
total_num_never_executed	profile.c	/^static int total_num_never_executed;$/;"	v	file:
total_num_passes	profile.c	/^static int total_num_passes;$/;"	v	file:
total_num_rtxs	ggc.h	/^  unsigned total_num_rtxs;$/;"	m	struct:ggc_statistics
total_num_times_called	profile.c	/^static int total_num_times_called;$/;"	v	file:
total_num_trees	ggc.h	/^  unsigned total_num_trees;$/;"	m	struct:ggc_statistics
total_size_rtxs	ggc.h	/^  size_t total_size_rtxs;$/;"	m	struct:ggc_statistics
total_size_trees	ggc.h	/^  size_t total_size_trees;$/;"	m	struct:ggc_statistics
total_successes	combine.c	/^static int total_attempts, total_merges, total_extras, total_successes;$/;"	v	file:
tovisit	predict.c	/^  int tovisit:1;$/;"	m	struct:block_info_def	file:
tr	prefix.c	/^tr (string, c1, c2)$/;"	f	file:
trace_include	line-map.c	/^trace_include (set, map)$/;"	f	file:
trace_includes	line-map.h	/^  bool trace_includes;$/;"	m	struct:line_maps
trampoline	test.c	/^void trampoline(long function_choice, unsigned long arg)$/;"	f
trampoline_address	function.c	/^trampoline_address (function)$/;"	f
trampoline_list	function.h	537;"	d
transfer_function_bitmap	df.h	/^typedef void (*transfer_function_bitmap) PARAMS ((int, int *, bitmap, bitmap,$/;"	t
transfer_function_sbitmap	df.h	/^typedef void (*transfer_function_sbitmap) PARAMS ((int, int *, sbitmap, sbitmap, $/;"	t
transfer_replacements	reload.c	/^transfer_replacements (to, from)$/;"	f
translate_name	prefix.c	/^translate_name (name)$/;"	f	file:
transp	gcse.c	/^static sbitmap *transp;$/;"	v	file:
transp	lcm.c	/^static sbitmap *transp;$/;"	v	file:
transparent_union	tree.h	/^  unsigned transparent_union : 1;$/;"	m	struct:tree_decl
transparent_union_flag	tree.h	/^  unsigned transparent_union_flag : 1;$/;"	m	struct:tree_type
transpout	gcse.c	/^static sbitmap *transpout;$/;"	v	file:
trap_rtx	optabs.c	/^static rtx trap_rtx;$/;"	v	file:
tree	config.h	/^typedef union tree_node *tree;$/;"	t	typeref:union:tree_node
tree	varray.h	/^  union tree_node	 *tree[1];$/;"	m	union:varray_data_tag	typeref:union:varray_data_tag::tree_node
tree_add_const_value_attribute	dwarf2out.c	/^tree_add_const_value_attribute (var_die, decl)$/;"	f	file:
tree_block	tree.h	/^struct tree_block$/;"	s
tree_chain_matters_p	langhooks.h	/^  int (*tree_chain_matters_p) PARAMS ((union tree_node *));$/;"	m	struct:lang_hooks_for_tree_inlining
tree_check_failed	tree.c	/^tree_check_failed (node, code, file, line, function)$/;"	f
tree_class_check_failed	tree.c	/^tree_class_check_failed (node, cl, file, line, function)$/;"	f
tree_code	tree.h	/^enum tree_code {$/;"	g
tree_code_length	tree.c	/^int tree_code_length[MAX_TREE_CODES] = {$/;"	v
tree_code_name	tree.c	/^const char *tree_code_name[MAX_TREE_CODES] = {$/;"	v
tree_code_type	tree.c	/^char tree_code_type[MAX_TREE_CODES] = {$/;"	v
tree_common	tree.h	/^struct tree_common$/;"	s
tree_complex	tree.h	/^struct tree_complex$/;"	s
tree_cons	tree.c	/^tree_cons (purpose, value, chain)$/;"	f
tree_decl	tree.h	/^struct tree_decl$/;"	s
tree_dump	langhooks.h	/^  struct lang_hooks_for_tree_dump tree_dump;$/;"	m	struct:lang_hooks	typeref:struct:lang_hooks::lang_hooks_for_tree_dump
tree_dump_index	tree.h	/^enum tree_dump_index$/;"	g
tree_exp	tree.h	/^struct tree_exp$/;"	s
tree_expr_nonnegative_p	fold-const.c	/^tree_expr_nonnegative_p (t)$/;"	f
tree_floor_log2	tree.c	/^tree_floor_log2 (expr)$/;"	f
tree_identifier	tree.h	/^struct tree_identifier$/;"	s
tree_index	tree.h	/^enum tree_index$/;"	g
tree_inlinable_function_p	tree-inline.c	/^tree_inlinable_function_p (fn)$/;"	f
tree_inlining	langhooks.h	/^  struct lang_hooks_for_tree_inlining tree_inlining;$/;"	m	struct:lang_hooks	typeref:struct:lang_hooks::lang_hooks_for_tree_inlining
tree_int_cst	tree.h	/^struct tree_int_cst$/;"	s
tree_int_cst_compare	tree.c	/^tree_int_cst_compare (t1, t2)$/;"	f
tree_int_cst_equal	tree.c	/^tree_int_cst_equal (t1, t2)$/;"	f
tree_int_cst_lt	tree.c	/^tree_int_cst_lt (t1, t2)$/;"	f
tree_int_cst_msb	tree.c	/^tree_int_cst_msb (t)$/;"	f
tree_int_cst_sgn	tree.c	/^tree_int_cst_sgn (t)$/;"	f
tree_last	tree.c	/^tree_last (chain)$/;"	f
tree_list	tree.h	/^struct tree_list$/;"	s
tree_log2	tree.c	/^tree_log2 (expr)$/;"	f
tree_low_cst	tree.c	/^tree_low_cst (t, pos)$/;"	f
tree_node	tree.h	/^union tree_node$/;"	u
tree_node_counts	tree.c	/^int tree_node_counts[(int) all_kinds];$/;"	v
tree_node_kind	tree.c	/^} tree_node_kind;$/;"	t	typeref:enum:__anon88	file:
tree_node_kind_names	tree.c	/^static const char * const tree_node_kind_names[] = {$/;"	v	file:
tree_node_sizes	tree.c	/^int tree_node_sizes[(int) all_kinds];$/;"	v
tree_pruner	tree-inline.c	/^  htab_t tree_pruner;$/;"	m	struct:inline_data	file:
tree_real_cst	tree.h	/^struct tree_real_cst$/;"	s
tree_root	basic-block.h	/^  struct loop *tree_root;$/;"	m	struct:loops	typeref:struct:loops::loop
tree_size	tree.c	/^tree_size (node)$/;"	f
tree_string	tree.h	/^struct tree_string$/;"	s
tree_type	tree.h	/^struct tree_type$/;"	s
tree_value	calls.c	/^  tree tree_value;$/;"	m	struct:arg_data	file:
tree_vec	tree.h	/^struct tree_vec$/;"	s
tree_vector	tree.h	/^struct tree_vector$/;"	s
trigraph_p	cpplex.c	/^trigraph_p (pfile)$/;"	f	file:
trigraphs	cppinit.c	/^  char trigraphs;$/;"	m	struct:lang_flags	file:
trigraphs	cpplib.h	/^  unsigned char trigraphs;$/;"	m	struct:cpp_options
trim_filename	diagnostic.c	/^trim_filename (name)$/;"	f
trim_ld_motion_mems	gcse.c	/^trim_ld_motion_mems ()$/;"	f	file:
true	system.h	549;"	d
true	system.h	561;"	d
true_dependence	alias.c	/^true_dependence (mem, mem_mode, x, varies)$/;"	f
true_dependency_cache	sched-deps.c	/^static sbitmap *true_dependency_cache;$/;"	v	file:
true_regnum	jump.c	/^true_regnum (x)$/;"	f
trueop0	simplify-rtx.c	/^  rtx trueop0, trueop1;$/;"	m	struct:simplify_binary_real_args	file:
trueop1	simplify-rtx.c	/^  rtx trueop0, trueop1;$/;"	m	struct:simplify_binary_real_args	file:
trunc_int_for_mode	explow.c	/^trunc_int_for_mode (c, mode)$/;"	f
truncdfsf2_libfunc	libfuncs.h	160;"	d
trunctfdf2_libfunc	libfuncs.h	164;"	d
trunctfsf2_libfunc	libfuncs.h	162;"	d
truncxfdf2_libfunc	libfuncs.h	163;"	d
truncxfsf2_libfunc	libfuncs.h	161;"	d
truth_value_p	fold-const.c	/^truth_value_p (code)$/;"	f	file:
truthvalue_conversion	c-common.c	/^truthvalue_conversion (expr)$/;"	f
try	except.c	/^    } try;$/;"	m	union:eh_region::__anon21	typeref:struct:eh_region::__anon21::__anon22	file:
try_apply_stack_adjustment	regmove.c	/^try_apply_stack_adjustment (insn, memlist, new_adjust, delta)$/;"	f	file:
try_auto_increment	regmove.c	/^try_auto_increment (insn, inc_insn, inc_insn_set, reg, increment, pre)$/;"	f	file:
try_casesi	expr.c	/^try_casesi (index_type, index_expr, minval, range,$/;"	f
try_combine	combine.c	/^try_combine (i3, i2, i1, new_direct_jump_p)$/;"	f	file:
try_constants	integrate.c	/^try_constants (insn, map)$/;"	f
try_copy_prop	loop.c	/^try_copy_prop (loop, replacement, regno)$/;"	f	file:
try_crossjump_bb	cfgcleanup.c	/^try_crossjump_bb (mode, bb)$/;"	f	file:
try_crossjump_to_edge	cfgcleanup.c	/^try_crossjump_to_edge (mode, e1, e2)$/;"	f	file:
try_forward_edges	cfgcleanup.c	/^try_forward_edges (mode, b)$/;"	f	file:
try_merge_delay_insns	reorg.c	/^try_merge_delay_insns (insn, thread)$/;"	f	file:
try_optimize_cfg	cfgcleanup.c	/^try_optimize_cfg (mode)$/;"	f	file:
try_pre_increment	flow.c	/^try_pre_increment (insn, reg, amount)$/;"	f	file:
try_pre_increment_1	flow.c	/^try_pre_increment_1 (pbi, insn)$/;"	f	file:
try_redirect_by_replacing_jump	cfgrtl.c	/^try_redirect_by_replacing_jump (e, target)$/;"	f	file:
try_region	except.c	/^  struct eh_region *try_region;$/;"	m	struct:eh_status	typeref:struct:eh_status::eh_region	file:
try_replace_reg	gcse.c	/^try_replace_reg (from, to, insn)$/;"	f	file:
try_simplify_condjump	cfgcleanup.c	/^try_simplify_condjump (cbranch_block)$/;"	f	file:
try_split	emit-rtl.c	/^try_split (pat, trial, last)$/;"	f
try_swap_copy_prop	loop.c	/^try_swap_copy_prop (loop, replacement, regno)$/;"	f	file:
try_tablejump	expr.c	/^try_tablejump (index_type, index_expr, minval, range,$/;"	f
try_to_integrate	calls.c	/^try_to_integrate (fndecl, actparms, target, ignore, type, structure_value_addr)$/;"	f	file:
tst_optab	optabs.h	203;"	d
ttype	c-parse.c	/^typedef union {long itype; tree ttype; enum tree_code code;$/;"	m	union:__anon52	file:
ttype_data	except.c	/^  varray_type ttype_data;$/;"	m	struct:eh_status	file:
ttypes_filter	except.c	/^struct ttypes_filter$/;"	s	file:
ttypes_filter_eq	except.c	/^ttypes_filter_eq (pentry, pdata)$/;"	f	file:
ttypes_filter_hash	except.c	/^ttypes_filter_hash (pentry)$/;"	f	file:
twoval_comparison_p	fold-const.c	/^twoval_comparison_p (arg, cval1, cval2, save_p)$/;"	f	file:
type	c-format.c	/^  tree *type;$/;"	m	struct:__anon39	file:
type	c-lex.c	/^  tree type;$/;"	m	struct:pf_args	file:
type	c-typeck.c	/^  tree type;$/;"	m	struct:constructor_stack	file:
type	cpplib.c	/^  int type;			\/* Most recent conditional, for diagnostics.  *\/$/;"	m	struct:if_stack	file:
type	cpplib.h	/^  ENUM_BITFIELD(cpp_ttype) type : CHAR_BIT;  \/* token type *\/$/;"	m	struct:cpp_token
type	cpplib.h	/^  ENUM_BITFIELD(node_type) type : 8;	\/* CPP node type.  *\/$/;"	m	struct:cpp_hashnode
type	dependence.c	/^  enum def_use_type type;$/;"	m	struct:def_use	typeref:enum:def_use::def_use_type	file:
type	df.h	/^  enum df_ref_type type;	\/* Type of ref.  *\/$/;"	m	struct:ref	typeref:enum:ref::df_ref_type
type	except.c	/^      tree type;$/;"	m	struct:eh_region::__anon21::__anon25	file:
type	except.c	/^  } type;$/;"	m	struct:eh_region	typeref:enum:eh_region::eh_region_type	file:
type	fold-const.c	/^  tree type;			\/* Input: tree type for operation.  *\/$/;"	m	struct:cb_args	file:
type	fold-const.c	/^  tree type;			\/* Input: type to convert value to.  *\/$/;"	m	struct:fc_args	file:
type	function.c	/^  tree type;$/;"	m	struct:temp_slot	file:
type	loop.h	/^  enum iv_mode type;$/;"	m	struct:iv	typeref:enum:iv::iv_mode
type	tree.c	/^  tree type;			\/* Input: type to conver to.  *\/$/;"	m	struct:brfic_args	file:
type	tree.c	/^  tree type;$/;"	m	struct:type_hash	file:
type	tree.h	/^  struct tree_type type;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_type
type	tree.h	/^  tree type;$/;"	m	struct:tree_common
type_attribute	dwarfout.c	/^type_attribute (type, decl_const, decl_volatile)$/;"	f	file:
type_class	typeclass.h	/^enum type_class$/;"	g
type_for_mode	c-common.c	/^type_for_mode (mode, unsignedp)$/;"	f
type_for_size	c-common.c	/^type_for_size (bits, unsignedp)$/;"	f
type_hash	tree.c	/^struct type_hash$/;"	s	file:
type_hash_add	tree.c	/^type_hash_add (hashcode, type)$/;"	f
type_hash_canon	tree.c	/^type_hash_canon (hashcode, type)$/;"	f
type_hash_eq	tree.c	/^type_hash_eq (va, vb)$/;"	f	file:
type_hash_hash	tree.c	/^type_hash_hash (item)$/;"	f	file:
type_hash_list	tree.c	/^type_hash_list (list)$/;"	f
type_hash_lookup	tree.c	/^type_hash_lookup (hashcode, type)$/;"	f
type_hash_mark	tree.c	/^type_hash_mark (p)$/;"	f	file:
type_hash_marked_p	tree.c	/^type_hash_marked_p (p)$/;"	f	file:
type_hash_table	tree.c	/^htab_t type_hash_table;$/;"	v
type_is_enum	dwarf2out.c	/^type_is_enum (type)$/;"	f	file:
type_is_fundamental	dwarfout.c	/^type_is_fundamental (type)$/;"	f	file:
type_list	except.c	/^      tree type_list;$/;"	m	struct:eh_region::__anon21::__anon23	file:
type_list	except.c	/^      tree type_list;$/;"	m	struct:eh_region::__anon21::__anon24	file:
type_list_equal	tree.c	/^type_list_equal (l1, l2)$/;"	f
type_lists_compatible_p	c-typeck.c	/^type_lists_compatible_p (args1, args2)$/;"	f	file:
type_main_variant	dwarf2out.c	/^type_main_variant (type)$/;"	f	file:
type_main_variant	dwarfout.c	/^type_main_variant (type)$/;"	f	file:
type_num_arguments	tree.c	/^type_num_arguments (type)$/;"	f
type_number	dbxout.c	/^  int type_number;$/;"	m	struct:typeinfo	file:
type_ok_for_scope	dwarfout.c	/^type_ok_for_scope (type, scope)$/;"	f	file:
type_quals	langhooks.h	/^  int (*type_quals) PARAMS ((tree));$/;"	m	struct:lang_hooks_for_tree_dump
type_required	tree.h	/^  const bool type_required;$/;"	m	struct:attribute_spec
type_tag	dwarf2out.c	/^type_tag (type)$/;"	f	file:
type_tag	dwarfout.c	/^type_tag (type)$/;"	f	file:
type_to_class	builtins.c	/^type_to_class (type)$/;"	f	file:
type_to_runtime_map	except.c	/^static htab_t type_to_runtime_map;$/;"	v	file:
typeinfo	dbxout.c	/^struct typeinfo$/;"	s	file:
types	c-format.c	/^  const format_type_detail types[FMT_LEN_MAX];$/;"	m	struct:__anon40	file:
types_allowed	except.c	/^  tree types_allowed;$/;"	m	struct:reachable_info	file:
types_caught	except.c	/^  tree types_caught;$/;"	m	struct:reachable_info	file:
typestatus	dbxout.c	/^enum typestatus {TYPE_UNSEEN, TYPE_XREF, TYPE_DEFINED};$/;"	g	file:
typevec	dbxout.c	/^struct typeinfo *typevec;$/;"	v	typeref:struct:typeinfo
typevec_len	dbxout.c	/^static int typevec_len;$/;"	v	file:
u	c-typeck.c	/^    } u;$/;"	m	struct:spelling	typeref:union:spelling::__anon36	file:
u	cppexp.c	/^  const unsigned char u;$/;"	m	struct:suffix	file:
u	cpplex.c	/^  } u;$/;"	m	struct:dummy	typeref:union:dummy::__anon73	file:
u	cpplib.c	/^  } u;$/;"	m	struct:pragma_entry	typeref:union:pragma_entry::__anon47	file:
u	cselib.h	/^  } u;$/;"	m	struct:cselib_val_struct	typeref:union:cselib_val_struct::__anon65
u	except.c	/^  } u;$/;"	m	struct:eh_region	typeref:union:eh_region::__anon21	file:
u	ggc-page.c	/^  } u;$/;"	m	struct:max_alignment	typeref:union:max_alignment::__anon13	file:
u	varasm.c	/^  } u;$/;"	m	struct:constant_descriptor	typeref:union:constant_descriptor::__anon83	file:
u	varray.h	/^  unsigned int		 u[1];$/;"	m	union:varray_data_tag
u1	tree.h	/^  } u1;$/;"	m	struct:tree_decl	typeref:union:tree_decl::__anon18
u2	tree.h	/^  } u2;$/;"	m	struct:tree_decl	typeref:union:tree_decl::__anon20
u_buff	cpphash.h	/^  _cpp_buff *u_buff;		\/* Unaligned permanent storage.  *\/$/;"	m	struct:cpp_reader
ubitsizetype	tree.h	2435;"	d
uc	varray.h	/^  unsigned char		 uc[1];$/;"	m	union:varray_data_tag
ucmp_optab	optabs.h	202;"	d
udiv_optab	optabs.h	170;"	d
udivmod_optab	optabs.h	171;"	d
uhint	varray.h	/^  unsigned HOST_WIDE_INT uhint[1];$/;"	m	union:varray_data_tag
uid	resource.c	/^  int uid;			\/* INSN_UID of target.  *\/$/;"	m	struct:target_info	file:
uid	tree.h	/^  unsigned int uid;$/;"	m	struct:tree_decl
uid	tree.h	/^  unsigned int uid;$/;"	m	struct:tree_type
uid_align	final.c	/^static rtx *uid_align;$/;"	v	file:
uid_cuid	combine.c	/^static int *uid_cuid;$/;"	v	file:
uid_cuid	cse.c	/^static int *uid_cuid;$/;"	v	file:
uid_cuid	gcse.c	/^static int *uid_cuid;$/;"	v	file:
uid_loop	loop.c	/^struct loop **uid_loop;$/;"	v	typeref:struct:loop
uid_luid	loop.c	/^int *uid_luid;$/;"	v
uid_shuid	final.c	/^static int *uid_shuid;$/;"	v	file:
uid_to_ruid	reorg.c	/^static int *uid_to_ruid;$/;"	v	file:
uintmax_type_node	c-common.h	200;"	d
ujump_to_loop_cont	unroll.c	/^ujump_to_loop_cont (loop_start, loop_cont)$/;"	f	file:
ul	varray.h	/^  unsigned long		 ul[1];$/;"	m	union:varray_data_tag
ultoe	real.c	/^ultoe (lp, y)$/;"	f	file:
umax_optab	optabs.h	186;"	d
umin_optab	optabs.h	185;"	d
umod_optab	optabs.h	173;"	d
umul_highpart_optab	optabs.h	163;"	d
umul_widen_optab	optabs.h	165;"	d
un	varasm.c	/^  } un;$/;"	m	struct:rtx_const	typeref:union:rtx_const::__anon81	file:
unaligned_op	target.h	/^    } aligned_op, unaligned_op;$/;"	m	struct:gcc_target::asm_out	typeref:struct:gcc_target::asm_out::asm_int_op
unary_complex_lvalue	c-typeck.c	/^unary_complex_lvalue (code, arg, flag)$/;"	f	file:
unch_memory	resource.h	/^  char unch_memory;	\/* Insn sets of needs a "unchanging" MEM.  *\/$/;"	m	struct:resources
unchain_one_elt_list	cselib.c	/^unchain_one_elt_list (pl)$/;"	f	file:
unchain_one_elt_loc_list	cselib.c	/^unchain_one_elt_loc_list (pl)$/;"	f	file:
unchain_one_value	cselib.c	/^unchain_one_value (v)$/;"	f	file:
unchanging	rtl.h	/^  unsigned int unchanging : 1;$/;"	m	struct:rtx_def
undeclared_variable_notice	c-typeck.c	/^static int undeclared_variable_notice;$/;"	v	file:
undef	cpplib.h	/^  void (*undef) PARAMS ((cpp_reader *, unsigned int, cpp_hashnode *));$/;"	m	struct:cpp_callbacks
undef	debug.h	/^  void (* undef) PARAMS ((unsigned int line, const char *macro));$/;"	m	struct:gcc_debug_hooks
undef	dependence.c	/^enum direction_type {lt, le, eq, gt, ge, star, independent, undef};$/;"	e	enum:direction_type	file:
underflows	alloca.c	/^    long underflows;		\/* Number of stack underflow calls ($STKRETN).  *\/$/;"	m	struct:stk_stat	file:
undo	combine.c	/^struct undo$/;"	s	file:
undo_all	combine.c	/^undo_all ()$/;"	f	file:
undo_commit	combine.c	/^undo_commit ()$/;"	f	file:
undobuf	combine.c	/^static struct undobuf undobuf;$/;"	v	typeref:struct:undobuf	file:
undobuf	combine.c	/^struct undobuf$/;"	s	file:
undos	combine.c	/^  struct undo *undos;$/;"	m	struct:undobuf	typeref:struct:undobuf::undo	file:
unescaped_terminator_p	cpplex.c	/^unescaped_terminator_p (pfile, dest)$/;"	f	file:
unextend	fold-const.c	/^unextend (c, p, unsignedp, mask)$/;"	f	file:
unfilled_fields	c-typeck.c	/^  tree unfilled_fields;$/;"	m	struct:constructor_stack	file:
unfilled_firstobj	reorg.c	/^static rtx *unfilled_firstobj;$/;"	v	file:
unfilled_index	c-typeck.c	/^  tree unfilled_index;$/;"	m	struct:constructor_stack	file:
unfilled_slots_base	reorg.c	165;"	d	file:
unfilled_slots_next	reorg.c	168;"	d	file:
unfilled_slots_obstack	reorg.c	/^static struct obstack unfilled_slots_obstack;$/;"	v	typeref:struct:obstack	file:
uninitialized_vars_warning	function.c	/^uninitialized_vars_warning (block)$/;"	f
uninlinable	tree.h	/^  unsigned uninlinable : 1;$/;"	m	struct:tree_decl
union_groups	profile.c	/^union_groups (bb1, bb2)$/;"	f	file:
union_type_class	typeclass.h	/^  record_type_class, union_type_class,$/;"	e	enum:type_class
unique_id	alias.c	/^static int unique_id;$/;"	v	file:
unit_last_insn	haifa-sched.c	/^static rtx unit_last_insn[FUNCTION_UNITS_SIZE * MAX_MULTIPLICITY];$/;"	v	file:
unit_n_insns	haifa-sched.c	/^static int unit_n_insns[FUNCTION_UNITS_SIZE];$/;"	v	file:
unit_tick	haifa-sched.c	/^static int unit_tick[FUNCTION_UNITS_SIZE * MAX_MULTIPLICITY];$/;"	v	file:
units	sched-int.h	/^  short units;$/;"	m	struct:haifa_insn_data
unknown10	alloca.c	/^    long unknown10;$/;"	m	struct:stk_trailer	file:
unknown11	alloca.c	/^    long unknown11;$/;"	m	struct:stk_trailer	file:
unknown12	alloca.c	/^    long unknown12;$/;"	m	struct:stk_trailer	file:
unknown13	alloca.c	/^    long unknown13;$/;"	m	struct:stk_trailer	file:
unknown14	alloca.c	/^    long unknown14;$/;"	m	struct:stk_trailer	file:
unknown2	alloca.c	/^    long unknown2;$/;"	m	struct:stk_trailer	file:
unknown3	alloca.c	/^    long unknown3;$/;"	m	struct:stk_trailer	file:
unknown5	alloca.c	/^    long unknown5;$/;"	m	struct:stk_trailer	file:
unknown6	alloca.c	/^    long unknown6;$/;"	m	struct:stk_trailer	file:
unknown7	alloca.c	/^    long unknown7;$/;"	m	struct:stk_trailer	file:
unknown8	alloca.c	/^    long unknown8;$/;"	m	struct:stk_trailer	file:
unknown9	alloca.c	/^    long unknown9;$/;"	m	struct:stk_trailer	file:
unknown_address_altered	loop.h	/^  int unknown_address_altered;$/;"	m	struct:loop_info
unknown_constant_address_altered	loop.h	/^  int unknown_constant_address_altered;$/;"	m	struct:loop_info
unlink_line_notes	haifa-sched.c	/^unlink_line_notes (insn, tail)$/;"	f	file:
unlink_other_notes	haifa-sched.c	/^unlink_other_notes (insn, tail)$/;"	f	file:
unmark_dies	dwarf2out.c	/^unmark_dies (die)$/;"	f	file:
unnamed_struct_number	sdbout.c	/^static int unnamed_struct_number = 0;$/;"	v	file:
unnormal	dependence.c	/^enum loop_status_type {normal, unnormal};$/;"	e	enum:loop_status_type	file:
unorddf2_libfunc	libfuncs.h	205;"	d
unordered	simplify-rtx.c	/^  int unordered;$/;"	m	struct:cfc_args	file:
unordhf2_libfunc	libfuncs.h	189;"	d
unordsf2_libfunc	libfuncs.h	197;"	d
unordtf2_libfunc	libfuncs.h	221;"	d
unordxf2_libfunc	libfuncs.h	213;"	d
unpacked_align	tree.h	/^  unsigned int unpacked_align;$/;"	m	struct:record_layout_info_s
unpadded_align	tree.h	/^  unsigned int unpadded_align;$/;"	m	struct:record_layout_info_s
unroll_loop	unroll.c	/^unroll_loop (loop, insn_count, strength_reduce_p)$/;"	f
unroll_number	loop.h	/^  unsigned int unroll_number;$/;"	m	struct:loop_info
unroll_types	unroll.c	/^enum unroll_types$/;"	g	file:
unrolled	loop.h	/^  unsigned unrolled : 1;	\/* 1 if new register has been allocated and$/;"	m	struct:induction
unsafe_for_reeval	tree.c	/^unsafe_for_reeval (expr)$/;"	f
unsave_expr	tree.c	/^unsave_expr (expr)$/;"	f
unsave_expr_1	tree.c	/^unsave_expr_1 (expr)$/;"	f
unsave_expr_now	tree.c	/^unsave_expr_now (expr)$/;"	f
unsave_expr_now_r	tree.c	/^unsave_expr_now_r (expr)$/;"	f	file:
unseen	dependence.c	/^enum du_status_type {seen, unseen};$/;"	e	enum:du_status_type	file:
unshare_all_decls	emit-rtl.c	/^unshare_all_decls (blk)$/;"	f	file:
unshare_all_rtl	emit-rtl.c	/^unshare_all_rtl (fndecl, insn)$/;"	f
unshare_all_rtl_1	emit-rtl.c	/^unshare_all_rtl_1 (insn)$/;"	f	file:
unshare_all_rtl_again	emit-rtl.c	/^unshare_all_rtl_again (insn)$/;"	f
unsigned_V16QI_type_node	tree.h	2001;"	d
unsigned_V2SI_type_node	tree.h	2006;"	d
unsigned_V4HI_type_node	tree.h	2005;"	d
unsigned_V4SI_type_node	tree.h	2002;"	d
unsigned_V8HI_type_node	tree.h	2004;"	d
unsigned_V8QI_type_node	tree.h	2003;"	d
unsigned_char_type_node	tree.h	2044;"	d
unsigned_condition	jump.c	/^unsigned_condition (code)$/;"	f
unsigned_conversion_warning	c-common.c	/^unsigned_conversion_warning (result, operand)$/;"	f
unsigned_flag	tree.h	/^  unsigned unsigned_flag : 1;$/;"	m	struct:tree_common
unsigned_intDI_type_node	tree.h	1960;"	d
unsigned_intHI_type_node	tree.h	1958;"	d
unsigned_intQI_type_node	tree.h	1957;"	d
unsigned_intSI_type_node	tree.h	1959;"	d
unsigned_intTI_type_node	tree.h	1961;"	d
unsigned_ptrdiff_type_node	c-common.h	198;"	d
unsigned_type	c-common.c	/^unsigned_type (type)$/;"	f
unsigned_type_node	tree.h	2048;"	d
unsigned_wchar_type_node	c-common.h	194;"	d
unsignedp	calls.c	/^  int unsignedp;$/;"	m	struct:arg_data	file:
unsignedp	cppexp.c	/^  U_CHAR unsignedp;    \/* True if value should be treated as unsigned.  *\/$/;"	m	struct:op	file:
unsignedp	function.h	/^  int unsignedp;$/;"	m	struct:var_refs_queue
unterminated	cpplex.c	/^unterminated (pfile, term)$/;"	f	file:
unused_0	tree.h	/^  unsigned unused_0 : 1;$/;"	m	struct:tree_common
unused_1	tree.h	/^  unsigned unused_1 : 1;$/;"	m	struct:tree_common
unused_expr_list	lists.c	/^static rtx unused_expr_list;$/;"	v	file:
unused_insn_chains	reload1.c	/^static struct insn_chain *unused_insn_chains = 0;$/;"	v	typeref:struct:insn_chain	file:
unused_insn_list	lists.c	/^static rtx unused_insn_list;$/;"	v	file:
unused_stack_instances	timevar.c	/^static struct timevar_stack_def *unused_stack_instances;$/;"	v	typeref:struct:timevar_stack_def	file:
unwind_resume_libfunc	libfuncs.h	175;"	d
unwind_sjlj_register_libfunc	libfuncs.h	179;"	d
unwind_sjlj_unregister_libfunc	libfuncs.h	180;"	d
up	cfganal.c	/^    struct dfst_node *up;$/;"	m	struct:dfst_node	typeref:struct:dfst_node::dfst_node	file:
up	safe-ctype.c	46;"	d	file:
update_auto_inc_notes	reload.c	/^update_auto_inc_notes (insn, regno, reloadnum)$/;"	f	file:
update_bb_for_insn	cfgrtl.c	/^update_bb_for_insn (bb)$/;"	f
update_bbs	sched-rgn.c	/^  bblst update_bbs;$/;"	m	struct:__anon31	file:
update_block	reorg.c	/^update_block (insn, where)$/;"	f	file:
update_br_prob_note	cfgrtl.c	/^update_br_prob_note (bb)$/;"	f
update_eliminable_offsets	reload1.c	/^update_eliminable_offsets ()$/;"	f	file:
update_eliminables	reload1.c	/^update_eliminables (pset)$/;"	f	file:
update_equiv_regs	local-alloc.c	/^update_equiv_regs ()$/;"	f	file:
update_forwarder_flag	cfgcleanup.c	/^update_forwarder_flag (bb)$/;"	f	file:
update_giv_derive	loop.c	/^update_giv_derive (loop, p)$/;"	f	file:
update_header_times	c-lex.c	/^update_header_times (name)$/;"	f	file:
update_ld_motion_stores	gcse.c	/^update_ld_motion_stores (expr)$/;"	f	file:
update_life_extent	basic-block.h	/^enum update_life_extent$/;"	g
update_life_info	flow.c	/^update_life_info (blocks, extent, prop_flags)$/;"	f
update_live	sched-rgn.c	/^update_live (insn, src)$/;"	f	file:
update_live_1	sched-rgn.c	/^update_live_1 (src, x)$/;"	f	file:
update_live_status	resource.c	/^update_live_status (dest, x, data)$/;"	f	file:
update_path	prefix.c	/^update_path (path, key)$/;"	f
update_qty_class	local-alloc.c	/^update_qty_class (qtyno, reg)$/;"	f	file:
update_reg_dead_notes	reorg.c	/^update_reg_dead_notes (insn, delayed_insn)$/;"	f	file:
update_reg_last_use	loop.c	/^update_reg_last_use (x, insn)$/;"	f	file:
update_reg_unused_notes	reorg.c	/^update_reg_unused_notes (insn, redundant_insn)$/;"	f	file:
update_table_tick	combine.c	/^update_table_tick (x)$/;"	f	file:
update_temp_slot_address	function.c	/^update_temp_slot_address (old, new)$/;"	f
upward	expr.h	/^enum direction {none, upward, downward};  \/* Value has this type.  *\/$/;"	e	enum:direction
us	varray.h	/^  unsigned short	 us[1];$/;"	m	union:varray_data_tag
use	dependence.c	/^enum def_use_type {def, use, init_def_use};$/;"	e	enum:def_use_type	file:
use	regmove.c	/^  enum { READ, WRITE, READWRITE } use[MAX_RECOG_OPERANDS];$/;"	m	struct:match	typeref:enum:match::__anon84	file:
use_cost_table	stmt.c	/^static int use_cost_table;$/;"	v	file:
use_crosses_set_p	combine.c	/^use_crosses_set_p (x, from_cuid)$/;"	f	file:
use_cselib	sched-int.h	/^  unsigned int use_cselib:1;$/;"	m	struct:sched_info
use_extensions_p	toplev.c	/^  const int use_extensions_p;$/;"	m	struct:__anon60	file:
use_extra_arg	obstack.h	/^  unsigned use_extra_arg:1;	\/* chunk alloc\/dealloc funcs take extra arg *\/$/;"	m	struct:obstack
use_fast_prologue_epilogue	i386.c	/^static int use_fast_prologue_epilogue;$/;"	v	file:
use_gnu_debug_info_extensions	toplev.c	/^int use_gnu_debug_info_extensions = 0;$/;"	v
use_group_regs	expr.c	/^use_group_regs (call_fusage, regs)$/;"	f
use_id	df.h	/^  unsigned int use_id;		\/* Next use ID.  *\/$/;"	m	struct:df
use_id_save	df.h	/^  unsigned int use_id_save;	\/* Saved next use ID.  *\/$/;"	m	struct:df
use_index	reload1.c	/^    int use_index;$/;"	m	struct:__anon1	file:
use_reg	expr.c	/^use_reg (call_fusage, reg)$/;"	f
use_regs	expr.c	/^use_regs (call_fusage, regno, nregs)$/;"	f
use_related_value	cse.c	/^use_related_value (x, elt)$/;"	f	file:
use_return_register	function.c	/^use_return_register ()$/;"	f
use_ruid	reload1.c	/^    int use_ruid;$/;"	m	struct:__anon1	file:
use_size	df.h	/^  unsigned int use_size;	\/* Size of use table.  *\/$/;"	m	struct:df
used	dwarf2out.c	/^  int used;		\/* Used in the end?  *\/$/;"	m	struct:dir_info	file:
used	line-map.h	/^  unsigned int used;$/;"	m	struct:line_maps
used	rtl.h	/^  unsigned int used : 1;$/;"	m	struct:rtx_def
used	timevar.c	/^  unsigned used : 1;$/;"	m	struct:timevar_def	file:
used_count_register	loop.h	/^  int used_count_register;$/;"	m	struct:loop_info
used_flag	tree.h	/^  unsigned used_flag : 1;$/;"	m	struct:tree_common
used_p	regclass.c	/^  char used_p;			\/* non-zero if this has been used previously *\/$/;"	m	struct:reg_info_data	file:
used_regs	cselib.c	/^static varray_type used_regs;$/;"	v	file:
used_rtx_varray	dwarf2out.c	/^static varray_type used_rtx_varray;$/;"	v	file:
used_spill_regs	reload.h	/^  HARD_REG_SET used_spill_regs;$/;"	m	struct:insn_chain
used_spill_regs	reload1.c	/^static HARD_REG_SET used_spill_regs;$/;"	v	file:
used_spill_regs_local	reload1.c	/^static HARD_REG_SET used_spill_regs_local;$/;"	v	file:
usep	reload1.c	/^struct reg_use { rtx insn, *usep; };$/;"	m	struct:reg_use	file:
user	timevar.h	/^  float user;$/;"	m	struct:timevar_time_def
user_align	tree.h	/^  unsigned user_align : 1;$/;"	m	struct:tree_decl
user_align	tree.h	/^  unsigned user_align : 1;$/;"	m	struct:tree_type
user_def_type_attribute	dwarfout.c	/^user_def_type_attribute (type)$/;"	f	file:
user_label_prefix	cpplib.h	/^  const char *user_label_prefix;$/;"	m	struct:cpp_options
user_label_prefix	toplev.c	/^const char *user_label_prefix;$/;"	v
uses	df.h	/^  struct df_link *uses;		\/* Head of insn-use chain.  *\/$/;"	m	struct:insn_info	typeref:struct:insn_info::df_link
uses	df.h	/^  struct df_link *uses;		\/* Head of reg-use chain.  *\/$/;"	m	struct:reg_info	typeref:struct:reg_info::df_link
uses	df.h	/^  struct ref **uses;		\/* Use table, indexed by use_id.  *\/$/;"	m	struct:df	typeref:struct:df::ref
uses	sched-int.h	/^      rtx uses;$/;"	m	struct:deps::deps_reg
uses_addressof	sibcall.c	/^uses_addressof (x)$/;"	f	file:
uses_const_pool	function.h	/^  unsigned int uses_const_pool : 1;$/;"	m	struct:function
uses_eh_lsda	dwarf2out.c	/^  unsigned uses_eh_lsda : 1;$/;"	m	struct:dw_fde_struct	file:
uses_eh_lsda	function.h	/^  unsigned int uses_eh_lsda : 1;$/;"	m	struct:function
uses_length	sched-int.h	/^      int uses_length;$/;"	m	struct:deps::deps_reg
uses_pic_offset_table	function.h	/^  unsigned int uses_pic_offset_table : 1;$/;"	m	struct:function
using_eh_for_cleanups	stmt.c	/^using_eh_for_cleanups ()$/;"	f
using_eh_for_cleanups_p	stmt.c	/^static int using_eh_for_cleanups_p = 0;$/;"	v	file:
usizetype	tree.h	2433;"	d
utoken	cpphash.h	/^union utoken$/;"	u
v	dwarf2out.c	/^  v;$/;"	m	struct:dw_val_struct	typeref:union:dw_val_struct::__anon50	file:
v_message	cpperror.c	36;"	d	file:
va_arg_size	i386.c	/^  int va_arg_size;$/;"	m	struct:ix86_frame	file:
va_args_ok	cpphash.h	/^  unsigned char va_args_ok;$/;"	m	struct:lexer_state
va_copy	system.h	40;"	d
va_copy	system.h	42;"	d
va_list_type_node	tree.h	1989;"	d
val	cpplib.h	/^  } val;$/;"	m	struct:cpp_token	typeref:union:cpp_token::__anon85
val_addr	dwarf2out.c	/^      rtx val_addr;$/;"	m	union:dw_val_struct::__anon50	file:
val_class	dwarf2out.c	/^  dw_val_class val_class;$/;"	m	struct:dw_val_struct	file:
val_die_ref	dwarf2out.c	/^	} val_die_ref;$/;"	m	union:dw_val_struct::__anon50	typeref:struct:dw_val_struct::__anon50::__anon51	file:
val_fde_index	dwarf2out.c	/^      unsigned val_fde_index;$/;"	m	union:dw_val_struct::__anon50	file:
val_flag	dwarf2out.c	/^      unsigned char val_flag;$/;"	m	union:dw_val_struct::__anon50	file:
val_float	dwarf2out.c	/^      dw_float_const val_float;$/;"	m	union:dw_val_struct::__anon50	file:
val_int	dwarf2out.c	/^      long int val_int;$/;"	m	union:dw_val_struct::__anon50	file:
val_lbl_id	dwarf2out.c	/^      char *val_lbl_id;$/;"	m	union:dw_val_struct::__anon50	file:
val_loc	dwarf2out.c	/^      dw_loc_descr_ref val_loc;$/;"	m	union:dw_val_struct::__anon50	file:
val_loc_list	dwarf2out.c	/^      dw_loc_list_ref  val_loc_list;$/;"	m	union:dw_val_struct::__anon50	file:
val_long_long	dwarf2out.c	/^      dw_long_long_const val_long_long;$/;"	m	union:dw_val_struct::__anon50	file:
val_offset	dwarf2out.c	/^      long unsigned val_offset;$/;"	m	union:dw_val_struct::__anon50	file:
val_rtx	cselib.h	/^    rtx val_rtx;$/;"	m	union:cselib_val_struct::__anon65
val_str	dwarf2out.c	/^      struct indirect_string_node *val_str;$/;"	m	union:dw_val_struct::__anon50	typeref:struct:dw_val_struct::__anon50::indirect_string_node	file:
val_unsigned	dwarf2out.c	/^      long unsigned val_unsigned;$/;"	m	union:dw_val_struct::__anon50	file:
valid_compound_expr_initializer	c-typeck.c	/^valid_compound_expr_initializer (value, endtype)$/;"	f	file:
valid_initial_value_p	loop.c	/^valid_initial_value_p (x, insn, call_seen, loop_start)$/;"	f	file:
validate_arglist	builtins.c	/^validate_arglist VPARAMS ((tree arglist, ...))$/;"	f	file:
validate_change	recog.c	/^validate_change (object, loc, new, in_group)$/;"	f
validate_equiv_mem	local-alloc.c	/^validate_equiv_mem (start, reg, memref)$/;"	f	file:
validate_equiv_mem_from_store	local-alloc.c	/^validate_equiv_mem_from_store (dest, set, data)$/;"	f	file:
validate_replace_rtx	recog.c	/^validate_replace_rtx (from, to, insn)$/;"	f
validate_replace_rtx_1	recog.c	/^validate_replace_rtx_1 (loc, from, to, object)$/;"	f	file:
validate_replace_rtx_group	recog.c	/^validate_replace_rtx_group (from, to, insn)$/;"	f
validate_replace_rtx_subexp	recog.c	/^validate_replace_rtx_subexp (from, to, insn, loc)$/;"	f
validate_replace_src	recog.c	/^validate_replace_src (from, to, insn)$/;"	f
validate_replace_src_1	recog.c	/^validate_replace_src_1 (x, data)$/;"	f	file:
validate_replace_src_data	recog.c	/^struct validate_replace_src_data$/;"	s	file:
validate_value_data	regrename.c	/^validate_value_data (vd)$/;"	f	file:
validize_mem	explow.c	/^validize_mem (ref)$/;"	f
value	c-lex.c	/^  REAL_VALUE_TYPE value;$/;"	m	struct:pf_args	file:
value	c-typeck.c	/^  tree value;$/;"	m	struct:init_node	file:
value	calls.c	/^  rtx value;$/;"	m	struct:arg_data	file:
value	cppexp.c	/^  HOST_WIDEST_INT value; \/* The value logically "right" of op.  *\/$/;"	m	struct:op	file:
value	cppinit.c	/^  const char *value;$/;"	m	struct:builtin	file:
value	cppinit.c	/^  enum cpp_ttype value;$/;"	m	struct:named_op	typeref:enum:named_op::cpp_ttype	file:
value	cpplib.h	/^  } value;$/;"	m	struct:cpp_hashnode	typeref:union:cpp_hashnode::__anon87
value	cselib.h	/^  unsigned int value;$/;"	m	struct:cselib_val_struct
value	gcov-io.h	/^     gcov_type value;$/;"	v
value	gcov-io.h	/^     long value;$/;"	v
value	params.h	/^  int value;$/;"	m	struct:param_info
value	rtl.h	/^struct md_constant { char *name, *value; };$/;"	m	struct:md_constant
value	simplify-rtx.c	/^  rtx value;$/;"	m	struct:simplify_binary_is2orm1_args	file:
value	splay-tree.h	/^  splay_tree_value value;$/;"	m	struct:splay_tree_node_s
value	ssa-ccp.c	/^} value;$/;"	t	typeref:struct:__anon75	file:
value	toplev.c	/^  const int value;$/;"	m	struct:__anon62	file:
value	tree-dump.c	/^  const int value;		\/* the value of the name *\/$/;"	m	struct:dump_option_value_info	file:
value	tree.h	/^  tree value;$/;"	m	struct:tree_list
value1	conditions.h	/^typedef struct {int flags; rtx value1, value2; CC_STATUS_MDEP mdep;} CC_STATUS;$/;"	m	struct:__anon46
value2	conditions.h	/^typedef struct {int flags; rtx value1, value2; CC_STATUS_MDEP mdep;} CC_STATUS;$/;"	m	struct:__anon46
value_data	regrename.c	/^struct value_data$/;"	s	file:
value_data_entry	regrename.c	/^struct value_data_entry$/;"	s	file:
value_format	dwarf2out.c	/^value_format (a)$/;"	f	file:
value_member	tree.c	/^value_member (elem, list)$/;"	f
values	ssa-ccp.c	/^static value *values;$/;"	v	file:
values	tree.h	/^  tree values;$/;"	m	struct:tree_type
values_became_useless	cselib.c	/^static int values_became_useless;$/;"	v	file:
var	expr.h	/^  tree var;$/;"	m	struct:args_size
var_labelno	varasm.c	/^int var_labelno;$/;"	v
var_offset	function.c	/^static int var_offset;$/;"	v	file:
var_refs_queue	function.h	/^struct var_refs_queue$/;"	s
var_rtx	expr.c	/^var_rtx (exp)$/;"	f	file:
var_temp_slot_level	function.h	542;"	d
varargs	function.h	/^  unsigned int varargs : 1;$/;"	m	struct:function
varasm	function.h	/^  struct varasm_status *varasm;$/;"	m	struct:function	typeref:struct:function::varasm_status
varasm_status	varasm.c	/^struct varasm_status$/;"	s	file:
variable	dependence.c	/^  const char *variable;$/;"	m	struct:def_use	file:
variable	dependence.c	/^  const char *variable;$/;"	m	struct:induction	file:
variable	dependence.c	/^  const char *variable;$/;"	m	struct:subscript	file:
variable	toplev.c	/^  const char **const variable;$/;"	m	struct:__anon63	file:
variable	toplev.c	/^  int *const variable;$/;"	m	struct:__anon61	file:
variable_issue	target.h	/^    int (* variable_issue) PARAMS ((FILE *, int, rtx, int));$/;"	m	struct:gcc_target::sched
variable_section	varasm.c	/^variable_section (decl, reloc)$/;"	f
variable_size	stor-layout.c	/^variable_size (size)$/;"	f
variadic	cppmacro.c	/^  unsigned int variadic : 1;	\/* If a variadic macro.  *\/$/;"	m	struct:cpp_macro	file:
varray_check_failed	varray.c	/^varray_check_failed (va, n, file, line, function)$/;"	f
varray_data	varray.h	/^} varray_data;$/;"	t	typeref:union:varray_data_tag
varray_data_tag	varray.h	/^typedef union varray_data_tag {$/;"	u
varray_grow	varray.c	/^varray_grow (va, n)$/;"	f
varray_head_tag	varray.h	/^typedef struct varray_head_tag {$/;"	s
varray_init	varray.c	/^varray_init (num_elements, element_size, name)$/;"	f
varray_type	except.h	156;"	d
varray_type	except.h	26;"	d
varray_type	varray.h	/^} *varray_type;$/;"	t	typeref:struct:varray_head_tag
vars	tree.h	/^  tree vars;$/;"	m	struct:tree_block
vasprintf	vasprintf.c	/^vasprintf (result, format, args)$/;"	f
vbuild_message_string	diagnostic.c	/^vbuild_message_string (msg, ap)$/;"	f	file:
vcg	flags.h	/^  vcg$/;"	e	enum:graph_dump_types
vconcat_copy	concat.c	/^vconcat_copy (dst, first, args)$/;"	f	file:
vconcat_length	concat.c	/^vconcat_length (first, args)$/;"	f	file:
vec	haifa-sched.c	/^  rtx *vec;$/;"	m	struct:ready_list	file:
vec	tree.h	/^  struct tree_vec vec;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_vec
vec_kind	tree.c	/^  vec_kind,$/;"	e	enum:__anon88	file:
vechi	varasm.c	/^    HOST_WIDE_INT vechi[16];$/;"	m	union:rtx_const::__anon81	file:
veclen	haifa-sched.c	/^  int veclen;$/;"	m	struct:ready_list	file:
veclo	varasm.c	/^    HOST_WIDE_INT veclo[16];$/;"	m	union:rtx_const::__anon81	file:
vector	tree.h	/^  struct tree_vector vector;$/;"	m	union:tree_node	typeref:struct:tree_node::tree_vector
vector_size_helper	attribs.c	/^vector_size_helper (type, bottom)$/;"	f	file:
verbatim	diagnostic.c	/^verbatim VPARAMS ((const char *msgid, ...))$/;"	f
verbose	cpplib.h	/^  unsigned char verbose;$/;"	m	struct:cpp_options
verify_addresses	unroll.c	/^verify_addresses (v, giv_inc, unroll_number)$/;"	f	file:
verify_edge_list	cfganal.c	/^verify_edge_list (f, elist)$/;"	f
verify_flow_info	cfgrtl.c	/^verify_flow_info ()$/;"	f
verify_initial_elim_offsets	reload1.c	/^verify_initial_elim_offsets ()$/;"	f	file:
verify_insn_chain	cfglayout.c	/^verify_insn_chain ()$/;"	f
verify_local_live_at_start	flow.c	/^verify_local_live_at_start (new_live_at_start, bb)$/;"	f	file:
verify_sequence_points	c-common.c	/^verify_sequence_points (expr)$/;"	f	file:
verify_tree	c-common.c	/^verify_tree (x, pbefore_sp, pno_sp, writer)$/;"	f	file:
verify_wide_reg	flow.c	/^verify_wide_reg (regno, bb)$/;"	f	file:
verify_wide_reg_1	flow.c	/^verify_wide_reg_1 (px, pregno)$/;"	f	file:
version_flag	toplev.c	/^static int version_flag;$/;"	v	file:
version_string	version.c	/^const char *const version_string = "3.2";$/;"	v
vindex	tree.h	/^  tree vindex;$/;"	m	struct:tree_decl
virtual_cfa_rtx	rtl.h	1710;"	d
virtual_flag	tree.h	/^  unsigned virtual_flag : 1;$/;"	m	struct:tree_decl
virtual_incoming_args_rtx	rtl.h	1676;"	d
virtual_outgoing_args_rtx	rtl.h	1700;"	d
virtual_stack_dynamic_rtx	rtl.h	1692;"	d
virtual_stack_vars_rtx	rtl.h	1684;"	d
virtuals_instantiated	function.c	/^int virtuals_instantiated;$/;"	v
vis_no_unit	sched-vis.c	/^rtx vis_no_unit[MAX_VISUAL_NO_UNIT];$/;"	v
visit_expression	ssa-ccp.c	/^visit_expression (insn, block)$/;"	f	file:
visit_phi_node	ssa-ccp.c	/^visit_phi_node (phi_node, block)$/;"	f	file:
visited	cfglayout.h	/^  int visited;$/;"	m	struct:reorder_block_def
visited_blocks	cfganal.c	/^  sbitmap visited_blocks;$/;"	m	struct:depth_first_search_dsS	file:
visual_tbl	sched-vis.c	/^char *visual_tbl;$/;"	v
visual_tbl_line_length	sched-vis.c	/^static unsigned visual_tbl_line_length;$/;"	v	file:
visualize_alloc	sched-vis.c	/^visualize_alloc ()$/;"	f
visualize_free	sched-vis.c	/^visualize_free ()$/;"	f
visualize_no_unit	sched-vis.c	/^visualize_no_unit (insn)$/;"	f
visualize_scheduled_insns	sched-vis.c	/^visualize_scheduled_insns (clock)$/;"	f
visualize_stall_cycles	sched-vis.c	/^visualize_stall_cycles (stalls)$/;"	f
vms_epoch_offset	vmsdbgout.c	/^static const long long vms_epoch_offset = 3506716800ll;$/;"	v	file:
vmsdbg_debug_hooks	vmsdbgout.c	/^struct gcc_debug_hooks vmsdbg_debug_hooks$/;"	v	typeref:struct:gcc_debug_hooks
vmsdbgout_abstract_function	vmsdbgout.c	/^vmsdbgout_abstract_function (decl)$/;"	f	file:
vmsdbgout_after_prologue	vmsdbgout.c	/^vmsdbgout_after_prologue ()$/;"	f
vmsdbgout_begin_block	vmsdbgout.c	/^vmsdbgout_begin_block (line, blocknum)$/;"	f	file:
vmsdbgout_begin_function	vmsdbgout.c	/^vmsdbgout_begin_function (decl)$/;"	f	file:
vmsdbgout_begin_prologue	vmsdbgout.c	/^vmsdbgout_begin_prologue (line, file)$/;"	f	file:
vmsdbgout_decl	vmsdbgout.c	/^vmsdbgout_decl (decl)$/;"	f	file:
vmsdbgout_define	vmsdbgout.c	/^vmsdbgout_define (lineno, buffer)$/;"	f	file:
vmsdbgout_end_block	vmsdbgout.c	/^vmsdbgout_end_block (line, blocknum)$/;"	f	file:
vmsdbgout_end_epilogue	vmsdbgout.c	/^vmsdbgout_end_epilogue ()$/;"	f	file:
vmsdbgout_end_source_file	vmsdbgout.c	/^vmsdbgout_end_source_file (lineno)$/;"	f	file:
vmsdbgout_finish	vmsdbgout.c	/^vmsdbgout_finish (input_filename)$/;"	f	file:
vmsdbgout_global_decl	vmsdbgout.c	/^vmsdbgout_global_decl (decl)$/;"	f	file:
vmsdbgout_ignore_block	vmsdbgout.c	/^vmsdbgout_ignore_block (block)$/;"	f	file:
vmsdbgout_init	vmsdbgout.c	/^vmsdbgout_init (main_input_filename)$/;"	f	file:
vmsdbgout_source_line	vmsdbgout.c	/^vmsdbgout_source_line (line, filename)$/;"	f	file:
vmsdbgout_start_source_file	vmsdbgout.c	/^vmsdbgout_start_source_file (lineno, filename)$/;"	f	file:
vmsdbgout_undef	vmsdbgout.c	/^vmsdbgout_undef (lineno, buffer)$/;"	f	file:
void_list_node	tree.h	1996;"	d
void_type_class	typeclass.h	/^  void_type_class, integer_type_class, char_type_class,$/;"	e	enum:type_class
void_type_node	tree.h	1983;"	d
void_zero_node	c-common.h	232;"	d
volatil	resource.h	/^  char volatil;		\/* Insn sets or needs a volatile memory loc.  *\/$/;"	m	struct:resources
volatil	rtl.h	/^  unsigned int volatil : 1;$/;"	m	struct:rtx_def
volatile	ansidecl.h	162;"	d
volatile	ansidecl.h	199;"	d
volatile	ansidecl.h	203;"	d
volatile	system.h	360;"	d
volatile_flag	tree.h	/^  unsigned volatile_flag : 1;$/;"	m	struct:tree_common
volatile_insn_p	rtlanal.c	/^volatile_insn_p (x)$/;"	f
volatile_ok	recog.c	/^int volatile_ok;$/;"	v
volatile_refs_p	rtlanal.c	/^volatile_refs_p (x)$/;"	f
vs	safe-ctype.c	47;"	d	file:
vsuf_1	cppexp.c	/^static const struct suffix vsuf_1[] = {$/;"	v	typeref:struct:suffix	file:
vsuf_2	cppexp.c	/^static const struct suffix vsuf_2[] = {$/;"	v	typeref:struct:suffix	file:
vsuf_3	cppexp.c	/^static const struct suffix vsuf_3[] = {$/;"	v	typeref:struct:suffix	file:
vtop	basic-block.h	/^  rtx vtop;$/;"	m	struct:loop
walk_alter_subreg	final.c	/^walk_alter_subreg (xp)$/;"	f	file:
walk_fixup_memory_subreg	function.c	/^walk_fixup_memory_subreg (x, insn, promoted_mode, uncritical)$/;"	f	file:
walk_stmt_tree	c-common.c	/^walk_stmt_tree (tp, func, data)$/;"	f
walk_subtrees	langhooks.h	/^  union tree_node *(*walk_subtrees) PARAMS ((union tree_node **, int *,$/;"	m	struct:lang_hooks_for_tree_inlining	typeref:union:lang_hooks_for_tree_inlining::walk_subtrees
walk_tree	tree-inline.c	/^walk_tree (tp, func, data, htab_)$/;"	f
walk_tree_fn	tree.h	/^typedef tree (*walk_tree_fn)		PARAMS ((tree *, int *, void *));$/;"	t
walk_tree_without_duplicates	tree-inline.c	/^walk_tree_without_duplicates (tp, func, data)$/;"	f
wall	timevar.h	/^  float wall;$/;"	m	struct:timevar_time_def
want_integer	simplify-rtx.c	/^  bool want_integer;$/;"	m	struct:simplify_unary_real_args	file:
want_to_gcse_p	gcse.c	/^want_to_gcse_p (x)$/;"	f	file:
wanted_type	c-format.c	/^  tree wanted_type;$/;"	m	struct:format_wanted_type	file:
wanted_type_name	c-format.c	/^  const char *wanted_type_name;$/;"	m	struct:format_wanted_type	file:
warn	diagnostic.h	/^  int warn;$/;"	m	struct:diagnostic_context
warn_about_return_type	c-decl.c	/^  int warn_about_return_type;$/;"	m	struct:c_language_function	file:
warn_about_return_type	c-decl.c	/^static int warn_about_return_type;$/;"	v	file:
warn_about_unused_variables	stmt.c	/^warn_about_unused_variables (vars)$/;"	f
warn_aggregate_return	toplev.c	/^int warn_aggregate_return;$/;"	v
warn_bad_function_cast	c-decl.c	/^int warn_bad_function_cast;$/;"	v
warn_cast_align	toplev.c	/^int warn_cast_align;$/;"	v
warn_cast_qual	c-decl.c	/^int warn_cast_qual;$/;"	v
warn_char_subscripts	c-decl.c	/^int warn_char_subscripts = 0;$/;"	v
warn_comments	cpplib.h	/^  unsigned char warn_comments;$/;"	m	struct:cpp_options
warn_conversion	c-decl.c	/^int warn_conversion;$/;"	v
warn_deprecated_decl	toplev.c	/^int warn_deprecated_decl = 1;$/;"	v
warn_deprecated_use	diagnostic.c	/^warn_deprecated_use (node)$/;"	f
warn_disabled_optimization	toplev.c	/^int warn_disabled_optimization;$/;"	v
warn_div_by_zero	c-common.c	/^int warn_div_by_zero = 1;$/;"	v
warn_float_equal	c-decl.c	/^int warn_float_equal = 0;$/;"	v
warn_for_assignment	c-typeck.c	/^warn_for_assignment (msgid, opname, function, argnum)$/;"	f	file:
warn_for_collisions	c-common.c	/^warn_for_collisions (list)$/;"	f	file:
warn_for_collisions_1	c-common.c	/^warn_for_collisions_1 (written, writer, list, only_writes)$/;"	f	file:
warn_format	c-format.c	/^int warn_format;$/;"	v
warn_format_extra_args	c-format.c	/^int warn_format_extra_args;$/;"	v
warn_format_nonliteral	c-format.c	/^int warn_format_nonliteral;$/;"	v
warn_format_security	c-format.c	/^int warn_format_security;$/;"	v
warn_format_y2k	c-format.c	/^int warn_format_y2k;$/;"	v
warn_if_shadowing	c-decl.c	/^warn_if_shadowing (x, oldlocal)$/;"	f	file:
warn_if_unused_value	stmt.c	/^warn_if_unused_value (exp)$/;"	f
warn_implicit_int	c-decl.c	/^int warn_implicit_int;$/;"	v
warn_import	cpplib.h	/^  unsigned char warn_import;$/;"	m	struct:cpp_options
warn_inline	toplev.c	/^int warn_inline;$/;"	v
warn_larger_than	toplev.c	/^int warn_larger_than;$/;"	v
warn_long_long	c-decl.c	/^int warn_long_long = 1;$/;"	v
warn_main	c-decl.c	/^int warn_main;$/;"	v
warn_missing_braces	c-decl.c	/^int warn_missing_braces;$/;"	v
warn_missing_declarations	c-decl.c	/^int warn_missing_declarations;$/;"	v
warn_missing_format_attribute	c-decl.c	/^int warn_missing_format_attribute;$/;"	v
warn_missing_noreturn	toplev.c	/^int warn_missing_noreturn;$/;"	v
warn_missing_prototypes	c-decl.c	/^int warn_missing_prototypes;$/;"	v
warn_multichar	c-decl.c	/^int warn_multichar = 1;$/;"	v
warn_nested_externs	c-decl.c	/^int warn_nested_externs = 0;$/;"	v
warn_notreached	toplev.c	/^int warn_notreached;$/;"	v
warn_of_redefinition	cppmacro.c	/^warn_of_redefinition (node, macro2)$/;"	f	file:
warn_packed	toplev.c	/^int warn_packed;$/;"	v
warn_padded	toplev.c	/^int warn_padded;$/;"	v
warn_parentheses	c-decl.c	/^int warn_parentheses;$/;"	v
warn_pointer_arith	c-decl.c	/^int warn_pointer_arith;$/;"	v
warn_redundant_decls	c-decl.c	/^int warn_redundant_decls = 0;$/;"	v
warn_return_type	toplev.c	/^int warn_return_type;$/;"	v
warn_sequence_point	c-common.c	/^int warn_sequence_point;$/;"	v
warn_shadow	toplev.c	/^int warn_shadow;$/;"	v
warn_sign_compare	c-decl.c	/^int warn_sign_compare = -1;$/;"	v
warn_strict_prototypes	c-decl.c	/^int warn_strict_prototypes;$/;"	v
warn_switch	toplev.c	/^int warn_switch;$/;"	v
warn_system_headers	cpplib.h	/^  unsigned char warn_system_headers;$/;"	m	struct:cpp_options
warn_system_headers	toplev.c	/^int warn_system_headers = 0;$/;"	v
warn_traditional	c-decl.c	/^int warn_traditional;$/;"	v
warn_traditional	cpplib.h	/^  unsigned char warn_traditional;$/;"	m	struct:cpp_options
warn_trigraphs	cpplib.h	/^  unsigned char warn_trigraphs;$/;"	m	struct:cpp_options
warn_undef	cpplib.h	/^  unsigned char warn_undef;$/;"	m	struct:cpp_options
warn_uninitialized	toplev.c	/^int warn_uninitialized;$/;"	v
warn_unknown_pragmas	c-decl.c	/^int warn_unknown_pragmas = 0; \/* Tri state variable.  *\/$/;"	v
warn_unused_function	toplev.c	/^int warn_unused_function;$/;"	v
warn_unused_label	toplev.c	/^int warn_unused_label;$/;"	v
warn_unused_parameter	toplev.c	/^int warn_unused_parameter;$/;"	v
warn_unused_value	toplev.c	/^int warn_unused_value;$/;"	v
warn_unused_variable	toplev.c	/^int warn_unused_variable;$/;"	v
warned_cplusplus_comments	cpphash.h	/^  unsigned char warned_cplusplus_comments;$/;"	m	struct:cpp_buffer
warned_ids	c-common.c	/^static struct tlist *warned_ids;$/;"	v	typeref:struct:tlist	file:
warning	diagnostic.c	/^warning VPARAMS ((const char *msgid, ...))$/;"	f
warning_candidate_p	c-common.c	/^warning_candidate_p (x)$/;"	f	file:
warning_for_asm	rtl-error.c	/^warning_for_asm VPARAMS ((rtx insn, const char *msgid, ...))$/;"	f
warning_init	c-typeck.c	/^warning_init (msgid)$/;"	f	file:
warning_with_decl	diagnostic.c	/^warning_with_decl VPARAMS ((tree decl, const char *msgid, ...))$/;"	f
warning_with_file_and_line	diagnostic.c	/^warning_with_file_and_line VPARAMS ((const char *file, int line,$/;"	f
warningcount	diagnostic.h	257;"	d
warnings_are_errors	cpplib.h	/^  unsigned char warnings_are_errors;$/;"	m	struct:cpp_options
warnings_are_errors	toplev.c	/^int warnings_are_errors = 0;$/;"	v
was_skipping	cpplib.c	/^  bool was_skipping;		\/* If were skipping on entry.  *\/$/;"	m	struct:if_stack	file:
wchar_array_type_node	c-common.h	213;"	d
wchar_type_node	c-common.h	192;"	d
weak_crossing_siv	dependence.c	/^		      weak_crossing_siv, miv};$/;"	e	enum:complexity_type	file:
weak_decls	varasm.c	/^static tree weak_decls;$/;"	v	file:
weak_finish	varasm.c	/^weak_finish ()$/;"	f
weak_flag	tree.h	/^  unsigned weak_flag : 1;$/;"	m	struct:tree_decl
weak_global_object_name	varasm.c	/^const char *weak_global_object_name;$/;"	v
weak_siv	dependence.c	/^enum complexity_type {ziv, strong_siv, weak_siv, weak_zero_siv,$/;"	e	enum:complexity_type	file:
weak_zero_siv	dependence.c	/^enum complexity_type {ziv, strong_siv, weak_siv, weak_zero_siv,$/;"	e	enum:complexity_type	file:
what	reload.c	/^  int what;			\/* which reload this is for *\/$/;"	m	struct:replacement	file:
when_needed	reload.h	/^  enum reload_type when_needed;$/;"	m	struct:reload	typeref:enum:reload::reload_type
where	combine.c	/^  union {rtx *r; unsigned int *i;} where;$/;"	m	struct:undo	typeref:union:undo::__anon34	file:
where	reload.c	/^  rtx *where;			\/* Location to store in *\/$/;"	m	struct:replacement	file:
which_alternative	recog.c	/^int which_alternative;$/;"	v
widen_memory_access	emit-rtl.c	/^widen_memory_access (memref, mode, offset)$/;"	f
widen_operand	optabs.c	/^widen_operand (op, mode, oldmode, unsignedp, no_extend)$/;"	f	file:
widest_integer_literal_type_node	c-common.h	201;"	d
widest_unsigned_literal_type_node	c-common.h	202;"	d
width_char	c-format.c	/^  const int width_char;$/;"	m	struct:__anon43	file:
width_type	c-format.c	/^  tree *const width_type;$/;"	m	struct:__anon43	file:
wint_type_node	c-common.h	195;"	d
wipe_dead_reg	local-alloc.c	/^wipe_dead_reg (reg, output_p)$/;"	f	file:
with	regmove.c	/^  int with[MAX_RECOG_OPERANDS];$/;"	m	struct:match	file:
word	c-parse.c	/^  const char *word;$/;"	m	struct:resword	file:
word_mode	emit-rtl.c	/^enum machine_mode word_mode;	\/* Mode whose width is BITS_PER_WORD.  *\/$/;"	v	typeref:enum:machine_mode
words	i386.h	/^  int words;			\/* # words passed so far *\/$/;"	m	struct:ix86_args
wrap_constant	cselib.c	/^wrap_constant (mode, x)$/;"	f	file:
wrap_text	diagnostic.c	/^wrap_text (buffer, start, end)$/;"	f	file:
wrapper_files	Makefile	/^wrapper_files := $(libc_dir)\/ocall_libcall_wrapper.o $(libc_dir)\/ocall_syscall_wrapper.o $(libc_dir)\/ocall_syscall.o$/;"	m
wrapup_global_declarations	toplev.c	/^wrapup_global_declarations (vec, len)$/;"	f
write	loop.c	/^  unsigned int write : 1;	\/* 1 for read\/write prefetches.  *\/$/;"	m	struct:prefetch_info	file:
write_debug_addr	vmsdbgout.c	/^write_debug_addr (symbol, comment, dosizeonly)$/;"	f	file:
write_debug_data1	vmsdbgout.c	/^write_debug_data1 (data1, comment, dosizeonly)$/;"	f	file:
write_debug_data2	vmsdbgout.c	/^write_debug_data2 (data2, comment, dosizeonly)$/;"	f	file:
write_debug_data4	vmsdbgout.c	/^write_debug_data4 (data4, comment, dosizeonly)$/;"	f	file:
write_debug_data8	vmsdbgout.c	/^write_debug_data8 (data8, comment, dosizeonly)$/;"	f	file:
write_debug_delta4	vmsdbgout.c	/^write_debug_delta4 (label1, label2, comment, dosizeonly)$/;"	f	file:
write_debug_header	vmsdbgout.c	/^write_debug_header (header, comment, dosizeonly)$/;"	f	file:
write_debug_string	vmsdbgout.c	/^write_debug_string (string, comment, dosizeonly)$/;"	f	file:
write_dependence_p	alias.c	/^write_dependence_p (mem, x, writep)$/;"	f	file:
write_modbeg	vmsdbgout.c	/^write_modbeg (dosizeonly)$/;"	f	file:
write_modend	vmsdbgout.c	/^write_modend (dosizeonly)$/;"	f	file:
write_modifier_bytes	dwarfout.c	/^write_modifier_bytes (type, decl_const, decl_volatile)$/;"	f	file:
write_modifier_bytes_1	dwarfout.c	/^write_modifier_bytes_1 (type, decl_const, decl_volatile, count)$/;"	f	file:
write_pclines	vmsdbgout.c	/^write_pclines (dosizeonly)$/;"	f	file:
write_rtnbeg	vmsdbgout.c	/^write_rtnbeg (rtnnum, dosizeonly)$/;"	f	file:
write_rtnend	vmsdbgout.c	/^write_rtnend (rtnnum, dosizeonly)$/;"	f	file:
write_srccorr	vmsdbgout.c	/^write_srccorr (fileid, file_info_entry, dosizeonly)$/;"	f	file:
write_srccorrs	vmsdbgout.c	/^write_srccorrs (dosizeonly)$/;"	f	file:
write_symbols	toplev.c	/^enum debug_info_type write_symbols = NO_DEBUG;$/;"	v	typeref:enum:debug_info_type
writer	c-common.c	/^  tree expr, writer;$/;"	m	struct:tlist	file:
writing_in_flag	c-format.c	/^  int writing_in_flag;$/;"	m	struct:format_wanted_type	file:
wstring	real.c	/^static char wstring[80];	\/* working storage for ASCII output *\/$/;"	v	file:
x	ifcvt.c	/^  rtx x, a, b;$/;"	m	struct:noce_if_info	file:
x	obstack.c	/^struct fooalign {char x; double d;};$/;"	m	struct:fooalign	file:
x	obstack.c	/^union fooround {long x; double d;};$/;"	m	union:fooround	file:
x86_3dnow_a	i386.c	/^const int x86_3dnow_a = m_ATHLON;$/;"	v
x86_64_general_operand	i386.c	/^x86_64_general_operand (op, mode)$/;"	f
x86_64_immediate_operand	i386.c	/^x86_64_immediate_operand (op, mode)$/;"	f
x86_64_int_parameter_registers	i386.c	/^static int const x86_64_int_parameter_registers[6] = {5 \/*RDI*\/, 4 \/*RSI*\/,$/;"	v	file:
x86_64_int_return_registers	i386.c	/^static int const x86_64_int_return_registers[4] = {0 \/*RAX*\/, 1 \/*RDI*\/, 5, 4};$/;"	v	file:
x86_64_movabs_operand	i386.c	/^x86_64_movabs_operand (op, mode)$/;"	f
x86_64_nonmemory_operand	i386.c	/^x86_64_nonmemory_operand (op, mode)$/;"	f
x86_64_reg_class	i386.c	/^enum x86_64_reg_class$/;"	g	file:
x86_64_reg_class_name	i386.c	/^static const char * const x86_64_reg_class_name[] =$/;"	v	file:
x86_64_sign_extended_value	i386.c	/^x86_64_sign_extended_value (value)$/;"	f
x86_64_szext_general_operand	i386.c	/^x86_64_szext_general_operand (op, mode)$/;"	f
x86_64_szext_nonmemory_operand	i386.c	/^x86_64_szext_nonmemory_operand (op, mode)$/;"	f
x86_64_zero_extended_value	i386.c	/^x86_64_zero_extended_value (value)$/;"	f
x86_64_zext_immediate_operand	i386.c	/^x86_64_zext_immediate_operand (op, mode)$/;"	f
x86_accumulate_outgoing_args	i386.c	/^const int x86_accumulate_outgoing_args = m_ATHLON | m_PENT4 | m_PPRO;$/;"	v
x86_add_esp_4	i386.c	/^const int x86_add_esp_4 = m_ATHLON | m_K6 | m_PENT4;$/;"	v
x86_add_esp_8	i386.c	/^const int x86_add_esp_8 = m_ATHLON | m_PPRO | m_K6 | m_386 | m_486 | m_PENT4;$/;"	v
x86_arch_always_fancy_math_387	i386.c	/^const int x86_arch_always_fancy_math_387 = m_PENT|m_PPRO|m_ATHLON|m_PENT4;$/;"	v
x86_branch_hints	i386.c	/^const int x86_branch_hints = m_PENT4;$/;"	v
x86_cmove	i386.c	/^const int x86_cmove = m_PPRO | m_ATHLON | m_PENT4;$/;"	v
x86_decompose_lea	i386.c	/^const int x86_decompose_lea = m_PENT4;$/;"	v
x86_deep_branch	i386.c	/^const int x86_deep_branch = m_PPRO | m_K6 | m_ATHLON | m_PENT4;$/;"	v
x86_double_with_add	i386.c	/^const int x86_double_with_add = ~m_386;$/;"	v
x86_epilogue_using_move	i386.c	/^const int x86_epilogue_using_move = m_ATHLON | m_PENT4 | m_PPRO;$/;"	v
x86_field_alignment	i386.c	/^x86_field_alignment (field, computed)$/;"	f
x86_himode_math	i386.c	/^const int x86_himode_math = ~(m_PPRO);$/;"	v
x86_initialize_trampoline	i386.c	/^x86_initialize_trampoline (tramp, fnaddr, cxt)$/;"	f
x86_integer_DFmode_moves	i386.c	/^const int x86_integer_DFmode_moves = ~(m_ATHLON | m_PENT4);$/;"	v
x86_memory_mismatch_stall	i386.c	/^const int x86_memory_mismatch_stall = m_ATHLON | m_PENT4;$/;"	v
x86_movx	i386.c	/^const int x86_movx = m_ATHLON | m_PPRO | m_PENT4 \/* m_386 | m_K6 *\/;$/;"	v
x86_order_regs_for_local_alloc	i386.c	/^x86_order_regs_for_local_alloc ()$/;"	f
x86_output_mi_thunk	i386.c	/^x86_output_mi_thunk (file, delta, function)$/;"	f
x86_partial_reg_dependency	i386.c	/^const int x86_partial_reg_dependency = m_ATHLON | m_PENT4;$/;"	v
x86_partial_reg_stall	i386.c	/^const int x86_partial_reg_stall = m_PPRO;$/;"	v
x86_prefetch_sse	i386.c	/^int x86_prefetch_sse;$/;"	v
x86_prologue_using_move	i386.c	/^const int x86_prologue_using_move = m_ATHLON | m_PENT4 | m_PPRO;$/;"	v
x86_promote_QImode	i386.c	/^const int x86_promote_QImode = m_K6 | m_PENT | m_386 | m_486;$/;"	v
x86_promote_hi_regs	i386.c	/^const int x86_promote_hi_regs = m_PPRO;$/;"	v
x86_promote_qi_regs	i386.c	/^const int x86_promote_qi_regs = 0;$/;"	v
x86_push_memory	i386.c	/^const int x86_push_memory = m_386 | m_K6 | m_ATHLON | m_PENT4;$/;"	v
x86_qimode_math	i386.c	/^const int x86_qimode_math = ~(0);$/;"	v
x86_read_modify	i386.c	/^const int x86_read_modify = ~(m_PENT | m_PPRO);$/;"	v
x86_read_modify_write	i386.c	/^const int x86_read_modify_write = ~m_PENT;$/;"	v
x86_single_stringop	i386.c	/^const int x86_single_stringop = m_386 | m_PENT4;$/;"	v
x86_split_long_moves	i386.c	/^const int x86_split_long_moves = m_PPRO;$/;"	v
x86_sub_esp_4	i386.c	/^const int x86_sub_esp_4 = m_ATHLON | m_PPRO | m_PENT4;$/;"	v
x86_sub_esp_8	i386.c	/^const int x86_sub_esp_8 = m_ATHLON | m_PPRO | m_386 | m_486 | m_PENT4;$/;"	v
x86_unroll_strlen	i386.c	/^const int x86_unroll_strlen = m_486 | m_PENT | m_PPRO | m_ATHLON | m_K6;$/;"	v
x86_use_bit_test	i386.c	/^const int x86_use_bit_test = m_386;$/;"	v
x86_use_cltd	i386.c	/^const int x86_use_cltd = ~(m_PENT | m_K6);$/;"	v
x86_use_fiop	i386.c	/^const int x86_use_fiop = ~(m_PPRO | m_ATHLON | m_PENT);$/;"	v
x86_use_leave	i386.c	/^const int x86_use_leave = m_386 | m_K6 | m_ATHLON;$/;"	v
x86_use_loop	i386.c	/^const int x86_use_loop = m_K6;$/;"	v
x86_use_mov0	i386.c	/^const int x86_use_mov0 = m_K6;$/;"	v
x86_use_sahf	i386.c	/^const int x86_use_sahf = m_PPRO | m_K6 | m_PENT4;$/;"	v
x86_zero_extend_with_and	i386.c	/^const int x86_zero_extend_with_and = m_486 | m_PENT;$/;"	v
x_apply_args_value	function.h	/^  rtx x_apply_args_value;$/;"	m	struct:expr_status
x_arg_pointer_save_area	function.h	/^  rtx x_arg_pointer_save_area;$/;"	m	struct:function
x_block_stack	stmt.c	/^  struct nesting *x_block_stack;$/;"	m	struct:stmt_status	typeref:struct:stmt_status::nesting	file:
x_block_start_count	stmt.c	/^  int x_block_start_count;$/;"	m	struct:stmt_status	file:
x_case_stack	stmt.c	/^  struct nesting *x_case_stack;$/;"	m	struct:stmt_status	typeref:struct:stmt_status::nesting	file:
x_cleanup_label	function.h	/^  rtx x_cleanup_label;$/;"	m	struct:function
x_clobber_return_insn	function.h	/^  rtx x_clobber_return_insn;$/;"	m	struct:function
x_cond_stack	stmt.c	/^  struct nesting *x_cond_stack;$/;"	m	struct:stmt_status	typeref:struct:stmt_status::nesting	file:
x_const_double_chain	varasm.c	/^  rtx x_const_double_chain;$/;"	m	struct:varasm_status	file:
x_const_rtx_hash_table	varasm.c	/^  struct constant_descriptor **x_const_rtx_hash_table;$/;"	m	struct:varasm_status	typeref:struct:varasm_status::constant_descriptor	file:
x_const_rtx_sym_hash_table	varasm.c	/^  struct pool_constant **x_const_rtx_sym_hash_table;$/;"	m	struct:varasm_status	typeref:struct:varasm_status::pool_constant	file:
x_context_display	function.h	/^  tree x_context_display;$/;"	m	struct:function
x_cur_insn_uid	function.h	/^  int x_cur_insn_uid;$/;"	m	struct:emit_status
x_data	diagnostic.h	/^  void *x_data;$/;"	m	struct:diagnostic_context
x_dont_save_pending_sizes_p	function.h	/^  unsigned int x_dont_save_pending_sizes_p : 1;$/;"	m	struct:function
x_emit_filename	stmt.c	/^  const char *x_emit_filename;$/;"	m	struct:stmt_status	file:
x_emit_lineno	stmt.c	/^  int x_emit_lineno;$/;"	m	struct:stmt_status	file:
x_expr_stmts_for_value	stmt.c	/^  int x_expr_stmts_for_value;$/;"	m	struct:stmt_status	file:
x_first_insn	function.h	/^  rtx x_first_insn;$/;"	m	struct:emit_status
x_first_label_num	function.h	/^  int x_first_label_num;$/;"	m	struct:emit_status
x_first_pool	varasm.c	/^  struct pool_constant *x_first_pool, *x_last_pool;$/;"	m	struct:varasm_status	typeref:struct:varasm_status::pool_constant	file:
x_forced_labels	function.h	/^  rtx x_forced_labels;$/;"	m	struct:expr_status
x_frame_offset	function.h	/^  HOST_WIDE_INT x_frame_offset;$/;"	m	struct:function
x_function_call_count	function.h	/^  int x_function_call_count;$/;"	m	struct:function
x_goto_fixup_chain	stmt.c	/^  struct goto_fixup *x_goto_fixup_chain;$/;"	m	struct:stmt_status	typeref:struct:stmt_status::goto_fixup	file:
x_inhibit_defer_pop	function.h	/^  int x_inhibit_defer_pop;$/;"	m	struct:expr_status
x_kind	tree.c	/^  x_kind,$/;"	e	enum:__anon88	file:
x_last_expr_filename	c-common.h	/^  const char *x_last_expr_filename;$/;"	m	struct:stmt_tree_s
x_last_expr_type	c-common.h	/^  tree x_last_expr_type;$/;"	m	struct:stmt_tree_s
x_last_expr_type	stmt.c	/^  tree x_last_expr_type;$/;"	m	struct:stmt_status	file:
x_last_expr_value	stmt.c	/^  rtx x_last_expr_value;$/;"	m	struct:stmt_status	file:
x_last_filename	function.h	/^  const char *x_last_filename;$/;"	m	struct:emit_status
x_last_insn	function.h	/^  rtx x_last_insn;$/;"	m	struct:emit_status
x_last_linenum	function.h	/^  int x_last_linenum;$/;"	m	struct:emit_status
x_last_parm_insn	function.h	/^  rtx x_last_parm_insn;$/;"	m	struct:function
x_last_pool	varasm.c	/^  struct pool_constant *x_first_pool, *x_last_pool;$/;"	m	struct:varasm_status	typeref:struct:varasm_status::	file:
x_last_stmt	c-common.h	/^  tree x_last_stmt;$/;"	m	struct:stmt_tree_s
x_loop_stack	stmt.c	/^  struct nesting *x_loop_stack;$/;"	m	struct:stmt_status	typeref:struct:stmt_status::nesting	file:
x_max_parm_reg	function.h	/^  unsigned int x_max_parm_reg;$/;"	m	struct:function
x_nesting_depth	stmt.c	/^  int x_nesting_depth;$/;"	m	struct:stmt_status	file:
x_nesting_stack	stmt.c	/^  struct nesting *x_nesting_stack;$/;"	m	struct:stmt_status	typeref:struct:stmt_status::nesting	file:
x_nonlocal_goto_handler_labels	function.h	/^  rtx x_nonlocal_goto_handler_labels;$/;"	m	struct:function
x_nonlocal_goto_handler_slots	function.h	/^  rtx x_nonlocal_goto_handler_slots;$/;"	m	struct:function
x_nonlocal_goto_stack_level	function.h	/^  rtx x_nonlocal_goto_stack_level;$/;"	m	struct:function
x_nonlocal_labels	function.h	/^  tree x_nonlocal_labels;$/;"	m	struct:function
x_parm_birth_insn	function.h	/^  rtx x_parm_birth_insn;$/;"	m	struct:function
x_parm_reg_stack_loc	function.h	/^  rtx *x_parm_reg_stack_loc;$/;"	m	struct:function
x_pending_chain	function.h	/^  rtx x_pending_chain;$/;"	m	struct:expr_status
x_pending_stack_adjust	function.h	/^  int x_pending_stack_adjust;$/;"	m	struct:expr_status
x_pool_offset	varasm.c	/^  HOST_WIDE_INT x_pool_offset;$/;"	m	struct:varasm_status	file:
x_reg_rtx_no	function.h	/^  int x_reg_rtx_no;$/;"	m	struct:emit_status
x_regno_reg_rtx	function.h	/^  rtx *x_regno_reg_rtx;$/;"	m	struct:emit_status
x_regno_reg_rtx	integrate.h	/^  rtx *x_regno_reg_rtx;$/;"	m	struct:inline_remap
x_return_label	function.h	/^  rtx x_return_label;$/;"	m	struct:function
x_rtl_expr_chain	function.h	/^  tree x_rtl_expr_chain;$/;"	m	struct:function
x_save_expr_regs	function.h	/^  rtx x_save_expr_regs;$/;"	m	struct:function
x_saveregs_value	function.h	/^  rtx x_saveregs_value;$/;"	m	struct:expr_status
x_scope_stmt_stack	c-common.h	/^  tree x_scope_stmt_stack;$/;"	m	struct:language_function
x_stack_block_stack	stmt.c	/^  struct nesting *x_stack_block_stack;$/;"	m	struct:stmt_status	typeref:struct:stmt_status::nesting	file:
x_stack_pointer_delta	function.h	/^  int x_stack_pointer_delta;$/;"	m	struct:expr_status
x_stack_slot_list	function.h	/^  rtx x_stack_slot_list;$/;"	m	struct:function
x_stmt_tree	c-common.h	/^  struct stmt_tree_s x_stmt_tree;$/;"	m	struct:language_function	typeref:struct:language_function::stmt_tree_s
x_tail_recursion_label	function.h	/^  rtx x_tail_recursion_label;$/;"	m	struct:function
x_tail_recursion_reentry	function.h	/^  rtx x_tail_recursion_reentry;$/;"	m	struct:function
x_target_temp_slot_level	function.h	/^  int x_target_temp_slot_level;$/;"	m	struct:function
x_temp_slot_level	function.h	/^  int x_temp_slot_level;$/;"	m	struct:function
x_temp_slots	function.h	/^  struct temp_slot *x_temp_slots;$/;"	m	struct:function	typeref:struct:function::temp_slot
x_trampoline_list	function.h	/^  tree x_trampoline_list;$/;"	m	struct:function
x_var_temp_slot_level	function.h	/^  int x_var_temp_slot_level;$/;"	m	struct:function
x_whole_function_mode_p	function.h	/^  unsigned int x_whole_function_mode_p : 1;$/;"	m	struct:function
xcalloc	xmalloc.c	/^xcalloc (nelem, elsize)$/;"	f
xcnew	cpphash.h	422;"	d
xcnewvec	cpphash.h	424;"	d
xcoff_begin_function_line	xcoffout.c	/^static int xcoff_begin_function_line = -1;$/;"	v	file:
xcoff_bss_section_name	xcoffout.c	/^char *xcoff_bss_section_name;$/;"	v
xcoff_current_function_file	xcoffout.c	/^static const char *xcoff_current_function_file;$/;"	v	file:
xcoff_current_include_file	xcoffout.c	/^const char *xcoff_current_include_file;$/;"	v
xcoff_debug_hooks	dbxout.c	/^struct gcc_debug_hooks xcoff_debug_hooks =$/;"	v	typeref:struct:gcc_debug_hooks
xcoff_inlining	xcoffout.c	/^static int xcoff_inlining = 0;$/;"	v	file:
xcoff_lastfile	xcoffout.c	/^const char *xcoff_lastfile;$/;"	v
xcoff_output_standard_types	xcoffout.c	/^xcoff_output_standard_types (syms)$/;"	f
xcoff_private_data_section_name	xcoffout.c	/^char *xcoff_private_data_section_name;$/;"	v
xcoff_read_only_section_name	xcoffout.c	/^char *xcoff_read_only_section_name;$/;"	v
xcoffout_begin_block	xcoffout.c	/^xcoffout_begin_block (line, n)$/;"	f
xcoffout_begin_prologue	xcoffout.c	/^xcoffout_begin_prologue (line, file)$/;"	f
xcoffout_block	xcoffout.c	/^xcoffout_block (block, depth, args)$/;"	f	file:
xcoffout_declare_function	xcoffout.c	/^xcoffout_declare_function (file, decl, name)$/;"	f
xcoffout_end_block	xcoffout.c	/^xcoffout_end_block (line, n)$/;"	f
xcoffout_end_epilogue	xcoffout.c	/^xcoffout_end_epilogue ()$/;"	f
xcoffout_end_function	xcoffout.c	/^xcoffout_end_function (last_linenum)$/;"	f
xcoffout_source_file	xcoffout.c	/^xcoffout_source_file (file, filename, inline_p)$/;"	f	file:
xcoffout_source_line	xcoffout.c	/^xcoffout_source_line (line, filename)$/;"	f
xd	safe-ctype.c	48;"	d	file:
xexit	xexit.c	/^xexit (code)$/;"	f
xmalloc	xmalloc.c	/^xmalloc (size)$/;"	f
xmalloc_failed	xmalloc.c	/^xmalloc_failed (size)$/;"	f
xmalloc_set_program_name	xmalloc.c	/^xmalloc_set_program_name (s)$/;"	f
xnew	cpphash.h	421;"	d
xnewvec	cpphash.h	423;"	d
xobnew	cpphash.h	425;"	d
xor_optab	optabs.h	177;"	d
xrealloc	xmalloc.c	/^xrealloc (oldmem, size)$/;"	f
xref_tag	c-decl.c	/^xref_tag (code, name)$/;"	f
xstrdup	xstrdup.c	/^xstrdup (s)$/;"	f
xstrerror	xstrerror.c	/^xstrerror (errnum)$/;"	f
xstrerror_buf	xstrerror.c	/^static char xstrerror_buf[sizeof ERRSTR_FMT + 20];$/;"	v	file:
yychar	c-parse.c	/^int	yychar;			\/*  the lookahead symbol		*\/$/;"	v
yycheck	c-parse.c	/^static const short yycheck[] = {    59,$/;"	v	file:
yyclearin	c-parse.c	1683;"	d	file:
yydebug	c-parse.c	/^int yydebug;			\/*  nonzero means print parse trace	*\/$/;"	v
yydefact	c-parse.c	/^static const short yydefact[] = {     3,$/;"	v	file:
yydefgoto	c-parse.c	/^static const short yydefgoto[] = {   898,$/;"	v	file:
yyerrok	c-parse.c	1682;"	d	file:
yyerror	c-parse.c	/^yyerror (msgid)$/;"	f	file:
yylex	c-parse.c	/^yylex()$/;"	f	file:
yylexname	c-parse.c	/^yylexname ()$/;"	f	file:
yylloc	c-parse.c	/^YYLTYPE yylloc;			\/*  location data for the lookahead	*\/$/;"	v
yylval	c-parse.c	/^YYSTYPE	yylval;			\/*  the semantic value of the		*\/$/;"	v
yynerrs	c-parse.c	/^int yynerrs;			\/*  number of parse errors so far       *\/$/;"	v
yypact	c-parse.c	/^static const short yypact[] = {   131,$/;"	v	file:
yyparse	c-lex.c	/^yyparse()$/;"	f
yyparse	c-parse.c	/^yyparse(YYPARSE_PARAM_ARG)$/;"	f
yyparse	c-parse.c	103;"	d	file:
yypgoto	c-parse.c	/^static const short yypgoto[] = {-32768,$/;"	v	file:
yyprhs	c-parse.c	/^static const short yyprhs[] = {     0,$/;"	v	file:
yyprint	c-parse.c	/^yyprint (file, yychar, yyl)$/;"	f	file:
yyr1	c-parse.c	/^static const short yyr1[] = {     0,$/;"	v	file:
yyr2	c-parse.c	/^static const short yyr2[] = {     0,$/;"	v	file:
yyrhs	c-parse.c	/^static const short yyrhs[] = {    -1,$/;"	v	file:
yyrline	c-parse.c	/^static const short yyrline[] = { 0,$/;"	v	file:
yytable	c-parse.c	/^static const short yytable[] = {   175,$/;"	v	file:
yytname	c-parse.c	/^static const char * const yytname[] = {   "$","error","$undefined.","IDENTIFIER",$/;"	v	file:
yytranslate	c-parse.c	/^static const char yytranslate[] = {     0,$/;"	v	file:
zap_lists	lists.c	/^zap_lists (dummy)$/;"	f	file:
zero_cost	expmed.c	/^static int add_cost, negate_cost, zero_cost;$/;"	v	file:
ziv	dependence.c	/^enum complexity_type {ziv, strong_siv, weak_siv, weak_zero_siv,$/;"	e	enum:complexity_type	file:
ziv_test	dependence.c	/^ziv_test (icoefficients, ocoefficients, direction, distance, loop_ptr, sub)$/;"	f	file:
